<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="106"
           errors="15"
           failures="12"
           skip="0">
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="43.43754005432129">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/5/8/a/dataset_58a11ff9-0a9e-4062-8898-992822d00739.dat')with open('/galaxy/server/database/objects/8/4/1/dataset_841c1028-e4f6-44c7-a32d-2a9505b4b4c3.dat', 'w', encoding="utf-8") as f:    print(adata, file=f)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="32.28141474723816">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/d/7/dataset_2d77dee7-1470-449f-a65f-e7592970d734.dat')with open('/galaxy/server/database/objects/e/0/b/dataset_e0bd5b84-1014-41c9-8cf6-f0042ce03643.dat', 'w', encoding="utf-8") as f:    print(adata, file=f)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="38.39140558242798">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/1/6/dataset_b16179b4-8fe2-460f-8a73-429f9fe7088d.dat')with open('/galaxy/server/database/objects/d/6/e/dataset_d6eb8af3-73b7-4c05-a282-39b8890b1414.dat', 'w', encoding="utf-8") as f:    print(adata, file=f)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="34.61080837249756">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/d/2/dataset_2d258e18-da5b-4d9a-9c38-9a3a12e78690.dat')adata.to_df().to_csv('/galaxy/server/database/objects/3/2/b/dataset_32b1332b-e331-4a0b-b3c8-0c71d6dbdf55.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="35.5913941860199">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/a/a/d/dataset_aaddac36-da0d-479d-a2b7-348d686bdc52.dat')adata.to_df().to_csv('/galaxy/server/database/objects/c/f/d/dataset_cfdd9f13-b136-4170-a80f-6bd5db4eb73f.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="36.84866690635681">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/0/d/dataset_60dc55b9-1041-4e9d-8885-d526654b8284.dat')adata.to_df().to_csv('/galaxy/server/database/objects/4/0/8/dataset_408b84ee-bc31-4fb4-842d-2de846f5830a.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="11.068770170211792">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 11.068770170211792, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="37.6945960521698">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/3/4/dataset_93423989-cb9c-46a9-a76c-b5f225693442.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/1/9/2/dataset_19263d62-1cb0-4ca3-9b2d-c335a0da6717.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="37.72400641441345">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/f/a/dataset_7fa857f1-aa6a-4e52-b6f7-f8d95b9ec31e.dat')pd.DataFrame(adata.obsm['X_pca']).to_csv("/galaxy/server/database/objects/3/8/e/dataset_38e1491b-ec8a-406d-acfb-3017d34db6cb.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="35.55905508995056">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/b/3/dataset_db32a8ba-9204-47b0-a5aa-2dea61790f5b.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/d/f/6/dataset_df6e7b16-fb57-4e09-85aa-4b9559702fd6.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="28.308048009872437">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "c70643aeb93f1bab",   "src": "hda"  },  "inspect|info": "obsm",  "inspect|obsm_info": "X_umap" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/137/configs/tmpu_hvuclp\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/137/configs/tmpu_hvuclp\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T19:42:29.365156",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-zqm2m",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "bd81a039d67c100a",  "inputs": {   "input": {    "id": "c70643aeb93f1bab",    "src": "hda",    "uuid": "62062a71-7bf4-4861-85d9-08c832d744e7"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "obsm_X_umap": {    "id": "3526ef800d588800",    "src": "hda",    "uuid": "3b95a36d-c4b6-4229-b962-86f25eedea06"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 6, \"info\": \"obsm\", \"obsm_info\": \"X_umap\"}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/6/2/0/dataset_62062a71-7bf4-4861-85d9-08c832d744e7.dat\u0027)\n\npd.DataFrame(adata.obsm[\u0027X_umap\u0027]).to_csv(\"/galaxy/server/database/objects/3/b/9/dataset_3b95a36d-c4b6-4229-b962-86f25eedea06.dat\", sep=\"\\t\", index = False)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/6/2/0/dataset_62062a71-7bf4-4861-85d9-08c832d744e7.dat\u0027)\n\npd.DataFrame(adata.obsm[\u0027X_umap\u0027]).to_csv(\"/galaxy/server/database/objects/3/b/9/dataset_3b95a36d-c4b6-4229-b962-86f25eedea06.dat\", sep=\"\\t\", index = False)\n\n",  "update_time": "2024-09-07T19:42:35.527833",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 11, "time_seconds": 28.308048009872437, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/2/0/dataset_62062a71-7bf4-4861-85d9-08c832d744e7.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/3/b/9/dataset_3b95a36d-c4b6-4229-b962-86f25eedea06.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="37.979705572128296">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/c/6/8/dataset_c68b1377-d599-4308-ad37-bf9643d1f42e.dat')pd.DataFrame(adata.obsm['X_umap']).to_csv("/galaxy/server/database/objects/d/f/b/dataset_dfba1531-467a-405b-a350-d5ede0a49094.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="35.201136350631714">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/f/3/dataset_bf31c71d-5436-483a-a6c9-7300e90443e4.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/f/7/d/dataset_f7d44236-73ff-47ae-b7df-c365cc3702a0.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="37.12929582595825">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/f/0/dataset_2f0c9e18-9d8d-4a6c-81ad-af08d042dbc3.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/4/9/2/dataset_492226ba-4a92-4648-ac79-87edbb99c5ed.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="38.408628702163696">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/8/c/dataset_d8c5683d-4af1-47eb-a504-eb0dcb4536a7.dat')pd.DataFrame(adata.obsm['X_tsne']).to_csv("/galaxy/server/database/objects/7/d/d/dataset_7dd5eafb-88df-4b77-ad12-879c760e3d27.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="34.82678723335266">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/b/3/5/dataset_b352a008-1adb-48fa-8041-bd9e237f0d5c.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="27.91116952896118">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "bf1c59a4a0caa45e",   "src": "hda"  },  "inspect|info": "obsm",  "inspect|obsm_info": "X_draw_graph" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpuee1gikf\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/141/configs/tmpuee1gikf\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T19:43:34.354467",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-lv74q",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "517c3991266b28a7",  "inputs": {   "input": {    "id": "bf1c59a4a0caa45e",    "src": "hda",    "uuid": "65f0a45e-b07d-4007-83ab-b21ac9862ba7"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {   "obsm_X_draw_graph": {    "id": "4cd277353d15e52f",    "src": "hdca"   }  },  "outputs": {},  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 6, \"info\": \"obsm\", \"obsm_info\": \"X_draw_graph\"}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/6/5/f/dataset_65f0a45e-b07d-4007-83ab-b21ac9862ba7.dat\u0027)\n\nfor key in adata.obsm.keys():\n    if key.startswith(\u0027X_draw_graph\u0027):\n        pd.DataFrame(adata.obsm[key]).to_csv(key, sep=\"\\t\", index = False)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/6/5/f/dataset_65f0a45e-b07d-4007-83ab-b21ac9862ba7.dat\u0027)\n\nfor key in adata.obsm.keys():\n    if key.startswith(\u0027X_draw_graph\u0027):\n        pd.DataFrame(adata.obsm[key]).to_csv(key, sep=\"\\t\", index = False)\n\n",  "update_time": "2024-09-07T19:43:40.727903",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: .",  "Output collection \u0027obsm_X_draw_graph\u0027: failed to find identifier \u0027fr\u0027 in the tool generated elements []" ], "status": "failure", "test_index": 13, "time_seconds": 27.91116952896118, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/5/f/dataset_65f0a45e-b07d-4007-83ab-b21ac9862ba7.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="37.17147207260132">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/d/a/dataset_0da8fcfd-539e-4e50-8288-e463b2e6d37f.dat')for key in adata.obsm.keys():    if key.startswith('X_draw_graph'):        pd.DataFrame(adata.obsm[key]).to_csv(key, sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="35.11646246910095">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/0/3/dataset_2034e067-647a-4e2e-acc7-01088071a71c.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/d/2/c/dataset_d2cc20c2-d876-4202-a8a6-d4d0f3761491.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="37.78087830543518">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/a/0/dataset_0a05d085-9a1c-4ea6-8128-165e6f4c7502.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/1/9/9/dataset_199c9747-7b5c-4bd1-a492-061a831c2a64.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="37.4325315952301">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/e/3/dataset_1e33c673-ef2c-4def-b696-9529630a8b49.dat')pd.DataFrame(adata.obsm['X_diffmap']).to_csv("/galaxy/server/database/objects/f/f/4/dataset_ff4be78a-1932-4e30-93f6-f89850901a87.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="35.2886106967926">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/0/3/dataset_9037aa7b-f4ef-4ea3-b59d-0651bb21cbd4.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/6/9/4/dataset_694c0a15-d4ba-40c2-92a5-e2dab14c2583.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="39.62824249267578">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/e/9/a/dataset_e9a37357-c7ca-4efa-b785-58f55cbc5c15.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/8/f/3/dataset_8f31cc8d-a32d-47bb-b0a1-964085a104dc.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="37.05868077278137">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/c/4/5/dataset_c45599a1-ca6e-4a3b-a749-d6139d6c676e.dat')pd.DataFrame(adata.varm['PCs']).to_csv("/galaxy/server/database/objects/8/d/4/dataset_8d465a8c-45ce-4595-adc5-e238a4f13a5e.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="34.980703592300415">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/c/9/dataset_dc98990b-4db3-4121-a3cf-da4dd3421470.dat')adata.obs.to_csv('/galaxy/server/database/objects/a/6/0/dataset_a606a985-f74c-44dd-983d-44af71b9760c.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="34.24078106880188">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/a/2/3/dataset_a232027c-836c-43bf-9359-194665752d82.dat')adata.obs.to_csv('/galaxy/server/database/objects/a/c/f/dataset_acf95d60-c78b-413f-ac75-6d696a818319.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="37.963998556137085">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/2/1/7/dataset_217ac502-0397-4ecc-90d1-9c36ffc5a98b.dat')adata.obs.to_csv('/galaxy/server/database/objects/8/3/6/dataset_836aa8ca-db7a-48a2-ba20-e2569e6d0a65.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="10.976356267929077">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 10.976356267929077, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="34.25229787826538">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/f/9/f/dataset_f9f3da9f-f414-4982-afe4-a2f32c47570a.dat')adata.var.to_csv('/galaxy/server/database/objects/c/a/7/dataset_ca71c7d4-70da-4b85-8294-4fd7baef15e4.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="36.2561776638031">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/6/c/dataset_96c39a97-dd56-4246-9a5b-80bf831dc77c.dat')adata.var.to_csv('/galaxy/server/database/objects/6/1/5/dataset_615d2642-f8ab-44d1-bbbc-5be7a3236813.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="11.42106318473816">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.42106318473816, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="33.90611934661865">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/1/5/dataset_915897f3-9c6a-4ab2-803b-dd1ef3ba7fcb.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/2/5/d/dataset_25dc85fc-802e-4675-b115-edef5a2abb63.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="37.44518232345581">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/e/7/dataset_9e731ab7-6f22-423f-8bf0-ccd598eada49.dat')X = adata.chunk_X(select=[3, 5, 8])pd.DataFrame(X).to_csv('/galaxy/server/database/objects/3/e/4/dataset_3e493901-7a4c-4d73-8a2b-3eca369a5ece.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="34.420347690582275">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/b/1/dataset_0b189603-3c30-4183-9378-13694112d0dc.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/a/e/7/dataset_ae736e15-0566-4b00-b07d-eada20ceb743.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="34.78434205055237">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/5/7/9/dataset_57972279-de1e-40c3-8045-c03542795011.dat')X = adata.chunk_X(select=1000, replace=True)pd.DataFrame(X).to_csv('/galaxy/server/database/objects/0/3/e/dataset_03efc174-38aa-44ee-8eac-e85598b76acb.dat', sep='\t')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="12.998004913330078">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 12.998004913330078, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="28.07452392578125">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "64a251e9440d9733",   "src": "hda"  },  "inspect|info": "uns",  "inspect|uns_info": "neighbors" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpigud2rsk\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpigud2rsk\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T19:30:12.685182",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-rcx6d",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "7b1b67bfe39a40ab",  "inputs": {   "input": {    "id": "64a251e9440d9733",    "src": "hda",    "uuid": "9e2e4644-82eb-45aa-ad85-ca5eb2d53fad"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "uns_neighbors_connectivities": {    "id": "c7d5ceea6d160b47",    "src": "hda",    "uuid": "26f8e5f4-ab8c-4645-93b9-041369076a70"   },   "uns_neighbors_distances": {    "id": "728f6665ea2fd027",    "src": "hda",    "uuid": "dabbf25c-2baf-4303-9dbf-a82f6b974ba2"   }  },  "params": {   "__input_ext": "\"h5ad\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inspect": "{\"__current_case__\": 5, \"info\": \"uns\", \"uns_info\": \"neighbors\"}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/9/e/2/dataset_9e2e4644-82eb-45aa-ad85-ca5eb2d53fad.dat\u0027)\n\nio.mmwrite(\u0027uns_neighbors_connectivities.mtx\u0027, adata.uns[\u0027neighbors\u0027][\u0027connectivities\u0027])\nio.mmwrite(\u0027uns_neighbors_distances.mtx\u0027, adata.uns[\u0027neighbors\u0027][\u0027distances\u0027])\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nimport pandas as pd\nfrom scipy import io\n\npd.options.display.precision = 15\n\nadata = ad.read(\u0027/galaxy/server/database/objects/9/e/2/dataset_9e2e4644-82eb-45aa-ad85-ca5eb2d53fad.dat\u0027)\n\nio.mmwrite(\u0027uns_neighbors_connectivities.mtx\u0027, adata.uns[\u0027neighbors\u0027][\u0027connectivities\u0027])\nio.mmwrite(\u0027uns_neighbors_distances.mtx\u0027, adata.uns[\u0027neighbors\u0027][\u0027distances\u0027])\n\n",  "update_time": "2024-09-07T19:30:18.876905",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 6, "time_seconds": 28.07452392578125, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/e/2/dataset_9e2e4644-82eb-45aa-ad85-ca5eb2d53fad.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="36.15865683555603">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/6/3/3/dataset_6331dcda-ebd2-4100-8624-daf0aaf2bcaf.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="40.456552267074585">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/3/6/b/dataset_36ba7754-b4c7-47a7-a71a-79777b025a0d.dat')io.mmwrite('uns_neighbors_connectivities.mtx', adata.uns['neighbors']['connectivities'])io.mmwrite('uns_neighbors_distances.mtx', adata.uns['neighbors']['distances'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="33.9949848651886">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/e/2/dataset_0e2e80a3-abda-4312-81a5-5b29909f34c4.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="34.84034967422485">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/a/5/7/dataset_a57e3da2-9396-4959-99b4-ce6b94ca9b83.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="38.09744429588318">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/9/4/2/dataset_9427961a-4217-4a26-acd8-d31461cffccb.dat')io.mmwrite('uns_paga_connectivities.mtx', adata.uns['paga']['connectivities'])io.mmwrite('uns_paga_connectivities_tree.mtx', adata.uns['paga']['connectivities_tree'])
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="34.18848419189453">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/0/8/4/dataset_0841b678-99ca-448e-8848-15b530e031e7.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/0/e/c/dataset_0ec77974-2647-43bf-a814-eaffe9e12953.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/0/d/a/dataset_0da5cb22-9b6e-4c7e-a29f-e2b96bbd4222.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="36.05284667015076">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/8/e/a/dataset_8ea783fa-e830-4750-be23-cc9acf038305.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/e/c/8/dataset_ec8e3fa4-4f16-45f6-ace7-e6ee9a79fa03.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/2/7/0/dataset_2701e043-a759-4fb6-bfcc-7d1693e79b65.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="38.81643080711365">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/7/b/3/dataset_7b3e5cab-d18f-4083-9101-a8b823077fc8.dat')pd.DataFrame(adata.uns['pca']['variance']).to_csv("/galaxy/server/database/objects/8/d/4/dataset_8d448a13-be63-48c3-9c77-57e3a87a6df7.dat", sep="\t", index = False)pd.DataFrame(adata.uns['pca']['variance_ratio']).to_csv("/galaxy/server/database/objects/5/5/0/dataset_550d717f-9b4a-42ce-aab0-3e9721c02d0b.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="60.410213470458984">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/f/3/dataset_1f3e32e1-4e12-4eba-91f6-a59b35844c44.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/0/9/e/dataset_09e705ec-0ebc-4b39-a731-429895d90442.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/c/d/4/dataset_cd447b40-5da8-45fd-9c0d-332422965aed.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/3/4/0/dataset_34097486-9b90-4bd8-be6c-391b3b3995e4.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/f/b/0/dataset_fb039177-8229-4108-acff-3a3c5b1d2b5f.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/7/8/9/dataset_78940ad4-af62-4d29-9eb8-d390de12e03f.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="38.35503101348877">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/d/0/7/dataset_d0748abc-d36a-46d7-81e6-142f4acfb3cd.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/d/1/3/dataset_d1380f8b-16c1-4529-9072-22c64544c0bb.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/e/4/e/dataset_e4e5ae84-b5f1-499f-8671-dcfecb2fcbff.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/f/a/f/dataset_faf1c508-2b29-4182-9976-3677bad66a2a.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/8/6/e/dataset_86e7549b-5020-4a9d-bef0-b622fd13f1be.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/f/6/9/dataset_f69be600-a4d3-468a-9cef-2d9bacbb4e8f.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="40.298786878585815">
        
            
            <system-out><![CDATA[
            import anndata as ad        import pandas as pdfrom scipy import iopd.options.display.precision = 15adata = ad.read('/galaxy/server/database/objects/1/9/5/dataset_195140d1-e7c6-4a5f-a939-0771e4236a14.dat')pd.DataFrame(adata.uns['rank_genes_groups']['logfoldchanges']).to_csv("/galaxy/server/database/objects/c/d/7/dataset_cd706fd9-39d6-4d99-a856-e0e04669da09.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['names']).to_csv("/galaxy/server/database/objects/c/b/5/dataset_cb54746c-cc14-4c39-88b5-a0251ad01e5b.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals']).to_csv("/galaxy/server/database/objects/c/0/6/dataset_c06e75ef-4c01-473f-a2da-e52d2572c670.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['pvals_adj']).to_csv("/galaxy/server/database/objects/c/d/2/dataset_cd275e77-6b59-4e25-9295-c373ff24f595.dat", sep="\t", index = False)pd.DataFrame(adata.uns['rank_genes_groups']['scores']).to_csv("/galaxy/server/database/objects/8/6/7/dataset_86773374-cf48-4a1a-9659-de8b9cc99abb.dat", sep="\t", index = False)
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #1)" name="0" time="12.49841570854187">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.49841570854187, "tool_id": "bcftools_merge", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #2)" name="1" time="37.71779489517212">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #3)" name="2" time="38.60386848449707">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #4)" name="3" time="11.388614654541016">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 11.388614654541016, "tool_id": "bcftools_merge", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #5)" name="4" time="37.77950429916382">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #6)" name="5" time="21.88814425468445">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 21.88814425468445, "tool_id": "bcftools_merge", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_missing2ref (Test #1)" name="0" time="41.08966374397278">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Filled 44 REF alleles
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #1)" name="0" time="2008.4910807609558">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "43129db516c896bc",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "7de73cd2afe63844",   "src": "hda"  },  "single_or_paired|input_mate2": {   "id": "d72676d59c279fd2",   "src": "hda"  },  "single_or_paired|single_or_paired_opts": "paired" }, "job": {  "command_line": null,  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T18:38:55.718692",  "dependencies": [],  "exit_code": null,  "external_id": null,  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "7de73cd2afe63844",  "inputs": {   "referenceSource|reference": {    "id": "11d7e8aaeb48e8a8",    "src": "hda",    "uuid": "da6589b5-6823-4ccc-830a-68f21c7de49f"   },   "single_or_paired|input_mate1": {    "id": "7de73cd2afe63844",    "src": "hda",    "uuid": "2badcfdd-6fd1-4850-93de-152c2ab7c8be"   },   "single_or_paired|input_mate2": {    "id": "d72676d59c279fd2",    "src": "hda",    "uuid": "3154d03c-0172-4afb-be92-69482ca137a8"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "39d5f838750e6cc3",    "src": "hda",    "uuid": "23a6e294-a294-40be-8d52-22ae54506daa"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 35, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 33, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 34, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"paired\"}"  },  "state": "paused",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": null,  "tool_stdout": null,  "update_time": "2024-09-07T18:39:00.356388",  "user_email": "tests@fake.org" }, "output_problems": [  "Timed out after 600.25 seconds waiting on tool test run.",  "Timed out after 600.25 seconds waiting on tool test run." ], "status": "failure", "test_index": 0, "time_seconds": 2008.4910807609558, "tool_id": "bwameth", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #2)" name="1" time="12.824309825897217">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.824309825897217, "tool_id": "bwameth", "tool_version": "0.2.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #1)" name="0" time="70.22217655181885">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #2)" name="1" time="33.244370222091675">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #3)" name="2" time="33.93900108337402">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #4)" name="3" time="33.13542890548706">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #1)" name="0" time="59.713785886764526">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #2)" name="1" time="27.42436695098877">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "corData": {   "id": "604a7f198e22cb05",   "src": "hda"  },  "outFileFormat": "png",  "outFileNameData": true,  "plotTitle": "Test Plot" }, "job": {  "command_line": "plotPCA --corData \u0027/galaxy/server/database/objects/7/9/3/dataset_793447df-5d3d-4b21-b3db-2dfdf7fa7abe.dat\u0027 --plotTitle \u0027Test Plot\u0027 --plotFile \u0027/galaxy/server/database/objects/0/8/0/dataset_080fc635-4de4-446a-bf5a-a3fc62173aa3.dat\u0027 --plotFileFormat \u0027png\u0027 --outFileNameData \u0027/galaxy/server/database/objects/0/2/2/dataset_022ed968-24bf-45dc-9a69-b4a09be1908f.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T18:34:40.508266",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-p9qbb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "68fdee1286f8838c",  "inputs": {   "corData": {    "id": "604a7f198e22cb05",    "src": "hda",    "uuid": "793447df-5d3d-4b21-b3db-2dfdf7fa7abe"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "68fdee1286f8838c",    "src": "hda",    "uuid": "080fc635-4de4-446a-bf5a-a3fc62173aa3"   },   "output_outFileNameData": {    "id": "f0f53b6510cd8634",    "src": "hda",    "uuid": "022ed968-24bf-45dc-9a69-b4a09be1908f"   }  },  "params": {   "__input_ext": "\"input\"",   "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "outFileFormat": "\"png\"",   "outFileNameData": "true",   "plotTitle": "\"Test Plot\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_pca/deeptools_plot_pca/3.3.2.0.0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-07T18:34:47.716419",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_pca/deeptools_plot_pca/3.3.2.0.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_pca/deeptools_plot_pca/3.3.2.0.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_pca/deeptools_plot_pca/3.3.2.0.0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 27.42436695098877, "tool_id": "deeptools_plot_pca", "tool_version": "3.3.2.0.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #1)" name="0" time="33.639694690704346">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_bam": {   "id": "14c94551d4638292",   "src": "hda"  },  "ref": {   "id": "d14b23829c97a7c9",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/3/2/a/dataset_32acd0da-424e-4dfe-851d-51d7e578eceb.dat\u0027 ref.fa \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/f/5/b/dataset_f5bffc02-2340-4b6a-9f75-3eebd5c90006.dat\u0027 sorted.bam \u0026\u0026 samtools mpileup -A -d 0 --reference ref.fa -B -Q 0 sorted.bam | ivar variants -p variants -q 20 -t 0.03",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T20:03:37.400171",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-srt4t",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "d4028cff13511510",  "inputs": {   "input_bam": {    "id": "14c94551d4638292",    "src": "hda",    "uuid": "f5bffc02-2340-4b6a-9f75-3eebd5c90006"   },   "ref": {    "id": "d14b23829c97a7c9",    "src": "hda",    "uuid": "32acd0da-424e-4dfe-851d-51d7e578eceb"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_variants": {    "id": "85076d1a90245440",    "src": "hda",    "uuid": "6cdb762d-d9c9-4b6f-8633-e02c6d2ce36b"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "min_freq": "\"0.03\"",   "min_qual": "\"20\""  },  "state": "error",  "stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] Max depth set to maximum value (2147483647)\n",  "stdout": "A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.\nA reference sequence has not been supplied. Amino acid translation will not be done.\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/ivar_variants/ivar_variants/1.2.2+galaxy0",  "tool_stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] Max depth set to maximum value (2147483647)\n",  "tool_stdout": "A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.\nA reference sequence has not been supplied. Amino acid translation will not be done.\n",  "update_time": "2024-09-07T20:03:47.329652",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/ivar_variants/ivar_variants/1.2.2+galaxy0, exit_code: None, stderr: [mpileup] 1 samples in 1 input files\n[mpileup] Max depth set to maximum value (2147483647)\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/ivar_variants/ivar_variants/1.2.2+galaxy0, exit_code: None, stderr: [mpileup] 1 samples in 1 input files\n[mpileup] Max depth set to maximum value (2147483647)\n." ], "status": "failure", "test_index": 0, "time_seconds": 33.639694690704346, "tool_id": "ivar_variants", "tool_version": "1.2.2+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.A reference sequence has not been supplied. Amino acid translation will not be done.
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #1)" name="0" time="34.03608250617981">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "reads": {   "id": "dbe184124dedf444",   "src": "hda"  },  "reference_source|ref": {   "id": "7d5704e9dea444a4",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/e/9/7/dataset_e97340e5-4134-4eea-bab6-20f313ae2f89.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/c/2/8/dataset_c2880517-71a6-4aa6-b2af-162d56ac8121.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/5/3/6/dataset_536c02df-52c1-4ae5-b9c3-2e55339a2f8d.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T19:55:53.417772",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-5jkmn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "0486b01761761869",  "inputs": {   "reads": {    "id": "dbe184124dedf444",    "src": "hda",    "uuid": "c2880517-71a6-4aa6-b2af-162d56ac8121"   },   "reference_source|ref": {    "id": "7d5704e9dea444a4",    "src": "hda",    "uuid": "e97340e5-4134-4eea-bab6-20f313ae2f89"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "85c19d003fa7dfce",    "src": "hda",    "uuid": "536c02df-52c1-4ae5-b9c3-2e55339a2f8d"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 254, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-07T19:56:04.742368",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 34.03608250617981, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #2)" name="1" time="38.99301743507385">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-B",  "reads": {   "id": "1a3c6e8fd21fde56",   "src": "hda"  },  "reference_source|ref": {   "id": "1dae764a7b8935b0",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/0/f/2/dataset_0f25b68c-550e-4c34-99e0-d4d6186d6595.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -B  \u0027/galaxy/server/database/objects/5/4/d/dataset_54dbfcab-c033-40e5-93ae-e722e965ccdc.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/3/5/7/dataset_35794456-44f0-4261-975c-8d957f357335.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-09-07T19:56:28.558390",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-pf8xn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "79a9393093743521",  "inputs": {   "reads": {    "id": "1a3c6e8fd21fde56",    "src": "hda",    "uuid": "54dbfcab-c033-40e5-93ae-e722e965ccdc"   },   "reference_source|ref": {    "id": "1dae764a7b8935b0",    "src": "hda",    "uuid": "0f25b68c-550e-4c34-99e0-d4d6186d6595"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1725738990.0000000",    "title": "Job End Time",    "value": "2024-09-07 19:56:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1725738990.0000000",    "title": "Job Start Time",    "value": "2024-09-07 19:56:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "95c2217592b5018a",    "src": "hda",    "uuid": "35794456-44f0-4261-975c-8d957f357335"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 0, \"alnquals_to_use\": \"-B\", \"extended_baq\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 257, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-07T19:56:43.174081",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpkjthxmeralnqual-out2.bam v. /tmp/tmpi9mqxtw2alnqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 38.99301743507385, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #3)" name="2" time="36.92364573478699">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-A",  "reads": {   "id": "6fc1ca3a17e4df9f",   "src": "hda"  },  "reference_source|ref": {   "id": "d1fcde1aebf1cd12",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/b/7/2/dataset_b727e40d-0730-4fb2-847a-b10c68b69845.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -A  \u0027/galaxy/server/database/objects/4/9/1/dataset_4910c543-d654-4bc9-9db8-cc4434319f86.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/c/3/f/dataset_c3f0e72f-b2a3-45f9-8ceb-821c696ad03d.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-09-07T19:57:07.201975",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-whqwm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "c939ff571ea09b08",  "inputs": {   "reads": {    "id": "6fc1ca3a17e4df9f",    "src": "hda",    "uuid": "4910c543-d654-4bc9-9db8-cc4434319f86"   },   "reference_source|ref": {    "id": "d1fcde1aebf1cd12",    "src": "hda",    "uuid": "b727e40d-0730-4fb2-847a-b10c68b69845"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1725739028.0000000",    "title": "Job End Time",    "value": "2024-09-07 19:57:08"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1725739028.0000000",    "title": "Job Start Time",    "value": "2024-09-07 19:57:08"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "6567e87b3611f219",    "src": "hda",    "uuid": "c3f0e72f-b2a3-45f9-8ceb-821c696ad03d"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 2, \"alnquals_to_use\": \"-A\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 260, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-07T19:57:20.404741",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp8ebloleqalnqual-out3.bam v. /tmp/tmpk6nhrnz3alnqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 36.92364573478699, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #4)" name="3" time="39.315022706985474">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|extended_baq": false,  "reads": {   "id": "4535c5606ef84945",   "src": "hda"  },  "reference_source|ref": {   "id": "da4f7e756e7c5bdc",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/b/8/dataset_5b8f454f-5674-4b3f-9194-c490cba864cc.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b -e   \u0027/galaxy/server/database/objects/7/7/0/dataset_77022449-32f2-4dd7-9e61-c25b86a9191e.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/8/e/3/dataset_8e3f794a-2133-4c40-9804-c4e75cfc6fe7.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-09-07T19:57:44.947629",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-frnrh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "7ee03bb9cbd35b56",  "inputs": {   "reads": {    "id": "4535c5606ef84945",    "src": "hda",    "uuid": "77022449-32f2-4dd7-9e61-c25b86a9191e"   },   "reference_source|ref": {    "id": "da4f7e756e7c5bdc",    "src": "hda",    "uuid": "5b8f454f-5674-4b3f-9194-c490cba864cc"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1725739067.0000000",    "title": "Job End Time",    "value": "2024-09-07 19:57:47"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1725739067.0000000",    "title": "Job Start Time",    "value": "2024-09-07 19:57:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "4b78c0cba8c4829d",    "src": "hda",    "uuid": "8e3f794a-2133-4c40-9804-c4e75cfc6fe7"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 263, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-07T19:58:00.039758",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp_s2h7y47alnqual-out4.bam v. /tmp/tmpm76y73bfalnqual-out4.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 3, "time_seconds": 39.315022706985474, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #5)" name="4" time="28.84396505355835">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "reads": {   "id": "e28b387adf9b402b",   "src": "hda"  },  "reference_source|ref": {   "id": "720928aad1c37248",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/b/c/dataset_2bc3b6cf-0325-4990-8a27-a6cb82878e19.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/6/5/6/dataset_65686307-aa7f-413a-8bc5-a35ca2b5e8c8.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/0/4/0/dataset_0403b3db-af87-4449-92b4-9c9ca23a6431.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T19:58:23.429611",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-b5vnw",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "c3dff58f804b1921",  "inputs": {   "reads": {    "id": "e28b387adf9b402b",    "src": "hda",    "uuid": "65686307-aa7f-413a-8bc5-a35ca2b5e8c8"   },   "reference_source|ref": {    "id": "720928aad1c37248",    "src": "hda",    "uuid": "2bc3b6cf-0325-4990-8a27-a6cb82878e19"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "1b52cb874b95a0ab",    "src": "hda",    "uuid": "0403b3db-af87-4449-92b4-9c9ca23a6431"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 266, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-09-07T19:58:29.347527",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 28.84396505355835, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #1)" name="0" time="61.37363791465759">
        
            
            <system-out><![CDATA[
            [19:12:53 - Predict] Processing region(s): ref:0-30[19:12:53 - DataStore] Writing sample registry.[19:12:53 - Predict] Setting tensorflow threads to 1.2024-09-07 19:12:53.934039: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA2024-09-07 19:12:53.937281: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2249995000 Hz2024-09-07 19:12:53.939693: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x58c384627350 executing computations on platform Host. Devices:2024-09-07 19:12:53.939750: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>[19:12:53 - Predict] Processing 1 long region(s) with batching.[19:12:53 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_prom_high_g360_model.hdf5.[19:12:53 - ModelLoad] Building model with cudnn optimization: False2024-09-07 19:12:54.692930: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.[19:12:54 - DLoader] Initializing data loader[19:12:54 - DLoader] Submitting ref:0-30.[19:12:54 - PWorker] Running inference for 0.0M draft bases.[19:12:54 - Sampler] Initializing sampler for consensus of region ref:0-30.[19:12:54 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[19:12:54 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:12:54 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[19:12:54 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:12:54 - Sampler] Took 0.00s to make features.[19:12:54 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 10000, quarantining.[19:12:54 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 10000, quarantining.[19:12:54 - DataStore] Writing sample registry.[19:12:54 - PWorker] All done, 2 remainder regions.[19:12:54 - Predict] Processing 2 short region(s).[19:12:54 - ModelLoad] Building model with cudnn optimization: False[19:12:55 - DLoader] Initializing data loader[19:12:55 - DLoader] Submitting ref:0-10.[19:12:55 - PWorker] Running inference for 0.0M draft bases.[19:12:55 - Sampler] Initializing sampler for consensus of region ref:0-10.[19:12:55 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:12:55 - Sampler] Took 0.00s to make features.[19:12:55 - Sampler] Pileup for ref:0.0-9.0 is of width 10[19:12:55 - DataStore] Writing sample registry.[19:12:56 - PWorker] All done, 0 remainder regions.[19:12:56 - DLoader] Initializing data loader[19:12:56 - DLoader] Submitting ref:14-30.[19:12:56 - Sampler] Initializing sampler for consensus of region ref:14-30.[19:12:56 - PWorker] Running inference for 0.0M draft bases.[19:12:56 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:12:56 - Sampler] Took 0.01s to make features.[19:12:56 - Sampler] Pileup for ref:14.0-29.0 is of width 16[19:12:56 - DataStore] Writing sample registry.[19:12:56 - PWorker] All done, 0 remainder regions.[19:12:56 - Predict] Finished processing all regions.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #2)" name="1" time="32.782238483428955">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "bam": {   "id": "31bc9bc9d8cb8834",   "src": "hda"  },  "batch_size": "99",  "check_output": true,  "chunk_len": "9999",  "chunk_ovlp": "999",  "disable_cudnn": true,  "model": "r941_min_fast_g303",  "out": [   "result",   "log"  ],  "save_features": true,  "tag_keep_missing": true }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/a/c/dataset_1acbe296-30d4-4e4d-9652-ee0b3dee3c53.dat\u0027 alignment.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/f/8/f/metadata_f8f93929-5070-4312-a902-f8dd77c09822.dat\u0027 alignment.bam.bai \u0026\u0026  medaka consensus --debug --threads ${GALAXY_SLOTS:-4} --batch_size 99 --chunk_len 9999 --chunk_ovlp 999 --model r941_min_fast_g303 --disable_cudnn --check_output --save_features --tag_keep_missing alignment.bam \u0027/galaxy/server/database/objects/4/8/a/dataset_48ac47b2-6ae4-44d8-9deb-0097865ef03a.dat\u0027  2\u003e\u00261 | tee \u0027/galaxy/server/database/objects/6/1/c/dataset_61c08116-a89d-4201-bba6-2449b89a608b.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-09-07T19:13:36.216441",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-hkmqm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b37c9ac67e074ca5",  "id": "8ce0d1ffa27dfa83",  "inputs": {   "bam": {    "id": "31bc9bc9d8cb8834",    "src": "hda",    "uuid": "1acbe296-30d4-4e4d-9652-ee0b3dee3c53"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_log": {    "id": "a74a77d3ed04b875",    "src": "hda",    "uuid": "61c08116-a89d-4201-bba6-2449b89a608b"   },   "out_result": {    "id": "c43d4d32d9ece3dc",    "src": "hda",    "uuid": "48ac47b2-6ae4-44d8-9deb-0097865ef03a"   }  },  "params": {   "RG": "\"\"",   "__input_ext": "\"input\"",   "batch_size": "\"99\"",   "check_output": "true",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "chunk_len": "\"9999\"",   "chunk_ovlp": "\"999\"",   "dbkey": "\"?\"",   "disable_cudnn": "true",   "model": "\"r941_min_fast_g303\"",   "out": "[\"result\", \"log\"]",   "regions_cond": "{\"__current_case__\": 0, \"regions_sel\": \"none\"}",   "save_features": "true",   "tag_keep_missing": "true",   "tag_name": "\"\"",   "tag_value": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "[19:13:40 - Predict] Processing region(s): ref:0-30\n[19:13:40 - DataStore] Writing sample registry.\n[19:13:40 - Predict] Setting tensorflow threads to 1.\n2024-09-07 19:13:40.713699: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n2024-09-07 19:13:40.717223: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2249995000 Hz\n2024-09-07 19:13:40.719286: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5b2c6f82f500 executing computations on platform Host. Devices:\n2024-09-07 19:13:40.719327: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): \u003cundefined\u003e, \u003cundefined\u003e\n[19:13:40 - Predict] Processing 1 long region(s) with batching.\n[19:13:40 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.\n[19:13:40 - ModelLoad] Building model with cudnn optimization: False\n2024-09-07 19:13:41.466355: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.\n[19:13:41 - DLoader] Initializing data loader\n[19:13:41 - DLoader] Submitting ref:0-30.\n[19:13:41 - PWorker] Running inference for 0.0M draft bases.\n[19:13:41 - Sampler] Initializing sampler for consensus of region ref:0-30.\n[19:13:41 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.\n[19:13:41 - Feature] Processed ref:0.0-9.0 (median depth 1.0)\n[19:13:41 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.\n[19:13:41 - Feature] Processed ref:14.0-29.0 (median depth 1.0)\n[19:13:41 - Sampler] Took 0.00s to make features.\n[19:13:41 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 9999, quarantining.\n[19:13:41 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 9999, quarantining.\n[19:13:41 - DataStore] Writing sample registry.\n[19:13:41 - PWorker] All done, 2 remainder regions.\n[19:13:41 - Predict] Processing 2 short region(s).\n[19:13:41 - ModelLoad] Building model with cudnn optimization: False\n[19:13:42 - DLoader] Initializing data loader\n[19:13:42 - DLoader] Submitting ref:0-10.\n[19:13:42 - Sampler] Initializing sampler for consensus of region ref:0-10.\n[19:13:42 - PWorker] Running inference for 0.0M draft bases.\n[19:13:42 - Feature] Processed ref:0.0-9.0 (median depth 1.0)\n[19:13:42 - Sampler] Took 0.01s to make features.\n[19:13:42 - Sampler] Pileup for ref:0.0-9.0 is of width 10\n[19:13:42 - DataStore] Writing sample registry.\n[19:13:42 - PWorker] All done, 0 remainder regions.\n[19:13:42 - DLoader] Initializing data loader\n[19:13:42 - DLoader] Submitting ref:14-30.\n[19:13:42 - Sampler] Initializing sampler for consensus of region ref:14-30.\n[19:13:42 - PWorker] Running inference for 0.0M draft bases.\n[19:13:42 - Feature] Processed ref:14.0-29.0 (median depth 1.0)\n[19:13:42 - Sampler] Took 0.00s to make features.\n[19:13:42 - Sampler] Pileup for ref:14.0-29.0 is of width 16\n[19:13:42 - DataStore] Writing sample registry.\n[19:13:42 - PWorker] All done, 0 remainder regions.\n[19:13:42 - Predict] Finished processing all regions.\n[19:13:42 - Predict] Validating and finalising output data.\n[19:13:42 - DataStore] Writing sample registry.\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/medaka_consensus/medaka_consensus/1.0.3+galaxy2",  "tool_stderr": "",  "tool_stdout": "[19:13:40 - Predict] Processing region(s): ref:0-30\n[19:13:40 - DataStore] Writing sample registry.\n[19:13:40 - Predict] Setting tensorflow threads to 1.\n2024-09-07 19:13:40.713699: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n2024-09-07 19:13:40.717223: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2249995000 Hz\n2024-09-07 19:13:40.719286: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5b2c6f82f500 executing computations on platform Host. Devices:\n2024-09-07 19:13:40.719327: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): \u003cundefined\u003e, \u003cundefined\u003e\n[19:13:40 - Predict] Processing 1 long region(s) with batching.\n[19:13:40 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.\n[19:13:40 - ModelLoad] Building model with cudnn optimization: False\n2024-09-07 19:13:41.466355: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.\n[19:13:41 - DLoader] Initializing data loader\n[19:13:41 - DLoader] Submitting ref:0-30.\n[19:13:41 - PWorker] Running inference for 0.0M draft bases.\n[19:13:41 - Sampler] Initializing sampler for consensus of region ref:0-30.\n[19:13:41 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.\n[19:13:41 - Feature] Processed ref:0.0-9.0 (median depth 1.0)\n[19:13:41 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.\n[19:13:41 - Feature] Processed ref:14.0-29.0 (median depth 1.0)\n[19:13:41 - Sampler] Took 0.00s to make features.\n[19:13:41 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 9999, quarantining.\n[19:13:41 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 9999, quarantining.\n[19:13:41 - DataStore] Writing sample registry.\n[19:13:41 - PWorker] All done, 2 remainder regions.\n[19:13:41 - Predict] Processing 2 short region(s).\n[19:13:41 - ModelLoad] Building model with cudnn optimization: False\n[19:13:42 - DLoader] Initializing data loader\n[19:13:42 - DLoader] Submitting ref:0-10.\n[19:13:42 - Sampler] Initializing sampler for consensus of region ref:0-10.\n[19:13:42 - PWorker] Running inference for 0.0M draft bases.\n[19:13:42 - Feature] Processed ref:0.0-9.0 (median depth 1.0)\n[19:13:42 - Sampler] Took 0.01s to make features.\n[19:13:42 - Sampler] Pileup for ref:0.0-9.0 is of width 10\n[19:13:42 - DataStore] Writing sample registry.\n[19:13:42 - PWorker] All done, 0 remainder regions.\n[19:13:42 - DLoader] Initializing data loader\n[19:13:42 - DLoader] Submitting ref:14-30.\n[19:13:42 - Sampler] Initializing sampler for consensus of region ref:14-30.\n[19:13:42 - PWorker] Running inference for 0.0M draft bases.\n[19:13:42 - Feature] Processed ref:14.0-29.0 (median depth 1.0)\n[19:13:42 - Sampler] Took 0.00s to make features.\n[19:13:42 - Sampler] Pileup for ref:14.0-29.0 is of width 16\n[19:13:42 - DataStore] Writing sample registry.\n[19:13:42 - PWorker] All done, 0 remainder regions.\n[19:13:42 - Predict] Finished processing all regions.\n[19:13:42 - Predict] Validating and finalising output data.\n[19:13:42 - DataStore] Writing sample registry.\n",  "update_time": "2024-09-07T19:13:46.822723",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_consensus/medaka_consensus/1.0.3+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_consensus/medaka_consensus/1.0.3+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/medaka_consensus/medaka_consensus/1.0.3+galaxy2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 32.782238483428955, "tool_id": "medaka_consensus", "tool_version": "1.0.3+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            [19:13:40 - Predict] Processing region(s): ref:0-30[19:13:40 - DataStore] Writing sample registry.[19:13:40 - Predict] Setting tensorflow threads to 1.2024-09-07 19:13:40.713699: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA2024-09-07 19:13:40.717223: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2249995000 Hz2024-09-07 19:13:40.719286: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5b2c6f82f500 executing computations on platform Host. Devices:2024-09-07 19:13:40.719327: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>[19:13:40 - Predict] Processing 1 long region(s) with batching.[19:13:40 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.[19:13:40 - ModelLoad] Building model with cudnn optimization: False2024-09-07 19:13:41.466355: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.[19:13:41 - DLoader] Initializing data loader[19:13:41 - DLoader] Submitting ref:0-30.[19:13:41 - PWorker] Running inference for 0.0M draft bases.[19:13:41 - Sampler] Initializing sampler for consensus of region ref:0-30.[19:13:41 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[19:13:41 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:13:41 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[19:13:41 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:13:41 - Sampler] Took 0.00s to make features.[19:13:41 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 9999, quarantining.[19:13:41 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 9999, quarantining.[19:13:41 - DataStore] Writing sample registry.[19:13:41 - PWorker] All done, 2 remainder regions.[19:13:41 - Predict] Processing 2 short region(s).[19:13:41 - ModelLoad] Building model with cudnn optimization: False[19:13:42 - DLoader] Initializing data loader[19:13:42 - DLoader] Submitting ref:0-10.[19:13:42 - Sampler] Initializing sampler for consensus of region ref:0-10.[19:13:42 - PWorker] Running inference for 0.0M draft bases.[19:13:42 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[19:13:42 - Sampler] Took 0.01s to make features.[19:13:42 - Sampler] Pileup for ref:0.0-9.0 is of width 10[19:13:42 - DataStore] Writing sample registry.[19:13:42 - PWorker] All done, 0 remainder regions.[19:13:42 - DLoader] Initializing data loader[19:13:42 - DLoader] Submitting ref:14-30.[19:13:42 - Sampler] Initializing sampler for consensus of region ref:14-30.[19:13:42 - PWorker] Running inference for 0.0M draft bases.[19:13:42 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[19:13:42 - Sampler] Took 0.00s to make features.[19:13:42 - Sampler] Pileup for ref:14.0-29.0 is of width 16[19:13:42 - DataStore] Writing sample registry.[19:13:42 - PWorker] All done, 0 remainder regions.[19:13:42 - Predict] Finished processing all regions.[19:13:42 - Predict] Validating and finalising output data.[19:13:42 - DataStore] Writing sample registry.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #1)" name="0" time="57.54819059371948">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #2)" name="1" time="35.320502042770386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #1)" name="0" time="38.571126222610474">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #2)" name="1" time="35.63346290588379">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #11)" name="10" time="36.85883712768555">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #12)" name="11" time="38.308504581451416">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #13)" name="12" time="11.210989236831665">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 11.210989236831665, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #14)" name="13" time="37.276246070861816">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #15)" name="14" time="36.3903272151947">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #16)" name="15" time="35.98116707801819">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #17)" name="16" time="36.281224489212036">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #18)" name="17" time="38.38676714897156">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #3)" name="2" time="35.61946368217468">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #4)" name="3" time="33.85872960090637">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #5)" name="4" time="13.353570222854614">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 13.353570222854614, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #6)" name="5" time="35.642585039138794">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #7)" name="6" time="34.98884963989258">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #8)" name="7" time="35.90767431259155">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #9)" name="8" time="36.68599510192871">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 1 singletons[M::bam2fq_mainloop] processed 37 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #10)" name="9" time="35.99717688560486">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #1)" name="0" time="37.80141592025757">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #2)" name="1" time="35.09526252746582">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #3)" name="2" time="11.363104820251465">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.363104820251465, "tool_id": "samtools_slice_bam", "tool_version": "2.0.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.4298059940338135">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.4298059940338135, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.42633557319641113">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.42633557319641113, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="13.572883605957031">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 13.572883605957031, "tool_id": "scater_create_qcmetric_ready_sce", "tool_version": "1.22.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="22.061426162719727">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 22.061426162719727, "tool_id": "scater_create_qcmetric_ready_sce", "tool_version": "1.22.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #1)" name="0" time="47.14244532585144">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #2)" name="1" time="34.33785653114319">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some of your identifiers had white space in them, using first word only. e.g.:gi|16127999|ref|NP_414546.1| hypothetical protein b0005 [Escherichia coli str. K-12 substr. MG1655]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #3)" name="2" time="34.017014265060425">
        
            
            <system-out><![CDATA[
            Have 1 unique identifiers from listGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #4)" name="3" time="32.218146562576294">
        
            
            <system-out><![CDATA[
            Have 2 unique identifiers from listGenerating matching FASTQ file
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #5)" name="4" time="35.613107681274414">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/d/e/9/dataset_de9a547a-5817-4562-9d3d-7520d413ac21.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03WTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04WTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04WTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05WTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05WTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07WTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08WTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09WTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09WTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10WTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10WTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11WTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11WTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12WTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12WTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14WTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14WTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15WTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16WTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16WTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17WTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18WTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18WTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20WTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20WTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21WTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22WTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22WTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23WTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24WTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01WTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01WTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02WTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02WTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03WTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04WTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06WTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07WTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07WTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08WTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09WTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10WTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10WTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11WTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12WTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12WTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13WTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14WTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15WTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16WTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16WTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17WTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17WTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18WTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20WTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20WTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21WTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21WTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22WTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23WTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23WTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01WTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04WTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04WTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05WTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05WTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06WTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06WTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07WTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08WTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08WTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09WTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09WTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10WTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10WTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11WTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11WTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12WTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12WTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13WTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14WTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14WTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15WTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15WTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16WTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17WTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17WTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19WTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20WTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20WTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22WTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22WTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24WTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01WTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01WTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02WTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02WTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03WTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04WTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06WTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07WTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08WTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08WTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09WTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09WTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10WTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11WTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12WTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13WTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14WTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14WTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15WTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15WTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16WTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16WTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17WTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17WTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18WTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19WTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19WTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20WTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20WTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21WTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22WTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23WTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24WTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24WTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01WTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01WTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02WTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03WTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03WTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04WTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04WTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05WTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06WTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06WTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07WTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07WTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08WTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08WTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09WTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10WTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10WTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11WTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12WTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12WTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13WTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13WTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14WTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14WTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15WTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15WTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16WTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17WTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17WTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18WTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18WTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21WTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21WTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22WTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22WTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23WTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23WTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24WTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24WTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01WTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01WTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02WTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03WTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04WTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05WTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06WTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08WTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09WTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09WTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10WTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10WTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11WTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12WTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14WTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14WTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15WTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16WTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17WTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18WTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18WTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19WTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19WTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20WTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20WTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21WTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21WTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22WTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22WTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23WTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24WTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01WTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01WTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #6)" name="5" time="35.687015533447266">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/e/c/8/dataset_ec84fc93-ad49-445f-b10e-7bb650bc5fc4.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03.p1kpIBFWTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04.p1kpIBFWTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04.q1kpIBRWTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05.p1kpIBFWTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05.q1kpIBRWTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07.p1kpIBFWTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08.p1kpIBFWTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09.p1kpIBFWTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09.q1kpIBRWTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10.p1kpIBFWTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10.q1kpIBRWTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11.p1kpIBFWTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11.q1kpIBRWTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12.p1kpIBFWTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12.q1kpIBRWTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14.p1kpIBFWTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14.q1kpIBRWTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15.p1kpIBFWTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16.p1kpIBFWTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16.q1kpIBRWTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17.p1kpIBFWTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18.p1kpIBFWTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18.q1kpIBRWTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20.p1kpIBFWTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20.q1kpIBRWTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21.q1kpIBRWTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22.p1kpIBFWTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22.q1kpIBRWTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23.p1kpIBFWTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24.q1kpIBRWTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01.p1kpIBFWTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01.q1kpIBRWTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02.p1kpIBFWTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02.q1kpIBRWTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03.q1kpIBRWTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04.p1kpIBFWTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06.p1kpIBFWTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07.p1kpIBFWTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07.q1kpIBRWTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08.p1kpIBFWTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09.p1kpIBFWTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10.p1kpIBFWTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10.q1kpIBRWTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11.q1kpIBRWTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12.p1kpIBFWTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12.q1kpIBRWTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13.p1kpIBFWTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14.p1kpIBFWTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15.q1kpIBRWTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16.p1kpIBFWTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16.q1kpIBRWTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17.p1kpIBFWTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17.q1kpIBRWTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18.p1kpIBFWTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20.p1kpIBFWTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20.q1kpIBRWTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21.p1kpIBFWTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21.q1kpIBRWTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22.p1kpIBFWTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23.p1kpIBFWTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23.q1kpIBRWTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01.q1kpIBRWTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04.p1kpIBFWTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04.q1kpIBRWTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05.p1kpIBFWTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05.q1kpIBRWTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06.p1kpIBFWTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06.q1kpIBRWTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07.p1kpIBFWTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08.p1kpIBFWTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08.q1kpIBRWTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09.p1kpIBFWTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09.q1kpIBRWTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10.p1kpIBFWTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10.q1kpIBRWTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11.p1kpIBFWTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11.q1kpIBRWTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12.p1kpIBFWTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12.q1kpIBRWTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13.p1kpIBFWTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14.p1kpIBFWTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14.q1kpIBRWTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15.p1kpIBFWTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15.q1kpIBRWTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16.p1kpIBFWTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17.p1kpIBFWTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17.q1kpIBRWTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19.p1kpIBFWTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20.p1kpIBFWTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20.q1kpIBRWTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22.p1kpIBFWTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22.q1kpIBRWTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24.p1kpIBFWTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01.p1kpIBFWTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01.q1kpIBRWTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02.p1kpIBFWTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02.q1kpIBRWTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03.p1kpIBFWTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04.p1kpIBFWTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06.p1kpIBFWTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07.p1kpIBFWTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08.p1kpIBFWTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08.q1kpIBRWTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09.p1kpIBFWTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09.q1kpIBRWTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10.p1kpIBFWTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11.p1kpIBFWTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12.p1kpIBFWTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13.p1kpIBFWTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14.p1kpIBFWTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14.q1kpIBRWTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15.p1kpIBFWTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15.q1kpIBRWTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16.p1kpIBFWTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16.q1kpIBRWTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17.p1kpIBFWTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17.q1kpIBRWTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18.p1kpIBFWTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19.p1kpIBFWTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19.q1kpIBRWTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20.p1kpIBFWTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20.q1kpIBRWTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21.p1kpIBFWTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22.p1kpIBFWTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23.p1kpIBFWTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24.p1kpIBFWTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24.q1kpIBRWTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01.p1kpIBFWTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01.q1kpIBRWTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02.p1kpIBFWTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03.p1kpIBFWTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03.q1kpIBRWTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04.p1kpIBFWTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04.q1kpIBRWTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05.p1kpIBFWTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06.p1kpIBFWTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06.q1kpIBRWTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07.p1kpIBFWTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07.q1kpIBRWTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08.p1kpIBFWTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08.q1kpIBRWTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09.p1kpIBFWTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10.p1kpIBFWTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10.q1kpIBRWTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11.p1kpIBFWTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12.p1kpIBFWTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12.q1kpIBRWTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13.p1kpIBFWTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13.q1kpIBRWTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14.p1kpIBFWTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14.q1kpIBRWTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15.p1kpIBFWTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15.q1kpIBRWTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16.p1kpIBFWTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17.p1kpIBFWTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17.q1kpIBRWTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18.p1kpIBFWTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18.q1kpIBRWTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21.p1kpIBFWTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21.q1kpIBRWTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22.p1kpIBFWTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22.q1kpIBRWTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23.p1kpIBFWTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23.q1kpIBRWTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24.p1kpIBFWTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24.q1kpIBRWTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01.p1kpIBFWTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01.q1kpIBRWTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02.p1kpIBFWTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03.p1kpIBFWTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04.q1kpIBRWTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05.p1kpIBFWTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06.p1kpIBFWTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08.p1kpIBFWTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09.p1kpIBFWTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09.q1kpIBRWTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10.p1kpIBFWTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10.q1kpIBRWTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11.p1kpIBFWTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12.p1kpIBFWTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14.p1kpIBFWTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14.q1kpIBRWTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15.p1kpIBFWTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16.p1kpIBFWTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17.p1kpIBFWTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18.p1kpIBFWTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18.q1kpIBRWTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19.p1kpIBFWTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19.q1kpIBRWTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20.p1kpIBFWTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20.q1kpIBRWTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21.p1kpIBFWTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21.q1kpIBRWTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22.p1kpIBFWTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22.q1kpIBRWTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23.p1kpIBFWTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24.q1kpIBRWTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01.p1kpIBFWTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01.q1kpIBRWTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02.p1kpIBF
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfannotategenotypes (Test #1)" name="0" time="42.4662561416626">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfsort (Test #1)" name="0" time="34.215232372283936">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>