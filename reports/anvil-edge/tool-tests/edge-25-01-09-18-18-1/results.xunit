<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="81"
           errors="14"
           failures="24"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="54.47058033943176">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "af0cf231d7636599",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/87/configs/tmp415jxt4d\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/87/configs/tmp415jxt4d\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:54:14.793747",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zfv2g",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "35fec936cee6a223",  "inputs": {   "hd5_format|in|input": {    "id": "af0cf231d7636599",    "src": "hda",    "uuid": "095e7e9a-ff57-4714-b0d0-26b84b30521c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736448876.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:54:36"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736448874.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:54:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "7465bbf1b348de3b",    "src": "hda",    "uuid": "14c02415-cb14-4e46-a41b-d9f9b41fbb60"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 123, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/0/9/5/dataset_095e7e9a-ff57-4714-b0d0-26b84b30521c.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/0/9/5/dataset_095e7e9a-ff57-4714-b0d0-26b84b30521c.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:54:50.252873",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 54.47058033943176, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/0/9/5/dataset_095e7e9a-ff57-4714-b0d0-26b84b30521c.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="32.259340047836304">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "4f1104f8d00dd44c",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/104/configs/tmpci6ai9mh\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/104/configs/tmpci6ai9mh\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:58:19.715392",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-686qx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "20364dc3eb95855e",  "inputs": {   "hd5_format|in|input": {    "id": "4f1104f8d00dd44c",    "src": "hda",    "uuid": "8c537ef6-8f2a-4da4-aeeb-9ed19fb029e5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449103.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:58:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449101.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:58:21"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "fa92358cf160da16",    "src": "hda",    "uuid": "3d6e683e-4e28-41a8-a35d-1902cf04215a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 140, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/8/c/5/dataset_8c537ef6-8f2a-4da4-aeeb-9ed19fb029e5.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/8/c/5/dataset_8c537ef6-8f2a-4da4-aeeb-9ed19fb029e5.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:58:32.440268",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 32.259340047836304, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/8/c/5/dataset_8c537ef6-8f2a-4da4-aeeb-9ed19fb029e5.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="30.10439443588257">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "67b68a1c011bbeb3",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/89/configs/tmpslsdhevl\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/89/configs/tmpslsdhevl\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:55:07.765973",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8pcbt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "afb2d3ff9aec47a2",  "inputs": {   "hd5_format|in|input": {    "id": "67b68a1c011bbeb3",    "src": "hda",    "uuid": "f030f383-c08f-487d-a557-0a34e79166de"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736448910.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:55:10"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736448909.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:55:09"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "467e903e9636c156",    "src": "hda",    "uuid": "664a1a2e-6445-45f2-aed6-90bf58a2d525"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 125, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/0/3/dataset_f030f383-c08f-487d-a557-0a34e79166de.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/0/3/dataset_f030f383-c08f-487d-a557-0a34e79166de.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:55:20.551887",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpz26e4ealimport.csv.h5ad v. /tmp/tmpqo83tf0nimport.csv.h5ad )\nFiles /tmp/tmpz26e4ealimport.csv.h5ad=29512b but /tmp/tmpqo83tf0nimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 30.10439443588257, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/f/0/3/dataset_f030f383-c08f-487d-a557-0a34e79166de.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="30.979230403900146">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "2cd9a31a880e511d",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/106/configs/tmpkdh1rh7e\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/106/configs/tmpkdh1rh7e\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:58:50.885700",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-f7bkd",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "51e0b706ffb3423c",  "inputs": {   "hd5_format|in|input": {    "id": "2cd9a31a880e511d",    "src": "hda",    "uuid": "f38a81b4-847b-4528-ab24-3739bcae3c15"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449134.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:58:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449132.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:58:52"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "e11ab705a6bad74d",    "src": "hda",    "uuid": "d702d2cf-85c5-410c-a8ba-a8697d4c1334"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/3/8/dataset_f38a81b4-847b-4528-ab24-3739bcae3c15.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/3/8/dataset_f38a81b4-847b-4528-ab24-3739bcae3c15.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:59:03.962509",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpxq1wsmfnimport.csv.h5ad v. /tmp/tmpz0tkxeqfimport.csv.h5ad )\nFiles /tmp/tmpxq1wsmfnimport.csv.h5ad=29512b but /tmp/tmpz0tkxeqfimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 30.979230403900146, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/f/3/8/dataset_f38a81b4-847b-4528-ab24-3739bcae3c15.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="31.308862686157227">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "7a5715cf407ed904",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmpbqsu1osc\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/91/configs/tmpbqsu1osc\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:55:39.204049",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-b6dxx",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "c0ce22b04e9dc34f",  "inputs": {   "hd5_format|in|input": {    "id": "7a5715cf407ed904",    "src": "hda",    "uuid": "bda427d6-9bf7-485c-b46b-a20ca32439e3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736448941.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:55:41"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736448940.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:55:40"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "47d5c468447de60a",    "src": "hda",    "uuid": "36ca9937-a22f-41fe-a33e-ed393f7dc547"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 127, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/b/d/a/dataset_bda427d6-9bf7-485c-b46b-a20ca32439e3.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/b/d/a/dataset_bda427d6-9bf7-485c-b46b-a20ca32439e3.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:55:51.928508",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 31.308862686157227, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/b/d/a/dataset_bda427d6-9bf7-485c-b46b-a20ca32439e3.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="10.78385877609253">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.78385877609253, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="32.58778357505798">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "b364ae9f0587f325",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmp259bbxmf\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/93/configs/tmp259bbxmf\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:56:10.689139",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dlt2n",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "8ecf303d7ea62e86",  "inputs": {   "hd5_format|in|matrix": {    "id": "b364ae9f0587f325",    "src": "hda",    "uuid": "b3b32903-7b56-434f-9c01-b3137bb36155"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736448973.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:56:13"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736448972.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:56:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "e31e893146f109b4",    "src": "hda",    "uuid": "d474b04b-9d66-442e-bb7f-9971ae15484b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 129, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/b/3/b/dataset_b3b32903-7b56-434f-9c01-b3137bb36155.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/b/3/b/dataset_b3b32903-7b56-434f-9c01-b3137bb36155.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:56:24.612152",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 32.58778357505798, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/b/3/b/dataset_b3b32903-7b56-434f-9c01-b3137bb36155.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="24.10434103012085">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "7b8c77f198931cf0",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmppkbq8q7_\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/109/configs/tmppkbq8q7_\u0027    \u0026\u0026 rm -rf mtx",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-09T18:59:32.546176",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-v2kfh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "00b6728b83b9ad95",  "inputs": {   "hd5_format|in|matrix": {    "id": "7b8c77f198931cf0",    "src": "hda",    "uuid": "99b70183-da35-450e-9190-74f23ce43911"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "073e533efa4124b5",    "src": "hda",    "uuid": "0e755524-6b17-4a9a-932f-e68363c8b3b1"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/9/9/b/dataset_99b70183-da35-450e-9190-74f23ce43911.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/9/9/b/dataset_99b70183-da35-450e-9190-74f23ce43911.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:59:38.825605",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 24.10434103012085, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/9/9/b/dataset_99b70183-da35-450e-9190-74f23ce43911.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="25.33718514442444">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "62d2ee3be01d4a78",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/f/e/d/dataset_fedced05-1851-418f-a819-075b7afbe93f.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/95/configs/tmpvhvqy3zq\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/95/configs/tmpvhvqy3zq\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-09T18:56:44.002168",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-x624w",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "8f34c7752b5eb540",  "inputs": {   "hd5_format|in|input": {    "id": "62d2ee3be01d4a78",    "src": "hda",    "uuid": "fedced05-1851-418f-a819-075b7afbe93f"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "f0b87efc48853b68",    "src": "hda",    "uuid": "2fe26545-9ae4-4b85-9c6f-d9905431397c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 131, \"src\": \"hda\"}]}}}"  },  "state": "error",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T18:56:49.882307",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 25.33718514442444, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="30.51480770111084">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "8133cb4c2eb01c07",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/e/4/a/dataset_e4a99daa-7688-4630-92d4-173393c1437a.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmpj7e5k2lx\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/111/configs/tmpj7e5k2lx\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:59:56.745819",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qh62x",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "dd2c3e761278f014",  "inputs": {   "hd5_format|in|input": {    "id": "8133cb4c2eb01c07",    "src": "hda",    "uuid": "e4a99daa-7688-4630-92d4-173393c1437a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449199.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:59:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449197.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:59:57"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "b192c0fd190a0682",    "src": "hda",    "uuid": "1eb2a79f-b64c-4604-9ccf-e8d2af4d2fdb"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2025-01-09T19:00:09.593359",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 30.51480770111084, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="33.97448396682739">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "6bf7d0d45ba5a0c3",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "e457d23701c3827b",   "src": "hda"  },  "hd5_format|other_files": {   "id": "298291b1f8443b43",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "9a6c8a06d1e17459",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/4/3/4/dataset_4349f0bb-a9f5-4248-ac87-1fc4ca10661e.dat\u0027 -r \u0027/galaxy/server/database/objects/9/5/d/dataset_95dd47c1-8c93-48a4-baa4-fb17275c7cff.dat\u0027 -f \u0027/galaxy/server/database/objects/a/a/7/dataset_aa77546c-aac0-416c-bfb2-cc73a59f1149.dat\u0027 \u0027/galaxy/server/database/objects/b/9/6/dataset_b96e5dee-9f08-45a2-9d30-ac8a9d4b1ae7.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-09T18:57:18.157013",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-xzmg5",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "0e5f229abc090cc0",  "inputs": {   "hd5_format|coldata": {    "id": "6bf7d0d45ba5a0c3",    "src": "hda",    "uuid": "4349f0bb-a9f5-4248-ac87-1fc4ca10661e"   },   "hd5_format|mainmatrix": {    "id": "e457d23701c3827b",    "src": "hda",    "uuid": "aa77546c-aac0-416c-bfb2-cc73a59f1149"   },   "hd5_format|other_files": {    "id": "298291b1f8443b43",    "src": "hda",    "uuid": "b96e5dee-9f08-45a2-9d30-ac8a9d4b1ae7"   },   "hd5_format|other_files1": {    "id": "298291b1f8443b43",    "src": "hda",    "uuid": "b96e5dee-9f08-45a2-9d30-ac8a9d4b1ae7"   },   "hd5_format|rowdata": {    "id": "9a6c8a06d1e17459",    "src": "hda",    "uuid": "95dd47c1-8c93-48a4-baa4-fb17275c7cff"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "10616a1fa1933afd",    "src": "hda",    "uuid": "f0ddad5f-0d92-4e96-a38f-b76b39c728e1"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 133, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-09T18:57:24.152913",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 33.97448396682739, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="22.382996320724487">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 22.382996320724487, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="34.864614486694336">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/e/5/d/dataset_e5d3a75f-8594-42f1-97d8-456401fc6dea.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="33.16711401939392">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/d/c/4/dataset_dc40013a-6f7b-4b56-9570-797560bee70c.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="19.98139238357544">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 19.98139238357544, "tool_id": "bcftools_plugin_fixploidy", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="71.50071263313293">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="45.14745473861694">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "13f0324a9b740cb6",   "src": "hda"  },  "plot_title": "Plot for mpileup.vcf" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/b/e/b/dataset_beb5f5ec-a01f-4823-934c-cfcbf44044e9.dat\u0027 \u003e input0.vcf.gz \u0026\u0026 bcftools index input0.vcf.gz \u0026\u0026 echo \u0027input0.vcf.gz\u0027 \u003e\u003e vcfs_list \u0026\u0026                     bcftools stats                               input0.vcf.gz  \u003e \u0027/galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.dat\u0027 \u0026\u0026 plot-vcfstats -p \u0027plot_tmp/\u0027 -T \u0027Plot for mpileup.vcf\u0027 -s \u0027/galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.dat\u0027 || (printf \"The content of plot_tmp/plot-vcfstats.log is:\\n\" \u003e\u00262 \u0026\u0026 cat plot_tmp/plot-vcfstats.log \u003e\u00262 \u0026\u0026 exit 1)",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-09T19:17:03.246986",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-hfcms",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "fe6b5b08a3260c79",  "inputs": {   "input_file": {    "id": "13f0324a9b740cb6",    "src": "hda",    "uuid": "beb5f5ec-a01f-4823-934c-cfcbf44044e9"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "4579dd993e10b0eb",    "src": "hda",    "uuid": "54d24fdf-52e3-413b-a26d-426567dc5d95"   },   "output_pdf": {    "id": "e5e95c6b8b3121bb",    "src": "hda",    "uuid": "b8463ac3-c8b8-4e62-957e-4fc1afbdd203"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "inputB_file": null,   "plot_title": "\"Plot for mpileup.vcf\"",   "sec_default": "{\"af_tag\": \"\", \"afbins\": {\"__current_case__\": 0, \"afbins_select\": \"default\"}, \"depth\": {\"__current_case__\": 0, \"set_depth\": \"no\"}, \"exons_file\": null, \"first_allele_only\": false, \"reference_source\": {\"__current_case__\": 0, \"reference_source_selector\": \"\"}, \"split_by_ID\": false, \"user_tstv\": \"\", \"verbose\": false}",   "sec_restrict": "{\"apply_filters\": \"\", \"collapse\": null, \"exclude\": null, \"include\": null, \"invert_samples\": false, \"invert_samples_file\": false, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"samples\": \"\", \"samples_file\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"  },  "state": "error",  "stderr": "Parsing bcftools stats output: /galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.dat\nPlotting graphs: python3 plot.py\nCreating PDF: tectonic summary.tex \u003eplot-vcfstats.log 2\u003e\u00261\nFinished: plot_tmp//summary.pdf\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4",  "tool_stderr": "Parsing bcftools stats output: /galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.dat\nPlotting graphs: python3 plot.py\nCreating PDF: tectonic summary.tex \u003eplot-vcfstats.log 2\u003e\u00261\nFinished: plot_tmp//summary.pdf\n",  "tool_stdout": "",  "update_time": "2025-01-09T19:17:29.632764",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4, exit_code: None, stderr: Parsing bcftools stats output: /galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.dat\nPlotting graphs: python3 plot.py\nCreating PDF: tectonic summary.tex \u003eplot-vcfstats.log 2\u003e\u00261\nFinished: plot_tmp//summary.pdf\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4, exit_code: None, stderr: Parsing bcftools stats output: /galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.dat\nPlotting graphs: python3 plot.py\nCreating PDF: tectonic summary.tex \u003eplot-vcfstats.log 2\u003e\u00261\nFinished: plot_tmp//summary.pdf\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_stats/bcftools_stats/1.15.1+galaxy4, exit_code: None, stderr: Parsing bcftools stats output: /galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.dat\nPlotting graphs: python3 plot.py\nCreating PDF: tectonic summary.tex \u003eplot-vcfstats.log 2\u003e\u00261\nFinished: plot_tmp//summary.pdf\n." ], "status": "failure", "test_index": 2, "time_seconds": 45.14745473861694, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/objects/5/4/d/dataset_54d24fdf-52e3-413b-a26d-426567dc5d95.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="31.872551918029785">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="29.85863733291626">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="34.97004961967468">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="30.60154414176941">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="76.95257997512817">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="40.58666467666626">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "123a754e71cd0193",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/4/7/a/dataset_47ab3fda-153d-4122-8903-f53010c679a7.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/b/8/f/dataset_b8fb4410-d6fa-4ad1-ae11-d840095ac29e.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2025-01-09T18:37:29.205968",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-gkqt7",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "123a754e71cd0193",  "inputs": {   "corData": {    "id": "123a754e71cd0193",    "src": "hda",    "uuid": "47ab3fda-153d-4122-8903-f53010c679a7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736447854.0000000",    "title": "Job End Time",    "value": "2025-01-09 18:37:34"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736447851.0000000",    "title": "Job Start Time",    "value": "2025-01-09 18:37:31"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "4594205a140caaf5",    "src": "hda",    "uuid": "b8fb4410-d6fa-4ad1-ae11-d840095ac29e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-09T18:37:45.559012",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpxtdkscksplotCorrelation_result2.png v. /tmp/tmptiyq0b05plotCorrelation_result2.png )\nFiles /tmp/tmpxtdkscksplotCorrelation_result2.png=11943b but /tmp/tmptiyq0b05plotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 40.58666467666626, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="26.882381916046143">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "generate_histogram": false,  "layout|forward": {   "id": "30006f481d6e31fa",   "src": "hda"  },  "layout|reverse": {   "id": "cad2c26f0b53800c",   "src": "hda"  },  "layout|select_layout": "individual",  "save_log": true }, "job": {  "command_line": "flash --threads=${GALAXY_SLOTS:-1} -m 10 -M 65 -x 0.25  \u0027/galaxy/server/database/objects/7/d/2/dataset_7d262849-9368-4818-8ca8-2fa27c18037d.dat\u0027 \u0027/galaxy/server/database/objects/0/a/0/dataset_0a01769b-a6d7-4108-8f55-e40cb9568741.dat\u0027 -p 33 --output-suffix=\u0027\u0027 \u003e \u0027/galaxy/server/database/objects/6/8/f/dataset_68f86cc1-085e-43fa-b803-052800865faa.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2025-01-09T18:38:11.618223",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-6dpl7",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "cad2c26f0b53800c",  "inputs": {   "layout|forward": {    "id": "30006f481d6e31fa",    "src": "hda",    "uuid": "7d262849-9368-4818-8ca8-2fa27c18037d"   },   "layout|reverse": {    "id": "cad2c26f0b53800c",    "src": "hda",    "uuid": "0a01769b-a6d7-4108-8f55-e40cb9568741"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "hist": {    "id": "147ca552e3c282c9",    "src": "hda",    "uuid": "ebaa4617-0c10-4ba5-9634-dab889ad2bd6"   },   "log": {    "id": "1fdfe52ed3174be2",    "src": "hda",    "uuid": "68f86cc1-085e-43fa-b803-052800865faa"   },   "merged_paired_reads": {    "id": "e980cd79fc06af79",    "src": "hda",    "uuid": "f351b560-6c84-4d8f-87da-3efa82369b07"   },   "unmerged_paired_reads_f": {    "id": "30c145a7eee3cfc1",    "src": "hda",    "uuid": "31f7e2a5-3b30-48e1-8e97-f5af19abcd31"   },   "unmerged_paired_reads_r": {    "id": "363fe429a0529679",    "src": "hda",    "uuid": "ebaf5e48-4c8c-473c-8efd-d4383ca80d70"   }  },  "params": {   "__input_ext": "\"input\"",   "allow_outies": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "generate_histogram": "false",   "layout": "{\"__current_case__\": 0, \"forward\": {\"values\": [{\"id\": 10, \"src\": \"hda\"}]}, \"reverse\": {\"values\": [{\"id\": 11, \"src\": \"hda\"}]}, \"select_layout\": \"individual\"}",   "max_mismatch_density": "\"0.25\"",   "max_overlap": "\"65\"",   "min_overlap": "\"10\"",   "save_log": "true"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2025-01-09T18:38:17.606051",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/flash/flash/1.2.11.4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 26.882381916046143, "tool_id": "flash", "tool_version": "1.2.11.4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="45.505614280700684">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="37.7600793838501">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/0/d/9/dataset_0d95de4b-04a6-45d5-be06-f25536a304e6.dat[FLASH]     /galaxy/server/database/objects/e/3/4/dataset_e34d332f-fb69-4998-92ab-fa6d58f96db5.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.019 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="10.758935689926147">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 10.758935689926147, "tool_id": "flash", "tool_version": "1.2.11.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="34.15856981277466">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/e/3/c/dataset_e3ce96aa-85cc-4f08-922a-6b547f0cfe84.dat[FLASH]     /galaxy/server/database/objects/f/b/f/dataset_fbf5426e-0492-497c-84c3-28d8668935a8.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.033 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="44.27316856384277">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "0991593ee71a3139",   "src": "hda"  },  "reference_source|ref": {   "id": "8a923a551982c54e",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/0/3/dataset_903e8e0e-0a4c-4bc8-8018-282380b1d550.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/a/e/6/dataset_ae64d3da-1f04-485b-b4c8-6dd523ee72e7.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/4/d/2/metadata_4d20da17-1109-4d29-81d4-a2f907d72c04.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:12:23.072406",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-v57wp",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "141054121c7bf19f",  "inputs": {   "reads": {    "id": "0991593ee71a3139",    "src": "hda",    "uuid": "ae64d3da-1f04-485b-b4c8-6dd523ee72e7"   },   "reference_source|ref": {    "id": "8a923a551982c54e",    "src": "hda",    "uuid": "903e8e0e-0a4c-4bc8-8018-282380b1d550"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449954.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:12:34"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449950.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:12:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "bba55ebc9c79f027",    "src": "hda",    "uuid": "7af8905f-e7d6-43b5-99d0-1ee47fb6bd9f"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 205, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-01-09 19:12:31,271]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-09 19:12:31,306]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:12:34,607]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-09 19:12:31,271]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-09 19:12:31,306]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:12:34,607]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-01-09T19:12:46.626316",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpir13dsyccall-out1.vcf v. /tmp/tmpg1akul15call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250109\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/concat.vcf.gz /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/0.vcf.gz /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/1.vcf.gz /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/2.vcf.gz /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/3.vcf.gz /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/4.vcf.gz; Date=Thu Jan  9 19:12:34 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 44.27316856384277, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-09 19:12:31,271]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2025-01-09 19:12:31,306]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-01-09 19:12:34,607]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/151/tmp/lofreq2_call_parallel4bt0ndo_/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="35.358864545822144">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "d198f9a43ba72258",   "src": "hda"  },  "reference_source|ref": {   "id": "26106283a12b1278",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/2/7/dataset_127fb878-8891-464a-88c3-7f239442ed2a.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/e/3/d/dataset_e3d878ea-acb0-41a7-b3f5-789d229712a4.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/5/6/1/metadata_5618be78-5075-4cfd-ac5a-9e1088f89d1e.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:13:07.018005",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dtmrd",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "e661df4ecb7b24a2",  "inputs": {   "reads": {    "id": "d198f9a43ba72258",    "src": "hda",    "uuid": "e3d878ea-acb0-41a7-b3f5-789d229712a4"   },   "reference_source|ref": {    "id": "26106283a12b1278",    "src": "hda",    "uuid": "127fb878-8891-464a-88c3-7f239442ed2a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449992.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:13:12"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449988.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:13:08"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "ab55a45899959f8b",    "src": "hda",    "uuid": "0c1434dc-20cf-4e93-ba12-44136d8637d8"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 208, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-01-09 19:13:08,968]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-09 19:13:09,009]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:13:12,107]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-09 19:13:08,968]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-09 19:13:09,009]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:13:12,107]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-01-09T19:13:21.960854",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpz3f_35k1call-out1.vcf v. /tmp/tmp3p60x7hvcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250109\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/concat.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/0.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/1.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/2.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/3.vcf.gz /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/4.vcf.gz; Date=Thu Jan  9 19:13:11 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 35.358864545822144, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-09 19:13:08,968]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-01-09 19:13:09,009]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-01-09 19:13:12,107]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/154/tmp/lofreq2_call_parallelm3fwf16h/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="39.24899196624756">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "e408d1dd08d6f216",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "39df38c5f4c818dd",   "src": "hda"  },  "reference_source|ref": {   "id": "a02a6e60ca1c02b6",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/c/d/8/dataset_cd881e9d-ce14-411d-9a46-b92f387d4372.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/2/d/a/dataset_2daae68f-583c-476d-866a-123a358cdcab.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/e/3/0/metadata_e30d2e1c-d26f-446e-bf18-c5064f47eb71.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/b/8/4/dataset_b845ff44-4d68-4ae1-9a3a-130cc661c71e.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:13:45.988099",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-hm95m",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "d7fe7b2c564c3f8b",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "e408d1dd08d6f216",    "src": "hda",    "uuid": "b845ff44-4d68-4ae1-9a3a-130cc661c71e"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "e408d1dd08d6f216",    "src": "hda",    "uuid": "b845ff44-4d68-4ae1-9a3a-130cc661c71e"   },   "reads": {    "id": "39df38c5f4c818dd",    "src": "hda",    "uuid": "2daae68f-583c-476d-866a-123a358cdcab"   },   "reference_source|ref": {    "id": "a02a6e60ca1c02b6",    "src": "hda",    "uuid": "cd881e9d-ce14-411d-9a46-b92f387d4372"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736450031.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:13:51"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736450027.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:13:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "2ad6d464bd8b3e22",    "src": "hda",    "uuid": "c8bdef3d-b405-4293-8b83-ec5c5b59253b"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 212, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 211, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-01-09 19:13:47,557]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-09 19:13:47,622]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:13:51,208]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-09 19:13:47,557]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2025-01-09 19:13:47,622]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:13:51,208]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2025-01-09T19:14:01.503845",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp_czk0e9ecall-out1.vcf v. /tmp/tmps07zausqcall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250109\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/concat.vcf.gz /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/0.vcf.gz /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/1.vcf.gz /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/2.vcf.gz /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/3.vcf.gz /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/4.vcf.gz; Date=Thu Jan  9 19:13:51 2025\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 39.24899196624756, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-09 19:13:47,557]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2025-01-09 19:13:47,622]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-01-09 19:13:51,208]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/158/tmp/lofreq2_call_parallelk9s63la7/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="33.71881151199341">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "79847d4dab399b04",   "src": "hda"  },  "reference_source|ref": {   "id": "808d0448949a6c7a",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/b/7/dataset_6b7be4d1-7df0-4e09-95c3-a09fb6dbb52b.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/8/6/3/dataset_863a33aa-21da-4a55-b59c-bae8b64ee41f.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/b/5/8/metadata_b58ee7ba-9841-4b9e-a7fa-2aca078be350.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:14:20.281450",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6kgmt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "0d095f6fdc1ba768",  "inputs": {   "reads": {    "id": "79847d4dab399b04",    "src": "hda",    "uuid": "863a33aa-21da-4a55-b59c-bae8b64ee41f"   },   "reference_source|ref": {    "id": "808d0448949a6c7a",    "src": "hda",    "uuid": "6b7be4d1-7df0-4e09-95c3-a09fb6dbb52b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736450065.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:14:25"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736450062.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:14:22"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "c198bc55a63c95fd",    "src": "hda",    "uuid": "2a7ec8b3-f150-4396-afee-54f34ba17db7"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 215, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-01-09 19:14:22,326]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-01-09 19:14:22,409]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:14:25,011]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-09 19:14:22,326]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-01-09 19:14:22,409]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2025-01-09 19:14:25,011]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-01-09T19:14:35.444644",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpks2plhavcall-out2.vcf v. /tmp/tmptp7jrc50call-out2.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallelg3dmyvln/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250109\n+##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel71xk6cjy/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,6 +10,9 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel71xk6cjy/concat.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel71xk6cjy/0.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel71xk6cjy/1.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel71xk6cjy/2.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel71xk6cjy/3.vcf.gz /galaxy/server/database/jobs_directory/000/161/tmp/lofreq2_call_parallel71xk6cjy/4.vcf.gz; Date=Thu Jan  9 19:14:24 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t815\t.\tA\tG\t0\t.\tDP=665;AF=0.003008;SB=6;DP4=333,311,0,2\n pBR322\t861\t.\tA\tC\t0\t.\tDP=946;AF=0.002114;SB=3;DP4=447,497,0,2\n@@ -17,11 +21,11 @@\n pBR322\t1068\t.\tT\tG\t0\t.\tDP=1774;AF=0.000564;SB=3;DP4=853,920,1,0\n pBR322\t1084\t.\tG\tT\t0\t.\tDP=1789;AF=0.000559;SB=3;DP4=875,913,1,0\n pBR322\t1113\t.\tT\tA\t0\t.\tDP=1784;AF=0.000561;SB=0;DP4=885,898,0,1\n-pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\t.\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n pBR322\t1193\t.\tG\tA\t0\t.\tDP=1698;AF=0.000589;SB=3;DP4=865,832,0,1\n pBR322\t1218\t.\tA\tC\t0\t.\tDP=1708;AF=0.000585;SB=3;DP4=875,831,0,1\n pBR322\t1230\t.\tT\tC\t0\t.\tDP=1759;AF=0.000569;SB=3;DP4=907,850,0,1\n pBR322\t1256\t.\tA\tG\t0\t.\tDP=1746;AF=0.000573;SB=0;DP4=902,842,1,0\n pBR322\t1498\t.\tC\tG\t0\t.\tDP=1195;AF=0.000837;SB=3;DP4=588,606,1,0\n pBR322\t1503\t.\tT\tG\t0\t.\tDP=1156;AF=0.000865;SB=3;DP4=563,592,1,0\n-pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.000880;SB=0;DP4=560,576,0,1\n+pBR322\t1505\t.\tG\tA\t0\t.\tDP=1137;AF=0.00088;SB=0;DP4=560,576,0,1\n" ], "status": "failure", "test_index": 3, "time_seconds": 33.71881151199341, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-09 19:14:22,326]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-01-09 19:14:22,409]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2025-01-09 19:14:25,011]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="35.103925943374634">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "59a3fff03d67febf",   "src": "hda"  },  "reference_source|ref": {   "id": "2eeb695026368d82",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/e/e/dataset_2ee2e8b5-1fb0-4204-9c34-9768a52f8d80.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/1/3/7/dataset_137b57f4-a454-4217-8b7a-06c3129bd8ca.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/b/5/a/metadata_b5a5c3db-ae5b-4213-aa17-18f80ab1badd.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:14:55.539119",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5slc9",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "a265a2ef8836b0c9",  "inputs": {   "reads": {    "id": "59a3fff03d67febf",    "src": "hda",    "uuid": "137b57f4-a454-4217-8b7a-06c3129bd8ca"   },   "reference_source|ref": {    "id": "2eeb695026368d82",    "src": "hda",    "uuid": "2ee2e8b5-1fb0-4204-9c34-9768a52f8d80"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736450100.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:15:00"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736450096.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:14:56"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "158e2b46ef8e987b",    "src": "hda",    "uuid": "da9f39cf-d19d-44c9-a137-1b10f38dd527"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 218, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2025-01-09 19:14:57,356]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-01-09 19:14:57,415]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-01-09 19:15:00,707]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2025-01-09 19:14:57,356]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2025-01-09 19:14:57,415]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2025-01-09 19:15:00,707]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2025-01-09T19:15:10.544432",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmp4gfslmr_indel-call-out.vcf v. /tmp/tmpq0538bvrindel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20250109\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelm0u7vds5/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelm0u7vds5/concat.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelm0u7vds5/0.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelm0u7vds5/1.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelm0u7vds5/2.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelm0u7vds5/3.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelm0u7vds5/4.vcf.gz; Date=Thu Jan  9 19:15:00 2025\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 35.103925943374634, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2025-01-09 19:14:57,356]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2025-01-09 19:14:57,415]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2025-01-09 19:15:00,707]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="73.77071237564087">
        
            
            <system-out><![CDATA[
            [18:43:41 - DataStre] Loaded sample register.[18:43:41 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:43:41 - DataStre] Loaded sample register.[18:43:41 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:43:41 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:43:41 - Variants] Processing NC_045512.2:0-.[18:43:41 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:43:44 - Annotate] Getting chrom coordinates[18:43:44 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:43:44 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="41.65351390838623">
        
            
            <system-out><![CDATA[
            [18:44:30 - DataStre] Loaded sample register.[18:44:30 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:44:30 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:44:30 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:44:32 - Annotate] Getting chrom coordinates[18:44:32 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:44:32 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="11.129271745681763">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.129271745681763, "tool_id": "medaka_variant", "tool_version": "1.7.2+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="58.19678592681885">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="60.22188973426819">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="37.21740221977234">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="38.34629988670349">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="12.485187530517578">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.485187530517578, "tool_id": "raceid_inspecttrajectory", "tool_version": "0.2.3+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="34.83778381347656">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="35.9633264541626">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="37.23180532455444">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="37.27025651931763">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="43.04042410850525">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="43.17184090614319">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="10.429646015167236">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.429646015167236, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="50.61597180366516">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.00107452sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 3.909e-05sWriting sequence data to file . . . doneElapsed time: 7.769e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000147111sdoneElapsed time: 0.0027274sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.001546sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2025-01-09 18:46:44.815] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2025-01-09 18:46:44.884] [jointLog] [info] Loading Quasi index[2025-01-09 18:46:44.887] [jointLog] [info] done[2025-01-09 18:46:44.886] [stderrLog] [info] Loading Position Hash[2025-01-09 18:46:44.886] [stderrLog] [info] Loading Suffix Array [2025-01-09 18:46:44.887] [stderrLog] [info] Loading Transcript Info [2025-01-09 18:46:44.887] [stderrLog] [info] Loading Rank-Select Bit Array[2025-01-09 18:46:44.887] [stderrLog] [info] There were 15 set bits in the bit array[2025-01-09 18:46:44.887] [stderrLog] [info] Computing transcript lengths[2025-01-09 18:46:44.887] [stderrLog] [info] Waiting to finish loading hash[2025-01-09 18:46:44.887] [stderrLog] [info] Done loading index[2025-01-09 18:46:44.906] [jointLog] [info] Gathered fragment lengths from all threads[2025-01-09 18:46:44.906] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2025-01-09 18:46:44.906] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2025-01-09 18:46:44.914] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2025-01-09 18:46:44.914] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2025-01-09 18:46:44.914] [jointLog] [info] Starting optimizer:[2025-01-09 18:46:44.914] [jointLog] [info] Optimizing over 21 equivalence classes[2025-01-09 18:46:44.914] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2025-01-09 18:46:44.914] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2025-01-09 18:46:44.914] [jointLog] [info] Finished optimizer[2025-01-09 18:46:44.914] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="10.75238847732544">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 10.75238847732544, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="24.760178565979004">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 24.760178565979004, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="47.885629415512085">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="34.59270238876343">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="18.41649627685547">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 18.41649627685547, "tool_id": "samtools_mpileup", "tool_version": "2.1.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="33.624255895614624">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="32.04756450653076">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="31.809967041015625">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="52.33640646934509">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="10.648455381393433">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.648455381393433, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="10.867033004760742">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 10.867033004760742, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="33.94763159751892">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="35.59813165664673">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="33.88214993476868">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="81.26735639572144">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "b644e55c4466e42b",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/9/d/6/dataset_9d6cee50-a7a8-4b4a-96e2-5ec70e1c443f.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/138/configs/tmp6omh63_0\u0027 \u003e \u0027/galaxy/server/database/objects/c/b/e/dataset_cbe64cdd-b43f-400c-b0ad-e65e3f933df9.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/138/configs/tmp6omh63_0\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/c/b/e/dataset_cbe64cdd-b43f-400c-b0ad-e65e3f933df9.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/c/b/e/dataset_cbe64cdd-b43f-400c-b0ad-e65e3f933df9.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:07:48.948294",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6d6d2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "08bbece9a8956fcb",  "inputs": {   "adata": {    "id": "b644e55c4466e42b",    "src": "hda",    "uuid": "9d6cee50-a7a8-4b4a-96e2-5ec70e1c443f"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449710.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:08:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449706.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:08:26"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "da36f4723fdf1043",    "src": "hda",    "uuid": "7c053e05-45c6-4d72-b1fa-bd4bd224aa06"   },   "hidden_output": {    "id": "61082228deb3b433",    "src": "hda",    "uuid": "cbe64cdd-b43f-400c-b0ad-e65e3f933df9"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-01-09T19:08:50.783234",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 81.26735639572144, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="38.73820900917053">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "4f5cc5b08221ba31",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/7/1/f/dataset_71f42c68-9322-461a-9f14-889fa7326df4.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/140/configs/tmp0ccvpxwr\u0027 \u003e \u0027/galaxy/server/database/objects/4/d/7/dataset_4d7181e0-439d-48c9-acd2-b2619a3f07ac.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/140/configs/tmp0ccvpxwr\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/4/d/7/dataset_4d7181e0-439d-48c9-acd2-b2619a3f07ac.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/4/d/7/dataset_4d7181e0-439d-48c9-acd2-b2619a3f07ac.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:09:12.167180",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wz7bn",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "4f1104f8d00dd44c",  "inputs": {   "adata": {    "id": "4f5cc5b08221ba31",    "src": "hda",    "uuid": "71f42c68-9322-461a-9f14-889fa7326df4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449758.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:09:18"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449754.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:09:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "b2dd7373603c60bf",    "src": "hda",    "uuid": "027c63e6-867f-4cdf-a185-c4918a3dddbf"   },   "hidden_output": {    "id": "89ce05742bf21cd7",    "src": "hda",    "uuid": "4d7181e0-439d-48c9-acd2-b2619a3f07ac"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2025-01-09T19:09:28.824543",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out:  different than expected, difference (using sim_size):\n( /tmp/tmpsc6yif1fpp.recipe_zheng17.random-randint.h5ad v. /tmp/tmpsgnn3rfxpp.recipe_zheng17.random-randint.h5ad )\nFiles /tmp/tmpsc6yif1fpp.recipe_zheng17.random-randint.h5ad=487656b but /tmp/tmpsgnn3rfxpp.recipe_zheng17.random-randint.h5ad=4114792b - compare by size (delta=1000000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 38.73820900917053, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="36.6162691116333">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "a644044a654e4c98",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/a/a/d/dataset_aad3b5d3-beea-4c9e-88f1-266c3d7333d5.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/142/configs/tmphdkznqb_\u0027 \u003e \u0027/galaxy/server/database/objects/a/0/e/dataset_a0eb9191-d0e7-4edd-83c2-edc76ecfbf3a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/142/configs/tmphdkznqb_\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/a/0/e/dataset_a0eb9191-d0e7-4edd-83c2-edc76ecfbf3a.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/a/0/e/dataset_a0eb9191-d0e7-4edd-83c2-edc76ecfbf3a.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:09:49.543430",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-mtx6w",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "2cd9a31a880e511d",  "inputs": {   "adata": {    "id": "a644044a654e4c98",    "src": "hda",    "uuid": "aad3b5d3-beea-4c9e-88f1-266c3d7333d5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449796.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:09:56"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449791.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:09:51"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "1cee33a00d4f3b0d",    "src": "hda",    "uuid": "694b99da-ebfd-4fb1-85e2-25fd127eaec5"   },   "hidden_output": {    "id": "a6eb2a2c801bce7c",    "src": "hda",    "uuid": "a0eb9191-d0e7-4edd-83c2-edc76ecfbf3a"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2025-01-09T19:10:06.328090",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 36.6162691116333, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="37.04184699058533">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "551f1303238e1407",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/d/9/dataset_cd9b333a-837a-45c5-9661-afbeb481dd7b.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/144/configs/tmp1hzax6gk\u0027 \u003e \u0027/galaxy/server/database/objects/d/b/1/dataset_db1a434d-9fff-42a6-87a8-8c31f1be6065.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/144/configs/tmp1hzax6gk\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/d/b/1/dataset_db1a434d-9fff-42a6-87a8-8c31f1be6065.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/d/b/1/dataset_db1a434d-9fff-42a6-87a8-8c31f1be6065.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:10:27.343211",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vdt9k",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "5ba987a82b0585a2",  "inputs": {   "adata": {    "id": "551f1303238e1407",    "src": "hda",    "uuid": "cd9b333a-837a-45c5-9661-afbeb481dd7b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449833.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:10:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449829.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:10:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "85798b2d8fb077da",    "src": "hda",    "uuid": "5e2c2ddb-d119-40b8-af82-ae30f65e613a"   },   "hidden_output": {    "id": "634b412a4649bfc6",    "src": "hda",    "uuid": "db1a434d-9fff-42a6-87a8-8c31f1be6065"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2025-01-09T19:10:43.658883",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 37.04184699058533, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="35.48923397064209">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "1f4ddfc3cb811e6c",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/0/9/dataset_609299ea-1d62-46d4-b923-527c1ac68033.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmpciuk1yq2\u0027 \u003e \u0027/galaxy/server/database/objects/a/1/c/dataset_a1cdf952-2e3b-4cc6-8d27-a7d36ab0336a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmpciuk1yq2\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/a/1/c/dataset_a1cdf952-2e3b-4cc6-8d27-a7d36ab0336a.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/a/1/c/dataset_a1cdf952-2e3b-4cc6-8d27-a7d36ab0336a.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:11:03.194473",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-cdclv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "073e533efa4124b5",  "inputs": {   "adata": {    "id": "1f4ddfc3cb811e6c",    "src": "hda",    "uuid": "609299ea-1d62-46d4-b923-527c1ac68033"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449869.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:11:09"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449864.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:11:04"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "2093efe9519041a1",    "src": "hda",    "uuid": "3abc3353-eb5c-4a2e-9a64-b8231b6ab4f3"   },   "hidden_output": {    "id": "31d0fc56979cf7b3",    "src": "hda",    "uuid": "a1cdf952-2e3b-4cc6-8d27-a7d36ab0336a"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2025-01-09T19:11:19.191942",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 35.48923397064209, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="37.14539623260498">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "2f95575c0746137d",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/0/2/dataset_4025d665-a89d-4708-9c4e-02a42a617077.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmpmixwh_po\u0027 \u003e \u0027/galaxy/server/database/objects/2/0/6/dataset_2062b4bd-d51c-4c2e-a379-6dc6f890609d.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmpmixwh_po\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/2/0/6/dataset_2062b4bd-d51c-4c2e-a379-6dc6f890609d.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/2/0/6/dataset_2062b4bd-d51c-4c2e-a379-6dc6f890609d.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2025-01-09T19:11:39.672367",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-hhwnt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "b6ec13696deaf4a1",  "id": "b192c0fd190a0682",  "inputs": {   "adata": {    "id": "2f95575c0746137d",    "src": "hda",    "uuid": "4025d665-a89d-4708-9c4e-02a42a617077"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1736449905.0000000",    "title": "Job End Time",    "value": "2025-01-09 19:11:45"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1736449901.0000000",    "title": "Job Start Time",    "value": "2025-01-09 19:11:41"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "15134a053635c594",    "src": "hda",    "uuid": "be285874-5ea8-45fe-a3c2-cfbedba6a8c1"   },   "hidden_output": {    "id": "cd31d7b8e62670c9",    "src": "hda",    "uuid": "2062b4bd-d51c-4c2e-a379-6dc6f890609d"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2025-01-09T19:11:56.488006",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 37.14539623260498, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.2810704708099365">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2810704708099365, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.2797670364379883">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2797670364379883, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="55.81484293937683">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="37.292160749435425">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="31.46156358718872">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="29.215704202651978">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="29.03136157989502">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="29.82270884513855">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="59.76408672332764">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="41.12866544723511">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="38.16262674331665">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>