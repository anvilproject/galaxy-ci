<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="83"
           errors="8"
           failures="7"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="40.4726824760437">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="34.82211232185364">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #11)" name="10" time="35.032869815826416">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="34.76910448074341">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="35.43896842002869">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="34.76982021331787">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="25.866050243377686">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "66a3afec01fb6c43",   "src": "hda"  },  "output_type": "v",  "sec_filter|conditional_soft_filter|selector": "enabled",  "sec_filter|conditional_soft_filter|soft_filter": "XX",  "sec_restrict|exclude": "INFO/DP=19" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/0/1/7/dataset_017e1251-21a1-42c7-8169-97f6dd2ca520.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026            bcftools filter  --soft-filter \u0027XX\u0027                   --exclude \u0027INFO/DP=19\u0027    --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  \u003e \u0027/galaxy/server/database/objects/e/9/d/dataset_e9dfbdad-c511-459d-bff2-e1b3f2515fa7.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-10-28T19:22:53.956118",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-x7lmq",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0300156ee15ca1d9",  "id": "ff762064d8c3361e",  "inputs": {   "input_file": {    "id": "66a3afec01fb6c43",    "src": "hda",    "uuid": "017e1251-21a1-42c7-8169-97f6dd2ca520"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "ac9a62e21861fac5",    "src": "hda",    "uuid": "e9dfbdad-c511-459d-bff2-e1b3f2515fa7"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"conditional_soft_filter\": {\"__current_case__\": 1, \"masks\": {\"__current_case__\": 0, \"masks_src\": \"__none__\"}, \"masks_overlap\": null, \"selector\": \"enabled\", \"soft_filter\": \"XX\"}, \"mode\": null, \"select_set_GTs\": null}",   "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.15.1+galaxy4",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-10-28T19:22:59.346963",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.15.1+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.15.1+galaxy4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 25.866050243377686, "tool_id": "bcftools_filter", "tool_version": "1.15.1+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="34.44324994087219">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="35.72455453872681">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="34.7414345741272">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #10)" name="9" time="35.08883714675903">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="44.09091901779175">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="11.378087759017944">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.378087759017944, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="47.73667812347412">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="12.719255208969116">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.719255208969116, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="46.87283730506897">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #7)" name="6" time="37.53861093521118">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="59.02757263183594">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="39.075650215148926">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.14974427223205566">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.14974427223205566, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="41.51890468597412">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="31.813676357269287">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="32.87865734100342">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="35.878702878952026">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="35.18515968322754">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="35.5342435836792">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="23.3467013835907">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute",  "fastq_filters_0|offset_type|left_column_offset": "1",  "fastq_filters_0|offset_type|right_column_offset": "1",  "fastq_filters_0|score": "92",  "fastq_filters_0|score_comparison": "\u003c=",  "fastq_filters_0|score_operation": "max",  "input_file": {   "id": "9222d7643129806f",   "src": "hda"  },  "max_num_deviants": "0",  "max_quality": "0",  "max_size": "0",  "min_quality": "0",  "min_size": "0",  "paired_end": false }, "job": {  "command_line": "gx-fastq-filter \u0027/galaxy/server/database/objects/4/b/d/dataset_4bdd0020-e296-47dd-a55c-60fcf694b681.dat\u0027 \u0027/galaxy/server/database/jobs_directory/000/41/configs/tmpzwmvoy12\u0027 \u0027/galaxy/server/database/objects/f/2/c/dataset_f2c3d644-2efd-4382-87e8-231652946a06.dat\u0027 \u0027/galaxy/server/database/objects/f/2/c/dataset_f2c3d644-2efd-4382-87e8-231652946a06_files\u0027 \u0027sanger\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-10-28T18:46:39.589224",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-cgqr4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0300156ee15ca1d9",  "id": "8ddc026d97bbe05f",  "inputs": {   "input_file": {    "id": "9222d7643129806f",    "src": "hda",    "uuid": "4bdd0020-e296-47dd-a55c-60fcf694b681"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "d37e9bb431be53a7",    "src": "hda",    "uuid": "f2c3d644-2efd-4382-87e8-231652946a06"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"1\", \"right_column_offset\": \"1\"}, \"score\": \"92.0\", \"score_comparison\": \"\u003c=\", \"score_operation\": \"max\"}]",   "max_num_deviants": "\"0\"",   "max_quality": "\"0.0\"",   "max_size": "\"0\"",   "min_quality": "\"0.0\"",   "min_size": "\"0\"",   "paired_end": "false"  },  "state": "error",  "stderr": "",  "stdout": "Kept 2 of 2 reads (100.00%).\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5",  "tool_stderr": "",  "tool_stdout": "Kept 2 of 2 reads (100.00%).\n",  "update_time": "2024-10-28T18:46:43.512384",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: ." ], "status": "failure", "test_index": 6, "time_seconds": 23.3467013835907, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
                ]]></error>
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="35.932470083236694">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="35.16869354248047">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="42.589256048202515">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="36.842947006225586">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="36.18755292892456">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #4)" name="3" time="34.19577240943909">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #5)" name="4" time="11.383054256439209">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.383054256439209, "tool_id": "filter_tabular", "tool_version": "3.3.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="70.3932158946991">
        
            
            <system-out><![CDATA[
            gnuplot 5.4 patchlevel 8
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #2)" name="1" time="36.37106394767761">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bam_fillmd1] different MD for read 'NC_000070.6:c41098183-41092724': '5c3a0g6c30c2g2t0c0c2c2c11c20c2a11c23g10g77' -> '5C3A0G6C30C2G2T0C0C2C2C11C20C2A11C23G10G4'[bam_fillmd1] different MD for read 'NC_000070.6:c41098183-41092724': '7c0a0g6c2t4c2a23t7c8g8t8c2c8c2c5a11c5c26c17c2c23g8c2c5t2t2a5t2g11t1c19c5^cccag2^ca7c6t5^g0c6c0c2^a4c4c1a0t0g0a4^c1g4c7c4a3t11g5c2g14c5t2g20g5c2c28a27t0g4g5105' -> '7C0A0G6C2T4C2A23T7C8G8T8C2C8C2C5A11C5C26C17C2C23G8C2C5T2T2A5T2G11T1C19C5^CCCAG2^CA7C6T5^G0C6C0C2^A4C4C1A0T0G0A4^C1G4C7C4A3T11G5C2G14C5T2G20G5C2C28A27T0G4G26'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #3)" name="2" time="11.067767143249512">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.067767143249512, "tool_id": "mummer_nucmer", "tool_version": "4.0.0rc1+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="65.64693593978882">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="39.29218578338623">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="76.20704889297485">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/e/6/d/dataset_e6d143de-4bd7-42c7-b016-a88b786a78b1.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/a/e/2/dataset_ae2c22a0-b202-4539-9300-93ebe4d9c4a6.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/2/5/b/dataset_25b5c4d0-a1cf-4a1c-a535-0ee66ff7d045.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-10-28T19:12:09.529332",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-gvxvf",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0300156ee15ca1d9",  "id": "5d200cc031574606",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "43.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "43 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1730142778.0000000",    "title": "Job End Time",    "value": "2024-10-28 19:12:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1730142735.0000000",    "title": "Job Start Time",    "value": "2024-10-28 19:12:15"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "130a7118d30c70d0",    "src": "hda",    "uuid": "25b5c4d0-a1cf-4a1c-a535-0ee66ff7d045"   },   "design_tsv": {    "id": "af9d7aac417ef6e3",    "src": "hda",    "uuid": "c4ae79c8-983c-49fb-a446-cab5d8d6ec8f"   },   "genes_tsv": {    "id": "2cdc1e2f9ad71587",    "src": "hda",    "uuid": "ae2c22a0-b202-4539-9300-93ebe4d9c4a6"   },   "matrix_mtx": {    "id": "26e950b32fe534a3",    "src": "hda",    "uuid": "e6d143de-4bd7-42c7-b016-a88b786a78b1"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-10-28 19:12:15--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  286K\n    50K .......... .......... .......... .......... ..........  285K\n   100K .......... .......... .......... .......... ..........  285K\n   150K .......... .......... .......... .......... ..........  571K\n   200K .......... .......... .......... .......... ..........  568K\n   250K .......... .......... .......... .......... ..........  569K\n   300K .......... .......... .......... .......... ..........  571K\n   350K .......... .......... .......... .......... ..........  570K\n   400K .......... .......... .......... .......... ..........  571K\n   450K .......... .......... .......... .......... .......... 1.21M\n   500K .......... .......... .......... .......... .......... 1.03M\n   550K .......... .......... .......... .......... ..........  577K\n   600K .......... .......... .......... .......... .......... 47.0M\n   650K .......... .......... .......... .......... ..........  576K\n   700K .......... .......... .......... .......... .......... 63.2M\n   750K .......... .......... .......... .......... ..........  572K\n   800K .......... .......... .......... .......... .......... 1.20M\n   850K .......... .......... .......... .......... .......... 1.05M\n   900K .......... .......... .......... .......... .......... 48.5M\n   950K .......... .......... .......... .......... ..........  578K\n  1000K .......... .......... .......... .......... .......... 56.7M\n  1050K .......... .......... .......... .......... .......... 1.20M\n  1100K .......... .......... .......... .......... .......... 1.05M\n  1150K .......... .......... .......... .......... .......... 70.9M\n  1200K .......... .......... .......... .......... ..........  579K\n  1250K .......... .......... .......... .......... .......... 64.0M\n  1300K .......... .......... .......... .......... .......... 93.9M\n  1350K .......... .......... .......... .......... ..........  578K\n  1400K .......... .......... .......... .......... .......... 54.8M\n  1450K .......... .......... .......... .......... .......... 76.2M\n  1500K .......... .......... .......... .......... .......... 1.21M\n  1550K .......... .......... .......... .......... .......... 1.05M\n  1600K .......... .......... .......... .......... ..........  128M\n  1650K .......... .......... .......... .......... .......... 1.19M\n  1700K .......... .......... .......... .......... .......... 1.06M\n  1750K .......... .......... .......... .......... .......... 85.8M\n  1800K .......... .......... .......... .......... .......... 1.21M\n  1850K .......... .......... .......... .......... .......... 1.06M\n  1900K .......... .......... .......... .......... .......... 67.4M\n  1950K .......... .......... .......... .......... ..........  130M\n  2000K .......... .......... .......... .......... .......... 1.20M\n  2050K .......... .......... .......... .......... .......... 1.06M\n  2100K .......... .......... .......... .......... .......... 83.8M\n  2150K .......... .......... .......... .......... ..........  113M\n  2200K .......... .......... .......... .......... .......... 1.21M\n  2250K .......... .......... .......... .......... .......... 1.06M\n  2300K .......... .......... .......... .......... .......... 84.3M\n  2350K .......... .......... .......... .......... ..........  104M\n  2400K .......... .......... .......... .......... ..........  118M\n  2450K .......... .......... .......... .......... .......... 1.21M\n  2500K .......... .......... .......... .......... .......... 1.06M\n  2550K .......... .......... .......... .......... ..........  115M\n  2600K .......... .......... .......... .......... ..........  120M\n  2650K .......... .......... .......... .......... ..........  135M\n  2700K .......... .......... .......... .......... .......... 1.21M\n  2750K .......... .......... .......... .......... .......... 1.06M\n  2800K .......... .......... .......... .......... ..........  131M\n  2850K .......... .......... .......... .......... ..........  130M\n  2900K .......... .......... .......... .......... ..........  146M\n  2950K .......... .......... .......... .......... .......... 1.22M\n  3000K .......... .......... .......... .......... ..........  119M\n  3050K .......... .......... .......... .......... .......... 1.05M\n  3100K .......... .......... .......... .......... ..........  136M\n  3150K .......... .......... .......... .......... .......... 81.4M\n  3200K .......... .......... .......... .......... ..........  136M\n  3250K .......... .......... .......... .......... .......... 1.23M\n  3300K .......... .......... .......... .......... .......... 1.06M\n  3350K .......... .......... .......... .......... ..........  114M\n  3400K .......... .......... .......... .......... ..........  135M\n  3450K .......... .......... .......... .......... .......... 69.0M\n  3500K .......... .......... .......... .......... ..........  148M\n  3550K .......... .......... .......... .......... .......... 1.23M\n  3600K .......... .......... .......... .......... .......... 1.06M\n  3650K .......... .......... .......... .......... .......... 88.2M\n  3700K .......... .......... .......... .......... ..........  132M\n  3750K .......... .......... .......... .......... ..........  136M\n  3800K .......... .......... .......... .......... ..........  126M\n  3850K .......... .......... .......... .......... .......... 1.24M\n  3900K .......... .......... .......... .......... .......... 59.6M\n  3950K .......... .......... .......... .......... .......... 1.06M\n  4000K .......... .......... .......... .......... ..........  110M\n  4050K .......... .......... .......... .......... ..........  128M\n  4100K .......... .......... .......... .......... ..........  146M\n  4150K .......... .......... .......... .......... ..........  148M\n  4200K .......... .......... .......... .......... .......... 1.24M\n  4250K .......... .......... .......... .......... .......... 62.0M\n  4300K .......... .......... .......... .......... .......... 1.06M\n  4350K .......... .......... .......... .......... ..........  123M\n  4400K .......... .......... .......... .......... ..........  135M\n  4450K .......... .......... .......... .......... ..........  135M\n  4500K .......... .......... .......... .......... ..........  152M\n  4550K .......... .......... .......... .......... .......... 1.23M\n  4600K .......... .......... .......... .......... ..........  125M\n  4650K .......... .......... .......... .......... .......... 1.06M\n  4700K .......... .......... .......... .......... ..........  129M\n  4750K .......... .......... .......... .......... ..........  129M\n  4800K .......... .......... .......... .......... ..........  136M\n  4850K .......... .......... .......... .......... ..........  142M\n  4900K .......... .......... .......... .......... .......... 1.24M\n  4950K .......... .......... .......... .......... ..........  108M\n  5000K .......... .......... .......... .......... ..........  122M\n  5050K .......... .......... .......... .......... .......... 1.06M\n  5100K .......... .......... .......... .......... ..........  132M\n  5150K .......... .......... .......... .......... .......... 83.1M\n  5200K .......... .......... .......... .......... ..........  122M\n  5250K .......... .......... .......... .......... ..........  390K\n  5300K .......... .......... .......... .......... ..........  122M\n  5350K .......... .......... .......... .......... ..........  138M\n  5400K .......... .......... .......... .......... ..........  130M\n  5450K .......... .......... .......... .......... ..........  150M\n  5500K .......... .......... .......... .......... ..........  143M\n  5550K .......... .......... .......... .......... ..........  132M\n  5600K .......... .......... .......... .......... ..........  139M\n  5650K .......... .......... .......... .......... .......... 1.11M\n  5700K .......... .......... .......... .......... ..........  130M\n  5750K .......... .......... .......... .......... ..........  150M\n  5800K .......... .......... .......... .......... .......... 1.19M\n  5850K .......... .......... .......... .......... .......... 57.8M\n  5900K .......... .......... .......... .......... .......... 1.06M\n  5950K .......... .......... .......... .......... .......... 82.7M\n  6000K .......... .......... .......... .......... ..........  133M\n  6050K .......... .......... .......... .......... .......... 1.22M\n  6100K .......... .......... .......... .......... .......... 1.06M\n  6150K .......... .......... .......... .......... .......... 66.6M\n  6200K .......... .......... .......... .......... ..........  112M\n  6250K .......... .......... .......... .......... ..........  146M\n  6300K .......... .......... .......... .......... .......... 1.22M\n  6350K .......... .......... .......... .......... .......... 1.06M\n  6400K .......... .......... .......... .......... .......... 66.1M\n  6450K .......... .......... .......... .......... ..........  140M\n  6500K .......... .......... .......... .......... ..........  145M\n  6550K .......... .......... .......... .......... .......... 1.22M\n  6600K .......... .......... .......... .......... .......... 1.05M\n  6650K .......... .......... .......... .......... ..........  119M\n  6700K .......... .......... .......... .......... ..........  140M\n  6750K .......... .......... .......... .......... ..........  135M\n  6800K .......... .......... .......... .......... .......... 1.22M\n  6850K .......... .......... .......... .......... .......... 1.05M\n  6900K .......... .......... .......... .......... ..........  145M\n  6950K .......... .......... .......... .......... ..........  147M\n  7000K .......... .......... .......... .......... ..........  108M\n  7050K .......... .......... .......... .......... .......... 1.22M\n  7100K .......... .......... .......... .......... .......... 1.05M\n  7150K .......... .......... .......... .......... ..........  121M\n  7200K .......... .......... .......... .......... ..........  132M\n  7250K .......... .......... .......... .......... ..........  147M\n  7300K .......... .......... .......... .......... .......... 1.23M\n  7350K .......... .......... .......... .......... .......... 1.05M\n  7400K .......... .......... .......... .......... .......... 90.3M\n  7450K .......... .......... .......... .......... ..........  139M\n  7500K .......... .......... .......... .......... ..........  128M\n  7550K .......... .......... .......... .......... .......... 1.23M\n  7600K .......... .......... .......... .......... .......... 22.8M\n  7650K .......... .......... .......... .......... .......... 1.08M\n  7700K .......... .......... .......... .......... ..........  140M\n  7750K .......... .......... .......... .......... ..........  138M\n  7800K .......... .......... .......... .......... ..........  135M\n  7850K .......... .......... .......... .......... .......... 1.23M\n  7900K .......... .......... .......... .......... .......... 1.04M\n  7950K .......... .......... .......... .......... ..........  146M\n  8000K .......... .......... .......... .......... ..........  131M\n  8050K .......... .......... .......... .......... ..........  137M\n  8100K .......... .......... .......... .......... .......... 1.24M\n  8150K .......... .......... .......... .......... .......... 1.04M\n  8200K .......... .......... .......... .......... .......... 53.8M\n  8250K .......... .......... .......... .......... ..........  147M\n  8300K .......... .......... .......... .......... ..........  127M\n  8350K .......... .......... .......... .......... .......... 1.25M\n  8400K .......... .......... .......... .......... .......... 26.6M\n  8450K .......... .......... .......... .......... .......... 1.06M\n  8500K .......... .......... .......... .......... ..........  132M\n  8550K .......... .......... .......... .......... ..........  149M\n  8600K .......... .......... .......... .......... ..........  133M\n  8650K .......... .......... .......... .......... .......... 1.25M\n  8700K .......... .......... .......... .......... .......... 1.02M\n  8750K .......... .......... .......... .......... ..........  115M\n  8800K .......... .......... .......... .......... ..........  284K\n  8850K .......... .......... .......... .......... .......... 1.16M\n  8900K .......... .......... .......... .......... ..........  147M\n  8950K .......... .......... .......... .......... ..........  139M\n  9000K .......... .......... .......... .......... ..........  132M\n  9050K .......... .......... .......... .......... ..........  574K\n  9100K .......... .......... .......... .......... ..........  117M\n  9150K .......... .......... .......... .......... ..........  133M\n  9200K .......... .......... .......... .......... ..........  138M\n  9250K .......... .......... .......... .......... ..........  148M\n  9300K .......... .......... .......... .......... ..........  146M\n  9350K .......... .......... .......... .......... ..........  154M\n  9400K .......... .......... .......... .......... .......... 1.11M\n  9450K .......... .......... .......... .......... .......... 1.23M\n  9500K .......... .......... .......... .......... .......... 1.01M\n  9550K .......... .......... .......... .......... .......... 1.24M\n  9600K .......... .......... .......... .......... .......... 1.01M\n  9650K .......... .......... .......... .......... ..........  143M\n  9700K .......... .......... .......... .......... ..........  390K\n  9750K .......... .......... .......... .......... .......... 1.04M\n  9800K .......... .......... .......... .......... .......... 92.1M\n  9850K .......... .......... .......... .......... .......... 1.22M\n  9900K .......... .......... .......... .......... .......... 1.03M\n  9950K .......... .......... .......... .......... ..........  571K\n 10000K .......... .......... .......... .......... .......... 1.19M\n 10050K .......... .......... .......... .......... .......... 1.05M\n 10100K .......... .......... .......... .......... .......... 1.18M\n 10150K .......... .......... .......... .......... .......... 1.04M\n 10200K .......... .......... .......... .......... .......... 1.19M\n 10250K .......... .......... .......... .......... .......... 1.04M\n 10300K .......... .......... .......... .......... ..........  573K\n 10350K .......... .......... .......... .......... .......... 1.21M\n 10400K .......... .......... .......... .......... .......... 1.03M\n 10450K .......... .......... .......... .......... .......... 1.20M\n 10500K .......... .......... .......... .......... .......... 1.04M\n 10550K .......... .......... .......... .......... .......... 1.18M\n 10600K .......... .......... .......... .......... .......... 1.05M\n 10650K .......... .......... .......... .......... .......... 1.19M\n 10700K .......... .......... .......... .......... .......... 1.05M\n 10750K .......... .......... .......... .......... ..........  574K\n 10800K .......... .......... .......... .......... .......... 65.2M\n 10850K .......... .......... .......... .......... ..........  574K\n 10900K .......... .......... .......... .......... ..........  115M\n 10950K .......... .......... .......... .......... ..........  574K\n 11000K .......... .......... .......... .......... .......... 86.0M\n 11050K .......... .......... .......... .......... ..........  574K\n 11100K .......... .......... .......... .......... .......... 1.18M\n 11150K .......... .......... .......... .......... .......... 1.06M\n 11200K .......... .......... .......... .......... .......... 1.17M\n 11250K .......... .......... .......... .......... .......... 1.05M\n 11300K .......... .......... .......... .......... .......... 1.19M\n 11350K .......... .......... .......... .......... .......... 1.05M\n 11400K .......... .......... .......... .......... .......... 1.19M\n 11450K .......... .......... .......... .......... .......... 1.05M\n 11500K .......... .......... .......... .......... .......... 1.18M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 35.4M\n 50150K .......... .......... .......... .......... .......... 84.4M\n 50200K .......... .......... .......... .......... .......... 1.48M\n 50250K .......... .......... .......... .......... ..........  970K\n 50300K .......... .......... .......... .......... ..........  115M\n 50350K .......... .......... .......... .......... .......... 47.0M\n 50400K .......... .......... .......... .......... .......... 58.9M\n 50450K .......... .......... .......... .......... .......... 1.48M\n 50500K .......... .......... .......... .......... ..........  975K\n 50550K .......... .......... .......... .......... .......... 60.2M\n 50600K .......... .......... .......... .......... .......... 70.9M\n 50650K .......... .......... .......... .......... .......... 58.6M\n 50700K .......... .......... .......... .......... .......... 1.48M\n 50750K .......... .......... .......... .......... ..........  968K\n 50800K .......... .......... .......... .......... .......... 67.8M\n 50850K .......... .......... .......... .......... .......... 37.6M\n 50900K .......... .......... .......... .......... ..........  141M\n 50950K .......... .......... .......... .......... .......... 1.47M\n 51000K .......... .......... .......... .......... ..........  980K\n 51050K .......... .......... .......... .......... .......... 81.0M\n 51100K .......... .......... .......... .......... .......... 43.7M\n 51150K .......... .......... .......... .......... .......... 92.3M\n 51200K .......... .......... .......... .......... .......... 1.46M\n 51250K .......... .......... .......... .......... ..........  982K\n 51300K .......... .......... .......... .......... .......... 74.5M\n 51350K .......... .......... .......... .......... .......... 15.7M\n 51400K .......... .......... .......... .......... ..........  135M\n 51450K .......... .......... .......... .......... .......... 1.59M\n 51500K .......... .......... .......... .......... ..........  969K\n 51550K .......... .......... .......... .......... ..........  100M\n 51600K .......... .......... .......... .......... .......... 14.4M\n 51650K .......... .......... .......... .......... ..........  136M\n 51700K .......... .......... .......... .......... .......... 1.59M\n 51750K .......... .......... .......... .......... ..........  965K\n 51800K .......... .......... .......... .......... ..........  113M\n 51850K .......... .......... .......... .......... .......... 76.2M\n 51900K .......... .......... .......... .......... .......... 17.3M\n 51950K .......... .......... .......... .......... .......... 1.60M\n 52000K .......... .......... .......... .......... ..........  964K\n 52050K .......... .......... .......... .......... .......... 36.2M\n 52100K .......... .......... .......... .......... ..........  150M\n 52150K .......... .......... .......... .......... .......... 19.4M\n 52200K .......... .......... .......... .......... .......... 1.60M\n 52250K .......... .......... .......... .......... .......... 39.7M\n 52300K .......... .......... .......... .......... ..........  964K\n 52350K .......... .......... .......... .......... ..........  146M\n 52400K .......... .......... .......... .......... .......... 18.8M\n 52450K .......... .......... .......... .......... .......... 66.8M\n 52500K .......... .......... .......... .......... .......... 1.61M\n 52550K .......... .......... .......... .......... ..........  957K\n 52600K .......... .......... .......... .......... .......... 86.5M\n 52650K .......... .......... .......... .......... ..........  111M\n 52700K .......... .......... .......... .......... .......... 20.3M\n 52750K .......... .......... .......... .......... .......... 1.61M\n 52800K .......... .......... .......... .......... .......... 32.6M\n 52850K .......... .......... .......... .......... ..........  964K\n 52900K .......... .......... .......... .......... ..........  110M\n 52950K .......... .......... .......... .......... .......... 23.5M\n 53000K .......... .......... .......... .......... .......... 55.9M\n 53050K .......... .......... .......... .......... .......... 1.59M\n 53100K .......... .......... .......... .......... ..........  975K\n 53150K .......... .......... .......... .......... .......... 29.4M\n 53200K .......... .......... .......... .......... ..........  101M\n 53250K .......... .......... .......... .......... .......... 22.8M\n 53300K .......... .......... .......... .......... .......... 78.9M\n 53350K .......... .......... .......... .......... .......... 1.59M\n 53400K .......... .......... .......... .......... ..........  968K\n 53450K .......... .......... .......... .......... .......... 47.9M\n 53500K .......... .......... .......... .......... ..........  140M\n 53550K .......... .......... .......... .......... .......... 19.6M\n 53600K .......... .......... .......... .......... .......... 1.62M\n 53650K .......... .......... .......... .......... .......... 38.6M\n 53700K .......... .......... .......... .......... ..........  970K\n 53750K .......... .......... .......... .......... .......... 66.2M\n 53800K .......... .......... .......... .......... ..........  102M\n 53850K .......... .......... .......... .......... .......... 20.5M\n 53900K .......... .......... .......... .......... .......... 1.61M\n 53950K .......... .......... .......... .......... .......... 40.5M\n 54000K .......... .......... .......... .......... ..........  961K\n 54050K .......... .......... .......... .......... ..........  138M\n 54100K .......... .......... .......... .......... ..........  143M\n 54150K .......... .......... .......... .......... .......... 21.8M\n 54200K .......... .......... .......... .......... .......... 1.60M\n 54250K .......... .......... .......... .......... .......... 40.2M\n 54300K .......... .......... .......... .......... ..........  981K\n 54350K .......... .......... .......... .......... .......... 41.6M\n 54400K .......... .......... .......... .......... ..........  128M\n 54450K .......... .......... .......... .......... .......... 22.5M\n 54500K .......... .......... .......... .......... .......... 1.59M\n 54550K .......... .......... .......... .......... .......... 45.3M\n 54600K .......... .......... .......... .......... ..........  990K\n 54650K .......... .......... .......... .......... .......... 31.1M\n 54700K .......... .......... .......... .......... ..........  103M\n 54750K .......... .......... .......... .......... .......... 22.4M\n 54800K .......... .......... .......... .......... .......... 60.9M\n 54850K .......... .......... .......... .......... .......... 1.56M\n 54900K .......... .......... .......... .......... ..........  997K\n 54950K .......... .......... .......... .......... .......... 29.4M\n 55000K .......... .......... .......... .......... .......... 64.2M\n 55050K .......... .......... .......... .......... .......... 77.1M\n 55100K .......... .......... .......... .......... .......... 31.6M\n 55150K .......... .......... .......... .......... .......... 1.56M\n 55200K .......... .......... .......... .......... .......... 81.1M\n 55250K .......... .......... .......... .......... ..........  967K\n 55300K .......... .......... .......... .......... .......... 69.7M\n 55350K .......... .......... .......... .......... ..........  144M\n 55400K .......... .......... .......... .......... .......... 26.8M\n 55450K .......... .......... .......... .......... .......... 25.3M\n 55500K .......... .......... .......... .......... .......... 1.65M\n 55550K .......... .......... .......... .......... ..........  987K\n 55600K .......... .......... .......... .......... .......... 31.3M\n 55650K .......... .......... .......... .......... .......... 55.8M\n 55700K .......... .......... .......... .......... .......... 26.3M\n 55750K .......... .......... .......... .......... ..........  134M\n 55800K .......... .......... .......... .......... .......... 1.57M\n 55850K .......... .......... .......... .......... .......... 40.0M\n 55900K .......... .......... .......... .......... .......... 1006K\n 55950K .......... .......... .......... .......... .......... 21.1M\n 56000K .......... .......... .......... .......... ..........  136M\n 56050K .......... .......... .......... .......... .......... 24.9M\n 56100K .......... .......... .......... .......... .......... 28.5M\n 56150K .......... .......... .......... .......... .......... 1.66M\n 56200K .......... .......... .......... .......... .......... 35.5M\n 56250K .......... .......... .......... .......... ..........  999K\n 56300K .......... .......... .......... .......... .......... 35.6M\n 56350K .......... .......... .......... .......... .......... 75.0M\n 56400K .......... .......... .......... .......... .......... 24.1M\n 56450K .......... .......... .......... .......... .......... 28.4M\n 56500K .......... .......... .......... .......... .......... 1.64M\n 56550K .......... .......... .......... .......... .......... 51.4M\n 56600K .......... .......... .......... .......... ..........  991K\n 56650K .......... .......... .......... .......... .......... 51.6M\n 56700K .......... .......... .......... .......... .......... 59.0M\n 56750K .......... .......... .......... .......... .......... 26.3M\n 56800K .......... .......... .......... .......... .......... 26.8M\n 56850K .......... .......... .......... .......... .......... 1.64M\n 56900K .......... .......... .......... .......... .......... 51.2M\n 56950K .......... .......... .......... .......... ..........  992K\n 57000K .......... .......... .......... .......... .......... 48.8M\n 57050K .......... .......... .......... .......... .......... 46.9M\n 57100K .......... .......... .......... .......... .......... 30.3M\n 57150K .......... .......... .......... .......... .......... 27.5M\n 57200K .......... .......... .......... .......... .......... 1.62M\n 57250K .......... .......... .......... .......... .......... 50.1M\n 57300K .......... .......... .......... .......... ..........  998K\n 57350K .......... .......... .......... .......... .......... 57.4M\n 57400K .......... .......... .......... .......... .......... 38.6M\n 57450K .......... .......... .......... .......... ..........  130M\n 57500K .......... .......... .......... .......... .......... 27.7M\n 57550K .......... .......... .......... .......... .......... 1.58M\n 57600K .......... .......... .......... .......... .......... 46.2M\n 57650K .......... .......... .......... .......... .......... 1010K\n 57700K .......... .......... .......... .......... .......... 29.9M\n 57750K .......... .......... .......... .......... .......... 38.2M\n 57800K .......... .......... .......... .......... ..........  126M\n 57850K .......... .......... .......... .......... .......... 28.9M\n 57900K .......... .......... .......... .......... .......... 27.8M\n 57950K .......... .......... .......... .......... .......... 1.63M\n 58000K .......... .......... .......... .......... .......... 98.9M\n 58050K .......... .......... .......... .......... ..........  991K\n 58100K .......... .......... .......... .......... .......... 45.4M\n 58150K .......... .......... .......... .......... .......... 45.4M\n 58200K .......... .......... .......... .......... .......... 45.3M\n 58250K .......... .......... .......... .......... .......... 54.1M\n 58300K .......... .......... .......... .......... .......... 1.59M\n 58350K .......... .......... .......... .......... .......... 43.4M\n 58400K .......... .......... .......... .......... .......... 1003K\n 58450K .......... .......... .......... .......... .......... 32.6M\n 58500K .......... .......... .......... .......... .......... 43.8M\n 58550K .......... .......... .......... .......... .......... 95.9M\n 58600K .......... .......... .......... .......... .......... 38.6M\n 58650K .......... .......... .......... .......... .......... 21.4M\n 58700K .......... .......... .......... .......... .......... 1.68M\n 58750K .......... .......... .......... .......... .......... 38.8M\n 58800K .......... .......... .......... .......... ..........  998K\n 58850K .......... .......... .......... .......... .......... 41.7M\n 58900K .......... .......... .......... .......... .......... 42.2M\n 58950K .......... .......... .......... .......... ..........  144M\n 59000K .......... .......... .......... .......... .......... 30.7M\n 59050K .......... .......... .......... .......... .......... 22.4M\n 59100K .......... .......... .......... .......... .......... 1.67M\n 59150K .......... .......... .......... .......... .......... 36.7M\n 59200K .......... .......... .......... .......... .......... 1009K\n 59250K .......... .......... .......... .......... .......... 38.0M\n 59300K .......... .......... .......... .......... .......... 43.8M\n 59350K .......... .......... .......... .......... ..........  114M\n 59400K .......... .......... .......... .......... .......... 28.2M\n 59450K .......... .......... .......... .......... .......... 23.3M\n 59500K .......... .......... .......... .......... .......... 1.66M\n 59550K .......... .......... .......... .......... .......... 35.5M\n 59600K .......... .......... .......... .......... .......... 1021K\n 59650K .......... .......... .......... .......... .......... 39.5M\n 59700K .......... .......... .......... .......... .......... 42.3M\n 59750K .......... .......... .......... .......... .......... 61.9M\n 59800K .......... .......... .......... .......... .......... 30.0M\n 59850K .......... .......... .......... .......... .......... 31.1M\n 59900K .......... .......... .......... .......... .......... 1.63M\n 59950K .......... .......... .......... .......... .......... 50.0M\n 60000K .......... .......... .......... .......... .......... 72.5M\n 60050K .......... .......... .......... .......... .......... 1007K\n 60100K .......... .......... .......... .......... .......... 76.5M\n 60150K .......... .......... .......... .......... .......... 48.5M\n 60200K .......... .......... .......... .......... .......... 57.1M\n 60250K .......... .......... .......... .......... .......... 26.7M\n 60300K .......... .......... .......... .......... .......... 1.59M\n 60350K .......... .......... .......... .......... .......... 76.4M\n 60400K .......... .......... .......... .......... .......... 45.6M\n 60450K .......... .......... .......... .......... .......... 1013K\n 60500K .......... .......... .......... .......... .......... 61.1M\n 60550K .......... .......... .......... .......... .......... 58.0M\n 60600K .......... .......... .......... .......... .......... 59.2M\n 60650K .......... .........                                    122M=35s\n\n2024-10-28 19:12:51 (1.71 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-10-28 19:12:56--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  192K 4s\n    50K .......... .......... .......... .......... .......... 12%  289K 3s\n   100K .......... .......... .......... .......... .......... 18%  393K 3s\n   150K .......... .......... .......... .......... .......... 24%  577K 2s\n   200K .......... .......... .......... .......... .......... 30%  577K 2s\n   250K .......... .......... .......... .......... .......... 36% 1.05M 1s\n   300K .......... .......... .......... .......... .......... 42%  574K 1s\n   350K .......... .......... .......... .......... .......... 48%  578K 1s\n   400K .......... .......... .......... .......... .......... 54%  578K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.22M 1s\n   500K .......... .......... .......... .......... .......... 66% 1.04M 1s\n   550K .......... .......... .......... .......... .......... 72% 1.22M 0s\n   600K .......... .......... .......... .......... .......... 78% 1.04M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.22M 0s\n   700K .......... .......... .......... .......... .......... 90% 1.05M 0s\n   750K .......... .......... .......... .......... .......... 96% 1.22M 0s\n   800K .......... .......... .......                         100%  599K=1.4s\n\n2024-10-28 19:12:58 (597 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-10-28 19:12:15--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  286K\n    50K .......... .......... .......... .......... ..........  285K\n   100K .......... .......... .......... .......... ..........  285K\n   150K .......... .......... .......... .......... ..........  571K\n   200K .......... .......... .......... .......... ..........  568K\n   250K .......... .......... .......... .......... ..........  569K\n   300K .......... .......... .......... .......... ..........  571K\n   350K .......... .......... .......... .......... ..........  570K\n   400K .......... .......... .......... .......... ..........  571K\n   450K .......... .......... .......... .......... .......... 1.21M\n   500K .......... .......... .......... .......... .......... 1.03M\n   550K .......... .......... .......... .......... ..........  577K\n   600K .......... .......... .......... .......... .......... 47.0M\n   650K .......... .......... .......... .......... ..........  576K\n   700K .......... .......... .......... .......... .......... 63.2M\n   750K .......... .......... .......... .......... ..........  572K\n   800K .......... .......... .......... .......... .......... 1.20M\n   850K .......... .......... .......... .......... .......... 1.05M\n   900K .......... .......... .......... .......... .......... 48.5M\n   950K .......... .......... .......... .......... ..........  578K\n  1000K .......... .......... .......... .......... .......... 56.7M\n  1050K .......... .......... .......... .......... .......... 1.20M\n  1100K .......... .......... .......... .......... .......... 1.05M\n  1150K .......... .......... .......... .......... .......... 70.9M\n  1200K .......... .......... .......... .......... ..........  579K\n  1250K .......... .......... .......... .......... .......... 64.0M\n  1300K .......... .......... .......... .......... .......... 93.9M\n  1350K .......... .......... .......... .......... ..........  578K\n  1400K .......... .......... .......... .......... .......... 54.8M\n  1450K .......... .......... .......... .......... .......... 76.2M\n  1500K .......... .......... .......... .......... .......... 1.21M\n  1550K .......... .......... .......... .......... .......... 1.05M\n  1600K .......... .......... .......... .......... ..........  128M\n  1650K .......... .......... .......... .......... .......... 1.19M\n  1700K .......... .......... .......... .......... .......... 1.06M\n  1750K .......... .......... .......... .......... .......... 85.8M\n  1800K .......... .......... .......... .......... .......... 1.21M\n  1850K .......... .......... .......... .......... .......... 1.06M\n  1900K .......... .......... .......... .......... .......... 67.4M\n  1950K .......... .......... .......... .......... ..........  130M\n  2000K .......... .......... .......... .......... .......... 1.20M\n  2050K .......... .......... .......... .......... .......... 1.06M\n  2100K .......... .......... .......... .......... .......... 83.8M\n  2150K .......... .......... .......... .......... ..........  113M\n  2200K .......... .......... .......... .......... .......... 1.21M\n  2250K .......... .......... .......... .......... .......... 1.06M\n  2300K .......... .......... .......... .......... .......... 84.3M\n  2350K .......... .......... .......... .......... ..........  104M\n  2400K .......... .......... .......... .......... ..........  118M\n  2450K .......... .......... .......... .......... .......... 1.21M\n  2500K .......... .......... .......... .......... .......... 1.06M\n  2550K .......... .......... .......... .......... ..........  115M\n  2600K .......... .......... .......... .......... ..........  120M\n  2650K .......... .......... .......... .......... ..........  135M\n  2700K .......... .......... .......... .......... .......... 1.21M\n  2750K .......... .......... .......... .......... .......... 1.06M\n  2800K .......... .......... .......... .......... ..........  131M\n  2850K .......... .......... .......... .......... ..........  130M\n  2900K .......... .......... .......... .......... ..........  146M\n  2950K .......... .......... .......... .......... .......... 1.22M\n  3000K .......... .......... .......... .......... ..........  119M\n  3050K .......... .......... .......... .......... .......... 1.05M\n  3100K .......... .......... .......... .......... ..........  136M\n  3150K .......... .......... .......... .......... .......... 81.4M\n  3200K .......... .......... .......... .......... ..........  136M\n  3250K .......... .......... .......... .......... .......... 1.23M\n  3300K .......... .......... .......... .......... .......... 1.06M\n  3350K .......... .......... .......... .......... ..........  114M\n  3400K .......... .......... .......... .......... ..........  135M\n  3450K .......... .......... .......... .......... .......... 69.0M\n  3500K .......... .......... .......... .......... ..........  148M\n  3550K .......... .......... .......... .......... .......... 1.23M\n  3600K .......... .......... .......... .......... .......... 1.06M\n  3650K .......... .......... .......... .......... .......... 88.2M\n  3700K .......... .......... .......... .......... ..........  132M\n  3750K .......... .......... .......... .......... ..........  136M\n  3800K .......... .......... .......... .......... ..........  126M\n  3850K .......... .......... .......... .......... .......... 1.24M\n  3900K .......... .......... .......... .......... .......... 59.6M\n  3950K .......... .......... .......... .......... .......... 1.06M\n  4000K .......... .......... .......... .......... ..........  110M\n  4050K .......... .......... .......... .......... ..........  128M\n  4100K .......... .......... .......... .......... ..........  146M\n  4150K .......... .......... .......... .......... ..........  148M\n  4200K .......... .......... .......... .......... .......... 1.24M\n  4250K .......... .......... .......... .......... .......... 62.0M\n  4300K .......... .......... .......... .......... .......... 1.06M\n  4350K .......... .......... .......... .......... ..........  123M\n  4400K .......... .......... .......... .......... ..........  135M\n  4450K .......... .......... .......... .......... ..........  135M\n  4500K .......... .......... .......... .......... ..........  152M\n  4550K .......... .......... .......... .......... .......... 1.23M\n  4600K .......... .......... .......... .......... ..........  125M\n  4650K .......... .......... .......... .......... .......... 1.06M\n  4700K .......... .......... .......... .......... ..........  129M\n  4750K .......... .......... .......... .......... ..........  129M\n  4800K .......... .......... .......... .......... ..........  136M\n  4850K .......... .......... .......... .......... ..........  142M\n  4900K .......... .......... .......... .......... .......... 1.24M\n  4950K .......... .......... .......... .......... ..........  108M\n  5000K .......... .......... .......... .......... ..........  122M\n  5050K .......... .......... .......... .......... .......... 1.06M\n  5100K .......... .......... .......... .......... ..........  132M\n  5150K .......... .......... .......... .......... .......... 83.1M\n  5200K .......... .......... .......... .......... ..........  122M\n  5250K .......... .......... .......... .......... ..........  390K\n  5300K .......... .......... .......... .......... ..........  122M\n  5350K .......... .......... .......... .......... ..........  138M\n  5400K .......... .......... .......... .......... ..........  130M\n  5450K .......... .......... .......... .......... ..........  150M\n  5500K .......... .......... .......... .......... ..........  143M\n  5550K .......... .......... .......... .......... ..........  132M\n  5600K .......... .......... .......... .......... ..........  139M\n  5650K .......... .......... .......... .......... .......... 1.11M\n  5700K .......... .......... .......... .......... ..........  130M\n  5750K .......... .......... .......... .......... ..........  150M\n  5800K .......... .......... .......... .......... .......... 1.19M\n  5850K .......... .......... .......... .......... .......... 57.8M\n  5900K .......... .......... .......... .......... .......... 1.06M\n  5950K .......... .......... .......... .......... .......... 82.7M\n  6000K .......... .......... .......... .......... ..........  133M\n  6050K .......... .......... .......... .......... .......... 1.22M\n  6100K .......... .......... .......... .......... .......... 1.06M\n  6150K .......... .......... .......... .......... .......... 66.6M\n  6200K .......... .......... .......... .......... ..........  112M\n  6250K .......... .......... .......... .......... ..........  146M\n  6300K .......... .......... .......... .......... .......... 1.22M\n  6350K .......... .......... .......... .......... .......... 1.06M\n  6400K .......... .......... .......... .......... .......... 66.1M\n  6450K .......... .......... .......... .......... ..........  140M\n  6500K .......... .......... .......... .......... ..........  145M\n  6550K .......... .......... .......... .......... .......... 1.22M\n  6600K .......... .......... .......... .......... .......... 1.05M\n  6650K .......... .......... .......... .......... ..........  119M\n  6700K .......... .......... .......... .......... ..........  140M\n  6750K .......... .......... .......... .......... ..........  135M\n  6800K .......... .......... .......... .......... .......... 1.22M\n  6850K .......... .......... .......... .......... .......... 1.05M\n  6900K .......... .......... .......... .......... ..........  145M\n  6950K .......... .......... .......... .......... ..........  147M\n  7000K .......... .......... .......... .......... ..........  108M\n  7050K .......... .......... .......... .......... .......... 1.22M\n  7100K .......... .......... .......... .......... .......... 1.05M\n  7150K .......... .......... .......... .......... ..........  121M\n  7200K .......... .......... .......... .......... ..........  132M\n  7250K .......... .......... .......... .......... ..........  147M\n  7300K .......... .......... .......... .......... .......... 1.23M\n  7350K .......... .......... .......... .......... .......... 1.05M\n  7400K .......... .......... .......... .......... .......... 90.3M\n  7450K .......... .......... .......... .......... ..........  139M\n  7500K .......... .......... .......... .......... ..........  128M\n  7550K .......... .......... .......... .......... .......... 1.23M\n  7600K .......... .......... .......... .......... .......... 22.8M\n  7650K .......... .......... .......... .......... .......... 1.08M\n  7700K .......... .......... .......... .......... ..........  140M\n  7750K .......... .......... .......... .......... ..........  138M\n  7800K .......... .......... .......... .......... ..........  135M\n  7850K .......... .......... .......... .......... .......... 1.23M\n  7900K .......... .......... .......... .......... .......... 1.04M\n  7950K .......... .......... .......... .......... ..........  146M\n  8000K .......... .......... .......... .......... ..........  131M\n  8050K .......... .......... .......... .......... ..........  137M\n  8100K .......... .......... .......... .......... .......... 1.24M\n  8150K .......... .......... .......... .......... .......... 1.04M\n  8200K .......... .......... .......... .......... .......... 53.8M\n  8250K .......... .......... .......... .......... ..........  147M\n  8300K .......... .......... .......... .......... ..........  127M\n  8350K .......... .......... .......... .......... .......... 1.25M\n  8400K .......... .......... .......... .......... .......... 26.6M\n  8450K .......... .......... .......... .......... .......... 1.06M\n  8500K .......... .......... .......... .......... ..........  132M\n  8550K .......... .......... .......... .......... ..........  149M\n  8600K .......... .......... .......... .......... ..........  133M\n  8650K .......... .......... .......... .......... .......... 1.25M\n  8700K .......... .......... .......... .......... .......... 1.02M\n  8750K .......... .......... .......... .......... ..........  115M\n  8800K .......... .......... .......... .......... ..........  284K\n  8850K .......... .......... .......... .......... .......... 1.16M\n  8900K .......... .......... .......... .......... ..........  147M\n  8950K .......... .......... .......... .......... ..........  139M\n  9000K .......... .......... .......... .......... ..........  132M\n  9050K .......... .......... .......... .......... ..........  574K\n  9100K .......... .......... .......... .......... ..........  117M\n  9150K .......... .......... .......... .......... ..........  133M\n  9200K .......... .......... .......... .......... ..........  138M\n  9250K .......... .......... .......... .......... ..........  148M\n  9300K .......... .......... .......... .......... ..........  146M\n  9350K .......... .......... .......... .......... ..........  154M\n  9400K .......... .......... .......... .......... .......... 1.11M\n  9450K .......... .......... .......... .......... .......... 1.23M\n  9500K .......... .......... .......... .......... .......... 1.01M\n  9550K .......... .......... .......... .......... .......... 1.24M\n  9600K .......... .......... .......... .......... .......... 1.01M\n  9650K .......... .......... .......... .......... ..........  143M\n  9700K .......... .......... .......... .......... ..........  390K\n  9750K .......... .......... .......... .......... .......... 1.04M\n  9800K .......... .......... .......... .......... .......... 92.1M\n  9850K .......... .......... .......... .......... .......... 1.22M\n  9900K .......... .......... .......... .......... .......... 1.03M\n  9950K .......... .......... .......... .......... ..........  571K\n 10000K .......... .......... .......... .......... .......... 1.19M\n 10050K .......... .......... .......... .......... .......... 1.05M\n 10100K .......... .......... .......... .......... .......... 1.18M\n 10150K .......... .......... .......... .......... .......... 1.04M\n 10200K .......... .......... .......... .......... .......... 1.19M\n 10250K .......... .......... .......... .......... .......... 1.04M\n 10300K .......... .......... .......... .......... ..........  573K\n 10350K .......... .......... .......... .......... .......... 1.21M\n 10400K .......... .......... .......... .......... .......... 1.03M\n 10450K .......... .......... .......... .......... .......... 1.20M\n 10500K .......... .......... .......... .......... .......... 1.04M\n 10550K .......... .......... .......... .......... .......... 1.18M\n 10600K .......... .......... .......... .......... .......... 1.05M\n 10650K .......... .......... .......... .......... .......... 1.19M\n 10700K .......... .......... .......... .......... .......... 1.05M\n 10750K .......... .......... .......... .......... ..........  574K\n 10800K .......... .......... .......... .......... .......... 65.2M\n 10850K .......... .......... .......... .......... ..........  574K\n 10900K .......... .......... .......... .......... ..........  115M\n 10950K .......... .......... .......... .......... ..........  574K\n 11000K .......... .......... .......... .......... .......... 86.0M\n 11050K .......... .......... .......... .......... ..........  574K\n 11100K .......... .......... .......... .......... .......... 1.18M\n 11150K .......... .......... .......... .......... .......... 1.06M\n 11200K .......... .......... .......... .......... .......... 1.17M\n 11250K .......... .......... .......... .......... .......... 1.05M\n 11300K .......... .......... .......... .......... .......... 1.19M\n 11350K .......... .......... .......... .......... .......... 1.05M\n 11400K .......... .......... .......... .......... .......... 1.19M\n 11450K .......... .......... .......... .......... .......... 1.05M\n 11500K .......... .......... .......... .......... .......... 1.18M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 35.4M\n 50150K .......... .......... .......... .......... .......... 84.4M\n 50200K .......... .......... .......... .......... .......... 1.48M\n 50250K .......... .......... .......... .......... ..........  970K\n 50300K .......... .......... .......... .......... ..........  115M\n 50350K .......... .......... .......... .......... .......... 47.0M\n 50400K .......... .......... .......... .......... .......... 58.9M\n 50450K .......... .......... .......... .......... .......... 1.48M\n 50500K .......... .......... .......... .......... ..........  975K\n 50550K .......... .......... .......... .......... .......... 60.2M\n 50600K .......... .......... .......... .......... .......... 70.9M\n 50650K .......... .......... .......... .......... .......... 58.6M\n 50700K .......... .......... .......... .......... .......... 1.48M\n 50750K .......... .......... .......... .......... ..........  968K\n 50800K .......... .......... .......... .......... .......... 67.8M\n 50850K .......... .......... .......... .......... .......... 37.6M\n 50900K .......... .......... .......... .......... ..........  141M\n 50950K .......... .......... .......... .......... .......... 1.47M\n 51000K .......... .......... .......... .......... ..........  980K\n 51050K .......... .......... .......... .......... .......... 81.0M\n 51100K .......... .......... .......... .......... .......... 43.7M\n 51150K .......... .......... .......... .......... .......... 92.3M\n 51200K .......... .......... .......... .......... .......... 1.46M\n 51250K .......... .......... .......... .......... ..........  982K\n 51300K .......... .......... .......... .......... .......... 74.5M\n 51350K .......... .......... .......... .......... .......... 15.7M\n 51400K .......... .......... .......... .......... ..........  135M\n 51450K .......... .......... .......... .......... .......... 1.59M\n 51500K .......... .......... .......... .......... ..........  969K\n 51550K .......... .......... .......... .......... ..........  100M\n 51600K .......... .......... .......... .......... .......... 14.4M\n 51650K .......... .......... .......... .......... ..........  136M\n 51700K .......... .......... .......... .......... .......... 1.59M\n 51750K .......... .......... .......... .......... ..........  965K\n 51800K .......... .......... .......... .......... ..........  113M\n 51850K .......... .......... .......... .......... .......... 76.2M\n 51900K .......... .......... .......... .......... .......... 17.3M\n 51950K .......... .......... .......... .......... .......... 1.60M\n 52000K .......... .......... .......... .......... ..........  964K\n 52050K .......... .......... .......... .......... .......... 36.2M\n 52100K .......... .......... .......... .......... ..........  150M\n 52150K .......... .......... .......... .......... .......... 19.4M\n 52200K .......... .......... .......... .......... .......... 1.60M\n 52250K .......... .......... .......... .......... .......... 39.7M\n 52300K .......... .......... .......... .......... ..........  964K\n 52350K .......... .......... .......... .......... ..........  146M\n 52400K .......... .......... .......... .......... .......... 18.8M\n 52450K .......... .......... .......... .......... .......... 66.8M\n 52500K .......... .......... .......... .......... .......... 1.61M\n 52550K .......... .......... .......... .......... ..........  957K\n 52600K .......... .......... .......... .......... .......... 86.5M\n 52650K .......... .......... .......... .......... ..........  111M\n 52700K .......... .......... .......... .......... .......... 20.3M\n 52750K .......... .......... .......... .......... .......... 1.61M\n 52800K .......... .......... .......... .......... .......... 32.6M\n 52850K .......... .......... .......... .......... ..........  964K\n 52900K .......... .......... .......... .......... ..........  110M\n 52950K .......... .......... .......... .......... .......... 23.5M\n 53000K .......... .......... .......... .......... .......... 55.9M\n 53050K .......... .......... .......... .......... .......... 1.59M\n 53100K .......... .......... .......... .......... ..........  975K\n 53150K .......... .......... .......... .......... .......... 29.4M\n 53200K .......... .......... .......... .......... ..........  101M\n 53250K .......... .......... .......... .......... .......... 22.8M\n 53300K .......... .......... .......... .......... .......... 78.9M\n 53350K .......... .......... .......... .......... .......... 1.59M\n 53400K .......... .......... .......... .......... ..........  968K\n 53450K .......... .......... .......... .......... .......... 47.9M\n 53500K .......... .......... .......... .......... ..........  140M\n 53550K .......... .......... .......... .......... .......... 19.6M\n 53600K .......... .......... .......... .......... .......... 1.62M\n 53650K .......... .......... .......... .......... .......... 38.6M\n 53700K .......... .......... .......... .......... ..........  970K\n 53750K .......... .......... .......... .......... .......... 66.2M\n 53800K .......... .......... .......... .......... ..........  102M\n 53850K .......... .......... .......... .......... .......... 20.5M\n 53900K .......... .......... .......... .......... .......... 1.61M\n 53950K .......... .......... .......... .......... .......... 40.5M\n 54000K .......... .......... .......... .......... ..........  961K\n 54050K .......... .......... .......... .......... ..........  138M\n 54100K .......... .......... .......... .......... ..........  143M\n 54150K .......... .......... .......... .......... .......... 21.8M\n 54200K .......... .......... .......... .......... .......... 1.60M\n 54250K .......... .......... .......... .......... .......... 40.2M\n 54300K .......... .......... .......... .......... ..........  981K\n 54350K .......... .......... .......... .......... .......... 41.6M\n 54400K .......... .......... .......... .......... ..........  128M\n 54450K .......... .......... .......... .......... .......... 22.5M\n 54500K .......... .......... .......... .......... .......... 1.59M\n 54550K .......... .......... .......... .......... .......... 45.3M\n 54600K .......... .......... .......... .......... ..........  990K\n 54650K .......... .......... .......... .......... .......... 31.1M\n 54700K .......... .......... .......... .......... ..........  103M\n 54750K .......... .......... .......... .......... .......... 22.4M\n 54800K .......... .......... .......... .......... .......... 60.9M\n 54850K .......... .......... .......... .......... .......... 1.56M\n 54900K .......... .......... .......... .......... ..........  997K\n 54950K .......... .......... .......... .......... .......... 29.4M\n 55000K .......... .......... .......... .......... .......... 64.2M\n 55050K .......... .......... .......... .......... .......... 77.1M\n 55100K .......... .......... .......... .......... .......... 31.6M\n 55150K .......... .......... .......... .......... .......... 1.56M\n 55200K .......... .......... .......... .......... .......... 81.1M\n 55250K .......... .......... .......... .......... ..........  967K\n 55300K .......... .......... .......... .......... .......... 69.7M\n 55350K .......... .......... .......... .......... ..........  144M\n 55400K .......... .......... .......... .......... .......... 26.8M\n 55450K .......... .......... .......... .......... .......... 25.3M\n 55500K .......... .......... .......... .......... .......... 1.65M\n 55550K .......... .......... .......... .......... ..........  987K\n 55600K .......... .......... .......... .......... .......... 31.3M\n 55650K .......... .......... .......... .......... .......... 55.8M\n 55700K .......... .......... .......... .......... .......... 26.3M\n 55750K .......... .......... .......... .......... ..........  134M\n 55800K .......... .......... .......... .......... .......... 1.57M\n 55850K .......... .......... .......... .......... .......... 40.0M\n 55900K .......... .......... .......... .......... .......... 1006K\n 55950K .......... .......... .......... .......... .......... 21.1M\n 56000K .......... .......... .......... .......... ..........  136M\n 56050K .......... .......... .......... .......... .......... 24.9M\n 56100K .......... .......... .......... .......... .......... 28.5M\n 56150K .......... .......... .......... .......... .......... 1.66M\n 56200K .......... .......... .......... .......... .......... 35.5M\n 56250K .......... .......... .......... .......... ..........  999K\n 56300K .......... .......... .......... .......... .......... 35.6M\n 56350K .......... .......... .......... .......... .......... 75.0M\n 56400K .......... .......... .......... .......... .......... 24.1M\n 56450K .......... .......... .......... .......... .......... 28.4M\n 56500K .......... .......... .......... .......... .......... 1.64M\n 56550K .......... .......... .......... .......... .......... 51.4M\n 56600K .......... .......... .......... .......... ..........  991K\n 56650K .......... .......... .......... .......... .......... 51.6M\n 56700K .......... .......... .......... .......... .......... 59.0M\n 56750K .......... .......... .......... .......... .......... 26.3M\n 56800K .......... .......... .......... .......... .......... 26.8M\n 56850K .......... .......... .......... .......... .......... 1.64M\n 56900K .......... .......... .......... .......... .......... 51.2M\n 56950K .......... .......... .......... .......... ..........  992K\n 57000K .......... .......... .......... .......... .......... 48.8M\n 57050K .......... .......... .......... .......... .......... 46.9M\n 57100K .......... .......... .......... .......... .......... 30.3M\n 57150K .......... .......... .......... .......... .......... 27.5M\n 57200K .......... .......... .......... .......... .......... 1.62M\n 57250K .......... .......... .......... .......... .......... 50.1M\n 57300K .......... .......... .......... .......... ..........  998K\n 57350K .......... .......... .......... .......... .......... 57.4M\n 57400K .......... .......... .......... .......... .......... 38.6M\n 57450K .......... .......... .......... .......... ..........  130M\n 57500K .......... .......... .......... .......... .......... 27.7M\n 57550K .......... .......... .......... .......... .......... 1.58M\n 57600K .......... .......... .......... .......... .......... 46.2M\n 57650K .......... .......... .......... .......... .......... 1010K\n 57700K .......... .......... .......... .......... .......... 29.9M\n 57750K .......... .......... .......... .......... .......... 38.2M\n 57800K .......... .......... .......... .......... ..........  126M\n 57850K .......... .......... .......... .......... .......... 28.9M\n 57900K .......... .......... .......... .......... .......... 27.8M\n 57950K .......... .......... .......... .......... .......... 1.63M\n 58000K .......... .......... .......... .......... .......... 98.9M\n 58050K .......... .......... .......... .......... ..........  991K\n 58100K .......... .......... .......... .......... .......... 45.4M\n 58150K .......... .......... .......... .......... .......... 45.4M\n 58200K .......... .......... .......... .......... .......... 45.3M\n 58250K .......... .......... .......... .......... .......... 54.1M\n 58300K .......... .......... .......... .......... .......... 1.59M\n 58350K .......... .......... .......... .......... .......... 43.4M\n 58400K .......... .......... .......... .......... .......... 1003K\n 58450K .......... .......... .......... .......... .......... 32.6M\n 58500K .......... .......... .......... .......... .......... 43.8M\n 58550K .......... .......... .......... .......... .......... 95.9M\n 58600K .......... .......... .......... .......... .......... 38.6M\n 58650K .......... .......... .......... .......... .......... 21.4M\n 58700K .......... .......... .......... .......... .......... 1.68M\n 58750K .......... .......... .......... .......... .......... 38.8M\n 58800K .......... .......... .......... .......... ..........  998K\n 58850K .......... .......... .......... .......... .......... 41.7M\n 58900K .......... .......... .......... .......... .......... 42.2M\n 58950K .......... .......... .......... .......... ..........  144M\n 59000K .......... .......... .......... .......... .......... 30.7M\n 59050K .......... .......... .......... .......... .......... 22.4M\n 59100K .......... .......... .......... .......... .......... 1.67M\n 59150K .......... .......... .......... .......... .......... 36.7M\n 59200K .......... .......... .......... .......... .......... 1009K\n 59250K .......... .......... .......... .......... .......... 38.0M\n 59300K .......... .......... .......... .......... .......... 43.8M\n 59350K .......... .......... .......... .......... ..........  114M\n 59400K .......... .......... .......... .......... .......... 28.2M\n 59450K .......... .......... .......... .......... .......... 23.3M\n 59500K .......... .......... .......... .......... .......... 1.66M\n 59550K .......... .......... .......... .......... .......... 35.5M\n 59600K .......... .......... .......... .......... .......... 1021K\n 59650K .......... .......... .......... .......... .......... 39.5M\n 59700K .......... .......... .......... .......... .......... 42.3M\n 59750K .......... .......... .......... .......... .......... 61.9M\n 59800K .......... .......... .......... .......... .......... 30.0M\n 59850K .......... .......... .......... .......... .......... 31.1M\n 59900K .......... .......... .......... .......... .......... 1.63M\n 59950K .......... .......... .......... .......... .......... 50.0M\n 60000K .......... .......... .......... .......... .......... 72.5M\n 60050K .......... .......... .......... .......... .......... 1007K\n 60100K .......... .......... .......... .......... .......... 76.5M\n 60150K .......... .......... .......... .......... .......... 48.5M\n 60200K .......... .......... .......... .......... .......... 57.1M\n 60250K .......... .......... .......... .......... .......... 26.7M\n 60300K .......... .......... .......... .......... .......... 1.59M\n 60350K .......... .......... .......... .......... .......... 76.4M\n 60400K .......... .......... .......... .......... .......... 45.6M\n 60450K .......... .......... .......... .......... .......... 1013K\n 60500K .......... .......... .......... .......... .......... 61.1M\n 60550K .......... .......... .......... .......... .......... 58.0M\n 60600K .......... .......... .......... .......... .......... 59.2M\n 60650K .......... .........                                    122M=35s\n\n2024-10-28 19:12:51 (1.71 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-10-28 19:12:56--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  192K 4s\n    50K .......... .......... .......... .......... .......... 12%  289K 3s\n   100K .......... .......... .......... .......... .......... 18%  393K 3s\n   150K .......... .......... .......... .......... .......... 24%  577K 2s\n   200K .......... .......... .......... .......... .......... 30%  577K 2s\n   250K .......... .......... .......... .......... .......... 36% 1.05M 1s\n   300K .......... .......... .......... .......... .......... 42%  574K 1s\n   350K .......... .......... .......... .......... .......... 48%  578K 1s\n   400K .......... .......... .......... .......... .......... 54%  578K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.22M 1s\n   500K .......... .......... .......... .......... .......... 66% 1.04M 1s\n   550K .......... .......... .......... .......... .......... 72% 1.22M 0s\n   600K .......... .......... .......... .......... .......... 78% 1.04M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.22M 0s\n   700K .......... .......... .......... .......... .......... 90% 1.05M 0s\n   750K .......... .......... .......... .......... .......... 96% 1.22M 0s\n   800K .......... .......... .......                         100%  599K=1.4s\n\n2024-10-28 19:12:58 (597 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "update_time": "2024-10-28T19:13:13.496061",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 76.20704889297485, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-10-28 19:12:15--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  286K    50K .......... .......... .......... .......... ..........  285K   100K .......... .......... .......... .......... ..........  285K   150K .......... .......... .......... .......... ..........  571K   200K .......... .......... .......... .......... ..........  568K   250K .......... .......... .......... .......... ..........  569K   300K .......... .......... .......... .......... ..........  571K   350K .......... .......... .......... .......... ..........  570K   400K .......... .......... .......... .......... ..........  571K   450K .......... .......... .......... .......... .......... 1.21M   500K .......... .......... .......... .......... .......... 1.03M   550K .......... .......... .......... .......... ..........  577K   600K .......... .......... .......... .......... .......... 47.0M   650K .......... .......... .......... .......... ..........  576K   700K .......... .......... .......... .......... .......... 63.2M   750K .......... .......... .......... .......... ..........  572K   800K .......... .......... .......... .......... .......... 1.20M   850K .......... .......... .......... .......... .......... 1.05M   900K .......... .......... .......... .......... .......... 48.5M   950K .......... .......... .......... .......... ..........  578K  1000K .......... .......... .......... .......... .......... 56.7M  1050K .......... .......... .......... .......... .......... 1.20M  1100K .......... .......... .......... .......... .......... 1.05M  1150K .......... .......... .......... .......... .......... 70.9M  1200K .......... .......... .......... .......... ..........  579K  1250K .......... .......... .......... .......... .......... 64.0M  1300K .......... .......... .......... .......... .......... 93.9M  1350K .......... .......... .......... .......... ..........  578K  1400K .......... .......... .......... .......... .......... 54.8M  1450K .......... .......... .......... .......... .......... 76.2M  1500K .......... .......... .......... .......... .......... 1.21M  1550K .......... .......... .......... .......... .......... 1.05M  1600K .......... .......... .......... .......... ..........  128M  1650K .......... .......... .......... .......... .......... 1.19M  1700K .......... .......... .......... .......... .......... 1.06M  1750K .......... .......... .......... .......... .......... 85.8M  1800K .......... .......... .......... .......... .......... 1.21M  1850K .......... .......... .......... .......... .......... 1.06M  1900K .......... .......... .......... .......... .......... 67.4M  1950K .......... .......... .......... .......... ..........  130M  2000K .......... .......... .......... .......... .......... 1.20M  2050K .......... .......... .......... .......... .......... 1.06M  2100K .......... .......... .......... .......... .......... 83.8M  2150K .......... .......... .......... .......... ..........  113M  2200K .......... .......... .......... .......... .......... 1.21M  2250K .......... .......... .......... .......... .......... 1.06M  2300K .......... .......... .......... .......... .......... 84.3M  2350K .......... .......... .......... .......... ..........  104M  2400K .......... .......... .......... .......... ..........  118M  2450K .......... .......... .......... .......... .......... 1.21M  2500K .......... .......... .......... .......... .......... 1.06M  2550K .......... .......... .......... .......... ..........  115M  2600K .......... .......... .......... .......... ..........  120M  2650K .......... .......... .......... .......... ..........  135M  2700K .......... .......... .......... .......... .......... 1.21M  2750K .......... .......... .......... .......... .......... 1.06M  2800K .......... .......... .......... .......... ..........  131M  2850K .......... .......... .......... .......... ..........  130M  2900K .......... .......... .......... .......... ..........  146M  2950K .......... .......... .......... .......... .......... 1.22M  3000K .......... .......... .......... .......... ..........  119M  3050K .......... .......... .......... .......... .......... 1.05M  3100K .......... .......... .......... .......... ..........  136M  3150K .......... .......... .......... .......... .......... 81.4M  3200K .......... .......... .......... .......... ..........  136M  3250K .......... .......... .......... .......... .......... 1.23M  3300K .......... .......... .......... .......... .......... 1.06M  3350K .......... .......... .......... .......... ..........  114M  3400K .......... .......... .......... .......... ..........  135M  3450K .......... .......... .......... .......... .......... 69.0M  3500K .......... .......... .......... .......... ..........  148M  3550K .......... .......... .......... .......... .......... 1.23M  3600K .......... .......... .......... .......... .......... 1.06M  3650K .......... .......... .......... .......... .......... 88.2M  3700K .......... .......... .......... .......... ..........  132M  3750K .......... .......... .......... .......... ..........  136M  3800K .......... .......... .......... .......... ..........  126M  3850K .......... .......... .......... .......... .......... 1.24M  3900K .......... .......... .......... .......... .......... 59.6M  3950K .......... .......... .......... .......... .......... 1.06M  4000K .......... .......... .......... .......... ..........  110M  4050K .......... .......... .......... .......... ..........  128M  4100K .......... .......... .......... .......... ..........  146M  4150K .......... .......... .......... .......... ..........  148M  4200K .......... .......... .......... .......... .......... 1.24M  4250K .......... .......... .......... .......... .......... 62.0M  4300K .......... .......... .......... .......... .......... 1.06M  4350K .......... .......... .......... .......... ..........  123M  4400K .......... .......... .......... .......... ..........  135M  4450K .......... .......... .......... .......... ..........  135M  4500K .......... .......... .......... .......... ..........  152M  4550K .......... .......... .......... .......... .......... 1.23M  4600K .......... .......... .......... .......... ..........  125M  4650K .......... .......... .......... .......... .......... 1.06M  4700K .......... .......... .......... .......... ..........  129M  4750K .......... .......... .......... .......... ..........  129M  4800K .......... .......... .......... .......... ..........  136M  4850K .......... .......... .......... .......... ..........  142M  4900K .......... .......... .......... .......... .......... 1.24M  4950K .......... .......... .......... .......... ..........  108M  5000K .......... .......... .......... .......... ..........  122M  5050K .......... .......... .......... .......... .......... 1.06M  5100K .......... .......... .......... .......... ..........  132M  5150K .......... .......... .......... .......... .......... 83.1M  5200K .......... .......... .......... .......... ..........  122M  5250K .......... .......... .......... .......... ..........  390K  5300K .......... .......... .......... .......... ..........  122M  5350K .......... .......... .......... .......... ..........  138M  5400K .......... .......... .......... .......... ..........  130M  5450K .......... .......... .......... .......... ..........  150M  5500K .......... .......... .......... .......... ..........  143M  5550K .......... .......... .......... .......... ..........  132M  5600K .......... .......... .......... .......... ..........  139M  5650K .......... .......... .......... .......... .......... 1.11M  5700K .......... .......... .......... .......... ..........  130M  5750K .......... .......... .......... .......... ..........  150M  5800K .......... .......... .......... .......... .......... 1.19M  5850K .......... .......... .......... .......... .......... 57.8M  5900K .......... .......... .......... .......... .......... 1.06M  5950K .......... .......... .......... .......... .......... 82.7M  6000K .......... .......... .......... .......... ..........  133M  6050K .......... .......... .......... .......... .......... 1.22M  6100K .......... .......... .......... .......... .......... 1.06M  6150K .......... .......... .......... .......... .......... 66.6M  6200K .......... .......... .......... .......... ..........  112M  6250K .......... .......... .......... .......... ..........  146M  6300K .......... .......... .......... .......... .......... 1.22M  6350K .......... .......... .......... .......... .......... 1.06M  6400K .......... .......... .......... .......... .......... 66.1M  6450K .......... .......... .......... .......... ..........  140M  6500K .......... .......... .......... .......... ..........  145M  6550K .......... .......... .......... .......... .......... 1.22M  6600K .......... .......... .......... .......... .......... 1.05M  6650K .......... .......... .......... .......... ..........  119M  6700K .......... .......... .......... .......... ..........  140M  6750K .......... .......... .......... .......... ..........  135M  6800K .......... .......... .......... .......... .......... 1.22M  6850K .......... .......... .......... .......... .......... 1.05M  6900K .......... .......... .......... .......... ..........  145M  6950K .......... .......... .......... .......... ..........  147M  7000K .......... .......... .......... .......... ..........  108M  7050K .......... .......... .......... .......... .......... 1.22M  7100K .......... .......... .......... .......... .......... 1.05M  7150K .......... .......... .......... .......... ..........  121M  7200K .......... .......... .......... .......... ..........  132M  7250K .......... .......... .......... .......... ..........  147M  7300K .......... .......... .......... .......... .......... 1.23M  7350K .......... .......... .......... .......... .......... 1.05M  7400K .......... .......... .......... .......... .......... 90.3M  7450K .......... .......... .......... .......... ..........  139M  7500K .......... .......... .......... .......... ..........  128M  7550K .......... .......... .......... .......... .......... 1.23M  7600K .......... .......... .......... .......... .......... 22.8M  7650K .......... .......... .......... .......... .......... 1.08M  7700K .......... .......... .......... .......... ..........  140M  7750K .......... .......... .......... .......... ..........  138M  7800K .......... .......... .......... .......... ..........  135M  7850K .......... .......... .......... .......... .......... 1.23M  7900K .......... .......... .......... .......... .......... 1.04M  7950K .......... .......... .......... .......... ..........  146M  8000K .......... .......... .......... .......... ..........  131M  8050K .......... .......... .......... .......... ..........  137M  8100K .......... .......... .......... .......... .......... 1.24M  8150K .......... .......... .......... .......... .......... 1.04M  8200K .......... .......... .......... .......... .......... 53.8M  8250K .......... .......... .......... .......... ..........  147M  8300K .......... .......... .......... .......... ..........  127M  8350K .......... .......... .......... .......... .......... 1.25M  8400K .......... .......... .......... .......... .......... 26.6M  8450K .......... .......... .......... .......... .......... 1.06M  8500K .......... .......... .......... .......... ..........  132M  8550K .......... .......... .......... .......... ..........  149M  8600K .......... .......... .......... .......... ..........  133M  8650K .......... .......... .......... .......... .......... 1.25M  8700K .......... .......... .......... .......... .......... 1.02M  8750K .......... .......... .......... .......... ..........  115M  8800K .......... .......... .......... .......... ..........  284K  8850K .......... .......... .......... .......... .......... 1.16M  8900K .......... .......... .......... .......... ..........  147M  8950K .......... .......... .......... .......... ..........  139M  9000K .......... .......... .......... .......... ..........  132M  9050K .......... .......... .......... .......... ..........  574K  9100K .......... .......... .......... .......... ..........  117M  9150K .......... .......... .......... .......... ..........  133M  9200K .......... .......... .......... .......... ..........  138M  9250K .......... .......... .......... .......... ..........  148M  9300K .......... .......... .......... .......... ..........  146M  9350K .......... .......... .......... .......... ..........  154M  9400K .......... .......... .......... .......... .......... 1.11M  9450K .......... .......... .......... .......... .......... 1.23M  9500K .......... .......... .......... .......... .......... 1.01M  9550K .......... .......... .......... .......... .......... 1.24M  9600K .......... .......... .......... .......... .......... 1.01M  9650K .......... .......... .......... .......... ..........  143M  9700K .......... .......... .......... .......... ..........  390K  9750K .......... .......... .......... .......... .......... 1.04M  9800K .......... .......... .......... .......... .......... 92.1M  9850K .......... .......... .......... .......... .......... 1.22M  9900K .......... .......... .......... .......... .......... 1.03M  9950K .......... .......... .......... .......... ..........  571K 10000K .......... .......... .......... .......... .......... 1.19M 10050K .......... .......... .......... .......... .......... 1.05M 10100K .......... .......... .......... .......... .......... 1.18M 10150K .......... .......... .......... .......... .......... 1.04M 10200K .......... .......... .......... .......... .......... 1.19M 10250K .......... .......... .......... .......... .......... 1.04M 10300K .......... .......... .......... .......... ..........  573K 10350K .......... .......... .......... .......... .......... 1.21M 10400K .......... .......... .......... .......... .......... 1.03M 10450K .......... .......... .......... .......... .......... 1.20M 10500K .......... .......... .......... .......... .......... 1.04M 10550K .......... .......... .......... .......... .......... 1.18M 10600K .......... .......... .......... .......... .......... 1.05M 10650K .......... .......... .......... .......... .......... 1.19M 10700K .......... .......... .......... .......... .......... 1.05M 10750K .......... .......... .......... .......... ..........  574K 10800K .......... .......... .......... .......... .......... 65.2M 10850K .......... .......... .......... .......... ..........  574K 10900K .......... .......... .......... .......... ..........  115M 10950K .......... .......... .......... .......... ..........  574K 11000K .......... .......... .......... .......... .......... 86.0M 11050K .......... .......... .......... .......... ..........  574K 11100K .......... .......... .......... .......... .......... 1.18M 11150K .......... .......... .......... .......... .......... 1.06M 11200K .......... .......... .......... .......... .......... 1.17M 11250K .......... .......... .......... .......... .......... 1.05M 11300K .......... .......... .......... .......... .......... 1.19M 11350K .......... .......... .......... .......... .......... 1.05M 11400K .......... .......... .......... .......... .......... 1.19M 11450K .......... .......... .......... .......... .......... 1.05M 11500K .......... .......... .......... .......... .......... 1.18M 11550K .......... .......... .......... .......... .................. 35.4M 50150K .......... .......... .......... .......... .......... 84.4M 50200K .......... .......... .......... .......... .......... 1.48M 50250K .......... .......... .......... .......... ..........  970K 50300K .......... .......... .......... .......... ..........  115M 50350K .......... .......... .......... .......... .......... 47.0M 50400K .......... .......... .......... .......... .......... 58.9M 50450K .......... .......... .......... .......... .......... 1.48M 50500K .......... .......... .......... .......... ..........  975K 50550K .......... .......... .......... .......... .......... 60.2M 50600K .......... .......... .......... .......... .......... 70.9M 50650K .......... .......... .......... .......... .......... 58.6M 50700K .......... .......... .......... .......... .......... 1.48M 50750K .......... .......... .......... .......... ..........  968K 50800K .......... .......... .......... .......... .......... 67.8M 50850K .......... .......... .......... .......... .......... 37.6M 50900K .......... .......... .......... .......... ..........  141M 50950K .......... .......... .......... .......... .......... 1.47M 51000K .......... .......... .......... .......... ..........  980K 51050K .......... .......... .......... .......... .......... 81.0M 51100K .......... .......... .......... .......... .......... 43.7M 51150K .......... .......... .......... .......... .......... 92.3M 51200K .......... .......... .......... .......... .......... 1.46M 51250K .......... .......... .......... .......... ..........  982K 51300K .......... .......... .......... .......... .......... 74.5M 51350K .......... .......... .......... .......... .......... 15.7M 51400K .......... .......... .......... .......... ..........  135M 51450K .......... .......... .......... .......... .......... 1.59M 51500K .......... .......... .......... .......... ..........  969K 51550K .......... .......... .......... .......... ..........  100M 51600K .......... .......... .......... .......... .......... 14.4M 51650K .......... .......... .......... .......... ..........  136M 51700K .......... .......... .......... .......... .......... 1.59M 51750K .......... .......... .......... .......... ..........  965K 51800K .......... .......... .......... .......... ..........  113M 51850K .......... .......... .......... .......... .......... 76.2M 51900K .......... .......... .......... .......... .......... 17.3M 51950K .......... .......... .......... .......... .......... 1.60M 52000K .......... .......... .......... .......... ..........  964K 52050K .......... .......... .......... .......... .......... 36.2M 52100K .......... .......... .......... .......... ..........  150M 52150K .......... .......... .......... .......... .......... 19.4M 52200K .......... .......... .......... .......... .......... 1.60M 52250K .......... .......... .......... .......... .......... 39.7M 52300K .......... .......... .......... .......... ..........  964K 52350K .......... .......... .......... .......... ..........  146M 52400K .......... .......... .......... .......... .......... 18.8M 52450K .......... .......... .......... .......... .......... 66.8M 52500K .......... .......... .......... .......... .......... 1.61M 52550K .......... .......... .......... .......... ..........  957K 52600K .......... .......... .......... .......... .......... 86.5M 52650K .......... .......... .......... .......... ..........  111M 52700K .......... .......... .......... .......... .......... 20.3M 52750K .......... .......... .......... .......... .......... 1.61M 52800K .......... .......... .......... .......... .......... 32.6M 52850K .......... .......... .......... .......... ..........  964K 52900K .......... .......... .......... .......... ..........  110M 52950K .......... .......... .......... .......... .......... 23.5M 53000K .......... .......... .......... .......... .......... 55.9M 53050K .......... .......... .......... .......... .......... 1.59M 53100K .......... .......... .......... .......... ..........  975K 53150K .......... .......... .......... .......... .......... 29.4M 53200K .......... .......... .......... .......... ..........  101M 53250K .......... .......... .......... .......... .......... 22.8M 53300K .......... .......... .......... .......... .......... 78.9M 53350K .......... .......... .......... .......... .......... 1.59M 53400K .......... .......... .......... .......... ..........  968K 53450K .......... .......... .......... .......... .......... 47.9M 53500K .......... .......... .......... .......... ..........  140M 53550K .......... .......... .......... .......... .......... 19.6M 53600K .......... .......... .......... .......... .......... 1.62M 53650K .......... .......... .......... .......... .......... 38.6M 53700K .......... .......... .......... .......... ..........  970K 53750K .......... .......... .......... .......... .......... 66.2M 53800K .......... .......... .......... .......... ..........  102M 53850K .......... .......... .......... .......... .......... 20.5M 53900K .......... .......... .......... .......... .......... 1.61M 53950K .......... .......... .......... .......... .......... 40.5M 54000K .......... .......... .......... .......... ..........  961K 54050K .......... .......... .......... .......... ..........  138M 54100K .......... .......... .......... .......... ..........  143M 54150K .......... .......... .......... .......... .......... 21.8M 54200K .......... .......... .......... .......... .......... 1.60M 54250K .......... .......... .......... .......... .......... 40.2M 54300K .......... .......... .......... .......... ..........  981K 54350K .......... .......... .......... .......... .......... 41.6M 54400K .......... .......... .......... .......... ..........  128M 54450K .......... .......... .......... .......... .......... 22.5M 54500K .......... .......... .......... .......... .......... 1.59M 54550K .......... .......... .......... .......... .......... 45.3M 54600K .......... .......... .......... .......... ..........  990K 54650K .......... .......... .......... .......... .......... 31.1M 54700K .......... .......... .......... .......... ..........  103M 54750K .......... .......... .......... .......... .......... 22.4M 54800K .......... .......... .......... .......... .......... 60.9M 54850K .......... .......... .......... .......... .......... 1.56M 54900K .......... .......... .......... .......... ..........  997K 54950K .......... .......... .......... .......... .......... 29.4M 55000K .......... .......... .......... .......... .......... 64.2M 55050K .......... .......... .......... .......... .......... 77.1M 55100K .......... .......... .......... .......... .......... 31.6M 55150K .......... .......... .......... .......... .......... 1.56M 55200K .......... .......... .......... .......... .......... 81.1M 55250K .......... .......... .......... .......... ..........  967K 55300K .......... .......... .......... .......... .......... 69.7M 55350K .......... .......... .......... .......... ..........  144M 55400K .......... .......... .......... .......... .......... 26.8M 55450K .......... .......... .......... .......... .......... 25.3M 55500K .......... .......... .......... .......... .......... 1.65M 55550K .......... .......... .......... .......... ..........  987K 55600K .......... .......... .......... .......... .......... 31.3M 55650K .......... .......... .......... .......... .......... 55.8M 55700K .......... .......... .......... .......... .......... 26.3M 55750K .......... .......... .......... .......... ..........  134M 55800K .......... .......... .......... .......... .......... 1.57M 55850K .......... .......... .......... .......... .......... 40.0M 55900K .......... .......... .......... .......... .......... 1006K 55950K .......... .......... .......... .......... .......... 21.1M 56000K .......... .......... .......... .......... ..........  136M 56050K .......... .......... .......... .......... .......... 24.9M 56100K .......... .......... .......... .......... .......... 28.5M 56150K .......... .......... .......... .......... .......... 1.66M 56200K .......... .......... .......... .......... .......... 35.5M 56250K .......... .......... .......... .......... ..........  999K 56300K .......... .......... .......... .......... .......... 35.6M 56350K .......... .......... .......... .......... .......... 75.0M 56400K .......... .......... .......... .......... .......... 24.1M 56450K .......... .......... .......... .......... .......... 28.4M 56500K .......... .......... .......... .......... .......... 1.64M 56550K .......... .......... .......... .......... .......... 51.4M 56600K .......... .......... .......... .......... ..........  991K 56650K .......... .......... .......... .......... .......... 51.6M 56700K .......... .......... .......... .......... .......... 59.0M 56750K .......... .......... .......... .......... .......... 26.3M 56800K .......... .......... .......... .......... .......... 26.8M 56850K .......... .......... .......... .......... .......... 1.64M 56900K .......... .......... .......... .......... .......... 51.2M 56950K .......... .......... .......... .......... ..........  992K 57000K .......... .......... .......... .......... .......... 48.8M 57050K .......... .......... .......... .......... .......... 46.9M 57100K .......... .......... .......... .......... .......... 30.3M 57150K .......... .......... .......... .......... .......... 27.5M 57200K .......... .......... .......... .......... .......... 1.62M 57250K .......... .......... .......... .......... .......... 50.1M 57300K .......... .......... .......... .......... ..........  998K 57350K .......... .......... .......... .......... .......... 57.4M 57400K .......... .......... .......... .......... .......... 38.6M 57450K .......... .......... .......... .......... ..........  130M 57500K .......... .......... .......... .......... .......... 27.7M 57550K .......... .......... .......... .......... .......... 1.58M 57600K .......... .......... .......... .......... .......... 46.2M 57650K .......... .......... .......... .......... .......... 1010K 57700K .......... .......... .......... .......... .......... 29.9M 57750K .......... .......... .......... .......... .......... 38.2M 57800K .......... .......... .......... .......... ..........  126M 57850K .......... .......... .......... .......... .......... 28.9M 57900K .......... .......... .......... .......... .......... 27.8M 57950K .......... .......... .......... .......... .......... 1.63M 58000K .......... .......... .......... .......... .......... 98.9M 58050K .......... .......... .......... .......... ..........  991K 58100K .......... .......... .......... .......... .......... 45.4M 58150K .......... .......... .......... .......... .......... 45.4M 58200K .......... .......... .......... .......... .......... 45.3M 58250K .......... .......... .......... .......... .......... 54.1M 58300K .......... .......... .......... .......... .......... 1.59M 58350K .......... .......... .......... .......... .......... 43.4M 58400K .......... .......... .......... .......... .......... 1003K 58450K .......... .......... .......... .......... .......... 32.6M 58500K .......... .......... .......... .......... .......... 43.8M 58550K .......... .......... .......... .......... .......... 95.9M 58600K .......... .......... .......... .......... .......... 38.6M 58650K .......... .......... .......... .......... .......... 21.4M 58700K .......... .......... .......... .......... .......... 1.68M 58750K .......... .......... .......... .......... .......... 38.8M 58800K .......... .......... .......... .......... ..........  998K 58850K .......... .......... .......... .......... .......... 41.7M 58900K .......... .......... .......... .......... .......... 42.2M 58950K .......... .......... .......... .......... ..........  144M 59000K .......... .......... .......... .......... .......... 30.7M 59050K .......... .......... .......... .......... .......... 22.4M 59100K .......... .......... .......... .......... .......... 1.67M 59150K .......... .......... .......... .......... .......... 36.7M 59200K .......... .......... .......... .......... .......... 1009K 59250K .......... .......... .......... .......... .......... 38.0M 59300K .......... .......... .......... .......... .......... 43.8M 59350K .......... .......... .......... .......... ..........  114M 59400K .......... .......... .......... .......... .......... 28.2M 59450K .......... .......... .......... .......... .......... 23.3M 59500K .......... .......... .......... .......... .......... 1.66M 59550K .......... .......... .......... .......... .......... 35.5M 59600K .......... .......... .......... .......... .......... 1021K 59650K .......... .......... .......... .......... .......... 39.5M 59700K .......... .......... .......... .......... .......... 42.3M 59750K .......... .......... .......... .......... .......... 61.9M 59800K .......... .......... .......... .......... .......... 30.0M 59850K .......... .......... .......... .......... .......... 31.1M 59900K .......... .......... .......... .......... .......... 1.63M 59950K .......... .......... .......... .......... .......... 50.0M 60000K .......... .......... .......... .......... .......... 72.5M 60050K .......... .......... .......... .......... .......... 1007K 60100K .......... .......... .......... .......... .......... 76.5M 60150K .......... .......... .......... .......... .......... 48.5M 60200K .......... .......... .......... .......... .......... 57.1M 60250K .......... .......... .......... .......... .......... 26.7M 60300K .......... .......... .......... .......... .......... 1.59M 60350K .......... .......... .......... .......... .......... 76.4M 60400K .......... .......... .......... .......... .......... 45.6M 60450K .......... .......... .......... .......... .......... 1013K 60500K .......... .......... .......... .......... .......... 61.1M 60550K .......... .......... .......... .......... .......... 58.0M 60600K .......... .......... .......... .......... .......... 59.2M 60650K .......... .........                                    122M=35s2024-10-28 19:12:51 (1.71 MB/s) - 'exp_quant.zip' saved [62125370]--2024-10-28 19:12:56--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  192K 4s    50K .......... .......... .......... .......... .......... 12%  289K 3s   100K .......... .......... .......... .......... .......... 18%  393K 3s   150K .......... .......... .......... .......... .......... 24%  577K 2s   200K .......... .......... .......... .......... .......... 30%  577K 2s   250K .......... .......... .......... .......... .......... 36% 1.05M 1s   300K .......... .......... .......... .......... .......... 42%  574K 1s   350K .......... .......... .......... .......... .......... 48%  578K 1s   400K .......... .......... .......... .......... .......... 54%  578K 1s   450K .......... .......... .......... .......... .......... 60% 1.22M 1s   500K .......... .......... .......... .......... .......... 66% 1.04M 1s   550K .......... .......... .......... .......... .......... 72% 1.22M 0s   600K .......... .......... .......... .......... .......... 78% 1.04M 0s   650K .......... .......... .......... .......... .......... 84% 1.22M 0s   700K .......... .......... .......... .......... .......... 90% 1.05M 0s   750K .......... .......... .......... .......... .......... 96% 1.22M 0s   800K .......... .......... .......                         100%  599K=1.4s2024-10-28 19:12:58 (597 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="11.443150520324707">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.443150520324707, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="48.57090973854065">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-10-28 19:00:08.831] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-10-28 19:00:08.831] [jLog] [info] building indexout : ./index[2024-10-28 19:00:08.831] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-10-28 19:00:08.837] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-10-28 19:00:08.837] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-10-28 19:00:08.846] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-10-28 19:00:08.847] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-10-28 19:00:08.900] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-10-28 19:00:08.900] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 556.18 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 430.82 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-10-28 19:00:08.901] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-10-28 19:00:08.901] [puff::index::jointLog] [info] contig count for validation: 23[2024-10-28 19:00:08.902] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-10-28 19:00:08.902] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-10-28 19:00:08.902] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-10-28 19:00:08.902] [puff::index::jointLog] [info] bits per offset entry 6[2024-10-28 19:00:08.902] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-10-28 19:00:08.911] [puff::index::jointLog] [info] # segments = 23[2024-10-28 19:00:08.911] [puff::index::jointLog] [info] total length = 19592[2024-10-28 19:00:08.911] [puff::index::jointLog] [info] Reading the reference files ...[2024-10-28 19:00:08.918] [puff::index::jointLog] [info] positional integer width = 15[2024-10-28 19:00:08.918] [puff::index::jointLog] [info] seqSize = 19592[2024-10-28 19:00:08.918] [puff::index::jointLog] [info] rankSize = 19592[2024-10-28 19:00:08.918] [puff::index::jointLog] [info] edgeVecSize = 0[2024-10-28 19:00:08.918] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-10-28 19:00:08.976] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-10-28 19:00:08.976] [puff::index::jointLog] [info] chunk size = 9796[2024-10-28 19:00:08.976] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-10-28 19:00:08.976] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-10-28 19:00:08.977] [puff::index::jointLog] [info] finished populating pos vector[2024-10-28 19:00:08.977] [puff::index::jointLog] [info] writing index components[2024-10-28 19:00:08.987] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-10-28 19:00:08.991] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-10-28 19:00:09.087] [jointLog] [info] setting maxHashResizeThreads to 6[2024-10-28 19:00:09.087] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-10-28 19:00:09.087] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-10-28 19:00:09.087] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-10-28 19:00:09.087] [jointLog] [info] parsing read library format[2024-10-28 19:00:09.087] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 317.77 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 695.31 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 283.45 us-----------------------------------------[2024-10-28 19:00:09.205] [jointLog] [info] Loading pufferfish index[2024-10-28 19:00:09.206] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading mphf table | Time = 369.31 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 449.47 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 449.11 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 686.8 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 418.66 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 334.42 us-----------------------------------------[2024-10-28 19:00:09.211] [jointLog] [info] done[2024-10-28 19:00:09.211] [jointLog] [info] Index contained 15 targets[2024-10-28 19:00:09.211] [jointLog] [info] Number of decoys : 0[2024-10-28 19:00:09.281] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-10-28 19:00:09.281] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-10-28 19:00:09.282] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-10-28 19:00:09.282] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-10-28 19:00:09.282] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-10-28 19:00:09.282] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-10-28 19:00:09.282] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-10-28 19:00:09.282] [jointLog] [info] Mapping rate = 100%[2024-10-28 19:00:09.282] [jointLog] [info] finished quantifyLibrary()[2024-10-28 19:00:09.286] [jointLog] [info] Starting optimizer[2024-10-28 19:00:09.287] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-10-28 19:00:09.287] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-10-28 19:00:09.288] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-10-28 19:00:09.288] [jointLog] [info] Finished optimizer[2024-10-28 19:00:09.288] [jointLog] [info] writing output [2024-10-28 19:00:09.291] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="35.83861446380615">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-10-28 19:00:48.079] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-10-28 19:00:48.079] [jLog] [info] building indexout : ./index[2024-10-28 19:00:48.080] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-10-28 19:00:48.087] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-10-28 19:00:48.087] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-10-28 19:00:48.103] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-10-28 19:00:48.104] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-10-28 19:00:48.159] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-10-28 19:00:48.159] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 495.64 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 402 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-10-28 19:00:48.160] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-10-28 19:00:48.160] [puff::index::jointLog] [info] contig count for validation: 23[2024-10-28 19:00:48.160] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-10-28 19:00:48.160] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-10-28 19:00:48.160] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-10-28 19:00:48.160] [puff::index::jointLog] [info] bits per offset entry 6[2024-10-28 19:00:48.160] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-10-28 19:00:48.169] [puff::index::jointLog] [info] # segments = 23[2024-10-28 19:00:48.169] [puff::index::jointLog] [info] total length = 19592[2024-10-28 19:00:48.169] [puff::index::jointLog] [info] Reading the reference files ...[2024-10-28 19:00:48.177] [puff::index::jointLog] [info] positional integer width = 15[2024-10-28 19:00:48.177] [puff::index::jointLog] [info] seqSize = 19592[2024-10-28 19:00:48.177] [puff::index::jointLog] [info] rankSize = 19592[2024-10-28 19:00:48.177] [puff::index::jointLog] [info] edgeVecSize = 0[2024-10-28 19:00:48.177] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapse..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-10-28 19:00:48.230] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-10-28 19:00:48.230] [puff::index::jointLog] [info] chunk size = 9796[2024-10-28 19:00:48.230] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-10-28 19:00:48.230] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-10-28 19:00:48.231] [puff::index::jointLog] [info] finished populating pos vector[2024-10-28 19:00:48.231] [puff::index::jointLog] [info] writing index components[2024-10-28 19:00:48.244] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-10-28 19:00:48.248] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-10-28 19:00:48.337] [jointLog] [info] setting maxHashResizeThreads to 6[2024-10-28 19:00:48.337] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-10-28 19:00:48.337] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-10-28 19:00:48.337] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-10-28 19:00:48.337] [jointLog] [info] parsing read library format[2024-10-28 19:00:48.337] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 330.93 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 820.49 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 284.51 us----------------------------------------------------------------------------------| Loading mphf table | Time = 401.13 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 550.66 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 477.5 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 663.08 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 441.03 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 198.49 us-----------------------------------------[2024-10-28 19:00:48.449] [jointLog] [info] Loading pufferfish index[2024-10-28 19:00:48.450] [jointLog] [info] Loading dense pufferfish index.[2024-10-28 19:00:48.455] [jointLog] [info] done[2024-10-28 19:00:48.455] [jointLog] [info] Index contained 15 targets[2024-10-28 19:00:48.455] [jointLog] [info] Number of decoys : 0[2024-10-28 19:00:48.522] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-10-28 19:00:48.522] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-10-28 19:00:48.523] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-10-28 19:00:48.523] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-10-28 19:00:48.523] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-10-28 19:00:48.523] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-10-28 19:00:48.524] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-10-28 19:00:48.524] [jointLog] [info] Mapping rate = 100%[2024-10-28 19:00:48.524] [jointLog] [info] finished quantifyLibrary()[2024-10-28 19:00:48.527] [jointLog] [info] Starting optimizer[2024-10-28 19:00:48.528] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-10-28 19:00:48.528] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-10-28 19:00:48.529] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-10-28 19:00:48.529] [jointLog] [info] Finished optimizer[2024-10-28 19:00:48.529] [jointLog] [info] writing output [2024-10-28 19:00:48.533] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="37.77061867713928">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "42b855c9a7cbbb5c",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "8fd7ea6db7b7e7c3",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/2/7/9/dataset_27909893-240d-4c52-92b1-24011c660238.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-10-28T19:01:22.267783",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-npm2g",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0300156ee15ca1d9",  "id": "2dbda8c0458e8b85",  "inputs": {   "quant_type|afile": {    "id": "42b855c9a7cbbb5c",    "src": "hda",    "uuid": "b750516e-3e53-47ab-b033-21749bffdb59"   },   "quant_type|transcript": {    "id": "8fd7ea6db7b7e7c3",    "src": "hda",    "uuid": "27909893-240d-4c52-92b1-24011c660238"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1730142086.0000000",    "title": "Job End Time",    "value": "2024-10-28 19:01:26"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1730142083.0000000",    "title": "Job Start Time",    "value": "2024-10-28 19:01:23"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "f0a13c623eb61b34",    "src": "hda",    "uuid": "80ce7b24-d64e-49c5-b5b3-dc756848f778"   },   "postSample": {    "id": "77d8ac0619909e51",    "src": "hda",    "uuid": "7a4107b8-8dc5-4d7d-a361-5ebfffed25de"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/2/7/9/dataset_27909893-240d-4c52-92b1-24011c660238.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-10-28 19:01:24.112] [jointLog] [info] setting maxHashResizeThreads to 6\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-10-28 19:01:24.112] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-10-28 19:01:24.112] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat\", fasta = \"/galaxy/server/database/objects/2/7/9/dataset_27909893-240d-4c52-92b1-24011c660238.dat\" . . .done\n[2024-10-28 19:01:24.669] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A[2024-10-28 19:01:24.908] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-10-28 19:01:24.915] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-10-28 19:01:24.915] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-10-28 19:01:24.915] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-10-28 19:01:24.917] [jointLog] [info] starting optimizer\n[2024-10-28 19:01:24.917] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-10-28 19:01:24.917] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-10-28 19:01:24.918] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-10-28 19:01:24.918] [jointLog] [info] finished optimizer\n[2024-10-28 19:01:24.918] [jointLog] [info] writing output\n[2024-10-28 19:01:24.923] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/2/7/9/dataset_27909893-240d-4c52-92b1-24011c660238.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-10-28 19:01:24.112] [jointLog] [info] setting maxHashResizeThreads to 6\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-10-28 19:01:24.112] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-10-28 19:01:24.112] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat\", fasta = \"/galaxy/server/database/objects/2/7/9/dataset_27909893-240d-4c52-92b1-24011c660238.dat\" . . .done\n[2024-10-28 19:01:24.669] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A[2024-10-28 19:01:24.908] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-10-28 19:01:24.915] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-10-28 19:01:24.915] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-10-28 19:01:24.915] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-10-28 19:01:24.917] [jointLog] [info] starting optimizer\n[2024-10-28 19:01:24.917] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-10-28 19:01:24.917] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-10-28 19:01:24.918] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-10-28 19:01:24.918] [jointLog] [info] finished optimizer\n[2024-10-28 19:01:24.918] [jointLog] [info] writing output\n[2024-10-28 19:01:24.923] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "update_time": "2024-10-28T19:01:38.580787",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_uwtcyitz.sam v. /tmp/history_bam_converted_to_sam_30p34rc4.sam )\n--- local_file\n+++ history_data\n@@ -1,4 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n+@PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -14,66 +16,136 @@\n @SQ\tSN:NM_153693\tLN:2072\n @SQ\tSN:NM_173860\tLN:849\n @SQ\tSN:NR_003084\tLN:1640\n-@PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n-@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.16.1\tCL:samtools sort -@ 1 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n+1811:NM_174914:0:188\t99\tNM_001168316\t1\t1\t50M\t=\t139\t188\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+3775:NM_174914:0:140\t99\tNM_001168316\t1\t1\t50M\t=\t91\t140\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n 8380:NM_174914:0:170\t163\tNM_001168316\t1\t1\t50M\t=\t121\t170\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+567:NM_174914:5:165\t99\tNM_001168316\t6\t1\t50M\t=\t121\t165\tGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGG\t*\tNH:i:3\tHI:i:1\tAS:i:0\n 2546:NM_174914:6:160\t163\tNM_001168316\t7\t1\t50M\t=\t117\t160\tAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+4806:NR_031764:7:194\t99\tNM_001168316\t8\t1\t50M\t=\t152\t194\tGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+2590:NR_031764:8:152\t99\tNM_001168316\t9\t1\t50M\t=\t111\t152\tGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+1161:NM_174914:9:183\t99\tNM_001168316\t10\t1\t50M\t=\t143\t183\tTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAAC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+1332:NM_174914:10:177\t99\tNM_001168316\t11\t1\t50M\t=\t138\t177\tTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAACC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+6621:NM_174914:10:179\t99\tNM_001168316\t11\t1\t50M\t=\t140\t179\tTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAACC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n********\n*SNIP *\n********\n+9853:NM_018953:1427:182\t355\tNR_003084\t1456\t1\t50M\t=\t1588\t182\tCAACTAGTGGGGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+7857:NM_018953:1428:165\t419\tNR_003084\t1457\t1\t50M\t=\t1572\t165\tAACTAGTGGGGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3858:NM_018953:1305:183\t339\tNR_003084\t1467\t1\t50M\t=\t1334\t-183\tGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+8186:NM_018953:1442:153\t355\tNR_003084\t1471\t1\t50M\t=\t1574\t153\tCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCAT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3225:NM_018953:1324:177\t403\tNR_003084\t1480\t1\t50M\t=\t1353\t-177\tGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9380:NM_018953:1348:155\t403\tNR_003084\t1482\t1\t50M\t=\t1377\t-155\tACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6585:NM_018953:1338:169\t403\tNR_003084\t1486\t1\t50M\t=\t1367\t-169\tCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6863:NM_018953:1319:193\t339\tNR_003084\t1491\t1\t50M\t=\t1348\t-193\tAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9258:NM_018953:1324:191\t403\tNR_003084\t1494\t1\t50M\t=\t1353\t-191\tGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+4115:NM_018953:1339:179\t403\tNR_003084\t1497\t1\t50M\t=\t1368\t-179\tCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6135:NM_018953:1469:91\t355\tNR_003084\t1498\t1\t50M\t=\t1539\t91\tCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCCT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9697:NM_018953:1346:184\t339\tNR_003084\t1509\t1\t50M\t=\t1375\t-184\tTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCCTCCTGACCCATT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+434:NM_018953:1346:194\t339\tNR_003084\t1519\t1\t50M\t=\t1375\t-194\tATAGTCCCTGCCACGAATTTCTGTGCCCTCCTGACCCATTGCTGTTGTCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9192:NM_018953:1402:146\t403\tNR_003084\t1527\t1\t50M\t=\t1431\t-146\tTGCCACGAATTTCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+5171:NM_018953:1389:171\t339\tNR_003084\t1539\t1\t50M\t=\t1418\t-171\tCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6135:NM_018953:1469:91\t403\tNR_003084\t1539\t1\t50M\t=\t1498\t-91\tCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9690:NM_018953:1392:171\t339\tNR_003084\t1542\t1\t50M\t=\t1421\t-171\tTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+1465:NM_018953:1400:169\t339\tNR_003084\t1548\t1\t50M\t=\t1429\t-169\tCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3052:NM_018953:1396:175\t339\tNR_003084\t1550\t1\t50M\t=\t1425\t-175\tTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTGAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+381:NM_018953:1382:192\t339\tNR_003084\t1553\t1\t50M\t=\t1411\t-192\tCCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTGAAACT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+7857:NM_018953:1428:165\t339\tNR_003084\t1572\t1\t50M\t=\t1457\t-165\tTATTTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAAT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+8186:NM_018953:1442:153\t403\tNR_003084\t1574\t1\t50M\t=\t1471\t-153\tTTTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3331:NM_018953:1404:193\t403\tNR_003084\t1576\t1\t50M\t=\t1433\t-193\tTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+2226:NM_018953:1422:177\t403\tNR_003084\t1578\t1\t50M\t=\t1451\t-177\tTTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAGAG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9853:NM_018953:1427:182\t403\tNR_003084\t1588\t1\t50M\t=\t1456\t-182\tGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAGAGAGAACAGGAC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 37.77061867713928, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/2/7/9/dataset_27909893-240d-4c52-92b1-24011c660238.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-10-28 19:01:24.112] [jointLog] [info] setting maxHashResizeThreads to 6Library format { type:single end, relative orientation:none, strandedness:unstranded }[2024-10-28 19:01:24.112] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-10-28 19:01:24.112] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat", fasta = "/galaxy/server/database/objects/2/7/9/dataset_27909893-240d-4c52-92b1-24011c660238.dat" . . .done[2024-10-28 19:01:24.669] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2024-10-28 19:01:24.908] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1Resetting BAMQueue from file(s) [ "/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2024-10-28 19:01:24.915] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-10-28 19:01:24.915] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-10-28 19:01:24.915] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-10-28 19:01:24.917] [jointLog] [info] starting optimizer[2024-10-28 19:01:24.917] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-10-28 19:01:24.917] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2024-10-28 19:01:24.918] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-10-28 19:01:24.918] [jointLog] [info] finished optimizer[2024-10-28 19:01:24.918] [jointLog] [info] writing output[2024-10-28 19:01:24.923] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/b/7/5/dataset_b750516e-3e53-47ab-b033-21749bffdb59.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="27.545392513275146">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "quant_type|discardOrphansQuasi": false,  "quant_type|dovetail": true,  "quant_type|qtype": "reads",  "quant_type|recoverOrphans": true,  "quant_type|refTranscriptSource|TranscriptSource": "history",  "quant_type|refTranscriptSource|s_index|fasta": {   "id": "f5f06e8fa9e43b97",   "src": "hda"  },  "quant_type|validmap|validateMappings": true }, "job": {  "command_line": "mkdir ./index \u0026\u0026 mkdir ./output \u0026\u0026 salmon index -i ./index --kmerLen \u002731\u0027 --gencode --transcripts \u0027/galaxy/server/database/objects/c/0/c/dataset_c0c83605-2f2f-416d-b697-5b633afc33af.dat\u0027 \u0026\u0026    ln -s /galaxy/server/database/objects/c/0/c/dataset_c0c83605-2f2f-416d-b697-5b633afc33af.dat ./single.fasta \u0026\u0026  salmon quant --index \u0027./index\u0027 --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"  --validateMappings --minScoreFraction \u00270.65\u0027 --ma \u00272\u0027 --mp \u00274\u0027 --go \u00275\u0027 --ge \u00273\u0027    --allowDovetail --recoverOrphans          --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-10-28T19:01:59.270545",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-2str2",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0300156ee15ca1d9",  "id": "76dac77a3fddadb8",  "inputs": {   "quant_type|input|single_or_paired|input_singles": {    "id": "f5f06e8fa9e43b97",    "src": "hda",    "uuid": "c0c83605-2f2f-416d-b697-5b633afc33af"   },   "quant_type|refTranscriptSource|s_index|fasta": {    "id": "f5f06e8fa9e43b97",    "src": "hda",    "uuid": "c0c83605-2f2f-416d-b697-5b633afc33af"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "d8987fa010d1f690",    "src": "hda",    "uuid": "b89a301d-06f6-4693-a53a-e0e182b0662b"   }  },  "params": {   "__input_ext": "\"fasta\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": true, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": true, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 0, \"gapExtensionPenalty\": \"3\", \"gapOpenPenalty\": \"5\", \"hardFilter\": false, \"matchScore\": \"2\", \"maxMMPExtension\": \"\", \"mimicBT2\": false, \"mimicStrictBT2\": false, \"minScoreFraction\": \"0.65\", \"mismatchPenalty\": \"4\", \"validateMappings\": true}, \"writeMappings\": false}",   "seqBias": "false"  },  "state": "error",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-10-28 19:02:00.792] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-10-28 19:02:00.792] [jLog] [info] building index\nout : ./index\n[2024-10-28 19:02:00.793] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-10-28 19:02:00.811] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-10-28 19:02:00.812] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 631.05 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 449.35 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] # segments = 23\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] total length = 19592\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] positional integer width = 15\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] seqSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] rankSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\nec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk size = 9796\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] finished populating pos vector\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] writing index components\n[2024-10-28 19:02:00.953] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-10-28 19:02:00.958] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ validateMappings ] =\u003e { }\n### [ minScoreFraction ] =\u003e { 0.65 }\n### [ ma ] =\u003e { 2 }\n### [ mp ] =\u003e { 4 }\n### [ go ] =\u003e { 5 }\n### [ ge ] =\u003e { 3 }\n### [ allowDovetail ] =\u003e { }\n### [ recoverOrphans ] =\u003e { }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-10-28 19:02:01.051] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-10-28 19:02:01.051] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-10-28 19:02:01.051] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2024-10-28 19:02:01.051] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-10-28 19:02:01.051] [jointLog] [info] parsing read library format\n[2024-10-28 19:02:01.051] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 515.59 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 776.08 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 353.38 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 421.06 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 530.49 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 434.67 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 750.76 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 474.09 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 243.14 us\n-----------------------------------------\n[2024-10-28 19:02:01.164] [jointLog] [info] Loading pufferfish index\n[2024-10-28 19:02:01.165] [jointLog] [info] Loading dense pufferfish index.\n[2024-10-28 19:02:01.171] [jointLog] [info] done\n[2024-10-28 19:02:01.171] [jointLog] [info] Index contained 15 targets\n[2024-10-28 19:02:01.171] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-10-28 19:02:01.238] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-10-28 19:02:01.238] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-10-28 19:02:01.239] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-10-28 19:02:01.239] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-10-28 19:02:01.239] [jointLog] [info] Mapping rate = 100%\n\n[2024-10-28 19:02:01.239] [jointLog] [info] finished quantifyLibrary()\n[2024-10-28 19:02:01.244] [jointLog] [info] Starting optimizer\n[2024-10-28 19:02:01.245] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-10-28 19:02:01.246] [jointLog] [info] Finished optimizer\n[2024-10-28 19:02:01.246] [jointLog] [info] writing output \n\n[2024-10-28 19:02:01.250] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n",  "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 18\nHash table size = 32\nCandidate marks count = 56\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-10-28 19:02:00.792] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-10-28 19:02:00.792] [jLog] [info] building index\nout : ./index\n[2024-10-28 19:02:00.793] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-10-28 19:02:00.811] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-10-28 19:02:00.812] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 631.05 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 449.35 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] # segments = 23\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] total length = 19592\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] positional integer width = 15\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] seqSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] rankSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\nec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk size = 9796\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] finished populating pos vector\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] writing index components\n[2024-10-28 19:02:00.953] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-10-28 19:02:00.958] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ validateMappings ] =\u003e { }\n### [ minScoreFraction ] =\u003e { 0.65 }\n### [ ma ] =\u003e { 2 }\n### [ mp ] =\u003e { 4 }\n### [ go ] =\u003e { 5 }\n### [ ge ] =\u003e { 3 }\n### [ allowDovetail ] =\u003e { }\n### [ recoverOrphans ] =\u003e { }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-10-28 19:02:01.051] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-10-28 19:02:01.051] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-10-28 19:02:01.051] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2024-10-28 19:02:01.051] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-10-28 19:02:01.051] [jointLog] [info] parsing read library format\n[2024-10-28 19:02:01.051] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 515.59 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 776.08 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 353.38 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 421.06 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 530.49 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 434.67 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 750.76 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 474.09 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 243.14 us\n-----------------------------------------\n[2024-10-28 19:02:01.164] [jointLog] [info] Loading pufferfish index\n[2024-10-28 19:02:01.165] [jointLog] [info] Loading dense pufferfish index.\n[2024-10-28 19:02:01.171] [jointLog] [info] done\n[2024-10-28 19:02:01.171] [jointLog] [info] Index contained 15 targets\n[2024-10-28 19:02:01.171] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-10-28 19:02:01.238] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-10-28 19:02:01.238] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-10-28 19:02:01.239] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-10-28 19:02:01.239] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-10-28 19:02:01.239] [jointLog] [info] Mapping rate = 100%\n\n[2024-10-28 19:02:01.239] [jointLog] [info] finished quantifyLibrary()\n[2024-10-28 19:02:01.244] [jointLog] [info] Starting optimizer\n[2024-10-28 19:02:01.245] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-10-28 19:02:01.246] [jointLog] [info] Finished optimizer\n[2024-10-28 19:02:01.246] [jointLog] [info] writing output \n\n[2024-10-28 19:02:01.250] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n",  "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 18\nHash table size = 32\nCandidate marks count = 56\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n",  "update_time": "2024-10-28T19:02:06.336590",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-10-28 19:02:00.792] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-10-28 19:02:00.792] [jLog] [info] building index\nout : ./index\n[2024-10-28 19:02:00.793] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-10-28 19:02:00.811] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-10-28 19:02:00.812] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 631.05 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 449.35 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] # segments = 23\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] total length = 19592\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] positional integer width = 15\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] seqSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] rankSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\nec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk size = 9796\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] finished populating pos vector\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] writing index components\n[2024-10-28 19:02:00.953] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-10-28 19:02:00.958] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ validateMappings ] =\u003e { }\n### [ minScoreFraction ] =\u003e { 0.65 }\n### [ ma ] =\u003e { 2 }\n### [ mp ] =\u003e { 4 }\n### [ go ] =\u003e { 5 }\n### [ ge ] =\u003e { 3 }\n### [ allowDovetail ] =\u003e { }\n### [ recoverOrphans ] =\u003e { }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-10-28 19:02:01.051] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-10-28 19:02:01.051] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-10-28 19:02:01.051] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2024-10-28 19:02:01.051] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-10-28 19:02:01.051] [jointLog] [info] parsing read library format\n[2024-10-28 19:02:01.051] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 515.59 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 776.08 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 353.38 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 421.06 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 530.49 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 434.67 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 750.76 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 474.09 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 243.14 us\n-----------------------------------------\n[2024-10-28 19:02:01.164] [jointLog] [info] Loading pufferfish index\n[2024-10-28 19:02:01.165] [jointLog] [info] Loading dense pufferfish index.\n[2024-10-28 19:02:01.171] [jointLog] [info] done\n[2024-10-28 19:02:01.171] [jointLog] [info] Index contained 15 targets\n[2024-10-28 19:02:01.171] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-10-28 19:02:01.238] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-10-28 19:02:01.238] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-10-28 19:02:01.239] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-10-28 19:02:01.239] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-10-28 19:02:01.239] [jointLog] [info] Mapping rate = 100%\n\n[2024-10-28 19:02:01.239] [jointLog] [info] finished quantifyLibrary()\n[2024-10-28 19:02:01.244] [jointLog] [info] Starting optimizer\n[2024-10-28 19:02:01.245] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-10-28 19:02:01.246] [jointLog] [info] Finished optimizer\n[2024-10-28 19:02:01.246] [jointLog] [info] writing output \n\n[2024-10-28 19:02:01.250] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-10-28 19:02:00.792] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-10-28 19:02:00.792] [jLog] [info] building index\nout : ./index\n[2024-10-28 19:02:00.793] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-10-28 19:02:00.811] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-10-28 19:02:00.812] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 631.05 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 449.35 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] # segments = 23\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] total length = 19592\n[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] positional integer width = 15\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] seqSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] rankSize = 19592\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\nec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk size = 9796\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] finished populating pos vector\n[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] writing index components\n[2024-10-28 19:02:00.953] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-10-28 19:02:00.958] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ validateMappings ] =\u003e { }\n### [ minScoreFraction ] =\u003e { 0.65 }\n### [ ma ] =\u003e { 2 }\n### [ mp ] =\u003e { 4 }\n### [ go ] =\u003e { 5 }\n### [ ge ] =\u003e { 3 }\n### [ allowDovetail ] =\u003e { }\n### [ recoverOrphans ] =\u003e { }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-10-28 19:02:01.051] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-10-28 19:02:01.051] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-10-28 19:02:01.051] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2024-10-28 19:02:01.051] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-10-28 19:02:01.051] [jointLog] [info] parsing read library format\n[2024-10-28 19:02:01.051] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 515.59 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 776.08 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 353.38 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 421.06 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 530.49 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 434.67 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 750.76 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 474.09 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 243.14 us\n-----------------------------------------\n[2024-10-28 19:02:01.164] [jointLog] [info] Loading pufferfish index\n[2024-10-28 19:02:01.165] [jointLog] [info] Loading dense pufferfish index.\n[2024-10-28 19:02:01.171] [jointLog] [info] done\n[2024-10-28 19:02:01.171] [jointLog] [info] Index contained 15 targets\n[2024-10-28 19:02:01.171] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-10-28 19:02:01.238] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-10-28 19:02:01.238] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-10-28 19:02:01.239] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-10-28 19:02:01.239] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-10-28 19:02:01.239] [jointLog] [info] Mapping rate = 100%\n\n[2024-10-28 19:02:01.239] [jointLog] [info] finished quantifyLibrary()\n[2024-10-28 19:02:01.244] [jointLog] [info] Starting optimizer\n[2024-10-28 19:02:01.245] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-10-28 19:02:01.246] [jointLog] [info] Finished optimizer\n[2024-10-28 19:02:01.246] [jointLog] [info] writing output \n\n[2024-10-28 19:02:01.250] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n." ], "status": "failure", "test_index": 4, "time_seconds": 27.545392513275146, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-10-28 19:02:00.792] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-10-28 19:02:00.792] [jLog] [info] building indexout : ./index[2024-10-28 19:02:00.793] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-10-28 19:02:00.799] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-10-28 19:02:00.811] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-10-28 19:02:00.812] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-10-28 19:02:00.862] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 631.05 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 449.35 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] contig count for validation: 23[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] bits per offset entry 6[2024-10-28 19:02:00.864] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] # segments = 23[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] total length = 19592[2024-10-28 19:02:00.873] [puff::index::jointLog] [info] Reading the reference files ...[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] positional integer width = 15[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] seqSize = 19592[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] rankSize = 19592[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] edgeVecSize = 0[2024-10-28 19:02:00.882] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela..ec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk size = 9796[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-10-28 19:02:00.941] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] finished populating pos vector[2024-10-28 19:02:00.942] [puff::index::jointLog] [info] writing index components[2024-10-28 19:02:00.953] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-10-28 19:02:00.958] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-10-28 19:02:01.051] [jointLog] [info] setting maxHashResizeThreads to 6[2024-10-28 19:02:01.051] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-10-28 19:02:01.051] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-10-28 19:02:01.051] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-10-28 19:02:01.051] [jointLog] [info] parsing read library format[2024-10-28 19:02:01.051] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 515.59 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 776.08 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 353.38 us----------------------------------------------------------------------------------| Loading mphf table | Time = 421.06 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 530.49 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 434.67 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 750.76 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 474.09 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 243.14 us-----------------------------------------[2024-10-28 19:02:01.164] [jointLog] [info] Loading pufferfish index[2024-10-28 19:02:01.165] [jointLog] [info] Loading dense pufferfish index.[2024-10-28 19:02:01.171] [jointLog] [info] done[2024-10-28 19:02:01.171] [jointLog] [info] Index contained 15 targets[2024-10-28 19:02:01.171] [jointLog] [info] Number of decoys : 0[2024-10-28 19:02:01.238] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-10-28 19:02:01.238] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-10-28 19:02:01.239] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-10-28 19:02:01.239] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-10-28 19:02:01.239] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-10-28 19:02:01.239] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-10-28 19:02:01.239] [jointLog] [info] Mapping rate = 100%[2024-10-28 19:02:01.239] [jointLog] [info] finished quantifyLibrary()[2024-10-28 19:02:01.244] [jointLog] [info] Starting optimizer[2024-10-28 19:02:01.245] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-10-28 19:02:01.245] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-10-28 19:02:01.246] [jointLog] [info] Finished optimizer[2024-10-28 19:02:01.246] [jointLog] [info] writing output [2024-10-28 19:02:01.250] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="35.25595498085022">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-10-28 19:02:29.095] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-10-28 19:02:29.095] [jLog] [info] building indexout : ./index[2024-10-28 19:02:29.095] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-10-28 19:02:29.103] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-10-28 19:02:29.103] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-10-28 19:02:29.114] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-10-28 19:02:29.115] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-10-28 19:02:29.167] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-10-28 19:02:29.167] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 654.7 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 575.99 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-10-28 19:02:29.169] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-10-28 19:02:29.169] [puff::index::jointLog] [info] contig count for validation: 23[2024-10-28 19:02:29.169] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-10-28 19:02:29.169] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-10-28 19:02:29.169] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-10-28 19:02:29.169] [puff::index::jointLog] [info] bits per offset entry 6[2024-10-28 19:02:29.169] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-10-28 19:02:29.179] [puff::index::jointLog] [info] # segments = 23[2024-10-28 19:02:29.179] [puff::index::jointLog] [info] total length = 19592[2024-10-28 19:02:29.179] [puff::index::jointLog] [info] Reading the reference files ...[2024-10-28 19:02:29.188] [puff::index::jointLog] [info] positional integer width = 15[2024-10-28 19:02:29.188] [puff::index::jointLog] [info] seqSize = 19592[2024-10-28 19:02:29.188] [puff::index::jointLog] [info] rankSize = 19592[2024-10-28 19:02:29.188] [puff::index::jointLog] [info] edgeVecSize = 0[2024-10-28 19:02:29.188] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elap..]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-10-28 19:02:29.246] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-10-28 19:02:29.246] [puff::index::jointLog] [info] chunk size = 9796[2024-10-28 19:02:29.246] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-10-28 19:02:29.246] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-10-28 19:02:29.248] [puff::index::jointLog] [info] finished populating pos vector[2024-10-28 19:02:29.248] [puff::index::jointLog] [info] writing index components[2024-10-28 19:02:29.258] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-10-28 19:02:29.262] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-10-28 19:02:29.360] [jointLog] [info] setting maxHashResizeThreads to 6[2024-10-28 19:02:29.360] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-10-28 19:02:29.360] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-10-28 19:02:29.360] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-10-28 19:02:29.360] [jointLog] [info] parsing read library format[2024-10-28 19:02:29.360] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 341.48 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 653.37 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 270.99 us----------------------------------------------------------------------------------| Loading mphf table | Time = 317.91 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 385.41 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 365.37 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 725.04 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 487.64 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 296.1 us-----------------------------------------[2024-10-28 19:02:29.474] [jointLog] [info] Loading pufferfish index[2024-10-28 19:02:29.475] [jointLog] [info] Loading dense pufferfish index.[2024-10-28 19:02:29.479] [jointLog] [info] done[2024-10-28 19:02:29.479] [jointLog] [info] Index contained 15 targets[2024-10-28 19:02:29.480] [jointLog] [info] Number of decoys : 0[2024-10-28 19:02:29.480] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-10-28 19:02:29.548] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-10-28 19:02:29.548] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-10-28 19:02:29.549] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-10-28 19:02:29.549] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-10-28 19:02:29.549] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-10-28 19:02:29.549] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-10-28 19:02:29.550] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-10-28 19:02:29.550] [jointLog] [info] Mapping rate = 100%[2024-10-28 19:02:29.550] [jointLog] [info] finished quantifyLibrary()[2024-10-28 19:02:29.553] [jointLog] [info] Starting optimizer[2024-10-28 19:02:29.554] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-10-28 19:02:29.554] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-10-28 19:02:29.554] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-10-28 19:02:29.558] [jointLog] [info] Computed expected counts (for bias correction)[2024-10-28 19:02:29.559] [jointLog] [info] processed bias for 6.7% of the transcripts[2024-10-28 19:02:29.559] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-10-28 19:02:29.560] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-10-28 19:02:29.560] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-10-28 19:02:29.560] [jointLog] [info] processed bias for 46.7% of the transcripts[2024-10-28 19:02:29.560] [jointLog] [info] processed bias for 46.7% of the transcripts[2024-10-28 19:02:29.560] [jointLog] [info] processed bias for 46.7% of the transcripts[2024-10-28 19:02:29.561] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-10-28 19:02:29.561] [jointLog] [info] processed bias for 73.3% of the transcripts[2024-10-28 19:02:29.562] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-10-28 19:02:29.563] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-10-28 19:02:29.563] [jointLog] [info] Finished optimizer[2024-10-28 19:02:29.563] [jointLog] [info] writing output [2024-10-28 19:02:29.567] [jointLog] [info] writing equivalence class counts.[2024-10-28 19:02:29.567] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-10-28 19:02:29.567] [jointLog] [info] done.[2024-10-28 19:02:29.571] [jointLog] [info] done writing equivalence class counts.[2024-10-28 19:02:29.571] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="39.713505268096924">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="39.47997808456421">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="35.59427261352539">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="40.45269536972046">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #5)" name="4" time="36.814701080322266">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #6)" name="5" time="35.2699613571167">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #7)" name="6" time="35.2934467792511">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="41.72497034072876">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="37.610854148864746">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="82.84503483772278">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="44.83615255355835">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="45.11240792274475">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="45.09968852996826">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="94.71738767623901">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/3/a/c/dataset_3ac1ae1f-7a86-43fd-a161-c116880416db.dat--pe1-2fastq:/galaxy/server/database/objects/3/e/3/dataset_3e38afda-96d3-457d-b5c4-caff8824fada.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/a/c/dataset_3ac1ae1f-7a86-43fd-a161-c116880416db.dat']      right reads: ['/galaxy/server/database/objects/3/e/3/dataset_3e38afda-96d3-457d-b5c4-caff8824fada.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/a/c/dataset_3ac1ae1f-7a86-43fd-a161-c116880416db.dat  0:00:00.772     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/e/3/dataset_3e38afda-96d3-457d-b5c4-caff8824fada.dat  0:00:01.448     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.461    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.683    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.683    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.813    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.832    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.846    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.847    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.849    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.850    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.858    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.858    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.858    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/a/c/dataset_3ac1ae1f-7a86-43fd-a161-c116880416db.dat  0:00:01.876    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/e/3/dataset_3e38afda-96d3-457d-b5c4-caff8824fada.dat  0:00:01.892    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.892    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.892    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.900    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.901    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.901    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.909    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.909    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.909    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.909    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/a/c/dataset_3ac1ae1f-7a86-43fd-a161-c116880416db.dat and /galaxy/server/database/objects/3/e/3/dataset_3e38afda-96d3-457d-b5c4-caff8824fada.dat  0:00:01.967    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:01.971    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:01.974    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.010    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.010    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.011    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:02.014    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.110    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.116     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.284   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.293     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.459   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.533     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.533     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.533     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.534     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.535     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.535     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.535     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.895     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.904    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.904    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.042    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.042    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.102    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.103    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.103    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.103    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.103    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.103    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.831     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.844    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.119    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.119    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.239    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.258    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.272    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.272    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.273    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.274    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensin..      : 346)   Closing short gaps  0:00:07.796    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.797    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.797    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.797    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.797    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.797    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.797    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.797    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.797    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.797    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.797    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.797    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.797    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.807    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.807    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.807    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.810    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.810    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.811    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:07.814    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:07.817    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:07.820    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:07.827    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.827    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.827    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.827    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:07.827    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.827    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:07.960   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.175   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.939   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:09.939   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:09.951    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.102   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.105   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.108   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.111   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.111   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.111   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.126   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.131   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.151    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.151    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.151    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.151    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.151    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.151    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.151    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.152    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.152    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.152    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.152    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.152    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.152    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.152    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.152    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.153    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.153    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.153    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.153    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.153    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.153    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.154    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.157    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.160    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:10.166    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:10.178    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.180    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="47.71041750907898">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/7/b/e/dataset_7be6e34b-977b-4aa9-b65b-60c8c9beddd0.dat--pe1-2fasta:/galaxy/server/database/objects/1/d/c/dataset_1dc71154-3634-48ca-9e8d-e019db760493.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/b/e/dataset_7be6e34b-977b-4aa9-b65b-60c8c9beddd0.dat']      right reads: ['/galaxy/server/database/objects/1/d/c/dataset_1dc71154-3634-48ca-9e8d-e019db760493.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.113     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.283   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.293     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.468   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.555     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.555     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.555     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.556     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.556     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.556     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.556     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.952     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.961    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.961    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.109    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.109    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.188    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.188    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.188    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.189    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.189    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.189    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.026     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.039    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.326    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.326    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.459    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.477    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.493    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:02.493    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.494    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.495    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:02.496    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:02.496    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:02.496    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:02.497    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:02.497    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:02.497    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:02.497    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.509    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:02.509    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:02.516    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:02.524    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:02.524    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:02.524    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:02.524    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:02.524    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:02.565    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.670    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.037    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:03.661    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:04.791    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.633    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:06.634    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:06.634    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:06.634    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:06.634    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:06.634    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:06.634    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:06.634    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:06.634    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:06.634    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:06.636    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:06.636    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:06.637    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:06.637    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:06.637    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:07.487     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:07.499    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:07.797    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:07.797    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:07.926    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:07.945    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:07.961    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:07.961    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:07.962    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:07.964    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:07.964    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:07.966    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:07.966    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:07.966    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:07.966    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.967    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:07.967    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:07.967    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:07.967    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:07.967    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:07.967    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:07.967    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.967  ..indices  0:00:09.229    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.230    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.231    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.231    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.231    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.231    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.231    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.231    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.231    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.231    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.231    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:09.231    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.231    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.231    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.240    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.240    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.240    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.243    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.243    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.243    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:09.248    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:09.251    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:09.254    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:09.259    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.259    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.259    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.260    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.260    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.260    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.389   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.614   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.381   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.381   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:11.393    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:11.542   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.545   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.548   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.550   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.550   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.550   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.563   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.568   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.589    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.589    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.589    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.589    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.589    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.589    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.589    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.589    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.589    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.589    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.589    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.589    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.589    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.590    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.590    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.590    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.590    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.590    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.590    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.590    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.591    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.591    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.591    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.591    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.591    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.591    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.591    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.591    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.592    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:11.595    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:11.598    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:11.604    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:11.614    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.616    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="47.403812408447266">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/9/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/4/e/6/dataset_4e695b2e-ffeb-472f-8b6b-2c22e820eb8b.dat--pe1-2fastq.gz:/galaxy/server/database/objects/4/1/5/dataset_415d3840-881b-4df4-a7b3-e94874f559d7.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/9/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/4/e/6/dataset_4e695b2e-ffeb-472f-8b6b-2c22e820eb8b.dat']      right reads: ['/galaxy/server/database/objects/4/1/5/dataset_415d3840-881b-4df4-a7b3-e94874f559d7.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/e/6/dataset_4e695b2e-ffeb-472f-8b6b-2c22e820eb8b.dat  0:00:00.801     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/1/5/dataset_415d3840-881b-4df4-a7b3-e94874f559d7.dat  0:00:01.522     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.535    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.784    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.784    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.911    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.929    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.942    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.944    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.946    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.947    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.953    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.953    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.953    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/e/6/dataset_4e695b2e-ffeb-472f-8b6b-2c22e820eb8b.dat  0:00:01.975    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/1/5/dataset_415d3840-881b-4df4-a7b3-e94874f559d7.dat  0:00:01.996    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.996    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.996    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.004    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.005    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.005    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.022    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.022    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.022    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.022    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/e/6/dataset_4e695b2e-ffeb-472f-8b6b-2c22e820eb8b.dat and /galaxy/server/database/objects/4/1/5/dataset_415d3840-881b-4df4-a7b3-e94874f559d7.dat  0:00:02.085    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.091    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.095    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.135    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.135    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.135    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml  0:00:02.139    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.279   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.288     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.457   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.537     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.537     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.537     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.538     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.538     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.928     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.937    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.937    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.075    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.075    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.135    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.135    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.135    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.136    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.136    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.136    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.901     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.914    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.192    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.192    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.319    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.337    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.352    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.352    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.353    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.354    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Con..      : 346)   Closing short gaps  0:00:07.980    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.982    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.982    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.982    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.982    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.982    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.982    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.982    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.982    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.982    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.982    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.982    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.982    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.992    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.992    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.992    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.995    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.995    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.995    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:07.999    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:08.002    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta  0:00:08.005    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta  0:00:08.010    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.010    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.010    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.010    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.010    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.010    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.140   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.385   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.151   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.151   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.164    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.310   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.313   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.316   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.318   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.318   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.318   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.331   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.336   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.356    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.356    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.356    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.356    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.356    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.356    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.356    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.356    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.356    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.356    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.356    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.357    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.357    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.357    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.357    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.357    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.357    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.357    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.357    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.357    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.357    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.358    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.358    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.358    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.358    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.358    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.358    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.358    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.358    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.358    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.358    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.358    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.358    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.359    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:10.363    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:10.366    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths  0:00:10.372    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths  0:00:10.386    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.387    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="57.339829206466675">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/12/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/4/8/5/dataset_4856c813-c2cd-4d05-af9e-b8b8b74ffa7e.dat--pe1-2fastq:/galaxy/server/database/objects/a/6/b/dataset_a6b555c5-9de1-4cec-9efc-2f013d7438b6.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/12/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/4/8/5/dataset_4856c813-c2cd-4d05-af9e-b8b8b74ffa7e.dat']      right reads: ['/galaxy/server/database/objects/a/6/b/dataset_a6b555c5-9de1-4cec-9efc-2f013d7438b6.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/8/5/dataset_4856c813-c2cd-4d05-af9e-b8b8b74ffa7e.dat  0:00:00.791     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/6/b/dataset_a6b555c5-9de1-4cec-9efc-2f013d7438b6.dat  0:00:01.489     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.502    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.748    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.748    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.864    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.883    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.896    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.897    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.899    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.901    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.911    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.911    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.911    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/8/5/dataset_4856c813-c2cd-4d05-af9e-b8b8b74ffa7e.dat  0:00:01.928    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/6/b/dataset_a6b555c5-9de1-4cec-9efc-2f013d7438b6.dat  0:00:01.945    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.945    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.945    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.952    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.953    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.953    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.961    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.961    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.961    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.961    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/8/5/dataset_4856c813-c2cd-4d05-af9e-b8b8b74ffa7e.dat and /galaxy/server/database/objects/a/6/b/dataset_a6b555c5-9de1-4cec-9efc-2f013d7438b6.dat  0:00:02.020    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.026    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.030    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.068    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.068    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.069    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml  0:00:02.074    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.281   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.290     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.464   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.546     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.546     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.546     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.546     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.547     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.547     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.547     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:00.957     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.966    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.966    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.109    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.109    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.183    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.184    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.184    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.184    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.185    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.185    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.978     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:01.992    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.275    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.275    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.422    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.441    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.454    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:02.455    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.456    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.457    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:02.457    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ear.. short gaps  0:00:05.133    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.134    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.134    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.134    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.134    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.134    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.134    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.134    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.134    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.134    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:05.134    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.134    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.134    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.143    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.143    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.143    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.147    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.147    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:05.147    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:05.150    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:05.153    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta  0:00:05.157    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta  0:00:05.168    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.168    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.168    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.168    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:05.168    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.168    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.301   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.518   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.283   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.283   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:07.296    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:07.442   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.444   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.447   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.449   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.449   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.449   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.462   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.467   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.487    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.487    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.487    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.487    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.487    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.487    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.487    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.487    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.487    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.487    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.487    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.487    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.487    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.488    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.488    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.488    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.488    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.488    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.488    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.488    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.488    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.489    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.489    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.489    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.489    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.489    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.489    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.489    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.489    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.489    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.489    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.489    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.489    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.489    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:07.490    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:07.494    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:07.497    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths  0:00:07.503    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths  0:00:07.516    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.518    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="51.675758361816406">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/15/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/c/c/e/dataset_ccef70b9-a8e2-4f14-af6e-fa73bc31948c.dat--pe1-2fastq:/galaxy/server/database/objects/7/a/3/dataset_7a3fa938-44ef-416e-a685-657162f6b572.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/15/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/c/e/dataset_ccef70b9-a8e2-4f14-af6e-fa73bc31948c.dat']      right reads: ['/galaxy/server/database/objects/7/a/3/dataset_7a3fa938-44ef-416e-a685-657162f6b572.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/c/e/dataset_ccef70b9-a8e2-4f14-af6e-fa73bc31948c.dat  0:00:00.784     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/a/3/dataset_7a3fa938-44ef-416e-a685-657162f6b572.dat  0:00:01.509     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.521    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.768    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.768    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.919    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.938    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.954    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.956    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.958    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.959    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.969    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.969    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.969    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/c/e/dataset_ccef70b9-a8e2-4f14-af6e-fa73bc31948c.dat  0:00:01.991    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/a/3/dataset_7a3fa938-44ef-416e-a685-657162f6b572.dat  0:00:02.010    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.010    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.010    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:07.504    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:07.505    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:07.505    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:07.513    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:07.513    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:07.513    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:07.513    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/c/e/dataset_ccef70b9-a8e2-4f14-af6e-fa73bc31948c.dat and /galaxy/server/database/objects/7/a/3/dataset_7a3fa938-44ef-416e-a685-657162f6b572.dat  0:00:07.572    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:07.578    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:07.583    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:07.619    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:07.619    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:07.619    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml  0:00:07.622    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.279   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.288     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.457   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.533     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.533     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.533     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.534     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.534     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:00.930     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.938    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.938    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.072    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.072    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.132    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.132    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.132    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.133    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.133    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.133    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:01.888     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:01.901    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.176    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:02.176    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.333    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.352    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.367    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:02.367    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.368    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.369    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==..osing short gaps  0:00:05.313    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.314    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.314    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.314    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.314    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.314    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.314    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.314    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.314    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.314    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:05.314    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.314    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.314    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.322    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.322    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.322    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.325    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.325    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:05.325    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:05.328    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:05.331    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta  0:00:05.334    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta  0:00:05.341    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.341    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.341    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.341    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:05.341    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.341    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.473   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.706   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.469   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.469   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:07.482    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:07.642   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.644   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.646   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.648   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.648   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.648   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.661   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.665   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.684    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.684    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.684    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.684    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.685    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.685    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.685    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.685    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.685    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.685    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.685    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.685    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.685    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.685    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.685    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.685    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.685    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.685    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.685    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.685    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.685    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.686    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:07.686    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:07.686    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.686    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.686    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.686    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.686    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.686    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.686    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.686    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.686    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.686    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.686    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:07.687    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:07.691    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:07.695    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths  0:00:07.702    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths  0:00:07.715    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.717    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="48.71510100364685">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/18/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/8/f/f/dataset_8ff862aa-d4b8-4dc9-ae3f-eb03f4da884c.dat--pe1-2fastq:/galaxy/server/database/objects/5/1/e/dataset_51e72290-34fe-4c07-b3a7-587e8d853f13.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/18/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/8/f/f/dataset_8ff862aa-d4b8-4dc9-ae3f-eb03f4da884c.dat']      right reads: ['/galaxy/server/database/objects/5/1/e/dataset_51e72290-34fe-4c07-b3a7-587e8d853f13.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/f/f/dataset_8ff862aa-d4b8-4dc9-ae3f-eb03f4da884c.dat  0:00:00.825     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/1/e/dataset_51e72290-34fe-4c07-b3a7-587e8d853f13.dat  0:00:01.572     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.585    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.832    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.832    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.971    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.990    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.005    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.007    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.009    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.010    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.019    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.019    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.019    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/f/f/dataset_8ff862aa-d4b8-4dc9-ae3f-eb03f4da884c.dat  0:00:02.035    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/1/e/dataset_51e72290-34fe-4c07-b3a7-587e8d853f13.dat  0:00:02.050    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.050    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.050    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.057    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.058    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.058    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.067    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.067    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.067    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.067    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/8/f/f/dataset_8ff862aa-d4b8-4dc9-ae3f-eb03f4da884c.dat and /galaxy/server/database/objects/5/1/e/dataset_51e72290-34fe-4c07-b3a7-587e8d853f13.dat  0:00:02.125    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.130    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.134    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.174    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.174    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.174    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml  0:00:02.178    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/18/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/18/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.109    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.116     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.286   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.297     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.467   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.546     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.546     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.546     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.547     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.547     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.547     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.547     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.983     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.993    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.993    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.134    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.134    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.223    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.224    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.224    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.225    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.225    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.225    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.077     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.091    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.366    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.367    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.531    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.550    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.564    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.564    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.565    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.566    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==..sing short gaps  0:00:08.216    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.217    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.217    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.217    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.217    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.217    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.217    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.217    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.218    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.218    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.218    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.218    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.218    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.227    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.227    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.227    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.229    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.229    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.230    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta  0:00:08.234    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg  0:00:08.237    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/simplified_contigs.fasta  0:00:08.242    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/intermediate_contigs.fasta  0:00:08.247    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.247    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.247    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.247    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.247    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.247    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.378   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.599   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.364   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.364   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.377    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.526   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.529   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.532   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.534   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.534   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.534   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.547   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.552   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.573    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.573    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.573    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.573    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.573    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.573    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.573    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.573    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.573    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.573    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.573    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.573    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.573    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.573    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.574    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.574    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.574    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.574    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.574    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.574    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.574    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.574    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.574    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.575    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.575    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.575    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.575    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.575    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.575    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.575    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.575    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.575    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.575    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.575    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.575    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.576    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta  0:00:10.581    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg  0:00:10.585    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/final_contigs.paths  0:00:10.591    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/scaffolds.paths  0:00:10.605    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.607    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="50.86762881278992">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/21/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/b/b/9/dataset_bb9ec85d-2914-4d55-9efb-59e46d1fc5e7.dat--pe1-2fastq:/galaxy/server/database/objects/f/4/4/dataset_f447e50f-2001-4077-be48-e15d1c22b3fa.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/21/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/b/b/9/dataset_bb9ec85d-2914-4d55-9efb-59e46d1fc5e7.dat']      right reads: ['/galaxy/server/database/objects/f/4/4/dataset_f447e50f-2001-4077-be48-e15d1c22b3fa.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/21/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/b/9/dataset_bb9ec85d-2914-4d55-9efb-59e46d1fc5e7.dat  0:00:00.895     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/4/4/dataset_f447e50f-2001-4077-be48-e15d1c22b3fa.dat  0:00:01.694     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.707    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.964    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.964    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.112    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.133    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.154    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.156    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.158    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.159    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.167    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.167    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.167    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/b/9/dataset_bb9ec85d-2914-4d55-9efb-59e46d1fc5e7.dat  0:00:02.181    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/4/4/dataset_f447e50f-2001-4077-be48-e15d1c22b3fa.dat  0:00:02.196    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.196    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.196    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.203    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.204    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.204    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.216    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.216    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.216    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.216    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/b/9/dataset_bb9ec85d-2914-4d55-9efb-59e46d1fc5e7.dat and /galaxy/server/database/objects/f/4/4/dataset_f447e50f-2001-4077-be48-e15d1c22b3fa.dat  0:00:02.276    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.282    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.286    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.324    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.324    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.324    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml  0:00:02.328    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/21/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/21/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.119    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.126     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.298   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.308     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.480   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.557     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.557     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.557     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.558     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.559     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.559     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.559     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.978     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.988    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.988    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.146    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.146    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.215    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.215    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.215    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.216    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.216    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.216    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.112     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.125    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.420    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.420    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.580    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.601    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.620    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.620    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.622    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.622    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==..sing short gaps  0:00:08.160    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.161    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.161    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.161    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.161    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.161    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.161    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.161    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.161    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.161    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.161    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.161    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.161    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.171    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.171    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.171    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.173    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.173    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.174    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta  0:00:08.177    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg  0:00:08.180    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/simplified_contigs.fasta  0:00:08.183    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/intermediate_contigs.fasta  0:00:08.187    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.187    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.187    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.187    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.187    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.187    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.319   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.557   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.333   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.333   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.346    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.494   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.497   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.500   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.503   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.503   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.503   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.517   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.522   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.543    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.543    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.543    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.543    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.543    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.543    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.543    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.543    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.543    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.543    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.543    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.543    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.543    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.543    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.544    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.544    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.544    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.544    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.544    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.544    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.544    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.544    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.544    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.545    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.545    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.545    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.545    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.545    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.545    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.545    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.545    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.545    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.545    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.545    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.545    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.546    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta  0:00:10.550    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg  0:00:10.555    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/final_contigs.paths  0:00:10.561    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/scaffolds.paths  0:00:10.572    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.574    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/21/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="10.279866933822632">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 10.279866933822632, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="49.57455039024353">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "ea1e2351f7fecc6e",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/c/2/c/dataset_c2c9a48d-0c77-4e45-b741-c4679dc3e38a.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/5/9/6/dataset_596bec6d-dec9-443c-9844-be778734c6a6.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-10-28T18:48:16.129009",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dtn95",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0300156ee15ca1d9",  "id": "adedbcbc637107e1",  "inputs": {   "readtype|fastq_in": {    "id": "ea1e2351f7fecc6e",    "src": "hda",    "uuid": "c2c9a48d-0c77-4e45-b741-c4679dc3e38a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1730141310.0000000",    "title": "Job End Time",    "value": "2024-10-28 18:48:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1730141309.0000000",    "title": "Job Start Time",    "value": "2024-10-28 18:48:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "e55b475eb939a410",    "src": "hda",    "uuid": "002dc69d-1399-4de9-890c-88ac6209fa55"   },   "fastq_out": {    "id": "6dbae45d26574d04",    "src": "hda",    "uuid": "596bec6d-dec9-443c-9844-be778734c6a6"   },   "log_file": {    "id": "0cf43bdfac0da5e0",    "src": "hda",    "uuid": "0afde8fe-1521-476d-adb2-03d82feff8a6"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 81, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "update_time": "2024-10-28T18:48:44.707845",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmp711piupftrimmomatic_se_out1.err v. /tmp/tmp0j_upmf0trimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 49.57455039024353, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="33.77782487869263">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="25.919440507888794">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "MAXINFO",  "operations_0|operation|strictness": "0.8",  "operations_0|operation|target_length": "75",  "readtype|fastq_in": {   "id": "246a1e5037268eac",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/3/a/7/dataset_3a722524-a4f0-4a85-8d6d-b53145c3ddc1.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 MAXINFO:75:0.8 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/f/d/7/dataset_fd7d41bd-26b6-4449-9f77-550fbb6ab985.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-10-28T18:54:16.813587",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-62dwp",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0300156ee15ca1d9",  "id": "7efb356e0ed396dd",  "inputs": {   "readtype|fastq_in": {    "id": "246a1e5037268eac",    "src": "hda",    "uuid": "3a722524-a4f0-4a85-8d6d-b53145c3ddc1"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out": {    "id": "cba9d65e1b440492",    "src": "hda",    "uuid": "fd7d41bd-26b6-4449-9f77-550fbb6ab985"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 7, \"name\": \"MAXINFO\", \"strictness\": \"0.8\", \"target_length\": \"75\"}}]",   "output_err": "false",   "output_logs": "false",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 123, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "error",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n",  "update_time": "2024-10-28T18:54:22.191050",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 10, "time_seconds": 25.919440507888794, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="39.67828702926636">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="37.35610771179199">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/78/configs/tmpshy6pbdw:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="36.95277953147888">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="36.36365294456482">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="36.32378053665161">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="22.35969352722168">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 22.35969352722168, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="37.026965379714966">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="36.68665266036987">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="36.97951912879944">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="33.839704751968384">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="41.107160329818726">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>