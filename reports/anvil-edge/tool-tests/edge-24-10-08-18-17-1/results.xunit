<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="96"
           errors="15"
           failures="5"
           skip="0">
    
    <testcase classname="bamtools (Test #1)" name="0" time="35.2558171749115">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Pileup::Run() : Data not sorted correctly!Pileup::Run() : Data not sorted correctly!Pileup::Run() : Data not sorted correctly!
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bamtools (Test #2)" name="1" time="34.552124977111816">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bamtools (Test #3)" name="2" time="34.9256386756897">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Pileup::Run() : Data not sorted correctly!Pileup::Run() : Data not sorted correctly!Pileup::Run() : Data not sorted correctly!
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bamtools (Test #4)" name="3" time="12.644567251205444">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 12.644567251205444, "tool_id": "bamtools", "tool_version": "2.5.2+galaxy2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #1)" name="0" time="36.51460266113281">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #2)" name="1" time="37.284573554992676">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #3)" name="2" time="32.78815698623657">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #4)" name="3" time="34.84263229370117">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #5)" name="4" time="33.46776628494263">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #6)" name="5" time="34.765440940856934">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #7)" name="6" time="10.270477533340454">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 10.270477533340454, "tool_id": "bcftools_annotate", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #8)" name="7" time="31.784232139587402">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #9)" name="8" time="32.59652304649353">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_annotate (Test #10)" name="9" time="32.24991011619568">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_concat (Test #1)" name="0" time="20.710153341293335">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 20.710153341293335, "tool_id": "bcftools_concat", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_concat (Test #2)" name="1" time="39.66486954689026">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Checking the headers and starting positions of 2 files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_concat (Test #3)" name="2" time="11.333175659179688">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.333175659179688, "tool_id": "bcftools_concat", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_concat (Test #4)" name="3" time="34.10991334915161">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Checking the headers and starting positions of 2 files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_concat (Test #5)" name="4" time="12.058788299560547">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.058788299560547, "tool_id": "bcftools_concat", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_concat (Test #6)" name="5" time="34.48426628112793">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Checking the headers and starting positions of 2 files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="column_order_header_sort (Test #1)" name="0" time="40.29216432571411">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_tabular": {   "id": "55fbcd3ef531e1b0",   "src": "hda"  },  "key_column": "1" }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/column_order_header_sort/6ae9724caf4d/column_order_header_sort/column_order_header_sort.py\u0027 \u0027/galaxy/server/database/objects/f/9/0/dataset_f90cb566-e619-46d1-8dde-954121b77583.dat\u0027 \u0027/galaxy/server/database/objects/d/d/8/dataset_dd8537ed-727c-4c81-8cfd-8e2dbeb87390.dat\u0027 \u0027\t\u0027 \u00271\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-10-08T19:14:15.867149",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-w8789",  "galaxy_version": "24.1",  "handler": null,  "history_id": "fddecb9ec70bca0e",  "id": "8223dd8f9cbbe45d",  "inputs": {   "input_tabular": {    "id": "55fbcd3ef531e1b0",    "src": "hda",    "uuid": "f90cb566-e619-46d1-8dde-954121b77583"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1728414863.0000000",    "title": "Job End Time",    "value": "2024-10-08 19:14:23"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1728414863.0000000",    "title": "Job Start Time",    "value": "2024-10-08 19:14:23"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_tabular": {    "id": "7934f5bd32d53cd7",    "src": "hda",    "uuid": "dd8537ed-727c-4c81-8cfd-8e2dbeb87390"   }  },  "params": {   "__input_ext": "\"tabular\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "key_column": "\"1\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/column_order_header_sort/column_order_header_sort/0.0.1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-10-08T19:14:35.977267",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output_tabular:  different than expected, difference (using diff):\n( /tmp/tmp_8ilhhl2out_1.tabular v. /tmp/tmp996qz0llout_1.tabular )\n--- local_file\n+++ history_data\n@@ -1,4 +1,4 @@\n #KEY\ta\tb\tc\n one\t1-3\t1-1\t1-2\n two\t1-6\t1-4\t1-5\n-three\t1-9\t1-7\t1-8+three\t1-9\t1-7\t1-8\n" ], "status": "failure", "test_index": 0, "time_seconds": 40.29216432571411, "tool_id": "column_order_header_sort", "tool_version": "0.0.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_compute_gc_bias (Test #1)" name="0" time="51.451220750808716">
        
            
            <system-out><![CDATA[
            2bit: /galaxy/server/database/objects/b/e/7/dataset_be7df664-c972-4c4e-8d84-059a7c0dbf02.datbam: local_bamInput.bamfilter_out: Noneextra_sampling_file: Nonegenome_size: 10050total_reads: 12589reads_per_bp: 1.252636815920398max_reads: 1553.0min_reads: 82.0computing frequenciesstepSize: 1005
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #1)" name="0" time="10.22312879562378">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.22312879562378, "tool_id": "fastq_manipulation", "tool_version": "1.1.5"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #2)" name="1" time="37.0738000869751">
        
            
            <system-out><![CDATA[
            Manipulated 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #11)" name="10" time="31.56686568260193">
        
            
            <system-out><![CDATA[
            Manipulated 1 of 2 reads (50.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #12)" name="11" time="33.33201479911804">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #13)" name="12" time="32.6058669090271">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #14)" name="13" time="31.753735780715942">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #15)" name="14" time="32.76235270500183">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #3)" name="2" time="32.044419288635254">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #4)" name="3" time="32.44895839691162">
        
            
            <system-out><![CDATA[
            Manipulated 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #5)" name="4" time="31.266140699386597">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #6)" name="5" time="31.414246559143066">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #7)" name="6" time="32.47404885292053">
        
            
            <system-out><![CDATA[
            Manipulated 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #8)" name="7" time="10.775060176849365">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 10.775060176849365, "tool_id": "fastq_manipulation", "tool_version": "1.1.5"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #9)" name="8" time="31.8365261554718">
        
            
            <system-out><![CDATA[
            Manipulated 4 of 4 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_manipulation (Test #10)" name="9" time="32.18874478340149">
        
            
            <system-out><![CDATA[
            Manipulated 1 of 2 reads (50.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #1)" name="0" time="12.14615774154663">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.14615774154663, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #2)" name="1" time="21.505815505981445">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 21.505815505981445, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #3)" name="2" time="41.088650703430176">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 100,"n_unique": 100,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Tue Oct  8 18:53:31 2024","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . /galaxy/server/database/objects/1/d/e/dataset_1de6779b-13c6-4e4e-99f1-30b44a1c7517.dat /galaxy/server/database/objects/d/7/f/dataset_d7f9a9d3-4f0d-4c1d-9c91-858aba9c96a9.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/1/d/e/dataset_1de6779b-13c6-4e4e-99f1-30b44a1c7517.dat                             /galaxy/server/database/objects/d/7/f/dataset_d7f9a9d3-4f0d-4c1d-9c91-858aba9c96a9.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned[quant] estimated average fragment length: 499.12[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #4)" name="3" time="34.524249792099">
        
            
            <system-out><![CDATA[
            {"n_targets": 1,"n_bootstraps": 0,"n_processed": 100,"n_pseudoaligned": 100,"n_unique": 100,"p_pseudoaligned": 100.0,"p_unique": 100.0,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Tue Oct  8 18:54:05 2024","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . --single --fragment-length 200 --sd 20 /galaxy/server/database/objects/6/5/c/dataset_65c53660-af2f-44ea-aa03-f008929659c1.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 1 contigs and contains 16269 k-mers [quant] fragment length distribution is truncated gaussian with mean = 200, sd = 20[index] k-mer length: 31[index] number of targets: 1[index] number of k-mers: 16,269[index] number of equivalence classes: 1[quant] running in single-end mode[quant] will process file 1: /galaxy/server/database/objects/6/5/c/dataset_65c53660-af2f-44ea-aa03-f008929659c1.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 100 reads, 100 reads pseudoaligned[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 52 rounds
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #5)" name="4" time="19.65627956390381">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 19.65627956390381, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #6)" name="5" time="20.637507915496826">
        
            <error type="error" message="parameter 'index': an invalid option (None) was selected, please verify"><![CDATA[
                { "dynamic_param_error": true, "execution_problem": "parameter \u0027index\u0027: an invalid option (None) was selected, please verify", "inputs": {  "pseudobam": true,  "single_paired|forward": {   "id": "7e156fcafece3d3e",   "src": "hda"  },  "single_paired|reverse": {   "id": "f5bb77e2d0a4248a",   "src": "hda"  },  "single_paired|single_paired_selector": "paired_single" }, "status": "error", "test_index": 5, "time_seconds": 20.637507915496826, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #7)" name="6" time="11.52605390548706">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 11.52605390548706, "tool_id": "kallisto_quant", "tool_version": "0.48.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="kallisto_quant (Test #8)" name="7" time="50.07500720024109">
        
            
            <system-out><![CDATA[
            {"n_targets": 15,"n_bootstraps": 0,"n_processed": 10000,"n_pseudoaligned": 10000,"n_unique": 6937,"p_pseudoaligned": 100.0,"p_unique": 69.4,"kallisto_version": "0.48.0","index_version": 10,"start_time": "Tue Oct  8 18:55:47 2024","call": "kallisto quant -i reference.kallisto --bootstrap-samples 0 --seed 42 --threads 8 -o . --genomebam --gtf /galaxy/server/database/objects/0/d/3/dataset_0d3862f0-4562-48be-a01d-0b805b26392b.dat --chromosomes /galaxy/server/database/objects/e/7/3/dataset_e7326bbf-d74b-4f2d-a35b-7e8873aad582.dat /galaxy/server/database/objects/c/7/2/dataset_c72ef384-00e4-4fba-bc25-2a44f502177c.dat /galaxy/server/database/objects/f/0/d/dataset_f0d64451-5e4d-4a8c-96a0-fc1308bba6b9.dat"}
            ]]></system-out>
            <system-err><![CDATA[
            [build] loading fasta file reference.fa[build] k-mer length: 31[build] counting k-mers ... done.[build] building target de Bruijn graph ...  done [build] creating equivalence classes ...  done[build] target de Bruijn graph has 23 contigs and contains 18902 k-mers [quant] fragment length distribution will be estimated from the data[index] k-mer length: 31[index] number of targets: 15[index] number of k-mers: 18,902[index] number of equivalence classes: 22[quant] running in paired-end mode[quant] will process pair 1: /galaxy/server/database/objects/c/7/2/dataset_c72ef384-00e4-4fba-bc25-2a44f502177c.dat                             /galaxy/server/database/objects/f/0/d/dataset_f0d64451-5e4d-4a8c-96a0-fc1308bba6b9.dat[quant] finding pseudoalignments for the reads ... done[quant] processed 10,000 reads, 10,000 reads pseudoaligned[quant] estimated average fragment length: 178.097[   em] quantifying the abundances ... done[   em] the Expectation-Maximization algorithm ran for 62 rounds[  bam] writing pseudoalignments to BAM format .. done[  bam] sorting BAM files .. done[  bam] indexing BAM file .. done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_show_coords (Test #1)" name="0" time="37.39230823516846">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="music_inspect_eset (Test #1)" name="0" time="83.1916024684906">
        
            
            <system-out><![CDATA[
            ExpressionSet (storageMode: lockedEnvironment)assayData: 2066 features, 250 samples   element names: exprs protocolData: nonephenoData  sampleNames: AZ_A10 AZ_A11 ... HP1502401_K15 (250 total)  varLabels: sampleID SubjectName cellTypeID cellType  varMetadata: labelDescriptionfeatureData: noneexperimentData: use 'experimentData(object)'Annotation:  
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="music_inspect_eset (Test #1)" name="0" time="36.9819700717926">
        
            
            <system-out><![CDATA[
            ExpressionSet (storageMode: lockedEnvironment)assayData: 2066 features, 250 samples   element names: exprs protocolData: nonephenoData  sampleNames: AZ_A10 AZ_A11 ... HP1502401_K15 (250 total)  varLabels: sampleID SubjectName cellTypeID cellType  varMetadata: labelDescriptionfeatureData: noneexperimentData: use 'experimentData(object)'Annotation:  
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="music_inspect_eset (Test #2)" name="1" time="37.282058000564575">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="music_inspect_eset (Test #2)" name="1" time="36.49880933761597">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="music_inspect_eset (Test #3)" name="2" time="11.542566061019897">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.542566061019897, "tool_id": "music_inspect_eset", "tool_version": "0.1.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="music_inspect_eset (Test #3)" name="2" time="37.46201777458191">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #1)" name="0" time="44.08777070045471">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #2)" name="1" time="36.27943706512451">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #11)" name="10" time="16.09659194946289">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #3)" name="2" time="38.700385093688965">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #4)" name="3" time="38.01919364929199">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #5)" name="4" time="19.55588674545288">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #6)" name="5" time="22.41838812828064">
        
            
            <system-out><![CDATA[
            NCBI Entrez returned error code 400, are ID(s) CP0XXXXX valid?
            ]]></system-out>
            <system-err><![CDATA[
            Failed to download file with id CP0XXXXX from NCBI
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #7)" name="6" time="15.563411951065063">
        
            
            <system-out><![CDATA[
            NCBI Entrez returned error code 400, are ID(s) CP0XXXXX valid?
            ]]></system-out>
            <system-err><![CDATA[
            Failed to download file with id CP0XXXXX from NCBI
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #8)" name="7" time="17.190027952194214">
        
            
            <system-out><![CDATA[
            NCBI Entrez returned error code 400, are ID(s) CP0XXXXX valid?
            ]]></system-out>
            <system-err><![CDATA[
            Failed to download file with id CP0XXXXX from NCBI
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #9)" name="8" time="18.585549116134644">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ncbi_acc_download (Test #10)" name="9" time="15.79516315460205">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_squiggle (Test #1)" name="0" time="65.53653526306152">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_squiggle (Test #2)" name="1" time="42.808218002319336">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #1)" name="0" time="62.76719927787781">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #1)" name="0" time="35.86490201950073">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #2)" name="1" time="36.50884532928467">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #2)" name="1" time="34.47175645828247">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #3)" name="2" time="36.37023425102234">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #3)" name="2" time="36.42472863197327">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #4)" name="3" time="37.09551191329956">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #4)" name="3" time="36.12922954559326">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #5)" name="4" time="36.33562254905701">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #5)" name="4" time="36.61154532432556">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #6)" name="5" time="28.824493646621704">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "diffgtest|do_opt": "yes",  "diffgtest|set_a|meth|selector": "1,2",  "diffgtest|set_a|meth|type": "cln",  "diffgtest|set_a|name_set": "Test set A",  "diffgtest|set_b|meth|selector": "3,4,6",  "diffgtest|set_b|meth|type": "cln",  "diffgtest|set_b|name_set": "Test set B",  "gois|do_opt": "no",  "inputrds": {   "id": "4abff22c4a626790",   "src": "hda"  },  "plotsym|do_opt": "no" }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspectclusters/f3eb2291da05/raceid_inspectclusters/scripts/clusterinspect.R\u0027 \u0027/galaxy/server/database/jobs_directory/000/130/configs/tmpzvh_3kv3\u0027 \u0026\u003e \u0027/galaxy/server/database/objects/0/c/f/dataset_0cf7282f-78b9-40c2-bae6-1343fffeac52.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-10-08T19:08:18.794271",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-h6v9x",  "galaxy_version": "24.1",  "handler": null,  "history_id": "fddecb9ec70bca0e",  "id": "1e221d91b155eb33",  "inputs": {   "inputrds": {    "id": "4abff22c4a626790",    "src": "hda",    "uuid": "7c43e928-ea08-4b41-a1f5-50a91fbd1622"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outlog": {    "id": "0bf76bf395536cbb",    "src": "hda",    "uuid": "0cf7282f-78b9-40c2-bae6-1343fffeac52"   },   "outpdf": {    "id": "14091f1fa467fc97",    "src": "hda",    "uuid": "9cd13dd1-223f-4d13-a9b5-9ec1a73abefd"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "diffgtest": "{\"__current_case__\": 1, \"do_opt\": \"yes\", \"set_a\": {\"meth\": {\"__current_case__\": 0, \"selector\": \"1,2\", \"type\": \"cln\"}, \"name_set\": \"Test set A\"}, \"set_b\": {\"meth\": {\"__current_case__\": 0, \"selector\": \"3,4,6\", \"type\": \"cln\"}, \"name_set\": \"Test set B\"}, \"use\": {\"__current_case__\": 0, \"def\": \"yes\"}}",   "gois": "{\"__current_case__\": 0, \"do_opt\": \"no\"}",   "plotgen": "{\"__current_case__\": 1, \"clusts_plot\": \"\", \"do_opt\": \"yes\"}",   "plotsym": "{\"__current_case__\": 0, \"do_opt\": \"no\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspectclusters/raceid_inspectclusters/0.2.3+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-10-08T19:08:26.566444",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspectclusters/raceid_inspectclusters/0.2.3+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspectclusters/raceid_inspectclusters/0.2.3+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 28.824493646621704, "tool_id": "raceid_inspectclusters", "tool_version": "0.2.3+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspectclusters (Test #6)" name="5" time="35.986435651779175">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="racon (Test #1)" name="0" time="75.91914391517639">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [racon::Polisher::initialize] loaded target sequences 0.001251 s[racon::Polisher::initialize] loaded sequences 0.012767 s[racon::Polisher::initialize] loaded overlaps 0.009447 s[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.002049 s[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.002155 s[racon::Polisher::initialize] aligning overlaps [===>                ] 0.002223 s[racon::Polisher::initialize] aligning overlaps [====>               ] 0.002328 s[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.002467 s[racon::Polisher::initialize] aligning overlaps [======>             ] 0.002591 s[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.002765 s[racon::Polisher::initialize] aligning overlaps [========>           ] 0.002787 s[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.002824 s[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.002867 s[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.002877 s[racon::Polisher::initialize] aligning overlaps [============>       ] 0.002977 s[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.002986 s[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.002994 s[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.003002 s[racon::Polisher::initialize] aligning overlaps [================>   ] 0.003008 s[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.003035 s[racon::Polisher::initialize] aligning overlaps [==================> ] 0.003079 s[racon::Polisher::initialize] aligning overlaps [===================>] 0.003090 s[racon::Polisher::initialize] aligning overlaps [====================] 0.003123 s[racon::Polisher::initialize] transformed data into windows 0.000302 s[racon::Polisher::polish] generating consensus [=>                  ] 0.065265 s[racon::Polisher::polish] generating consensus [==>                 ] 0.071231 s[racon::Polisher::polish] generating consensus [===>                ] 0.081450 s[racon::Polisher::polish] generating consensus [====>               ] 0.088818 s[racon::Polisher::polish] generating consensus [=====>              ] 0.088849 s[racon::Polisher::polish] generating consensus [======>             ] 0.098654 s[racon::Polisher::polish] generating consensus [=======>            ] 0.123298 s[racon::Polisher::polish] generating consensus [========>           ] 0.123624 s[racon::Polisher::polish] generating consensus [=========>          ] 0.145986 s[racon::Polisher::polish] generating consensus [==========>         ] 0.179646 s[racon::Polisher::polish] generating consensus [===========>        ] 0.208647 s[racon::Polisher::polish] generating consensus [============>       ] 0.240994 s[racon::Polisher::polish] generating consensus [=============>      ] 0.241051 s[racon::Polisher::polish] generating consensus [==============>     ] 0.264606 s[racon::Polisher::polish] generating consensus [===============>    ] 0.271132 s[racon::Polisher::polish] generating consensus [================>   ] 0.275691 s[racon::Polisher::polish] generating consensus [=================>  ] 0.275726 s[racon::Polisher::polish] generating consensus [==================> ] 0.320059 s[racon::Polisher::polish] generating consensus [===================>] 0.324435 s[racon::Polisher::polish] generating consensus [====================] 0.324575 s[racon::Polisher::] total = 0.355364 s
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="racon (Test #2)" name="1" time="38.78645944595337">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [racon::Polisher::initialize] loaded target sequences 0.001193 s[racon::Polisher::initialize] loaded sequences 0.012636 s[racon::Polisher::initialize] loaded overlaps 0.000913 s[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.012067 s[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.017796 s[racon::Polisher::initialize] aligning overlaps [===>                ] 0.021570 s[racon::Polisher::initialize] aligning overlaps [====>               ] 0.025026 s[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.028310 s[racon::Polisher::initialize] aligning overlaps [======>             ] 0.029107 s[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.037949 s[racon::Polisher::initialize] aligning overlaps [========>           ] 0.039341 s[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.049130 s[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.058604 s[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.063148 s[racon::Polisher::initialize] aligning overlaps [============>       ] 0.067641 s[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.076678 s[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.079741 s[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.086662 s[racon::Polisher::initialize] aligning overlaps [================>   ] 0.090840 s[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.090859 s[racon::Polisher::initialize] aligning overlaps [==================> ] 0.090865 s[racon::Polisher::initialize] aligning overlaps [===================>] 0.090871 s[racon::Polisher::initialize] aligning overlaps [====================] 0.094992 s[racon::Polisher::initialize] transformed data into windows 0.000305 s[racon::Polisher::polish] generating consensus [=>                  ] 0.018578 s[racon::Polisher::polish] generating consensus [==>                 ] 0.018609 s[racon::Polisher::polish] generating consensus [===>                ] 0.040585 s[racon::Polisher::polish] generating consensus [====>               ] 0.040661 s[racon::Polisher::polish] generating consensus [=====>              ] 0.050271 s[racon::Polisher::polish] generating consensus [======>             ] 0.050307 s[racon::Polisher::polish] generating consensus [=======>            ] 0.057348 s[racon::Polisher::polish] generating consensus [========>           ] 0.057444 s[racon::Polisher::polish] generating consensus [=========>          ] 0.066474 s[racon::Polisher::polish] generating consensus [==========>         ] 0.066508 s[racon::Polisher::polish] generating consensus [===========>        ] 0.079355 s[racon::Polisher::polish] generating consensus [============>       ] 0.079389 s[racon::Polisher::polish] generating consensus [=============>      ] 0.104083 s[racon::Polisher::polish] generating consensus [==============>     ] 0.110763 s[racon::Polisher::polish] generating consensus [===============>    ] 0.134311 s[racon::Polisher::polish] generating consensus [================>   ] 0.138508 s[racon::Polisher::polish] generating consensus [=================>  ] 0.155913 s[racon::Polisher::polish] generating consensus [==================> ] 0.155965 s[racon::Polisher::polish] generating consensus [===================>] 0.173443 s[racon::Polisher::polish] generating consensus [====================] 0.186361 s[racon::Polisher::] total = 0.300343 s
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="racon (Test #3)" name="2" time="36.28594207763672">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "corrected_reads": {   "id": "5ef05a6f4b84acd4",   "src": "hda"  },  "fragment_correction": false,  "gap": "-3",  "include_unpolished": false,  "match": "7",  "mismatch": "-4",  "no_trimming": true,  "overlaps": {   "id": "dce8f90abb3af290",   "src": "hda"  },  "quality_threshold": "9.0",  "reads": {   "id": "a8bf4c3ba0df7d66",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/7/c/5/dataset_7c549dc6-99eb-40af-a910-21103d194e7e.dat\u0027 reads.fasta \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/6/7/e/dataset_67e0ec46-ccd4-4ac6-b2f7-645ceecf0dbe.dat\u0027 overlaps.sam \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/6/2/9/dataset_6296ab32-6fdd-4d20-b1b5-eca0239186d8.dat\u0027 corrected_reads.fasta \u0026\u0026  racon reads.fasta overlaps.sam corrected_reads.fasta -t ${GALAXY_SLOTS:-4}   -w 500 -q 9.0 -e 0.3 --no-trimming -m 7 -x -4 -g -3 \u003e racon_polished_consensus.fa",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-10-08T18:36:45.140794",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-lgbdr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "fddecb9ec70bca0e",  "id": "c6adab250266c9ef",  "inputs": {   "corrected_reads": {    "id": "5ef05a6f4b84acd4",    "src": "hda",    "uuid": "6296ab32-6fdd-4d20-b1b5-eca0239186d8"   },   "overlaps": {    "id": "dce8f90abb3af290",    "src": "hda",    "uuid": "67e0ec46-ccd4-4ac6-b2f7-645ceecf0dbe"   },   "reads": {    "id": "a8bf4c3ba0df7d66",    "src": "hda",    "uuid": "7c549dc6-99eb-40af-a910-21103d194e7e"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "consensus": {    "id": "c6adab250266c9ef",    "src": "hda",    "uuid": "f9bcbdc7-6e75-48a3-9b88-3dff6a88b01e"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "error_threshold": "\"0.3\"",   "fragment_correction": "false",   "gap": "\"-3\"",   "include_unpolished": "false",   "match": "\"7\"",   "mismatch": "\"-4\"",   "no_trimming": "true",   "quality_threshold": "\"9.0\"",   "window_length": "\"500\""  },  "state": "error",  "stderr": "[racon::Polisher::initialize] loaded target sequences 0.001609 s\n[racon::Polisher::initialize] loaded sequences 0.012738 s\n[racon::Polisher::initialize] loaded overlaps 0.009554 s\n[racon::Polisher::initialize] aligning overlaps [=\u003e                  ] 0.002125 s\r[racon::Polisher::initialize] aligning overlaps [==\u003e                 ] 0.002222 s\r[racon::Polisher::initialize] aligning overlaps [===\u003e                ] 0.002384 s\r[racon::Polisher::initialize] aligning overlaps [====\u003e               ] 0.002411 s\r[racon::Polisher::initialize] aligning overlaps [=====\u003e              ] 0.002506 s\r[racon::Polisher::initialize] aligning overlaps [======\u003e             ] 0.002585 s\r[racon::Polisher::initialize] aligning overlaps [=======\u003e            ] 0.002626 s\r[racon::Polisher::initialize] aligning overlaps [========\u003e           ] 0.002854 s\r[racon::Polisher::initialize] aligning overlaps [=========\u003e          ] 0.002891 s\r[racon::Polisher::initialize] aligning overlaps [==========\u003e         ] 0.002898 s\r[racon::Polisher::initialize] aligning overlaps [===========\u003e        ] 0.002966 s\r[racon::Polisher::initialize] aligning overlaps [============\u003e       ] 0.003032 s\r[racon::Polisher::initialize] aligning overlaps [=============\u003e      ] 0.003038 s\r[racon::Polisher::initialize] aligning overlaps [==============\u003e     ] 0.003065 s\r[racon::Polisher::initialize] aligning overlaps [===============\u003e    ] 0.003071 s\r[racon::Polisher::initialize] aligning overlaps [================\u003e   ] 0.003144 s\r[racon::Polisher::initialize] aligning overlaps [=================\u003e  ] 0.003223 s\r[racon::Polisher::initialize] aligning overlaps [==================\u003e ] 0.003231 s\r[racon::Polisher::initialize] aligning overlaps [===================\u003e] 0.003238 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.003244 s\n[racon::Polisher::initialize] transformed data into windows 0.000419 s\n[racon::Polisher::polish] generating consensus [=\u003e                  ] 0.030422 s\r[racon::Polisher::polish] generating consensus [==\u003e                 ] 0.030477 s\r[racon::Polisher::polish] generating consensus [===\u003e                ] 0.048166 s\r[racon::Polisher::polish] generating consensus [====\u003e               ] 0.048221 s\r[racon::Polisher::polish] generating consensus [=====\u003e              ] 0.056233 s\r[racon::Polisher::polish] generating consensus [======\u003e             ] 0.056259 s\r[racon::Polisher::polish] generating consensus [=======\u003e            ] 0.065366 s\r[racon::Polisher::polish] generating consensus [========\u003e           ] 0.065483 s\r[racon::Polisher::polish] generating consensus [=========\u003e          ] 0.075144 s\r[racon::Polisher::polish] generating consensus [==========\u003e         ] 0.077277 s\r[racon::Polisher::polish] generating consensus [===========\u003e        ] 0.095037 s\r[racon::Polisher::polish] generating consensus [============\u003e       ] 0.100515 s\r[racon::Polisher::polish] generating consensus [=============\u003e      ] 0.126419 s\r[racon::Polisher::polish] generating consensus [==============\u003e     ] 0.135249 s\r[racon::Polisher::polish] generating consensus [===============\u003e    ] 0.152197 s\r[racon::Polisher::polish] generating consensus [================\u003e   ] 0.162727 s\r[racon::Polisher::polish] generating consensus [=================\u003e  ] 0.167947 s\r[racon::Polisher::polish] generating consensus [==================\u003e ] 0.176780 s\r[racon::Polisher::polish] generating consensus [===================\u003e] 0.183509 s\r[racon::Polisher::polish] generating consensus [====================] 0.205902 s\n[racon::Polisher::] total = 0.237093 s\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.5.0+galaxy1",  "tool_stderr": "[racon::Polisher::initialize] loaded target sequences 0.001609 s\n[racon::Polisher::initialize] loaded sequences 0.012738 s\n[racon::Polisher::initialize] loaded overlaps 0.009554 s\n[racon::Polisher::initialize] aligning overlaps [=\u003e                  ] 0.002125 s\r[racon::Polisher::initialize] aligning overlaps [==\u003e                 ] 0.002222 s\r[racon::Polisher::initialize] aligning overlaps [===\u003e                ] 0.002384 s\r[racon::Polisher::initialize] aligning overlaps [====\u003e               ] 0.002411 s\r[racon::Polisher::initialize] aligning overlaps [=====\u003e              ] 0.002506 s\r[racon::Polisher::initialize] aligning overlaps [======\u003e             ] 0.002585 s\r[racon::Polisher::initialize] aligning overlaps [=======\u003e            ] 0.002626 s\r[racon::Polisher::initialize] aligning overlaps [========\u003e           ] 0.002854 s\r[racon::Polisher::initialize] aligning overlaps [=========\u003e          ] 0.002891 s\r[racon::Polisher::initialize] aligning overlaps [==========\u003e         ] 0.002898 s\r[racon::Polisher::initialize] aligning overlaps [===========\u003e        ] 0.002966 s\r[racon::Polisher::initialize] aligning overlaps [============\u003e       ] 0.003032 s\r[racon::Polisher::initialize] aligning overlaps [=============\u003e      ] 0.003038 s\r[racon::Polisher::initialize] aligning overlaps [==============\u003e     ] 0.003065 s\r[racon::Polisher::initialize] aligning overlaps [===============\u003e    ] 0.003071 s\r[racon::Polisher::initialize] aligning overlaps [================\u003e   ] 0.003144 s\r[racon::Polisher::initialize] aligning overlaps [=================\u003e  ] 0.003223 s\r[racon::Polisher::initialize] aligning overlaps [==================\u003e ] 0.003231 s\r[racon::Polisher::initialize] aligning overlaps [===================\u003e] 0.003238 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.003244 s\n[racon::Polisher::initialize] transformed data into windows 0.000419 s\n[racon::Polisher::polish] generating consensus [=\u003e                  ] 0.030422 s\r[racon::Polisher::polish] generating consensus [==\u003e                 ] 0.030477 s\r[racon::Polisher::polish] generating consensus [===\u003e                ] 0.048166 s\r[racon::Polisher::polish] generating consensus [====\u003e               ] 0.048221 s\r[racon::Polisher::polish] generating consensus [=====\u003e              ] 0.056233 s\r[racon::Polisher::polish] generating consensus [======\u003e             ] 0.056259 s\r[racon::Polisher::polish] generating consensus [=======\u003e            ] 0.065366 s\r[racon::Polisher::polish] generating consensus [========\u003e           ] 0.065483 s\r[racon::Polisher::polish] generating consensus [=========\u003e          ] 0.075144 s\r[racon::Polisher::polish] generating consensus [==========\u003e         ] 0.077277 s\r[racon::Polisher::polish] generating consensus [===========\u003e        ] 0.095037 s\r[racon::Polisher::polish] generating consensus [============\u003e       ] 0.100515 s\r[racon::Polisher::polish] generating consensus [=============\u003e      ] 0.126419 s\r[racon::Polisher::polish] generating consensus [==============\u003e     ] 0.135249 s\r[racon::Polisher::polish] generating consensus [===============\u003e    ] 0.152197 s\r[racon::Polisher::polish] generating consensus [================\u003e   ] 0.162727 s\r[racon::Polisher::polish] generating consensus [=================\u003e  ] 0.167947 s\r[racon::Polisher::polish] generating consensus [==================\u003e ] 0.176780 s\r[racon::Polisher::polish] generating consensus [===================\u003e] 0.183509 s\r[racon::Polisher::polish] generating consensus [====================] 0.205902 s\n[racon::Polisher::] total = 0.237093 s\n",  "tool_stdout": "",  "update_time": "2024-10-08T18:36:57.017995",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.5.0+galaxy1, exit_code: None, stderr: [racon::Polisher::initialize] loaded target sequences 0.001609 s\n[racon::Polisher::initialize] loaded sequences 0.012738 s\n[racon::Polisher::initialize] loaded overlaps 0.009554 s\n[racon::Polisher::initialize] aligning overlaps [=\u003e                  ] 0.002125 s\r[racon::Polisher::initialize] aligning overlaps [==\u003e                 ] 0.002222 s\r[racon::Polisher::initialize] aligning overlaps [===\u003e                ] 0.002384 s\r[racon::Polisher::initialize] aligning overlaps [====\u003e               ] 0.002411 s\r[racon::Polisher::initialize] aligning overlaps [=====\u003e              ] 0.002506 s\r[racon::Polisher::initialize] aligning overlaps [======\u003e             ] 0.002585 s\r[racon::Polisher::initialize] aligning overlaps [=======\u003e            ] 0.002626 s\r[racon::Polisher::initialize] aligning overlaps [========\u003e           ] 0.002854 s\r[racon::Polisher::initialize] aligning overlaps [=========\u003e          ] 0.002891 s\r[racon::Polisher::initialize] aligning overlaps [==========\u003e         ] 0.002898 s\r[racon::Polisher::initialize] aligning overlaps [===========\u003e        ] 0.002966 s\r[racon::Polisher::initialize] aligning overlaps [============\u003e       ] 0.003032 s\r[racon::Polisher::initialize] aligning overlaps [=============\u003e      ] 0.003038 s\r[racon::Polisher::initialize] aligning overlaps [==============\u003e     ] 0.003065 s\r[racon::Polisher::initialize] aligning overlaps [===============\u003e    ] 0.003071 s\r[racon::Polisher::initialize] aligning overlaps [================\u003e   ] 0.003144 s\r[racon::Polisher::initialize] aligning overlaps [=================\u003e  ] 0.003223 s\r[racon::Polisher::initialize] aligning overlaps [==================\u003e ] 0.003231 s\r[racon::Polisher::initialize] aligning overlaps [===================\u003e] 0.003238 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.003244 s\n[racon::Polisher::initialize] transformed data into windows 0.000419 s\n[racon::Polisher::polish] generating consensus [=\u003e                  ] 0.030422 s\r[racon::Polisher::polish] generating consensus [==\u003e                 ] 0.030477 s\r[racon::Polisher::polish] generating consensus [===\u003e                ] 0.048166 s\r[racon::Polisher::polish] generating consensus [====\u003e               ] 0.048221 s\r[racon::Polisher::polish] generating consensus [=====\u003e              ] 0.056233 s\r[racon::Polisher::polish] generating consensus [======\u003e             ] 0.056259 s\r[racon::Polisher::polish] generating consensus [=======\u003e            ] 0.065366 s\r[racon::Polisher::polish] generating consensus [========\u003e           ] 0.065483 s\r[racon::Polisher::polish] generating consensus [=========\u003e          ] 0.075144 s\r[racon::Polisher::polish] generating consensus [==========\u003e         ] 0.077277 s\r[racon::Polisher::polish] generating consensus [===========\u003e        ] 0.095037 s\r[racon::Polisher::polish] generating consensus [============\u003e       ] 0.100515 s\r[racon::Polisher::polish] generating consensus [=============\u003e      ] 0.126419 s\r[racon::Polisher::polish] generating consensus [==============\u003e     ] 0.135249 s\r[racon::Polisher::polish] generating consensus [===============\u003e    ] 0.152197 s\r[racon::Polisher::polish] generating consensus [================\u003e   ] 0.162727 s\r[racon::Polisher::polish] generating consensus [=================\u003e  ] 0.167947 s\r[racon::Polisher::polish] generating consensus [==================\u003e ] 0.176780 s\r[racon::Polisher::polish] generating consensus [===================\u003e] 0.183509 s\r[racon::Polisher::polish] generating consensus [====================] 0.205902 s\n[racon::Polisher::] total = 0.237093 s\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/racon/racon/1.5.0+galaxy1, exit_code: None, stderr: [racon::Polisher::initialize] loaded target sequences 0.001609 s\n[racon::Polisher::initialize] loaded sequences 0.012738 s\n[racon::Polisher::initialize] loaded overlaps 0.009554 s\n[racon::Polisher::initialize] aligning overlaps [=\u003e                  ] 0.002125 s\r[racon::Polisher::initialize] aligning overlaps [==\u003e                 ] 0.002222 s\r[racon::Polisher::initialize] aligning overlaps [===\u003e                ] 0.002384 s\r[racon::Polisher::initialize] aligning overlaps [====\u003e               ] 0.002411 s\r[racon::Polisher::initialize] aligning overlaps [=====\u003e              ] 0.002506 s\r[racon::Polisher::initialize] aligning overlaps [======\u003e             ] 0.002585 s\r[racon::Polisher::initialize] aligning overlaps [=======\u003e            ] 0.002626 s\r[racon::Polisher::initialize] aligning overlaps [========\u003e           ] 0.002854 s\r[racon::Polisher::initialize] aligning overlaps [=========\u003e          ] 0.002891 s\r[racon::Polisher::initialize] aligning overlaps [==========\u003e         ] 0.002898 s\r[racon::Polisher::initialize] aligning overlaps [===========\u003e        ] 0.002966 s\r[racon::Polisher::initialize] aligning overlaps [============\u003e       ] 0.003032 s\r[racon::Polisher::initialize] aligning overlaps [=============\u003e      ] 0.003038 s\r[racon::Polisher::initialize] aligning overlaps [==============\u003e     ] 0.003065 s\r[racon::Polisher::initialize] aligning overlaps [===============\u003e    ] 0.003071 s\r[racon::Polisher::initialize] aligning overlaps [================\u003e   ] 0.003144 s\r[racon::Polisher::initialize] aligning overlaps [=================\u003e  ] 0.003223 s\r[racon::Polisher::initialize] aligning overlaps [==================\u003e ] 0.003231 s\r[racon::Polisher::initialize] aligning overlaps [===================\u003e] 0.003238 s\r[racon::Polisher::initialize] aligning overlaps [====================] 0.003244 s\n[racon::Polisher::initialize] transformed data into windows 0.000419 s\n[racon::Polisher::polish] generating consensus [=\u003e                  ] 0.030422 s\r[racon::Polisher::polish] generating consensus [==\u003e                 ] 0.030477 s\r[racon::Polisher::polish] generating consensus [===\u003e                ] 0.048166 s\r[racon::Polisher::polish] generating consensus [====\u003e               ] 0.048221 s\r[racon::Polisher::polish] generating consensus [=====\u003e              ] 0.056233 s\r[racon::Polisher::polish] generating consensus [======\u003e             ] 0.056259 s\r[racon::Polisher::polish] generating consensus [=======\u003e            ] 0.065366 s\r[racon::Polisher::polish] generating consensus [========\u003e           ] 0.065483 s\r[racon::Polisher::polish] generating consensus [=========\u003e          ] 0.075144 s\r[racon::Polisher::polish] generating consensus [==========\u003e         ] 0.077277 s\r[racon::Polisher::polish] generating consensus [===========\u003e        ] 0.095037 s\r[racon::Polisher::polish] generating consensus [============\u003e       ] 0.100515 s\r[racon::Polisher::polish] generating consensus [=============\u003e      ] 0.126419 s\r[racon::Polisher::polish] generating consensus [==============\u003e     ] 0.135249 s\r[racon::Polisher::polish] generating consensus [===============\u003e    ] 0.152197 s\r[racon::Polisher::polish] generating consensus [================\u003e   ] 0.162727 s\r[racon::Polisher::polish] generating consensus [=================\u003e  ] 0.167947 s\r[racon::Polisher::polish] generating consensus [==================\u003e ] 0.176780 s\r[racon::Polisher::polish] generating consensus [===================\u003e] 0.183509 s\r[racon::Polisher::polish] generating consensus [====================] 0.205902 s\n[racon::Polisher::] total = 0.237093 s\n." ], "status": "failure", "test_index": 2, "time_seconds": 36.28594207763672, "tool_id": "racon", "tool_version": "1.5.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [racon::Polisher::initialize] loaded target sequences 0.001609 s[racon::Polisher::initialize] loaded sequences 0.012738 s[racon::Polisher::initialize] loaded overlaps 0.009554 s[racon::Polisher::initialize] aligning overlaps [=>                  ] 0.002125 s[racon::Polisher::initialize] aligning overlaps [==>                 ] 0.002222 s[racon::Polisher::initialize] aligning overlaps [===>                ] 0.002384 s[racon::Polisher::initialize] aligning overlaps [====>               ] 0.002411 s[racon::Polisher::initialize] aligning overlaps [=====>              ] 0.002506 s[racon::Polisher::initialize] aligning overlaps [======>             ] 0.002585 s[racon::Polisher::initialize] aligning overlaps [=======>            ] 0.002626 s[racon::Polisher::initialize] aligning overlaps [========>           ] 0.002854 s[racon::Polisher::initialize] aligning overlaps [=========>          ] 0.002891 s[racon::Polisher::initialize] aligning overlaps [==========>         ] 0.002898 s[racon::Polisher::initialize] aligning overlaps [===========>        ] 0.002966 s[racon::Polisher::initialize] aligning overlaps [============>       ] 0.003032 s[racon::Polisher::initialize] aligning overlaps [=============>      ] 0.003038 s[racon::Polisher::initialize] aligning overlaps [==============>     ] 0.003065 s[racon::Polisher::initialize] aligning overlaps [===============>    ] 0.003071 s[racon::Polisher::initialize] aligning overlaps [================>   ] 0.003144 s[racon::Polisher::initialize] aligning overlaps [=================>  ] 0.003223 s[racon::Polisher::initialize] aligning overlaps [==================> ] 0.003231 s[racon::Polisher::initialize] aligning overlaps [===================>] 0.003238 s[racon::Polisher::initialize] aligning overlaps [====================] 0.003244 s[racon::Polisher::initialize] transformed data into windows 0.000419 s[racon::Polisher::polish] generating consensus [=>                  ] 0.030422 s[racon::Polisher::polish] generating consensus [==>                 ] 0.030477 s[racon::Polisher::polish] generating consensus [===>                ] 0.048166 s[racon::Polisher::polish] generating consensus [====>               ] 0.048221 s[racon::Polisher::polish] generating consensus [=====>              ] 0.056233 s[racon::Polisher::polish] generating consensus [======>             ] 0.056259 s[racon::Polisher::polish] generating consensus [=======>            ] 0.065366 s[racon::Polisher::polish] generating consensus [========>           ] 0.065483 s[racon::Polisher::polish] generating consensus [=========>          ] 0.075144 s[racon::Polisher::polish] generating consensus [==========>         ] 0.077277 s[racon::Polisher::polish] generating consensus [===========>        ] 0.095037 s[racon::Polisher::polish] generating consensus [============>       ] 0.100515 s[racon::Polisher::polish] generating consensus [=============>      ] 0.126419 s[racon::Polisher::polish] generating consensus [==============>     ] 0.135249 s[racon::Polisher::polish] generating consensus [===============>    ] 0.152197 s[racon::Polisher::polish] generating consensus [================>   ] 0.162727 s[racon::Polisher::polish] generating consensus [=================>  ] 0.167947 s[racon::Polisher::polish] generating consensus [==================> ] 0.176780 s[racon::Polisher::polish] generating consensus [===================>] 0.183509 s[racon::Polisher::polish] generating consensus [====================] 0.205902 s[racon::Polisher::] total = 0.237093 s
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_idxstats (Test #1)" name="0" time="36.79329323768616">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_idxstats (Test #1)" name="0" time="32.51192879676819">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_idxstats (Test #2)" name="1" time="35.01470994949341">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_idxstats (Test #2)" name="1" time="37.11816072463989">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_filter_cells (Test #1)" name="0" time="0.17102837562561035">
        
            <error type="error" message="Input staging problem: Test input file (read_10x.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (read_10x.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.17102837562561035, "tool_id": "scanpy_filter_cells", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_filter_cells (Test #1)" name="0" time="0.16116595268249512">
        
            <error type="error" message="Input staging problem: Test input file (read_10x.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (read_10x.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.16116595268249512, "tool_id": "scanpy_filter_cells", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_plot_pca (Test #1)" name="0" time="65.6423614025116">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE,  :  You're computing too large a percentage of total singular values, use a standard svd instead.Warning message:In check_numbers(k = k, nu = nu, nv = nv, limit = min(dim(x)) -  :  more singular values/vectors requested than availableSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_pca (Test #1)" name="0" time="40.14498019218445">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE,  :  You're computing too large a percentage of total singular values, use a standard svd instead.Warning message:In check_numbers(k = k, nu = nu, nv = nv, limit = min(dim(x)) -  :  more singular values/vectors requested than availableSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sniffles (Test #1)" name="0" time="36.882556438446045">
        
            
            <system-out><![CDATA[
            Estimating parameter...Max dist between aln events: 4Max diff in window: 50Min score ratio: 2Avg DEL ratio: 0.0432235Avg INS ratio: 0.0740733Start parsing... 21Switch Chr 21Reassessing breakpointsContinue parsingFinalizing  ..Start genotype calling:Reopening Bam file for parsing coverage Finalizing  ..
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sniffles (Test #2)" name="1" time="33.20803213119507">
        
            
            <system-out><![CDATA[
            Estimating parameter...Max dist between aln events: 4Max diff in window: 50Min score ratio: 2Avg DEL ratio: 0.0432235Avg INS ratio: 0.0740733Start parsing... 21Switch Chr 21Reassessing breakpointsContinue parsingFinalizing  ..Start genotype calling:Reopening Bam file for parsing coverage Finalizing  ..
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sniffles (Test #3)" name="2" time="33.792035818099976">
        
            
            <system-out><![CDATA[
            Estimating parameter...Max dist between aln events: 4Max diff in window: 50Min score ratio: 2Avg DEL ratio: 0.0432235Avg INS ratio: 0.0740733Start parsing... 21Switch Chr 21Reassessing breakpointsContinue parsingFinalizing  ..Start genotype calling:Reopening Bam file for parsing coverage Finalizing  ..
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sniffles (Test #4)" name="3" time="33.804399490356445">
        
            
            <system-out><![CDATA[
            Estimating parameter...Max dist between aln events: 4Max diff in window: 50Min score ratio: 2Avg DEL ratio: 0.0432235Avg INS ratio: 0.0740733Start parsing... 21Switch Chr 21Reassessing breakpointsContinue parsingFinalizing  ..Start phasing: Cleaning tmp filesStart genotype calling:Reopening Bam file for parsing coverage Finalizing  ..
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sniffles (Test #5)" name="4" time="25.788981437683105">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "advanced_options|report_BND": true,  "input": {   "id": "73d7c41d5eacb532",   "src": "hda"  } }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/1/a/f/dataset_1af84967-2df2-4892-8c2f-5e015aa54104.dat\u0027 input.bam \u0026\u0026 ln -f -s \u0027/galaxy/server/database/objects/_metadata_files/9/c/6/metadata_9c68ed22-da1e-4e90-b597-d1325a7ec1e1.dat\u0027 input.bam.bai \u0026\u0026  sniffles -t ${GALAXY_SLOTS:-2} -m \u0027input.bam\u0027 -v \u0027/galaxy/server/database/objects/c/1/9/dataset_c198a2c2-c10a-4ca1-bdd4-ab5c1508e70b.dat\u0027 --min_support 10 --max_num_splits 7 --max_distance 1000 --min_length 30 --minmapping_qual 20 --num_reads_report 0 --min_zmw 0   --cluster_support 1 --allelefreq 0.0 --min_homo_af 0.8 --min_het_af 0.3 --report_BND     --del_ratio 0.0458369 --ins_ratio 0.049379 --max_diff_per_window 50 --max_dist_aln_events 4",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-10-08T19:17:15.492174",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-sq7bv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "fddecb9ec70bca0e",  "id": "4064e23a75983524",  "inputs": {   "input": {    "id": "73d7c41d5eacb532",    "src": "hda",    "uuid": "1af84967-2df2-4892-8c2f-5e015aa54104"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "b6a16a40523754f8",    "src": "hda",    "uuid": "c198a2c2-c10a-4ca1-bdd4-ab5c1508e70b"   }  },  "params": {   "__input_ext": "\"bam\"",   "advanced_options": "{\"ccs_reads\": false, \"ignore_sd\": false, \"not_report_seq\": false, \"report_BND\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "clustering_options": "{\"allelefreq\": \"0.0\", \"cluster\": false, \"cluster_support\": \"1\", \"min_het_af\": \"0.3\", \"min_homo_af\": \"0.8\"}",   "dbkey": "\"?\"",   "general_options": "{\"cs_string\": false, \"max_distance\": \"1000\", \"max_num_splits\": \"7\", \"min_length\": \"30\", \"min_seq_size\": \"\", \"min_support\": \"10\", \"min_zmw\": \"0\", \"minmapping_qual\": \"20\", \"num_reads_report\": \"0\"}",   "parameter_estimation_options": "{\"del_ratio\": \"0.0458369\", \"ins_ratio\": \"0.049379\", \"max_diff_per_window\": \"50\", \"max_dist_aln_events\": \"4\", \"skip_parameter_estimation\": false}"  },  "state": "error",  "stderr": "",  "stdout": "Estimating parameter...\n\tMax dist between aln events: 4\n\tMax diff in window: 50\n\tMin score ratio: 2\n\tAvg DEL ratio: 0.0432235\n\tAvg INS ratio: 0.0740733\nStart parsing... 21\n\tSwitch Chr 21\n\t\tReassessing breakpoints\n\t\tContinue parsing\n\tFinalizing  ..\nStart genotype calling:\n\tReopening Bam file for parsing coverage \n\tFinalizing  ..\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/sniffles/sniffles/1.0.12+galaxy0",  "tool_stderr": "",  "tool_stdout": "Estimating parameter...\n\tMax dist between aln events: 4\n\tMax diff in window: 50\n\tMin score ratio: 2\n\tAvg DEL ratio: 0.0432235\n\tAvg INS ratio: 0.0740733\nStart parsing... 21\n\tSwitch Chr 21\n\t\tReassessing breakpoints\n\t\tContinue parsing\n\tFinalizing  ..\nStart genotype calling:\n\tReopening Bam file for parsing coverage \n\tFinalizing  ..\n",  "update_time": "2024-10-08T19:17:20.610171",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/sniffles/sniffles/1.0.12+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/sniffles/sniffles/1.0.12+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 25.788981437683105, "tool_id": "sniffles", "tool_version": "1.0.12+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            Estimating parameter...Max dist between aln events: 4Max diff in window: 50Min score ratio: 2Avg DEL ratio: 0.0432235Avg INS ratio: 0.0740733Start parsing... 21Switch Chr 21Reassessing breakpointsContinue parsingFinalizing  ..Start genotype calling:Reopening Bam file for parsing coverage Finalizing  ..
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sniffles (Test #6)" name="5" time="32.93157887458801">
        
            
            <system-out><![CDATA[
            Skip parameter estimation.Start parsing... 21Switch Chr 21Reassessing breakpointsContinue parsingFinalizing  ..Start genotype calling:Reopening Bam file for parsing coverage Finalizing  ..
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcffixup (Test #1)" name="0" time="38.34372806549072">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcftools_annotate (Test #1)" name="0" time="34.314462661743164">
        
            
                <error type="error" message="Tool exit code: 127"><![CDATA[
                    { "inputs": {  "condition": "\u003e= 7",  "description": "MinAF [7]",  "filter": "MinAF",  "input": {   "id": "b0445a2899c1259f",   "src": "hda"  },  "tag": "FORMAT/FREQ" }, "job": {  "command_line": "echo \"{ tag  =\u003e \u0027FORMAT/FREQ\u0027, name =\u003e \u0027MinAF\u0027, desc =\u003e \u0027MinAF [7]\u0027, test =\u003e sub { my @t = split(\u0027%\u0027, @\\$MATCH[0]); return @t[0] \u003e= 7 ? \\$PASS : \\$FAIL }, },\" \u003e f.txt ;  vcf-annotate -f f.txt /galaxy/server/database/objects/7/c/f/dataset_7cf09ef5-08eb-4086-8bdf-0a3dfb49044b.dat \u003e /galaxy/server/database/objects/9/f/0/dataset_9f0e8433-9ba9-40ce-82b6-51901b765f69.dat",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-10-08T19:26:44.158286",  "dependencies": [],  "exit_code": 127,  "external_id": "gxy-h4ggl",  "galaxy_version": "24.1",  "handler": null,  "history_id": "fddecb9ec70bca0e",  "id": "9b89c291e217ba3c",  "inputs": {   "input": {    "id": "b0445a2899c1259f",    "src": "hda",    "uuid": "7cf09ef5-08eb-4086-8bdf-0a3dfb49044b"   }  },  "job_messages": [   {    "code_desc": "tool progress",    "desc": "Log: tool progress",    "error_level": 1,    "match": "/galaxy/server/database/jobs_directory/000/206/tool_script.sh: line 22: vcf-annotate: command not found",    "stream": "stderr",    "type": "regex"   },   {    "code_desc": "tool progress",    "desc": "Log: tool progress",    "error_level": 1,    "match": "",    "stream": "stdout",    "type": "regex"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1728415609.0000000",    "title": "Job End Time",    "value": "2024-10-08 19:26:49"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1728415609.0000000",    "title": "Job Start Time",    "value": "2024-10-08 19:26:49"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "93662985c3dd8433",    "src": "hda",    "uuid": "9f0e8433-9ba9-40ce-82b6-51901b765f69"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "condition": "\"\u003e= 7\"",   "dbkey": "\"?\"",   "description": "\"MinAF [7]\"",   "filter": "\"MinAF\"",   "tag": "\"FORMAT/FREQ\""  },  "state": "ok",  "stderr": "/galaxy/server/database/jobs_directory/000/206/tool_script.sh: line 22: vcf-annotate: command not found\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcftools_annotate/vcftools_annotate/0.1",  "tool_stderr": "/galaxy/server/database/jobs_directory/000/206/tool_script.sh: line 22: vcf-annotate: command not found\n",  "tool_stdout": "",  "update_time": "2024-10-08T19:27:00.154804",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpguz_65wotest_out1.vcf v. /tmp/tmpaqbyq7_etest_out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,30 +0,0 @@\n-##fileformat=VCFv4.1\n-##FILTER=\u003cID=MinAF,Description=\"MinAF [7]\"\u003e\n-##source_20130813.1=vcf-annotate(r797) -f f.txt \u003cinput_file\u003e\n-#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tSample1\n-chr1\t14470\t.\tG\tA\t.\tPASS\tADP=25;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:28:25:23:2:8%:9.8E-1:33:39:22:1:2:0\n-chr1\t14513\t.\tG\tA\t.\tPASS\tADP=32;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:36:32:24:8:25%:9.8E-1:31:22:16:8:7:1\n-chr1\t14626\t.\tG\tC\t.\tPASS\tADP=44;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:45:44:40:4:9.09%:9.8E-1:34:36:14:26:0:4\n-chr1\t14677\t.\tG\tA\t.\tPASS\tADP=70;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:82:70:63:7:10%:9.8E-1:33:17:44:19:7:0\n-chr1\t14813\t.\tT\tG\t.\tMinAF\tADP=105;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:121:105:103:2:1.9%:9.8E-1:32:22:42:61:1:1\n-chr1\t14815\t.\tC\tT\t.\tMinAF\tADP=117;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:122:117:109:8:6.84%:9.8E-1:33:29:50:59:4:4\n-chr1\t14907\t.\tA\tG\t.\tPASS\tADP=104;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:108:104:19:16:45.71%:9.8E-1:37:18:10:9:8:8\n-chr1\t14930\t.\tA\tG\t.\tPASS\tADP=103;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:110:103:17:17:50%:9.8E-1:37:24:8:9:8:9\n-chr1\t15015\t.\tG\tC\t.\tPASS\tADP=52;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:55:52:44:8:15.38%:9.8E-1:34:35:5:39:1:7\n-chr1\t15211\t.\tT\tG\t.\tPASS\tADP=21;WT=0;HET=0;HOM=1;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t1/1:0:23:21:0:2:100%:9.8E-1:0:26:0:0:1:1\n-chr1\t15527\t.\tG\tA\t.\tPASS\tADP=53;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:57:53:29:5:14.71%:9.8E-1:32:23:19:10:3:2\n-chr1\t15688\t.\tC\tT\t.\tPASS\tADP=34;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:36:34:11:4:26.67%:9.8E-1:35:26:6:5:1:3\n-chr1\t16257\t.\tG\tC\t.\tPASS\tADP=23;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:26:23:20:2:9.09%:9.8E-1:35:17:7:13:0:2\n-chr1\t16288\t.\tC\tG\t.\tPASS\tADP=15;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:16:15:11:3:21.43%:9.8E-1:34:36:3:8:1:2\n-chr1\t16298\t.\tC\tT\t.\tPASS\tADP=12;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:12:12:9:2:18.18%:9.8E-1:34:30:2:7:1:1\n-chr1\t16378\t.\tT\tC\t.\tPASS\tADP=24;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:24:24:11:12:52.17%:9.8E-1:37:34:7:4:8:4\n-chr1\t16495\t.\tG\tC\t.\tPASS\tADP=21;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:22:21:14:6:30%:9.8E-1:31:25:5:9:2:4\n-chr1\t16534\t.\tC\tT\t.\tPASS\tADP=11;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:11:11:6:4:40%:9.8E-1:32:37:1:5:0:4\n-chr1\t16571\t.\tG\tA\t.\tPASS\tADP=8;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:8:8:5:2:28.57%:9.8E-1:31:34:2:3:0:2\n-chr1\t16737\t.\tG\tT\t.\tPASS\tADP=27;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:30:27:22:5:18.52%:9.8E-1:37:34:21:1:5:0\n-chr1\t16742\t.\tG\tC\t.\tPASS\tADP=30;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:30:30:23:7:23.33%:9.8E-1:32:37:21:2:7:0\n-chr1\t16900\t.\tT\tC\t.\tMinAF\tADP=140;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:150:140:135:5:3.57%:9.8E-1:35:25:119:16:5:0\n-chr1\t16963\t.\tG\tA\t.\tPASS\tADP=338;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:354:338:297:41:12.13%:9.8E-1:32:34:218:79:26:15\n-chr1\t16977\t.\tG\tA\t.\tPASS\tADP=368;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:384:368:270:98:26.63%:9.8E-1:34:25:186:84:63:35\n-chr1\t16996\t.\tT\tC\t.\tPASS\tADP=356;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:371:356:269:87:24.44%:9.8E-1:35:34:147:122:58:29\n-chr1\t17020\t.\tG\tA\t.\tMinAF\tADP=355;WT=0;HET=1;HOM=0;NC=0\tGT:GQ:SDP:DP:RD:AD:FREQ:PVAL:RBQ:ABQ:RDF:RDR:ADF:ADR\t0/1:0:380:355:347:8:2.25%:9.8E-1:33:29:164:183:4:4\n" ], "status": "failure", "test_index": 0, "time_seconds": 34.314462661743164, "tool_id": "vcftools_annotate", "tool_version": "0.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            /galaxy/server/database/jobs_directory/000/206/tool_script.sh: line 22: vcf-annotate: command not found
            ]]></system-err>
        
    </testcase>
    
</testsuite>