<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="110"
           errors="13"
           failures="14"
           skip="0">
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.05534219741821289">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.05534219741821289, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "0.0.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.05242776870727539">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.05242776870727539, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "1.6.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/gtf2gene_list/_ensembl_gtf2gene_list (Test #1)" name="0" time="57.13201951980591">
        
            
            <system-out><![CDATA[
            [1] "Reading input.gtf elements of type gene"[1] "Found 10 features"[1] "Storing output to annotation.txt"
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa (Test #1)" name="0" time="65.42070126533508">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/0/a/1/dataset_0a139b10-b234-492d-8904-16c991a12935.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/8/6/d/dataset_86d0d1bb-c17b-4bdc-a7bd-0d2ac9c4d45f.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/f/5/b/dataset_f5bde625-77fa-48f1-8c96-399fa066e04a.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "create_time": "2023-03-03T11:05:06.212736",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-cdq8n",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "3bf8fbe0719b69b7",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "28.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "28 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841544.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:05:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841516.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:05:16"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "16988595efb1d521",    "src": "hda",    "uuid": "f5bde625-77fa-48f1-8c96-399fa066e04a"   },   "design_tsv": {    "id": "06e1e6b794a2c2a7",    "src": "hda",    "uuid": "4ea213e2-852e-4362-bbac-2576f76dd405"   },   "genes_tsv": {    "id": "6b5bc1c5cc81988d",    "src": "hda",    "uuid": "86d0d1bb-c17b-4bdc-a7bd-0d2ac9c4d45f"   },   "matrix_mtx": {    "id": "4012bda7fa596280",    "src": "hda",    "uuid": "0a139b10-b234-492d-8904-16c991a12935"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-03-03 11:05:16--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  181K\n    50K .......... .......... .......... .......... ..........  272K\n   100K .......... .......... .......... .......... ..........  274K\n   150K .......... .......... .......... .......... ..........  541K\n   200K .......... .......... .......... .......... ..........  538K\n   250K .......... .......... .......... .......... ..........  538K\n   300K .......... .......... .......... .......... ..........  543K\n   350K .......... .......... .......... .......... ..........  541K\n   400K .......... .......... .......... .......... .......... 1.19M\n   450K .......... .......... .......... .......... ..........  965K\n   500K .......... .......... .......... .......... ..........  549K\n   550K .......... .......... .......... .......... .......... 1.18M\n   600K .......... .......... .......... .......... ..........  975K\n   650K .......... .......... .......... .......... ..........  546K\n   700K .......... .......... .......... .......... ..........  289M\n   750K .......... .......... .......... .......... ..........  544K\n   800K .......... .......... .......... .......... ..........  543K\n   850K .......... .......... .......... .......... .......... 1.12M\n   900K .......... .......... .......... .......... .......... 1.00M\n   950K .......... .......... .......... .......... ..........  527K\n  1000K .......... .......... .......... .......... ..........  545K\n  1050K .......... .......... .......... .......... .......... 1.19M\n  1100K .......... .......... .......... .......... ..........  973K\n  1150K .......... .......... .......... .......... ..........  543K\n  1200K .......... .......... .......... .......... ..........  546K\n  1250K .......... .......... .......... .......... .......... 1.18M\n  1300K .......... .......... .......... .......... ..........  977K\n  1350K .......... .......... .......... .......... ..........  545K\n  1400K .......... .......... .......... .......... .......... 1.12M\n  1450K .......... .......... .......... .......... .......... 1.01M\n  1500K .......... .......... .......... .......... ..........  544K\n  1550K .......... .......... .......... .......... .......... 1.09M\n  1600K .......... .......... .......... .......... .......... 1.04M\n  1650K .......... .......... .......... .......... ..........  546K\n  1700K .......... .......... .......... .......... .......... 1.07M\n  1750K .......... .......... .......... .......... .......... 1.05M\n  1800K .......... .......... .......... .......... .......... 1.04M\n  1850K .......... .......... .......... .......... .......... 1.08M\n  1900K .......... .......... .......... .......... ..........  547K\n  1950K .......... .......... .......... .......... ..........  999K\n  2000K .......... .......... .......... .......... .......... 1.16M\n  2050K .......... .......... .......... .......... ..........  545K\n  2100K .......... .......... .......... .......... .......... 13.3M\n  2150K .......... .......... .......... .......... ..........  568K\n  2200K .......... .......... .......... .......... .......... 1.00M\n  2250K .......... .......... .......... .......... .......... 1.10M\n  2300K .......... .......... .......... .......... ..........  975K\n  2350K .......... .......... .......... .......... .......... 1.10M\n  2400K .......... .......... .......... .......... ..........  567K\n  2450K .......... .......... .......... .......... .......... 1.04M\n  2500K .......... .......... .......... .......... .......... 1.07M\n  2550K .......... .......... .......... .......... ..........  956K\n  2600K .......... .......... .......... .......... .......... 1.22M\n  2650K .......... .......... .......... .......... ..........  899K\n  2700K .......... .......... .......... .......... .......... 1.32M\n  2750K .......... .......... .......... .......... ..........  547K\n  2800K .......... .......... .......... .......... .......... 1.01M\n  2850K .......... .......... .......... .......... .......... 1.08M\n  2900K .......... .......... .......... .......... ..........  938K\n  2950K .......... .......... .......... .......... .......... 1.25M\n  3000K .......... .......... .......... .......... ..........  873K\n  3050K .......... .......... .......... .......... .......... 1.38M\n  3100K .......... .......... .......... .......... ..........  552K\n  3150K .......... .......... .......... .......... .......... 1.01M\n  3200K .......... .......... .......... .......... .......... 1.07M\n  3250K .......... .......... .......... .......... ..........  921K\n  3300K .......... .......... .......... .......... .......... 1.30M\n  3350K .......... .......... .......... .......... ..........  868K\n  3400K .......... .......... .......... .......... .......... 1.40M\n  3450K .......... .......... .......... .......... ..........  548K\n  3500K .......... .......... .......... .......... .......... 43.2M\n  3550K .......... .......... .......... .......... ..........  547K\n  3600K .......... .......... .......... .......... ..........  844K\n  3650K .......... .......... .......... .......... .......... 1.47M\n  3700K .......... .......... .......... .......... ..........  824K\n  3750K .......... .......... .......... .......... .......... 1.55M\n  3800K .......... .......... .......... .......... ..........  540K\n  3850K .......... .......... .......... .......... ..........  141M\n  3900K .......... .......... .......... .......... ..........  540K\n  3950K .......... .......... .......... .......... ..........  823K\n  4000K .......... .......... .......... .......... .......... 1.55M\n  4050K .......... .......... .......... .......... ..........  824K\n  4100K .......... .......... .......... .......... .......... 1.56M\n  4150K .......... .......... .......... .......... ..........  545K\n  4200K .......... .......... .......... .......... .......... 79.2M\n  4250K .......... .......... .......... .......... ..........  547K\n  4300K .......... .......... .......... .......... .......... 1.02M\n  4350K .......... .......... .......... .......... .......... 1.10M\n  4400K .......... .......... .......... .......... ..........  798K\n  4450K .......... .......... .......... .......... .......... 1.67M\n  4500K .......... .......... .......... .......... ..........  546K\n  4550K .......... .......... .......... .......... ..........  179M\n  4600K .......... .......... .......... .......... ..........  543K\n  4650K .......... .......... .......... .......... .......... 1022K\n  4700K .......... .......... .......... .......... .......... 1.14M\n  4750K .......... .......... .......... .......... ..........  765K\n  4800K .......... .......... .......... .......... .......... 1.72M\n  4850K .......... .......... .......... .......... ..........  546K\n  4900K .......... .......... .......... .......... .......... 71.4M\n  4950K .......... .......... .......... .......... ..........  544K\n  5000K .......... .......... .......... .......... .......... 1000K\n  5050K .......... .......... .......... .......... .......... 1.16M\n  5100K .......... .......... .......... .......... ..........  963K\n  5150K .......... .......... .......... .......... .......... 1.21M\n  5200K .......... .......... .......... .......... ..........  547K\n  5250K .......... .......... .......... .......... .......... 84.8M\n  5300K .......... .......... .......... .......... ..........  545K\n  5350K .......... .......... .......... .......... ..........  949K\n  5400K .......... .......... .......... .......... .......... 1.23M\n  5450K .......... .......... .......... .......... ..........  916K\n  5500K .......... .......... .......... .......... .......... 1.30M\n  5550K .......... .......... .......... .......... ..........  760K\n  5600K .......... .......... .......... .......... .......... 1.86M\n  5650K .......... .......... .......... .......... ..........  545K\n  5700K .......... .......... .......... .......... .......... 1.10M\n  5750K .......... .......... .......... .......... .......... 1.01M\n  5800K .......... .......... .......... .......... ..........  897K\n  5850K .......... .......... .......... .......... .......... 1.35M\n  5900K .......... .......... .......... .......... ..........  901K\n  5950K .......... .......... .......... .......... ..........  658K\n  6000K .......... .......... .......... .......... .......... 1.95M\n  6050K .......... .......... .......... .......... .......... 1.73M\n  6100K .......... .......... .......... .......... ..........  783K\n  6150K .......... .......... .......... .......... .......... 1.64M\n  6200K .......... .......... .......... .......... ..........  807K\n  6250K .......... .......... .......... .......... .......... 1.09M\n  6300K .......... .......... .......... .......... ..........  308K\n  6350K .......... .......... .......... .......... .......... 2.40M\n  6400K .......... .......... .......... .......... ..........  577K\n  6450K .......... .......... .......... .......... .......... 1.96M\n  6500K .......... .......... .......... .......... ..........  748K\n  6550K .......... .......... .......... .......... .......... 1.89M\n  6600K .......... .......... .......... .......... ..........  752K\n  6650K .......... .......... .......... .......... .......... 1.90M\n  6700K .......... .......... .......... .......... ..........  721K\n  6750K .......... .......... .......... .......... .......... 2.07M\n  6800K .......... .......... .......... .......... ..........  728K\n  6850K .......... .......... .......... .......... .......... 2.00M\n  6900K .......... .......... .......... .......... ..........  742K\n  6950K .......... .......... .......... .......... .......... 1.86M\n  7000K .......... .......... .......... .......... ..........  936K\n  7050K .......... .......... .......... .......... .......... 1.26M\n  7100K .......... .......... .......... .......... ..........  748K\n  7150K .......... .......... .......... .......... .......... 1.96M\n  7200K .......... .......... .......... .......... ..........  924K\n  7250K .......... .......... .......... .......... .......... 1.28M\n  7300K .......... .......... .......... .......... ..........  908K\n  7350K .......... .......... .......... .......... .......... 1.57M\n  7400K .......... .......... .......... .......... ..........  827K\n  7450K .......... .......... .......... .......... .......... 3.67M\n  7500K .......... .......... .......... .......... ..........  638K\n  7550K .......... .......... .......... .......... .......... 1.48M\n  7600K .......... .......... .......... .......... .......... 6.27M\n  7650K .......... .......... .......... .......... ..........  779K\n  7700K .......... .......... .......... .......... .......... 1.74M\n  7750K .......... .......... .......... .......... ..........  909K\n  7800K .......... .......... .......... .......... .......... 1.56M\n  7850K .......... .......... .......... .......... ..........  871K\n  7900K .......... .......... .......... .......... .......... 1.43M\n  7950K .......... .......... .......... .......... ..........  871K\n  8000K .......... .......... .......... .......... .......... 3.64M\n  8050K .......... .......... .......... .......... .......... 1.74M\n  8100K .......... .......... .......... .......... ..........  874K\n  8150K .......... .......... .......... .......... .......... 1.75M\n  8200K .......... .......... .......... .......... ..........  865K\n  8250K .......... .......... .......... .......... .......... 3.53M\n  8300K .......... .......... .......... .......... .......... 1.69M\n  8350K .......... .......... .......... .......... ..........  799K\n  8400K .......... .......... .......... .......... .......... 2.20M\n  8450K .......... .......... .......... .......... ..........  851K\n  8500K .......... .......... .......... .......... .......... 4.30M\n  8550K .......... .......... .......... .......... .......... 1.68M\n  8600K .......... .......... .......... .......... ..........  853K\n  8650K .......... .......... .......... .......... .......... 9.75M\n  8700K .......... .......... .......... .......... ..........  604K\n  8750K .......... .......... .......... .......... .......... 5.81M\n  8800K .......... .......... .......... .......... .......... 1.65M\n  8850K .......... .......... .......... .......... ..........  926K\n  8900K .......... .......... .......... .......... .......... 4.40M\n  8950K .......... .......... .......... .......... .......... 1.78M\n  9000K .......... .......... .......... .......... ..........  869K\n  9050K .......... .......... .......... .......... .......... 6.84M\n  9100K .......... .......... .......... .......... .......... 1.74M\n  9150K .......... .......... .......... .......... ..........  883K\n  9200K .......... .......... .......... .......... .......... 1.71M\n  9250K .......... .......... .......... .......... .......... 7.42M\n  9300K .......... .......... .......... .......... ..........  853K\n  9350K .......... .......... .......... .......... .......... 1.82M\n  9400K .......... .......... .......... .......... .......... 6.49M\n  9450K .......... .......... .......... .......... ..........  869K\n  9500K .......... .......... .......... .......... .......... 1.81M\n  9550K .......... .......... .......... .......... .......... 1.02M\n  9600K .......... .......... .......... .......... .......... 2.73M\n  9650K .......... .......... .......... .......... .......... 1.81M\n  9700K .......... .......... .......... .......... .......... 5.98M\n  9750K .......... .......... .......... .......... ..........  903K\n  9800K .......... .......... .......... .......... .......... 6.71M\n  9850K .......... .......... .......... .......... .......... 1.61M\n  9900K .......... .......... .......... .......... ..........  896K\n  9950K .......... .......... .......... .......... .......... 8.56M\n 10000K .......... .......... .......... .......... .......... 1.61M\n 10050K .......... .......... .......... .......... ..........  965K\n 10100K .......... .......... .......... .......... .......... 5.25M\n 10150K .......... .......... .......... .......... .......... 1.98M\n 10200K .......... .......... .......... .......... .......... 1.10M\n 10250K .......... .......... .......... .......... .......... 2.76M\n 10300K .......... .......... .......... .......... .......... 1.66M\n 10350K .......... .......... .......... .......... .......... 6.29M\n 10400K .......... .......... .......... .......... ..........  917K\n 10450K .......... .......... .......... .......... .......... 8.32M\n 10500K .......... .......... .......... .......... .......... 1.55M\n 10550K .......... .......... .......... .......... .......... 1.31M\n 10600K .......... .......... .......... .......... .......... 2.63M\n 10650K .......... .......... .......... .......... .......... 8.98M\n 10700K .......... .......... .......... .......... .......... 1.55M\n 10750K .......... .......... .......... .......... ..........  927K\n 10800K .......... .......... .......... .......... .......... 6.86M\n 10850K .......... .......... .......... .......... .......... 2.00M\n 10900K .......... .......... .......... .......... .......... 4.41M\n 10950K .......... .......... .......... .......... ..........  996K\n 11000K .......... .......... .......... .......... .......... 6.31M\n 11050K .......... .......... .......... .......... .......... 2.06M\n 11100K .......... .......... .......... .......... ..........  839K\n 11150K .......... .......... .......... .......... .......... 79.6M\n 11200K .......... .......... .......... .......... .......... 5.91M\n 11250K .......... .......... .......... .......... .......... 1.73M\n 11300K .......... .......... .......... .......... ..........  903K\n 11350K .......... .......... .......... .......... .......... 94.9M\n 11400K .......... .......... .......... .......... .......... 6.13M\n 11450K .......... .......... .......... .......... .......... 1.72M\n 11500K .......... .......... .......... .......... ..........  892K\n 11550K .......... .......... .......... .......... ..........\n..\n......  724K\n 50150K .......... .......... .......... .......... .......... 11.7M\n 50200K .......... .......... .......... .......... .......... 24.5M\n 50250K .......... .......... .......... .......... .......... 41.2M\n 50300K .......... .......... .......... .......... .......... 59.7M\n 50350K .......... .......... .......... .......... ..........  119M\n 50400K .......... .......... .......... .......... .......... 68.3M\n 50450K .......... .......... .......... .......... ..........  167M\n 50500K .......... .......... .......... .......... .......... 1.83M\n 50550K .......... .......... .......... .......... .......... 23.9M\n 50600K .......... .......... .......... .......... .......... 70.7M\n 50650K .......... .......... .......... .......... .......... 9.85M\n 50700K .......... .......... .......... .......... .......... 1.53M\n 50750K .......... .......... .......... .......... .......... 11.6M\n 50800K .......... .......... .......... .......... .......... 3.22M\n 50850K .......... .......... .......... .......... .......... 54.2M\n 50900K .......... .......... .......... .......... .......... 20.1M\n 50950K .......... .......... .......... .......... .......... 11.5M\n 51000K .......... .......... .......... .......... .......... 4.67M\n 51050K .......... .......... .......... .......... .......... 6.54M\n 51100K .......... .......... .......... .......... .......... 5.72M\n 51150K .......... .......... .......... .......... .......... 4.03M\n 51200K .......... .......... .......... .......... .......... 4.88M\n 51250K .......... .......... .......... .......... .......... 2.03M\n 51300K .......... .......... .......... .......... .......... 15.8M\n 51350K .......... .......... .......... .......... .......... 47.8M\n 51400K .......... .......... .......... .......... .......... 4.24M\n 51450K .......... .......... .......... .......... .......... 5.34M\n 51500K .......... .......... .......... .......... .......... 7.21M\n 51550K .......... .......... .......... .......... .......... 4.95M\n 51600K .......... .......... .......... .......... .......... 3.67M\n 51650K .......... .......... .......... .......... .......... 2.08M\n 51700K .......... .......... .......... .......... .......... 20.1M\n 51750K .......... .......... .......... .......... ..........  160M\n 51800K .......... .......... .......... .......... .......... 4.54M\n 51850K .......... .......... .......... .......... .......... 4.22M\n 51900K .......... .......... .......... .......... .......... 4.95M\n 51950K .......... .......... .......... .......... .......... 7.35M\n 52000K .......... .......... .......... .......... .......... 3.02M\n 52050K .......... .......... .......... .......... .......... 9.38M\n 52100K .......... .......... .......... .......... .......... 4.76M\n 52150K .......... .......... .......... .......... .......... 6.57M\n 52200K .......... .......... .......... .......... .......... 4.89M\n 52250K .......... .......... .......... .......... .......... 3.24M\n 52300K .......... .......... .......... .......... .......... 6.18M\n 52350K .......... .......... .......... .......... .......... 11.5M\n 52400K .......... .......... .......... .......... .......... 4.89M\n 52450K .......... .......... .......... .......... .......... 3.51M\n 52500K .......... .......... .......... .......... .......... 7.02M\n 52550K .......... .......... .......... .......... .......... 7.63M\n 52600K .......... .......... .......... .......... .......... 4.55M\n 52650K .......... .......... .......... .......... .......... 4.63M\n 52700K .......... .......... .......... .......... .......... 4.70M\n 52750K .......... .......... .......... .......... .......... 7.92M\n 52800K .......... .......... .......... .......... .......... 4.65M\n 52850K .......... .......... .......... .......... .......... 4.72M\n 52900K .......... .......... .......... .......... .......... 4.65M\n 52950K .......... .......... .......... .......... .......... 8.04M\n 53000K .......... .......... .......... .......... .......... 4.68M\n 53050K .......... .......... .......... .......... .......... 4.50M\n 53100K .......... .......... .......... .......... .......... 4.65M\n 53150K .......... .......... .......... .......... .......... 8.34M\n 53200K .......... .......... .......... .......... .......... 4.64M\n 53250K .......... .......... .......... .......... .......... 4.50M\n 53300K .......... .......... .......... .......... .......... 4.65M\n 53350K .......... .......... .......... .......... .......... 8.80M\n 53400K .......... .......... .......... .......... .......... 4.32M\n 53450K .......... .......... .......... .......... .......... 4.38M\n 53500K .......... .......... .......... .......... .......... 4.85M\n 53550K .......... .......... .......... .......... .......... 8.57M\n 53600K .......... .......... .......... .......... .......... 4.51M\n 53650K .......... .......... .......... .......... .......... 4.72M\n 53700K .......... .......... .......... .......... .......... 4.52M\n 53750K .......... .......... .......... .......... .......... 6.91M\n 53800K .......... .......... .......... .......... .......... 5.43M\n 53850K .......... .......... .......... .......... .......... 4.36M\n 53900K .......... .......... .......... .......... .......... 4.68M\n 53950K .......... .......... .......... .......... .......... 4.72M\n 54000K .......... .......... .......... .......... .......... 7.70M\n 54050K .......... .......... .......... .......... .......... 3.76M\n 54100K .......... .......... .......... .......... .......... 5.85M\n 54150K .......... .......... .......... .......... .......... 4.54M\n 54200K .......... .......... .......... .......... .......... 8.47M\n 54250K .......... .......... .......... .......... .......... 4.54M\n 54300K .......... .......... .......... .......... .......... 4.01M\n 54350K .......... .......... .......... .......... .......... 5.32M\n 54400K .......... .......... .......... .......... .......... 6.87M\n 54450K .......... .......... .......... .......... .......... 3.90M\n 54500K .......... .......... .......... .......... .......... 5.66M\n 54550K .......... .......... .......... .......... .......... 4.58M\n 54600K .......... .......... .......... .......... .......... 8.48M\n 54650K .......... .......... .......... .......... .......... 4.40M\n 54700K .......... .......... .......... .......... .......... 4.76M\n 54750K .......... .......... .......... .......... .......... 4.44M\n 54800K .......... .......... .......... .......... .......... 8.66M\n 54850K .......... .......... .......... .......... .......... 4.45M\n 54900K .......... .......... .......... .......... .......... 4.56M\n 54950K .......... .......... .......... .......... .......... 4.41M\n 55000K .......... .......... .......... .......... .......... 8.56M\n 55050K .......... .......... .......... .......... .......... 4.65M\n 55100K .......... .......... .......... .......... .......... 3.04M\n 55150K .......... .......... .......... .......... .......... 7.28M\n 55200K .......... .......... .......... .......... .......... 5.30M\n 55250K .......... .......... .......... .......... .......... 4.11M\n 55300K .......... .......... .......... .......... .......... 9.23M\n 55350K .......... .......... .......... .......... .......... 3.21M\n 55400K .......... .......... .......... .......... .......... 1.49M\n 55450K .......... .......... .......... .......... .......... 1.15M\n 55500K .......... .......... .......... .......... .......... 67.6M\n 55550K .......... .......... .......... .......... .......... 11.2M\n 55600K .......... .......... .......... .......... ..........  105M\n 55650K .......... .......... .......... .......... ..........  118M\n 55700K .......... .......... .......... .......... ..........  130M\n 55750K .......... .......... .......... .......... .......... 74.4M\n 55800K .......... .......... .......... .......... .......... 42.7M\n 55850K .......... .......... .......... .......... .......... 4.77M\n 55900K .......... .......... .......... .......... .......... 10.4M\n 55950K .......... .......... .......... .......... .......... 4.08M\n 56000K .......... .......... .......... .......... .......... 4.78M\n 56050K .......... .......... .......... .......... .......... 6.51M\n 56100K .......... .......... .......... .......... .......... 1.93M\n 56150K .......... .......... .......... .......... .......... 3.61M\n 56200K .......... .......... .......... .......... .......... 43.9M\n 56250K .......... .......... .......... .......... .......... 13.5M\n 56300K .......... .......... .......... .......... .......... 10.8M\n 56350K .......... .......... .......... .......... .......... 4.90M\n 56400K .......... .......... .......... .......... .......... 4.67M\n 56450K .......... .......... .......... .......... .......... 7.27M\n 56500K .......... .......... .......... .......... .......... 5.07M\n 56550K .......... .......... .......... .......... .......... 3.09M\n 56600K .......... .......... .......... .......... .......... 5.71M\n 56650K .......... .......... .......... .......... .......... 5.07M\n 56700K .......... .......... .......... .......... .......... 9.22M\n 56750K .......... .......... .......... .......... .......... 2.06M\n 56800K .......... .......... .......... .......... .......... 33.6M\n 56850K .......... .......... .......... .......... .......... 7.85M\n 56900K .......... .......... .......... .......... .......... 7.27M\n 56950K .......... .......... .......... .......... .......... 5.15M\n 57000K .......... .......... .......... .......... .......... 3.51M\n 57050K .......... .......... .......... .......... .......... 5.04M\n 57100K .......... .......... .......... .......... ..........  781K\n 57150K .......... .......... .......... .......... .......... 14.0M\n 57200K .......... .......... .......... .......... .......... 3.46M\n 57250K .......... .......... .......... .......... .......... 50.3M\n 57300K .......... .......... .......... .......... .......... 83.2M\n 57350K .......... .......... .......... .......... ..........  184M\n 57400K .......... .......... .......... .......... ..........  163M\n 57450K .......... .......... .......... .......... .......... 72.7M\n 57500K .......... .......... .......... .......... .......... 64.4M\n 57550K .......... .......... .......... .......... .......... 6.60M\n 57600K .......... .......... .......... .......... .......... 5.49M\n 57650K .......... .......... .......... .......... .......... 9.00M\n 57700K .......... .......... .......... .......... .......... 4.58M\n 57750K .......... .......... .......... .......... .......... 4.48M\n 57800K .......... .......... .......... .......... .......... 1.72M\n 57850K .......... .......... .......... .......... .......... 21.1M\n 57900K .......... .......... .......... .......... .......... 3.65M\n 57950K .......... .......... .......... .......... .......... 31.6M\n 58000K .......... .......... .......... .......... .......... 15.8M\n 58050K .......... .......... .......... .......... .......... 7.73M\n 58100K .......... .......... .......... .......... .......... 4.92M\n 58150K .......... .......... .......... .......... .......... 4.58M\n 58200K .......... .......... .......... .......... .......... 4.37M\n 58250K .......... .......... .......... .......... .......... 8.25M\n 58300K .......... .......... .......... .......... .......... 4.60M\n 58350K .......... .......... .......... .......... .......... 4.59M\n 58400K .......... .......... .......... .......... .......... 4.13M\n 58450K .......... .......... .......... .......... .......... 9.01M\n 58500K .......... .......... .......... .......... .......... 3.51M\n 58550K .......... .......... .......... .......... .......... 6.34M\n 58600K .......... .......... .......... .......... .......... 4.12M\n 58650K .......... .......... .......... .......... .......... 10.9M\n 58700K .......... .......... .......... .......... .......... 4.61M\n 58750K .......... .......... .......... .......... .......... 3.94M\n 58800K .......... .......... .......... .......... .......... 5.11M\n 58850K .......... .......... .......... .......... .......... 7.67M\n 58900K .......... .......... .......... .......... .......... 4.79M\n 58950K .......... .......... .......... .......... .......... 4.74M\n 59000K .......... .......... .......... .......... .......... 4.92M\n 59050K .......... .......... .......... .......... .......... 3.69M\n 59100K .......... .......... .......... .......... .......... 7.46M\n 59150K .......... .......... .......... .......... .......... 4.90M\n 59200K .......... .......... .......... .......... .......... 5.38M\n 59250K .......... .......... .......... .......... .......... 4.99M\n 59300K .......... .......... .......... .......... .......... 4.30M\n 59350K .......... .......... .......... .......... .......... 10.1M\n 59400K .......... .......... .......... .......... ..........  783K\n 59450K .......... .......... .......... .......... ..........  733K\n 59500K .......... .......... .......... .......... .......... 12.1M\n 59550K .......... .......... .......... .......... .......... 52.3M\n 59600K .......... .......... .......... .......... .......... 50.6M\n 59650K .......... .......... .......... .......... .......... 63.8M\n 59700K .......... .......... .......... .......... .......... 49.6M\n 59750K .......... .......... .......... .......... .......... 95.0M\n 59800K .......... .......... .......... .......... .......... 79.2M\n 59850K .......... .......... .......... .......... .......... 72.6M\n 59900K .......... .......... .......... .......... ..........  102M\n 59950K .......... .......... .......... .......... .......... 70.9M\n 60000K .......... .......... .......... .......... .......... 64.8M\n 60050K .......... .......... .......... .......... ..........  118M\n 60100K .......... .......... .......... .......... .......... 4.31M\n 60150K .......... .......... .......... .......... ..........  747K\n 60200K .......... .......... .......... .......... .......... 8.92M\n 60250K .......... .......... .......... .......... .......... 53.0M\n 60300K .......... .......... .......... .......... .......... 99.1M\n 60350K .......... .......... .......... .......... ..........  150M\n 60400K .......... .......... .......... .......... ..........  102M\n 60450K .......... .......... .......... .......... ..........  109M\n 60500K .......... .......... .......... .......... ..........  121M\n 60550K .......... .......... .......... .......... ..........  179M\n 60600K .......... .......... .......... .......... ..........  722K\n 60650K .......... .........                                   85.1M=22s\n\n2023-03-03 11:05:38 (2.73 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-03-03 11:05:42--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  271K 3s\n    50K .......... .......... .......... .......... .......... 12%  183K 3s\n   100K .......... .......... .......... .......... .......... 18%  534K 2s\n   150K .......... .......... .......... .......... .......... 24%  547K 2s\n   200K .......... .......... .......... .......... .......... 30%  360K 2s\n   250K .......... .......... .......... .......... .......... 36%  548K 2s\n   300K .......... .......... .......... .......... .......... 42%  427K 1s\n   350K .......... .......... .......... .......... .......... 48%  549K 1s\n   400K .......... .......... .......... .......... .......... 54%  551K 1s\n   450K .......... .......... .......... .......... .......... 60%  739K 1s\n   500K .......... .......... .......... .......... .......... 66% 1.18M 1s\n   550K .......... .......... .......... .......... .......... 72%  678K 1s\n   600K .......... .......... .......... .......... .......... 78% 2.70M 0s\n   650K .......... .......... .......... .......... .......... 84%  682K 0s\n   700K .......... .......... .......... .......... .......... 90%  801K 0s\n   750K .......... .......... .......... .......... .......... 96% 1.71M 0s\n   800K .......... .......... .......                         100% 1.53M=1.6s\n\n2023-03-03 11:05:44 (533 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-03-03 11:05:16--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  181K\n    50K .......... .......... .......... .......... ..........  272K\n   100K .......... .......... .......... .......... ..........  274K\n   150K .......... .......... .......... .......... ..........  541K\n   200K .......... .......... .......... .......... ..........  538K\n   250K .......... .......... .......... .......... ..........  538K\n   300K .......... .......... .......... .......... ..........  543K\n   350K .......... .......... .......... .......... ..........  541K\n   400K .......... .......... .......... .......... .......... 1.19M\n   450K .......... .......... .......... .......... ..........  965K\n   500K .......... .......... .......... .......... ..........  549K\n   550K .......... .......... .......... .......... .......... 1.18M\n   600K .......... .......... .......... .......... ..........  975K\n   650K .......... .......... .......... .......... ..........  546K\n   700K .......... .......... .......... .......... ..........  289M\n   750K .......... .......... .......... .......... ..........  544K\n   800K .......... .......... .......... .......... ..........  543K\n   850K .......... .......... .......... .......... .......... 1.12M\n   900K .......... .......... .......... .......... .......... 1.00M\n   950K .......... .......... .......... .......... ..........  527K\n  1000K .......... .......... .......... .......... ..........  545K\n  1050K .......... .......... .......... .......... .......... 1.19M\n  1100K .......... .......... .......... .......... ..........  973K\n  1150K .......... .......... .......... .......... ..........  543K\n  1200K .......... .......... .......... .......... ..........  546K\n  1250K .......... .......... .......... .......... .......... 1.18M\n  1300K .......... .......... .......... .......... ..........  977K\n  1350K .......... .......... .......... .......... ..........  545K\n  1400K .......... .......... .......... .......... .......... 1.12M\n  1450K .......... .......... .......... .......... .......... 1.01M\n  1500K .......... .......... .......... .......... ..........  544K\n  1550K .......... .......... .......... .......... .......... 1.09M\n  1600K .......... .......... .......... .......... .......... 1.04M\n  1650K .......... .......... .......... .......... ..........  546K\n  1700K .......... .......... .......... .......... .......... 1.07M\n  1750K .......... .......... .......... .......... .......... 1.05M\n  1800K .......... .......... .......... .......... .......... 1.04M\n  1850K .......... .......... .......... .......... .......... 1.08M\n  1900K .......... .......... .......... .......... ..........  547K\n  1950K .......... .......... .......... .......... ..........  999K\n  2000K .......... .......... .......... .......... .......... 1.16M\n  2050K .......... .......... .......... .......... ..........  545K\n  2100K .......... .......... .......... .......... .......... 13.3M\n  2150K .......... .......... .......... .......... ..........  568K\n  2200K .......... .......... .......... .......... .......... 1.00M\n  2250K .......... .......... .......... .......... .......... 1.10M\n  2300K .......... .......... .......... .......... ..........  975K\n  2350K .......... .......... .......... .......... .......... 1.10M\n  2400K .......... .......... .......... .......... ..........  567K\n  2450K .......... .......... .......... .......... .......... 1.04M\n  2500K .......... .......... .......... .......... .......... 1.07M\n  2550K .......... .......... .......... .......... ..........  956K\n  2600K .......... .......... .......... .......... .......... 1.22M\n  2650K .......... .......... .......... .......... ..........  899K\n  2700K .......... .......... .......... .......... .......... 1.32M\n  2750K .......... .......... .......... .......... ..........  547K\n  2800K .......... .......... .......... .......... .......... 1.01M\n  2850K .......... .......... .......... .......... .......... 1.08M\n  2900K .......... .......... .......... .......... ..........  938K\n  2950K .......... .......... .......... .......... .......... 1.25M\n  3000K .......... .......... .......... .......... ..........  873K\n  3050K .......... .......... .......... .......... .......... 1.38M\n  3100K .......... .......... .......... .......... ..........  552K\n  3150K .......... .......... .......... .......... .......... 1.01M\n  3200K .......... .......... .......... .......... .......... 1.07M\n  3250K .......... .......... .......... .......... ..........  921K\n  3300K .......... .......... .......... .......... .......... 1.30M\n  3350K .......... .......... .......... .......... ..........  868K\n  3400K .......... .......... .......... .......... .......... 1.40M\n  3450K .......... .......... .......... .......... ..........  548K\n  3500K .......... .......... .......... .......... .......... 43.2M\n  3550K .......... .......... .......... .......... ..........  547K\n  3600K .......... .......... .......... .......... ..........  844K\n  3650K .......... .......... .......... .......... .......... 1.47M\n  3700K .......... .......... .......... .......... ..........  824K\n  3750K .......... .......... .......... .......... .......... 1.55M\n  3800K .......... .......... .......... .......... ..........  540K\n  3850K .......... .......... .......... .......... ..........  141M\n  3900K .......... .......... .......... .......... ..........  540K\n  3950K .......... .......... .......... .......... ..........  823K\n  4000K .......... .......... .......... .......... .......... 1.55M\n  4050K .......... .......... .......... .......... ..........  824K\n  4100K .......... .......... .......... .......... .......... 1.56M\n  4150K .......... .......... .......... .......... ..........  545K\n  4200K .......... .......... .......... .......... .......... 79.2M\n  4250K .......... .......... .......... .......... ..........  547K\n  4300K .......... .......... .......... .......... .......... 1.02M\n  4350K .......... .......... .......... .......... .......... 1.10M\n  4400K .......... .......... .......... .......... ..........  798K\n  4450K .......... .......... .......... .......... .......... 1.67M\n  4500K .......... .......... .......... .......... ..........  546K\n  4550K .......... .......... .......... .......... ..........  179M\n  4600K .......... .......... .......... .......... ..........  543K\n  4650K .......... .......... .......... .......... .......... 1022K\n  4700K .......... .......... .......... .......... .......... 1.14M\n  4750K .......... .......... .......... .......... ..........  765K\n  4800K .......... .......... .......... .......... .......... 1.72M\n  4850K .......... .......... .......... .......... ..........  546K\n  4900K .......... .......... .......... .......... .......... 71.4M\n  4950K .......... .......... .......... .......... ..........  544K\n  5000K .......... .......... .......... .......... .......... 1000K\n  5050K .......... .......... .......... .......... .......... 1.16M\n  5100K .......... .......... .......... .......... ..........  963K\n  5150K .......... .......... .......... .......... .......... 1.21M\n  5200K .......... .......... .......... .......... ..........  547K\n  5250K .......... .......... .......... .......... .......... 84.8M\n  5300K .......... .......... .......... .......... ..........  545K\n  5350K .......... .......... .......... .......... ..........  949K\n  5400K .......... .......... .......... .......... .......... 1.23M\n  5450K .......... .......... .......... .......... ..........  916K\n  5500K .......... .......... .......... .......... .......... 1.30M\n  5550K .......... .......... .......... .......... ..........  760K\n  5600K .......... .......... .......... .......... .......... 1.86M\n  5650K .......... .......... .......... .......... ..........  545K\n  5700K .......... .......... .......... .......... .......... 1.10M\n  5750K .......... .......... .......... .......... .......... 1.01M\n  5800K .......... .......... .......... .......... ..........  897K\n  5850K .......... .......... .......... .......... .......... 1.35M\n  5900K .......... .......... .......... .......... ..........  901K\n  5950K .......... .......... .......... .......... ..........  658K\n  6000K .......... .......... .......... .......... .......... 1.95M\n  6050K .......... .......... .......... .......... .......... 1.73M\n  6100K .......... .......... .......... .......... ..........  783K\n  6150K .......... .......... .......... .......... .......... 1.64M\n  6200K .......... .......... .......... .......... ..........  807K\n  6250K .......... .......... .......... .......... .......... 1.09M\n  6300K .......... .......... .......... .......... ..........  308K\n  6350K .......... .......... .......... .......... .......... 2.40M\n  6400K .......... .......... .......... .......... ..........  577K\n  6450K .......... .......... .......... .......... .......... 1.96M\n  6500K .......... .......... .......... .......... ..........  748K\n  6550K .......... .......... .......... .......... .......... 1.89M\n  6600K .......... .......... .......... .......... ..........  752K\n  6650K .......... .......... .......... .......... .......... 1.90M\n  6700K .......... .......... .......... .......... ..........  721K\n  6750K .......... .......... .......... .......... .......... 2.07M\n  6800K .......... .......... .......... .......... ..........  728K\n  6850K .......... .......... .......... .......... .......... 2.00M\n  6900K .......... .......... .......... .......... ..........  742K\n  6950K .......... .......... .......... .......... .......... 1.86M\n  7000K .......... .......... .......... .......... ..........  936K\n  7050K .......... .......... .......... .......... .......... 1.26M\n  7100K .......... .......... .......... .......... ..........  748K\n  7150K .......... .......... .......... .......... .......... 1.96M\n  7200K .......... .......... .......... .......... ..........  924K\n  7250K .......... .......... .......... .......... .......... 1.28M\n  7300K .......... .......... .......... .......... ..........  908K\n  7350K .......... .......... .......... .......... .......... 1.57M\n  7400K .......... .......... .......... .......... ..........  827K\n  7450K .......... .......... .......... .......... .......... 3.67M\n  7500K .......... .......... .......... .......... ..........  638K\n  7550K .......... .......... .......... .......... .......... 1.48M\n  7600K .......... .......... .......... .......... .......... 6.27M\n  7650K .......... .......... .......... .......... ..........  779K\n  7700K .......... .......... .......... .......... .......... 1.74M\n  7750K .......... .......... .......... .......... ..........  909K\n  7800K .......... .......... .......... .......... .......... 1.56M\n  7850K .......... .......... .......... .......... ..........  871K\n  7900K .......... .......... .......... .......... .......... 1.43M\n  7950K .......... .......... .......... .......... ..........  871K\n  8000K .......... .......... .......... .......... .......... 3.64M\n  8050K .......... .......... .......... .......... .......... 1.74M\n  8100K .......... .......... .......... .......... ..........  874K\n  8150K .......... .......... .......... .......... .......... 1.75M\n  8200K .......... .......... .......... .......... ..........  865K\n  8250K .......... .......... .......... .......... .......... 3.53M\n  8300K .......... .......... .......... .......... .......... 1.69M\n  8350K .......... .......... .......... .......... ..........  799K\n  8400K .......... .......... .......... .......... .......... 2.20M\n  8450K .......... .......... .......... .......... ..........  851K\n  8500K .......... .......... .......... .......... .......... 4.30M\n  8550K .......... .......... .......... .......... .......... 1.68M\n  8600K .......... .......... .......... .......... ..........  853K\n  8650K .......... .......... .......... .......... .......... 9.75M\n  8700K .......... .......... .......... .......... ..........  604K\n  8750K .......... .......... .......... .......... .......... 5.81M\n  8800K .......... .......... .......... .......... .......... 1.65M\n  8850K .......... .......... .......... .......... ..........  926K\n  8900K .......... .......... .......... .......... .......... 4.40M\n  8950K .......... .......... .......... .......... .......... 1.78M\n  9000K .......... .......... .......... .......... ..........  869K\n  9050K .......... .......... .......... .......... .......... 6.84M\n  9100K .......... .......... .......... .......... .......... 1.74M\n  9150K .......... .......... .......... .......... ..........  883K\n  9200K .......... .......... .......... .......... .......... 1.71M\n  9250K .......... .......... .......... .......... .......... 7.42M\n  9300K .......... .......... .......... .......... ..........  853K\n  9350K .......... .......... .......... .......... .......... 1.82M\n  9400K .......... .......... .......... .......... .......... 6.49M\n  9450K .......... .......... .......... .......... ..........  869K\n  9500K .......... .......... .......... .......... .......... 1.81M\n  9550K .......... .......... .......... .......... .......... 1.02M\n  9600K .......... .......... .......... .......... .......... 2.73M\n  9650K .......... .......... .......... .......... .......... 1.81M\n  9700K .......... .......... .......... .......... .......... 5.98M\n  9750K .......... .......... .......... .......... ..........  903K\n  9800K .......... .......... .......... .......... .......... 6.71M\n  9850K .......... .......... .......... .......... .......... 1.61M\n  9900K .......... .......... .......... .......... ..........  896K\n  9950K .......... .......... .......... .......... .......... 8.56M\n 10000K .......... .......... .......... .......... .......... 1.61M\n 10050K .......... .......... .......... .......... ..........  965K\n 10100K .......... .......... .......... .......... .......... 5.25M\n 10150K .......... .......... .......... .......... .......... 1.98M\n 10200K .......... .......... .......... .......... .......... 1.10M\n 10250K .......... .......... .......... .......... .......... 2.76M\n 10300K .......... .......... .......... .......... .......... 1.66M\n 10350K .......... .......... .......... .......... .......... 6.29M\n 10400K .......... .......... .......... .......... ..........  917K\n 10450K .......... .......... .......... .......... .......... 8.32M\n 10500K .......... .......... .......... .......... .......... 1.55M\n 10550K .......... .......... .......... .......... .......... 1.31M\n 10600K .......... .......... .......... .......... .......... 2.63M\n 10650K .......... .......... .......... .......... .......... 8.98M\n 10700K .......... .......... .......... .......... .......... 1.55M\n 10750K .......... .......... .......... .......... ..........  927K\n 10800K .......... .......... .......... .......... .......... 6.86M\n 10850K .......... .......... .......... .......... .......... 2.00M\n 10900K .......... .......... .......... .......... .......... 4.41M\n 10950K .......... .......... .......... .......... ..........  996K\n 11000K .......... .......... .......... .......... .......... 6.31M\n 11050K .......... .......... .......... .......... .......... 2.06M\n 11100K .......... .......... .......... .......... ..........  839K\n 11150K .......... .......... .......... .......... .......... 79.6M\n 11200K .......... .......... .......... .......... .......... 5.91M\n 11250K .......... .......... .......... .......... .......... 1.73M\n 11300K .......... .......... .......... .......... ..........  903K\n 11350K .......... .......... .......... .......... .......... 94.9M\n 11400K .......... .......... .......... .......... .......... 6.13M\n 11450K .......... .......... .......... .......... .......... 1.72M\n 11500K .......... .......... .......... .......... ..........  892K\n 11550K .......... .......... .......... .......... ..........\n..\n......  724K\n 50150K .......... .......... .......... .......... .......... 11.7M\n 50200K .......... .......... .......... .......... .......... 24.5M\n 50250K .......... .......... .......... .......... .......... 41.2M\n 50300K .......... .......... .......... .......... .......... 59.7M\n 50350K .......... .......... .......... .......... ..........  119M\n 50400K .......... .......... .......... .......... .......... 68.3M\n 50450K .......... .......... .......... .......... ..........  167M\n 50500K .......... .......... .......... .......... .......... 1.83M\n 50550K .......... .......... .......... .......... .......... 23.9M\n 50600K .......... .......... .......... .......... .......... 70.7M\n 50650K .......... .......... .......... .......... .......... 9.85M\n 50700K .......... .......... .......... .......... .......... 1.53M\n 50750K .......... .......... .......... .......... .......... 11.6M\n 50800K .......... .......... .......... .......... .......... 3.22M\n 50850K .......... .......... .......... .......... .......... 54.2M\n 50900K .......... .......... .......... .......... .......... 20.1M\n 50950K .......... .......... .......... .......... .......... 11.5M\n 51000K .......... .......... .......... .......... .......... 4.67M\n 51050K .......... .......... .......... .......... .......... 6.54M\n 51100K .......... .......... .......... .......... .......... 5.72M\n 51150K .......... .......... .......... .......... .......... 4.03M\n 51200K .......... .......... .......... .......... .......... 4.88M\n 51250K .......... .......... .......... .......... .......... 2.03M\n 51300K .......... .......... .......... .......... .......... 15.8M\n 51350K .......... .......... .......... .......... .......... 47.8M\n 51400K .......... .......... .......... .......... .......... 4.24M\n 51450K .......... .......... .......... .......... .......... 5.34M\n 51500K .......... .......... .......... .......... .......... 7.21M\n 51550K .......... .......... .......... .......... .......... 4.95M\n 51600K .......... .......... .......... .......... .......... 3.67M\n 51650K .......... .......... .......... .......... .......... 2.08M\n 51700K .......... .......... .......... .......... .......... 20.1M\n 51750K .......... .......... .......... .......... ..........  160M\n 51800K .......... .......... .......... .......... .......... 4.54M\n 51850K .......... .......... .......... .......... .......... 4.22M\n 51900K .......... .......... .......... .......... .......... 4.95M\n 51950K .......... .......... .......... .......... .......... 7.35M\n 52000K .......... .......... .......... .......... .......... 3.02M\n 52050K .......... .......... .......... .......... .......... 9.38M\n 52100K .......... .......... .......... .......... .......... 4.76M\n 52150K .......... .......... .......... .......... .......... 6.57M\n 52200K .......... .......... .......... .......... .......... 4.89M\n 52250K .......... .......... .......... .......... .......... 3.24M\n 52300K .......... .......... .......... .......... .......... 6.18M\n 52350K .......... .......... .......... .......... .......... 11.5M\n 52400K .......... .......... .......... .......... .......... 4.89M\n 52450K .......... .......... .......... .......... .......... 3.51M\n 52500K .......... .......... .......... .......... .......... 7.02M\n 52550K .......... .......... .......... .......... .......... 7.63M\n 52600K .......... .......... .......... .......... .......... 4.55M\n 52650K .......... .......... .......... .......... .......... 4.63M\n 52700K .......... .......... .......... .......... .......... 4.70M\n 52750K .......... .......... .......... .......... .......... 7.92M\n 52800K .......... .......... .......... .......... .......... 4.65M\n 52850K .......... .......... .......... .......... .......... 4.72M\n 52900K .......... .......... .......... .......... .......... 4.65M\n 52950K .......... .......... .......... .......... .......... 8.04M\n 53000K .......... .......... .......... .......... .......... 4.68M\n 53050K .......... .......... .......... .......... .......... 4.50M\n 53100K .......... .......... .......... .......... .......... 4.65M\n 53150K .......... .......... .......... .......... .......... 8.34M\n 53200K .......... .......... .......... .......... .......... 4.64M\n 53250K .......... .......... .......... .......... .......... 4.50M\n 53300K .......... .......... .......... .......... .......... 4.65M\n 53350K .......... .......... .......... .......... .......... 8.80M\n 53400K .......... .......... .......... .......... .......... 4.32M\n 53450K .......... .......... .......... .......... .......... 4.38M\n 53500K .......... .......... .......... .......... .......... 4.85M\n 53550K .......... .......... .......... .......... .......... 8.57M\n 53600K .......... .......... .......... .......... .......... 4.51M\n 53650K .......... .......... .......... .......... .......... 4.72M\n 53700K .......... .......... .......... .......... .......... 4.52M\n 53750K .......... .......... .......... .......... .......... 6.91M\n 53800K .......... .......... .......... .......... .......... 5.43M\n 53850K .......... .......... .......... .......... .......... 4.36M\n 53900K .......... .......... .......... .......... .......... 4.68M\n 53950K .......... .......... .......... .......... .......... 4.72M\n 54000K .......... .......... .......... .......... .......... 7.70M\n 54050K .......... .......... .......... .......... .......... 3.76M\n 54100K .......... .......... .......... .......... .......... 5.85M\n 54150K .......... .......... .......... .......... .......... 4.54M\n 54200K .......... .......... .......... .......... .......... 8.47M\n 54250K .......... .......... .......... .......... .......... 4.54M\n 54300K .......... .......... .......... .......... .......... 4.01M\n 54350K .......... .......... .......... .......... .......... 5.32M\n 54400K .......... .......... .......... .......... .......... 6.87M\n 54450K .......... .......... .......... .......... .......... 3.90M\n 54500K .......... .......... .......... .......... .......... 5.66M\n 54550K .......... .......... .......... .......... .......... 4.58M\n 54600K .......... .......... .......... .......... .......... 8.48M\n 54650K .......... .......... .......... .......... .......... 4.40M\n 54700K .......... .......... .......... .......... .......... 4.76M\n 54750K .......... .......... .......... .......... .......... 4.44M\n 54800K .......... .......... .......... .......... .......... 8.66M\n 54850K .......... .......... .......... .......... .......... 4.45M\n 54900K .......... .......... .......... .......... .......... 4.56M\n 54950K .......... .......... .......... .......... .......... 4.41M\n 55000K .......... .......... .......... .......... .......... 8.56M\n 55050K .......... .......... .......... .......... .......... 4.65M\n 55100K .......... .......... .......... .......... .......... 3.04M\n 55150K .......... .......... .......... .......... .......... 7.28M\n 55200K .......... .......... .......... .......... .......... 5.30M\n 55250K .......... .......... .......... .......... .......... 4.11M\n 55300K .......... .......... .......... .......... .......... 9.23M\n 55350K .......... .......... .......... .......... .......... 3.21M\n 55400K .......... .......... .......... .......... .......... 1.49M\n 55450K .......... .......... .......... .......... .......... 1.15M\n 55500K .......... .......... .......... .......... .......... 67.6M\n 55550K .......... .......... .......... .......... .......... 11.2M\n 55600K .......... .......... .......... .......... ..........  105M\n 55650K .......... .......... .......... .......... ..........  118M\n 55700K .......... .......... .......... .......... ..........  130M\n 55750K .......... .......... .......... .......... .......... 74.4M\n 55800K .......... .......... .......... .......... .......... 42.7M\n 55850K .......... .......... .......... .......... .......... 4.77M\n 55900K .......... .......... .......... .......... .......... 10.4M\n 55950K .......... .......... .......... .......... .......... 4.08M\n 56000K .......... .......... .......... .......... .......... 4.78M\n 56050K .......... .......... .......... .......... .......... 6.51M\n 56100K .......... .......... .......... .......... .......... 1.93M\n 56150K .......... .......... .......... .......... .......... 3.61M\n 56200K .......... .......... .......... .......... .......... 43.9M\n 56250K .......... .......... .......... .......... .......... 13.5M\n 56300K .......... .......... .......... .......... .......... 10.8M\n 56350K .......... .......... .......... .......... .......... 4.90M\n 56400K .......... .......... .......... .......... .......... 4.67M\n 56450K .......... .......... .......... .......... .......... 7.27M\n 56500K .......... .......... .......... .......... .......... 5.07M\n 56550K .......... .......... .......... .......... .......... 3.09M\n 56600K .......... .......... .......... .......... .......... 5.71M\n 56650K .......... .......... .......... .......... .......... 5.07M\n 56700K .......... .......... .......... .......... .......... 9.22M\n 56750K .......... .......... .......... .......... .......... 2.06M\n 56800K .......... .......... .......... .......... .......... 33.6M\n 56850K .......... .......... .......... .......... .......... 7.85M\n 56900K .......... .......... .......... .......... .......... 7.27M\n 56950K .......... .......... .......... .......... .......... 5.15M\n 57000K .......... .......... .......... .......... .......... 3.51M\n 57050K .......... .......... .......... .......... .......... 5.04M\n 57100K .......... .......... .......... .......... ..........  781K\n 57150K .......... .......... .......... .......... .......... 14.0M\n 57200K .......... .......... .......... .......... .......... 3.46M\n 57250K .......... .......... .......... .......... .......... 50.3M\n 57300K .......... .......... .......... .......... .......... 83.2M\n 57350K .......... .......... .......... .......... ..........  184M\n 57400K .......... .......... .......... .......... ..........  163M\n 57450K .......... .......... .......... .......... .......... 72.7M\n 57500K .......... .......... .......... .......... .......... 64.4M\n 57550K .......... .......... .......... .......... .......... 6.60M\n 57600K .......... .......... .......... .......... .......... 5.49M\n 57650K .......... .......... .......... .......... .......... 9.00M\n 57700K .......... .......... .......... .......... .......... 4.58M\n 57750K .......... .......... .......... .......... .......... 4.48M\n 57800K .......... .......... .......... .......... .......... 1.72M\n 57850K .......... .......... .......... .......... .......... 21.1M\n 57900K .......... .......... .......... .......... .......... 3.65M\n 57950K .......... .......... .......... .......... .......... 31.6M\n 58000K .......... .......... .......... .......... .......... 15.8M\n 58050K .......... .......... .......... .......... .......... 7.73M\n 58100K .......... .......... .......... .......... .......... 4.92M\n 58150K .......... .......... .......... .......... .......... 4.58M\n 58200K .......... .......... .......... .......... .......... 4.37M\n 58250K .......... .......... .......... .......... .......... 8.25M\n 58300K .......... .......... .......... .......... .......... 4.60M\n 58350K .......... .......... .......... .......... .......... 4.59M\n 58400K .......... .......... .......... .......... .......... 4.13M\n 58450K .......... .......... .......... .......... .......... 9.01M\n 58500K .......... .......... .......... .......... .......... 3.51M\n 58550K .......... .......... .......... .......... .......... 6.34M\n 58600K .......... .......... .......... .......... .......... 4.12M\n 58650K .......... .......... .......... .......... .......... 10.9M\n 58700K .......... .......... .......... .......... .......... 4.61M\n 58750K .......... .......... .......... .......... .......... 3.94M\n 58800K .......... .......... .......... .......... .......... 5.11M\n 58850K .......... .......... .......... .......... .......... 7.67M\n 58900K .......... .......... .......... .......... .......... 4.79M\n 58950K .......... .......... .......... .......... .......... 4.74M\n 59000K .......... .......... .......... .......... .......... 4.92M\n 59050K .......... .......... .......... .......... .......... 3.69M\n 59100K .......... .......... .......... .......... .......... 7.46M\n 59150K .......... .......... .......... .......... .......... 4.90M\n 59200K .......... .......... .......... .......... .......... 5.38M\n 59250K .......... .......... .......... .......... .......... 4.99M\n 59300K .......... .......... .......... .......... .......... 4.30M\n 59350K .......... .......... .......... .......... .......... 10.1M\n 59400K .......... .......... .......... .......... ..........  783K\n 59450K .......... .......... .......... .......... ..........  733K\n 59500K .......... .......... .......... .......... .......... 12.1M\n 59550K .......... .......... .......... .......... .......... 52.3M\n 59600K .......... .......... .......... .......... .......... 50.6M\n 59650K .......... .......... .......... .......... .......... 63.8M\n 59700K .......... .......... .......... .......... .......... 49.6M\n 59750K .......... .......... .......... .......... .......... 95.0M\n 59800K .......... .......... .......... .......... .......... 79.2M\n 59850K .......... .......... .......... .......... .......... 72.6M\n 59900K .......... .......... .......... .......... ..........  102M\n 59950K .......... .......... .......... .......... .......... 70.9M\n 60000K .......... .......... .......... .......... .......... 64.8M\n 60050K .......... .......... .......... .......... ..........  118M\n 60100K .......... .......... .......... .......... .......... 4.31M\n 60150K .......... .......... .......... .......... ..........  747K\n 60200K .......... .......... .......... .......... .......... 8.92M\n 60250K .......... .......... .......... .......... .......... 53.0M\n 60300K .......... .......... .......... .......... .......... 99.1M\n 60350K .......... .......... .......... .......... ..........  150M\n 60400K .......... .......... .......... .......... ..........  102M\n 60450K .......... .......... .......... .......... ..........  109M\n 60500K .......... .......... .......... .......... ..........  121M\n 60550K .......... .......... .......... .......... ..........  179M\n 60600K .......... .......... .......... .......... ..........  722K\n 60650K .......... .........                                   85.1M=22s\n\n2023-03-03 11:05:38 (2.73 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-03-03 11:05:42--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  271K 3s\n    50K .......... .......... .......... .......... .......... 12%  183K 3s\n   100K .......... .......... .......... .......... .......... 18%  534K 2s\n   150K .......... .......... .......... .......... .......... 24%  547K 2s\n   200K .......... .......... .......... .......... .......... 30%  360K 2s\n   250K .......... .......... .......... .......... .......... 36%  548K 2s\n   300K .......... .......... .......... .......... .......... 42%  427K 1s\n   350K .......... .......... .......... .......... .......... 48%  549K 1s\n   400K .......... .......... .......... .......... .......... 54%  551K 1s\n   450K .......... .......... .......... .......... .......... 60%  739K 1s\n   500K .......... .......... .......... .......... .......... 66% 1.18M 1s\n   550K .......... .......... .......... .......... .......... 72%  678K 1s\n   600K .......... .......... .......... .......... .......... 78% 2.70M 0s\n   650K .......... .......... .......... .......... .......... 84%  682K 0s\n   700K .......... .......... .......... .......... .......... 90%  801K 0s\n   750K .......... .......... .......... .......... .......... 96% 1.71M 0s\n   800K .......... .......... .......                         100% 1.53M=1.6s\n\n2023-03-03 11:05:44 (533 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-03-03T11:05:59.829744",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 65.42070126533508, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-03-03 11:05:16--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  181K    50K .......... .......... .......... .......... ..........  272K   100K .......... .......... .......... .......... ..........  274K   150K .......... .......... .......... .......... ..........  541K   200K .......... .......... .......... .......... ..........  538K   250K .......... .......... .......... .......... ..........  538K   300K .......... .......... .......... .......... ..........  543K   350K .......... .......... .......... .......... ..........  541K   400K .......... .......... .......... .......... .......... 1.19M   450K .......... .......... .......... .......... ..........  965K   500K .......... .......... .......... .......... ..........  549K   550K .......... .......... .......... .......... .......... 1.18M   600K .......... .......... .......... .......... ..........  975K   650K .......... .......... .......... .......... ..........  546K   700K .......... .......... .......... .......... ..........  289M   750K .......... .......... .......... .......... ..........  544K   800K .......... .......... .......... .......... ..........  543K   850K .......... .......... .......... .......... .......... 1.12M   900K .......... .......... .......... .......... .......... 1.00M   950K .......... .......... .......... .......... ..........  527K  1000K .......... .......... .......... .......... ..........  545K  1050K .......... .......... .......... .......... .......... 1.19M  1100K .......... .......... .......... .......... ..........  973K  1150K .......... .......... .......... .......... ..........  543K  1200K .......... .......... .......... .......... ..........  546K  1250K .......... .......... .......... .......... .......... 1.18M  1300K .......... .......... .......... .......... ..........  977K  1350K .......... .......... .......... .......... ..........  545K  1400K .......... .......... .......... .......... .......... 1.12M  1450K .......... .......... .......... .......... .......... 1.01M  1500K .......... .......... .......... .......... ..........  544K  1550K .......... .......... .......... .......... .......... 1.09M  1600K .......... .......... .......... .......... .......... 1.04M  1650K .......... .......... .......... .......... ..........  546K  1700K .......... .......... .......... .......... .......... 1.07M  1750K .......... .......... .......... .......... .......... 1.05M  1800K .......... .......... .......... .......... .......... 1.04M  1850K .......... .......... .......... .......... .......... 1.08M  1900K .......... .......... .......... .......... ..........  547K  1950K .......... .......... .......... .......... ..........  999K  2000K .......... .......... .......... .......... .......... 1.16M  2050K .......... .......... .......... .......... ..........  545K  2100K .......... .......... .......... .......... .......... 13.3M  2150K .......... .......... .......... .......... ..........  568K  2200K .......... .......... .......... .......... .......... 1.00M  2250K .......... .......... .......... .......... .......... 1.10M  2300K .......... .......... .......... .......... ..........  975K  2350K .......... .......... .......... .......... .......... 1.10M  2400K .......... .......... .......... .......... ..........  567K  2450K .......... .......... .......... .......... .......... 1.04M  2500K .......... .......... .......... .......... .......... 1.07M  2550K .......... .......... .......... .......... ..........  956K  2600K .......... .......... .......... .......... .......... 1.22M  2650K .......... .......... .......... .......... ..........  899K  2700K .......... .......... .......... .......... .......... 1.32M  2750K .......... .......... .......... .......... ..........  547K  2800K .......... .......... .......... .......... .......... 1.01M  2850K .......... .......... .......... .......... .......... 1.08M  2900K .......... .......... .......... .......... ..........  938K  2950K .......... .......... .......... .......... .......... 1.25M  3000K .......... .......... .......... .......... ..........  873K  3050K .......... .......... .......... .......... .......... 1.38M  3100K .......... .......... .......... .......... ..........  552K  3150K .......... .......... .......... .......... .......... 1.01M  3200K .......... .......... .......... .......... .......... 1.07M  3250K .......... .......... .......... .......... ..........  921K  3300K .......... .......... .......... .......... .......... 1.30M  3350K .......... .......... .......... .......... ..........  868K  3400K .......... .......... .......... .......... .......... 1.40M  3450K .......... .......... .......... .......... ..........  548K  3500K .......... .......... .......... .......... .......... 43.2M  3550K .......... .......... .......... .......... ..........  547K  3600K .......... .......... .......... .......... ..........  844K  3650K .......... .......... .......... .......... .......... 1.47M  3700K .......... .......... .......... .......... ..........  824K  3750K .......... .......... .......... .......... .......... 1.55M  3800K .......... .......... .......... .......... ..........  540K  3850K .......... .......... .......... .......... ..........  141M  3900K .......... .......... .......... .......... ..........  540K  3950K .......... .......... .......... .......... ..........  823K  4000K .......... .......... .......... .......... .......... 1.55M  4050K .......... .......... .......... .......... ..........  824K  4100K .......... .......... .......... .......... .......... 1.56M  4150K .......... .......... .......... .......... ..........  545K  4200K .......... .......... .......... .......... .......... 79.2M  4250K .......... .......... .......... .......... ..........  547K  4300K .......... .......... .......... .......... .......... 1.02M  4350K .......... .......... .......... .......... .......... 1.10M  4400K .......... .......... .......... .......... ..........  798K  4450K .......... .......... .......... .......... .......... 1.67M  4500K .......... .......... .......... .......... ..........  546K  4550K .......... .......... .......... .......... ..........  179M  4600K .......... .......... .......... .......... ..........  543K  4650K .......... .......... .......... .......... .......... 1022K  4700K .......... .......... .......... .......... .......... 1.14M  4750K .......... .......... .......... .......... ..........  765K  4800K .......... .......... .......... .......... .......... 1.72M  4850K .......... .......... .......... .......... ..........  546K  4900K .......... .......... .......... .......... .......... 71.4M  4950K .......... .......... .......... .......... ..........  544K  5000K .......... .......... .......... .......... .......... 1000K  5050K .......... .......... .......... .......... .......... 1.16M  5100K .......... .......... .......... .......... ..........  963K  5150K .......... .......... .......... .......... .......... 1.21M  5200K .......... .......... .......... .......... ..........  547K  5250K .......... .......... .......... .......... .......... 84.8M  5300K .......... .......... .......... .......... ..........  545K  5350K .......... .......... .......... .......... ..........  949K  5400K .......... .......... .......... .......... .......... 1.23M  5450K .......... .......... .......... .......... ..........  916K  5500K .......... .......... .......... .......... .......... 1.30M  5550K .......... .......... .......... .......... ..........  760K  5600K .......... .......... .......... .......... .......... 1.86M  5650K .......... .......... .......... .......... ..........  545K  5700K .......... .......... .......... .......... .......... 1.10M  5750K .......... .......... .......... .......... .......... 1.01M  5800K .......... .......... .......... .......... ..........  897K  5850K .......... .......... .......... .......... .......... 1.35M  5900K .......... .......... .......... .......... ..........  901K  5950K .......... .......... .......... .......... ..........  658K  6000K .......... .......... .......... .......... .......... 1.95M  6050K .......... .......... .......... .......... .......... 1.73M  6100K .......... .......... .......... .......... ..........  783K  6150K .......... .......... .......... .......... .......... 1.64M  6200K .......... .......... .......... .......... ..........  807K  6250K .......... .......... .......... .......... .......... 1.09M  6300K .......... .......... .......... .......... ..........  308K  6350K .......... .......... .......... .......... .......... 2.40M  6400K .......... .......... .......... .......... ..........  577K  6450K .......... .......... .......... .......... .......... 1.96M  6500K .......... .......... .......... .......... ..........  748K  6550K .......... .......... .......... .......... .......... 1.89M  6600K .......... .......... .......... .......... ..........  752K  6650K .......... .......... .......... .......... .......... 1.90M  6700K .......... .......... .......... .......... ..........  721K  6750K .......... .......... .......... .......... .......... 2.07M  6800K .......... .......... .......... .......... ..........  728K  6850K .......... .......... .......... .......... .......... 2.00M  6900K .......... .......... .......... .......... ..........  742K  6950K .......... .......... .......... .......... .......... 1.86M  7000K .......... .......... .......... .......... ..........  936K  7050K .......... .......... .......... .......... .......... 1.26M  7100K .......... .......... .......... .......... ..........  748K  7150K .......... .......... .......... .......... .......... 1.96M  7200K .......... .......... .......... .......... ..........  924K  7250K .......... .......... .......... .......... .......... 1.28M  7300K .......... .......... .......... .......... ..........  908K  7350K .......... .......... .......... .......... .......... 1.57M  7400K .......... .......... .......... .......... ..........  827K  7450K .......... .......... .......... .......... .......... 3.67M  7500K .......... .......... .......... .......... ..........  638K  7550K .......... .......... .......... .......... .......... 1.48M  7600K .......... .......... .......... .......... .......... 6.27M  7650K .......... .......... .......... .......... ..........  779K  7700K .......... .......... .......... .......... .......... 1.74M  7750K .......... .......... .......... .......... ..........  909K  7800K .......... .......... .......... .......... .......... 1.56M  7850K .......... .......... .......... .......... ..........  871K  7900K .......... .......... .......... .......... .......... 1.43M  7950K .......... .......... .......... .......... ..........  871K  8000K .......... .......... .......... .......... .......... 3.64M  8050K .......... .......... .......... .......... .......... 1.74M  8100K .......... .......... .......... .......... ..........  874K  8150K .......... .......... .......... .......... .......... 1.75M  8200K .......... .......... .......... .......... ..........  865K  8250K .......... .......... .......... .......... .......... 3.53M  8300K .......... .......... .......... .......... .......... 1.69M  8350K .......... .......... .......... .......... ..........  799K  8400K .......... .......... .......... .......... .......... 2.20M  8450K .......... .......... .......... .......... ..........  851K  8500K .......... .......... .......... .......... .......... 4.30M  8550K .......... .......... .......... .......... .......... 1.68M  8600K .......... .......... .......... .......... ..........  853K  8650K .......... .......... .......... .......... .......... 9.75M  8700K .......... .......... .......... .......... ..........  604K  8750K .......... .......... .......... .......... .......... 5.81M  8800K .......... .......... .......... .......... .......... 1.65M  8850K .......... .......... .......... .......... ..........  926K  8900K .......... .......... .......... .......... .......... 4.40M  8950K .......... .......... .......... .......... .......... 1.78M  9000K .......... .......... .......... .......... ..........  869K  9050K .......... .......... .......... .......... .......... 6.84M  9100K .......... .......... .......... .......... .......... 1.74M  9150K .......... .......... .......... .......... ..........  883K  9200K .......... .......... .......... .......... .......... 1.71M  9250K .......... .......... .......... .......... .......... 7.42M  9300K .......... .......... .......... .......... ..........  853K  9350K .......... .......... .......... .......... .......... 1.82M  9400K .......... .......... .......... .......... .......... 6.49M  9450K .......... .......... .......... .......... ..........  869K  9500K .......... .......... .......... .......... .......... 1.81M  9550K .......... .......... .......... .......... .......... 1.02M  9600K .......... .......... .......... .......... .......... 2.73M  9650K .......... .......... .......... .......... .......... 1.81M  9700K .......... .......... .......... .......... .......... 5.98M  9750K .......... .......... .......... .......... ..........  903K  9800K .......... .......... .......... .......... .......... 6.71M  9850K .......... .......... .......... .......... .......... 1.61M  9900K .......... .......... .......... .......... ..........  896K  9950K .......... .......... .......... .......... .......... 8.56M 10000K .......... .......... .......... .......... .......... 1.61M 10050K .......... .......... .......... .......... ..........  965K 10100K .......... .......... .......... .......... .......... 5.25M 10150K .......... .......... .......... .......... .......... 1.98M 10200K .......... .......... .......... .......... .......... 1.10M 10250K .......... .......... .......... .......... .......... 2.76M 10300K .......... .......... .......... .......... .......... 1.66M 10350K .......... .......... .......... .......... .......... 6.29M 10400K .......... .......... .......... .......... ..........  917K 10450K .......... .......... .......... .......... .......... 8.32M 10500K .......... .......... .......... .......... .......... 1.55M 10550K .......... .......... .......... .......... .......... 1.31M 10600K .......... .......... .......... .......... .......... 2.63M 10650K .......... .......... .......... .......... .......... 8.98M 10700K .......... .......... .......... .......... .......... 1.55M 10750K .......... .......... .......... .......... ..........  927K 10800K .......... .......... .......... .......... .......... 6.86M 10850K .......... .......... .......... .......... .......... 2.00M 10900K .......... .......... .......... .......... .......... 4.41M 10950K .......... .......... .......... .......... ..........  996K 11000K .......... .......... .......... .......... .......... 6.31M 11050K .......... .......... .......... .......... .......... 2.06M 11100K .......... .......... .......... .......... ..........  839K 11150K .......... .......... .......... .......... .......... 79.6M 11200K .......... .......... .......... .......... .......... 5.91M 11250K .......... .......... .......... .......... .......... 1.73M 11300K .......... .......... .......... .......... ..........  903K 11350K .......... .......... .......... .......... .......... 94.9M 11400K .......... .......... .......... .......... .......... 6.13M 11450K .......... .......... .......... .......... .......... 1.72M 11500K .......... .......... .......... .......... ..........  892K 11550K .......... .......... .......... .......... ..................  724K 50150K .......... .......... .......... .......... .......... 11.7M 50200K .......... .......... .......... .......... .......... 24.5M 50250K .......... .......... .......... .......... .......... 41.2M 50300K .......... .......... .......... .......... .......... 59.7M 50350K .......... .......... .......... .......... ..........  119M 50400K .......... .......... .......... .......... .......... 68.3M 50450K .......... .......... .......... .......... ..........  167M 50500K .......... .......... .......... .......... .......... 1.83M 50550K .......... .......... .......... .......... .......... 23.9M 50600K .......... .......... .......... .......... .......... 70.7M 50650K .......... .......... .......... .......... .......... 9.85M 50700K .......... .......... .......... .......... .......... 1.53M 50750K .......... .......... .......... .......... .......... 11.6M 50800K .......... .......... .......... .......... .......... 3.22M 50850K .......... .......... .......... .......... .......... 54.2M 50900K .......... .......... .......... .......... .......... 20.1M 50950K .......... .......... .......... .......... .......... 11.5M 51000K .......... .......... .......... .......... .......... 4.67M 51050K .......... .......... .......... .......... .......... 6.54M 51100K .......... .......... .......... .......... .......... 5.72M 51150K .......... .......... .......... .......... .......... 4.03M 51200K .......... .......... .......... .......... .......... 4.88M 51250K .......... .......... .......... .......... .......... 2.03M 51300K .......... .......... .......... .......... .......... 15.8M 51350K .......... .......... .......... .......... .......... 47.8M 51400K .......... .......... .......... .......... .......... 4.24M 51450K .......... .......... .......... .......... .......... 5.34M 51500K .......... .......... .......... .......... .......... 7.21M 51550K .......... .......... .......... .......... .......... 4.95M 51600K .......... .......... .......... .......... .......... 3.67M 51650K .......... .......... .......... .......... .......... 2.08M 51700K .......... .......... .......... .......... .......... 20.1M 51750K .......... .......... .......... .......... ..........  160M 51800K .......... .......... .......... .......... .......... 4.54M 51850K .......... .......... .......... .......... .......... 4.22M 51900K .......... .......... .......... .......... .......... 4.95M 51950K .......... .......... .......... .......... .......... 7.35M 52000K .......... .......... .......... .......... .......... 3.02M 52050K .......... .......... .......... .......... .......... 9.38M 52100K .......... .......... .......... .......... .......... 4.76M 52150K .......... .......... .......... .......... .......... 6.57M 52200K .......... .......... .......... .......... .......... 4.89M 52250K .......... .......... .......... .......... .......... 3.24M 52300K .......... .......... .......... .......... .......... 6.18M 52350K .......... .......... .......... .......... .......... 11.5M 52400K .......... .......... .......... .......... .......... 4.89M 52450K .......... .......... .......... .......... .......... 3.51M 52500K .......... .......... .......... .......... .......... 7.02M 52550K .......... .......... .......... .......... .......... 7.63M 52600K .......... .......... .......... .......... .......... 4.55M 52650K .......... .......... .......... .......... .......... 4.63M 52700K .......... .......... .......... .......... .......... 4.70M 52750K .......... .......... .......... .......... .......... 7.92M 52800K .......... .......... .......... .......... .......... 4.65M 52850K .......... .......... .......... .......... .......... 4.72M 52900K .......... .......... .......... .......... .......... 4.65M 52950K .......... .......... .......... .......... .......... 8.04M 53000K .......... .......... .......... .......... .......... 4.68M 53050K .......... .......... .......... .......... .......... 4.50M 53100K .......... .......... .......... .......... .......... 4.65M 53150K .......... .......... .......... .......... .......... 8.34M 53200K .......... .......... .......... .......... .......... 4.64M 53250K .......... .......... .......... .......... .......... 4.50M 53300K .......... .......... .......... .......... .......... 4.65M 53350K .......... .......... .......... .......... .......... 8.80M 53400K .......... .......... .......... .......... .......... 4.32M 53450K .......... .......... .......... .......... .......... 4.38M 53500K .......... .......... .......... .......... .......... 4.85M 53550K .......... .......... .......... .......... .......... 8.57M 53600K .......... .......... .......... .......... .......... 4.51M 53650K .......... .......... .......... .......... .......... 4.72M 53700K .......... .......... .......... .......... .......... 4.52M 53750K .......... .......... .......... .......... .......... 6.91M 53800K .......... .......... .......... .......... .......... 5.43M 53850K .......... .......... .......... .......... .......... 4.36M 53900K .......... .......... .......... .......... .......... 4.68M 53950K .......... .......... .......... .......... .......... 4.72M 54000K .......... .......... .......... .......... .......... 7.70M 54050K .......... .......... .......... .......... .......... 3.76M 54100K .......... .......... .......... .......... .......... 5.85M 54150K .......... .......... .......... .......... .......... 4.54M 54200K .......... .......... .......... .......... .......... 8.47M 54250K .......... .......... .......... .......... .......... 4.54M 54300K .......... .......... .......... .......... .......... 4.01M 54350K .......... .......... .......... .......... .......... 5.32M 54400K .......... .......... .......... .......... .......... 6.87M 54450K .......... .......... .......... .......... .......... 3.90M 54500K .......... .......... .......... .......... .......... 5.66M 54550K .......... .......... .......... .......... .......... 4.58M 54600K .......... .......... .......... .......... .......... 8.48M 54650K .......... .......... .......... .......... .......... 4.40M 54700K .......... .......... .......... .......... .......... 4.76M 54750K .......... .......... .......... .......... .......... 4.44M 54800K .......... .......... .......... .......... .......... 8.66M 54850K .......... .......... .......... .......... .......... 4.45M 54900K .......... .......... .......... .......... .......... 4.56M 54950K .......... .......... .......... .......... .......... 4.41M 55000K .......... .......... .......... .......... .......... 8.56M 55050K .......... .......... .......... .......... .......... 4.65M 55100K .......... .......... .......... .......... .......... 3.04M 55150K .......... .......... .......... .......... .......... 7.28M 55200K .......... .......... .......... .......... .......... 5.30M 55250K .......... .......... .......... .......... .......... 4.11M 55300K .......... .......... .......... .......... .......... 9.23M 55350K .......... .......... .......... .......... .......... 3.21M 55400K .......... .......... .......... .......... .......... 1.49M 55450K .......... .......... .......... .......... .......... 1.15M 55500K .......... .......... .......... .......... .......... 67.6M 55550K .......... .......... .......... .......... .......... 11.2M 55600K .......... .......... .......... .......... ..........  105M 55650K .......... .......... .......... .......... ..........  118M 55700K .......... .......... .......... .......... ..........  130M 55750K .......... .......... .......... .......... .......... 74.4M 55800K .......... .......... .......... .......... .......... 42.7M 55850K .......... .......... .......... .......... .......... 4.77M 55900K .......... .......... .......... .......... .......... 10.4M 55950K .......... .......... .......... .......... .......... 4.08M 56000K .......... .......... .......... .......... .......... 4.78M 56050K .......... .......... .......... .......... .......... 6.51M 56100K .......... .......... .......... .......... .......... 1.93M 56150K .......... .......... .......... .......... .......... 3.61M 56200K .......... .......... .......... .......... .......... 43.9M 56250K .......... .......... .......... .......... .......... 13.5M 56300K .......... .......... .......... .......... .......... 10.8M 56350K .......... .......... .......... .......... .......... 4.90M 56400K .......... .......... .......... .......... .......... 4.67M 56450K .......... .......... .......... .......... .......... 7.27M 56500K .......... .......... .......... .......... .......... 5.07M 56550K .......... .......... .......... .......... .......... 3.09M 56600K .......... .......... .......... .......... .......... 5.71M 56650K .......... .......... .......... .......... .......... 5.07M 56700K .......... .......... .......... .......... .......... 9.22M 56750K .......... .......... .......... .......... .......... 2.06M 56800K .......... .......... .......... .......... .......... 33.6M 56850K .......... .......... .......... .......... .......... 7.85M 56900K .......... .......... .......... .......... .......... 7.27M 56950K .......... .......... .......... .......... .......... 5.15M 57000K .......... .......... .......... .......... .......... 3.51M 57050K .......... .......... .......... .......... .......... 5.04M 57100K .......... .......... .......... .......... ..........  781K 57150K .......... .......... .......... .......... .......... 14.0M 57200K .......... .......... .......... .......... .......... 3.46M 57250K .......... .......... .......... .......... .......... 50.3M 57300K .......... .......... .......... .......... .......... 83.2M 57350K .......... .......... .......... .......... ..........  184M 57400K .......... .......... .......... .......... ..........  163M 57450K .......... .......... .......... .......... .......... 72.7M 57500K .......... .......... .......... .......... .......... 64.4M 57550K .......... .......... .......... .......... .......... 6.60M 57600K .......... .......... .......... .......... .......... 5.49M 57650K .......... .......... .......... .......... .......... 9.00M 57700K .......... .......... .......... .......... .......... 4.58M 57750K .......... .......... .......... .......... .......... 4.48M 57800K .......... .......... .......... .......... .......... 1.72M 57850K .......... .......... .......... .......... .......... 21.1M 57900K .......... .......... .......... .......... .......... 3.65M 57950K .......... .......... .......... .......... .......... 31.6M 58000K .......... .......... .......... .......... .......... 15.8M 58050K .......... .......... .......... .......... .......... 7.73M 58100K .......... .......... .......... .......... .......... 4.92M 58150K .......... .......... .......... .......... .......... 4.58M 58200K .......... .......... .......... .......... .......... 4.37M 58250K .......... .......... .......... .......... .......... 8.25M 58300K .......... .......... .......... .......... .......... 4.60M 58350K .......... .......... .......... .......... .......... 4.59M 58400K .......... .......... .......... .......... .......... 4.13M 58450K .......... .......... .......... .......... .......... 9.01M 58500K .......... .......... .......... .......... .......... 3.51M 58550K .......... .......... .......... .......... .......... 6.34M 58600K .......... .......... .......... .......... .......... 4.12M 58650K .......... .......... .......... .......... .......... 10.9M 58700K .......... .......... .......... .......... .......... 4.61M 58750K .......... .......... .......... .......... .......... 3.94M 58800K .......... .......... .......... .......... .......... 5.11M 58850K .......... .......... .......... .......... .......... 7.67M 58900K .......... .......... .......... .......... .......... 4.79M 58950K .......... .......... .......... .......... .......... 4.74M 59000K .......... .......... .......... .......... .......... 4.92M 59050K .......... .......... .......... .......... .......... 3.69M 59100K .......... .......... .......... .......... .......... 7.46M 59150K .......... .......... .......... .......... .......... 4.90M 59200K .......... .......... .......... .......... .......... 5.38M 59250K .......... .......... .......... .......... .......... 4.99M 59300K .......... .......... .......... .......... .......... 4.30M 59350K .......... .......... .......... .......... .......... 10.1M 59400K .......... .......... .......... .......... ..........  783K 59450K .......... .......... .......... .......... ..........  733K 59500K .......... .......... .......... .......... .......... 12.1M 59550K .......... .......... .......... .......... .......... 52.3M 59600K .......... .......... .......... .......... .......... 50.6M 59650K .......... .......... .......... .......... .......... 63.8M 59700K .......... .......... .......... .......... .......... 49.6M 59750K .......... .......... .......... .......... .......... 95.0M 59800K .......... .......... .......... .......... .......... 79.2M 59850K .......... .......... .......... .......... .......... 72.6M 59900K .......... .......... .......... .......... ..........  102M 59950K .......... .......... .......... .......... .......... 70.9M 60000K .......... .......... .......... .......... .......... 64.8M 60050K .......... .......... .......... .......... ..........  118M 60100K .......... .......... .......... .......... .......... 4.31M 60150K .......... .......... .......... .......... ..........  747K 60200K .......... .......... .......... .......... .......... 8.92M 60250K .......... .......... .......... .......... .......... 53.0M 60300K .......... .......... .......... .......... .......... 99.1M 60350K .......... .......... .......... .......... ..........  150M 60400K .......... .......... .......... .......... ..........  102M 60450K .......... .......... .......... .......... ..........  109M 60500K .......... .......... .......... .......... ..........  121M 60550K .......... .......... .......... .......... ..........  179M 60600K .......... .......... .......... .......... ..........  722K 60650K .......... .........                                   85.1M=22s2023-03-03 11:05:38 (2.73 MB/s) - 'exp_quant.zip' saved [62125370]--2023-03-03 11:05:42--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  271K 3s    50K .......... .......... .......... .......... .......... 12%  183K 3s   100K .......... .......... .......... .......... .......... 18%  534K 2s   150K .......... .......... .......... .......... .......... 24%  547K 2s   200K .......... .......... .......... .......... .......... 30%  360K 2s   250K .......... .......... .......... .......... .......... 36%  548K 2s   300K .......... .......... .......... .......... .......... 42%  427K 1s   350K .......... .......... .......... .......... .......... 48%  549K 1s   400K .......... .......... .......... .......... .......... 54%  551K 1s   450K .......... .......... .......... .......... .......... 60%  739K 1s   500K .......... .......... .......... .......... .......... 66% 1.18M 1s   550K .......... .......... .......... .......... .......... 72%  678K 1s   600K .......... .......... .......... .......... .......... 78% 2.70M 0s   650K .......... .......... .......... .......... .......... 84%  682K 0s   700K .......... .......... .......... .......... .......... 90%  801K 0s   750K .......... .......... .......... .......... .......... 96% 1.71M 0s   800K .......... .......... .......                         100% 1.53M=1.6s2023-03-03 11:05:44 (533 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator (Test #1)" name="0" time="43.74383330345154">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_type|input_values": "1, 5, 10",  "input_type|parameter_values": "list_comma_separated_values",  "parameter_name": "perplexity" }, "job": {  "command_line": "mkdir outputs; for param in $(echo \u00271, 5, 10\u0027 | sed \u0027s/,/ /g\u0027); do echo $param \u003e outputs/\u0027perplexity\u0027_$param\\.txt; done",  "command_version": null,  "create_time": "2023-03-03T11:05:37.309533",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xrqcj",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "4d902b67c5af63c7",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841563.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:06:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841563.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:06:03"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "parameter_iteration": {    "id": "d98c1acd07727e82",    "src": "hdca"   }  },  "outputs": {   "__new_primary_file_parameter_iteration|perplexity_10__": {    "id": "ae6fe0b8fd008894",    "src": "hda",    "uuid": "f9238453-774d-4674-9cd1-2508a393cdfa"   },   "__new_primary_file_parameter_iteration|perplexity_1__": {    "id": "809bfc97fd45fe97",    "src": "hda",    "uuid": "ddf6fb98-8104-43b7-8634-4363887fb1e1"   },   "__new_primary_file_parameter_iteration|perplexity_5__": {    "id": "5ea8e148593bef09",    "src": "hda",    "uuid": "0dd4041f-3372-42eb-8ab7-1ea0f9727484"   }  },  "params": {   "__input_ext": "\"data\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input_type": "{\"__current_case__\": 0, \"input_values\": \"1, 5, 10\", \"parameter_values\": \"list_comma_separated_values\"}",   "parameter_name": "\"perplexity\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator/0.0.1+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-03-03T11:06:20.469053",  "user_email": "tests@fake.org" }, "output_problems": [  "Collection element perplexity_1 of collection parameter_iteration: Test output file (perplexity_1.txt) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 43.74383330345154, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator", "tool_version": "0.0.1+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.0533449649810791">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.0533449649810791, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.4.3+galaxy10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.05341196060180664">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.05341196060180664, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.6.0+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert (Test #1)" name="0" time="0.053078413009643555">
        
            <error type="error" message="Input staging problem: Test input file (input.loom) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (input.loom) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.053078413009643555, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert", "tool_version": "0.0.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #1)" name="0" time="11.329654216766357">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.329654216766357, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension", "tool_version": "1.7.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #2)" name="1" time="56.62135648727417">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    leiden[uns]-    iroot-    neighbors-    leiden[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #3)" name="2" time="36.23863649368286">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #4)" name="3" time="31.302136659622192">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #5)" name="4" time="29.556993007659912">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    diffmap_evals[obsm]-    X_pca-    X_diffmap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #6)" name="5" time="35.431902170181274">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_tsne
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: Consider installing the package MulticoreTSNE (https://github.com/DmitryUlyanov/Multicore-TSNE). Even for n_jobs=1 this speeds up the computation considerably and might yield better converged results.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #7)" name="6" time="42.29986333847046">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    umap[obsm]-    X_pca-    X_umap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #8)" name="7" time="30.655904293060303">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    draw_graph[obsm]-    X_pca-    X_draw_graph_fr[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Package 'fa2' is not installed, falling back to layout 'fr'.To use the faster and better ForceAtlas2 layout, install package 'fa2' (`pip install fa2`).
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #9)" name="8" time="33.28969931602478">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    paga-    paul15_clusters_sizes[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #10)" name="9" time="30.70197296142578">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    dpt_groups-    dpt_order-    dpt_order_indices[uns]-    diffmap_evals-    iroot-    neighbors-    dpt_changepoints-    dpt_grouptips[obsm]-    X_diffmap-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #1)" name="0" time="64.94770431518555">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    336 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #2)" name="1" time="55.03768706321716">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_genes[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #3)" name="2" time="40.62006092071533">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #4)" name="3" time="10.151121854782104">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 10.151121854782104, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter", "tool_version": "1.7.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #5)" name="4" time="32.30782175064087">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    highly_variable-    means-    dispersions-    dispersions_norm[uns]-    cell_type_colors-    highlights-    iroot-    hvg
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #6)" name="5" time="32.86098670959473">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    320 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #7)" name="6" time="32.14070200920105">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    10 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #8)" name="7" time="8.733520269393921">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 8.733520269393921, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter", "tool_version": "1.7.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #1)" name="0" time="40.6529541015625">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1000[obs]-    n_genes_by_counts-    log1p_n_genes_by_counts-    total_counts-    log1p_total_counts-    pct_counts_in_top_50_genes-    pct_counts_in_top_100_genes-    pct_counts_in_top_200_genes-    pct_counts_in_top_500_genes-    total_counts_mito-    log1p_total_counts_mito-    pct_counts_mito-    total_counts_negative-    log1p_total_counts_negative-    pct_counts_negative[var]-    mito-    negative-    n_cells_by_counts-    mean_counts-    log1p_mean_counts-    pct_dropout_by_counts-    total_counts-    log1p_total_counts
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #2)" name="1" time="43.050334453582764">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #11)" name="10" time="33.04663920402527">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    mean-    std[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #12)" name="11" time="8.444816827774048">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 8.444816827774048, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect", "tool_version": "1.7.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #3)" name="2" time="44.752487659454346">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #4)" name="3" time="28.353757858276367">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    score[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #5)" name="4" time="36.6947820186615">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    S_score-    G2M_score-    phase[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'phase' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #6)" name="5" time="31.118239402770996">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    rank_genes_groups
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #7)" name="6" time="66.8156385421753">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #8)" name="7" time="34.55669331550598">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #9)" name="8" time="30.864044189453125">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #10)" name="9" time="31.851962089538574">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    mean-    std[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #1)" name="0" time="30.868088483810425">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #2)" name="1" time="30.86136484146118">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #3)" name="2" time="30.030479669570923">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #4)" name="3" time="30.591261625289917">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some cells have total count of genes equal to zero
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="68.65263223648071">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        basis='umap',    color=['HES4'],    use_raw=True,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='inferno',    palette='inferno',    frameon=True,                    size=1.0,        )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="67.60299277305603">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        x='EKLF',    y='Cebpa',    use_raw=False,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='',    palette='bwr',    frameon=False,        title='A title',                size=1.0,        )anndata.h5adscatter.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file scatter.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="32.34475922584534">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca(        adata,    save='.pdf',    show=False,            color=['CD3D', 'CD79A'],        use_raw=False,    sort_order=True,                components=['1,2', '1,3'],                projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=2,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adpca.pdf
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="36.755669593811035">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_loadings(        adata,    save='.png',    show=False,        components=[1, 2, 3])anndata.h5adpca_loadings.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="31.442095041275024">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_variance_ratio(        adata,    save='.png',    show=False,        n_pcs=5,    log=False)anndata.h5adpca_variance_ratio.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="25.734805583953857">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "5b2d47ab55c33e58",   "src": "hda"  },  "format": "png",  "method|method": "pl.pca_overview",  "method|plot|frameon": true,  "method|plot|hspace": "0.25",  "method|plot|legend_fontsize": "1",  "method|plot|legend_fontweight": "normal",  "method|plot|legend_loc": "right margin",  "method|plot|ncols": "4",  "method|plot|palette": "viridis",  "method|plot|projection": "2d",  "method|plot|size": "1",  "method|plot|wspace": "0.1",  "method|sort_order": true,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/f/8/f/dataset_f8f050f5-2971-4c71-8b70-af091000e8f3.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/171/configs/tmpxi6j3m7e\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/171/configs/tmpxi6j3m7e\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-03-03T11:01:27.301969",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-cmq8s",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "34b12ae9a169b77c",  "inputs": {   "adata": {    "id": "5b2d47ab55c33e58",    "src": "hda",    "uuid": "f8f050f5-2971-4c71-8b70-af091000e8f3"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "cf8e4f1641342587",    "src": "hda",    "uuid": "6e63f6e3-7942-43df-a381-2e5b40c88b8c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 12, \"color\": \"\", \"groups\": \"\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.pca_overview\", \"plot\": {\"color_map\": \"\", \"components\": [], \"frameon\": \"true\", \"hspace\": \"0.25\", \"legend_fontsize\": \"1\", \"legend_fontweight\": \"normal\", \"legend_loc\": \"right margin\", \"ncols\": \"4\", \"palette\": \"viridis\", \"projection\": \"2d\", \"size\": \"1.0\", \"title\": \"\", \"wspace\": \"0.1\"}, \"sort_order\": \"true\", \"use_raw\": \"false\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-03-03T11:01:37.261196",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Standard output of the job different than expected\nExpected text matching expression \u0027sc.pl.pca_overview\u0027 in output (\u0027\u0027)" ], "status": "failure", "test_index": 13, "time_seconds": 25.734805583953857, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="33.82940316200256">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.tsne(        adata,    save='.png',    show=False,                use_raw=False,        edges=False,            arrows=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adtsne.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file tsne.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="31.637529611587524">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.umap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,        edges=True,    edges_width=0.1,    edges_color='AliceBlue',            arrows=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="31.325081825256348">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.diffmap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addiffmap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="30.042619943618774">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.draw_graph(        adata,    save='.png',    show=False,                use_raw=False,    edges=True,    edges_width=0.1,    edges_color='Crimson',    arrows=False,    sort_order=False,                            projection='2d',    legend_loc='right margin',                legend_fontweight='normal',                palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addraw_graph_fr.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="42.619215965270996">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dpt_timeseries(        adata,    save='.png',    show=False,        color_map='viridis',    as_heatmap=True)anndata.h5addpt_timeseries.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="29.698423147201538">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "a8ae0305e34f21a1",   "src": "hda"  },  "format": "png",  "method|fontsize": "8",  "method|method": "pl.rank_genes_groups",  "method|n_genes": "10",  "method|ncols": "4",  "method|sharey": true }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/8/2/8/dataset_828feb11-66b7-42af-81ef-4035b07d6ca7.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/182/configs/tmp53_do8hv\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/182/configs/tmp53_do8hv\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T11:02:53.737784",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-vv9dm",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "f53e9ae371579046",  "inputs": {   "adata": {    "id": "a8ae0305e34f21a1",    "src": "hda",    "uuid": "828feb11-66b7-42af-81ef-4035b07d6ca7"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841379.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:02:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841375.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:02:55"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "0b8c67e7eacf5c02",    "src": "hda",    "uuid": "befdaea8-4659-40ce-bc99-aaf7027b86a0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 22, \"fontsize\": \"8\", \"gene_symbols\": \"\", \"groups\": \"\", \"method\": \"pl.rank_genes_groups\", \"n_genes\": \"10\", \"ncols\": \"4\", \"sharey\": \"true\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/182/configs/tmp53_do8hv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    fontsize=8,\n    ncols=4,\n    sharey=True)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/182/configs/tmp53_do8hv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    fontsize=8,\n    ncols=4,\n    sharey=True)\n\n",  "traceback": null,  "update_time": "2023-03-03T11:03:09.002286",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/182/configs/tmp53_do8hv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/182/configs/tmp53_do8hv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 19, "time_seconds": 29.698423147201538, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups(        adata,    save='.png',    show=False,                n_genes=10,    fontsize=8,    ncols=4,    sharey=True)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/182/configs/tmp53_do8hv", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="31.74552035331726">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.heatmap(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    figsize=(10, 3),            swap_axes=True,    show_gene_labels=False,    cmap='YlGnBu',    origin='upper'        )anndata.h5adheatmap.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="39.1038031578064">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "cb2d7724bc1c15ee",   "src": "hda"  },  "format": "png",  "method|genes|n_genes": "10",  "method|genes|select": "n_genes",  "method|method": "pl.rank_genes_groups_violin",  "method|split": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/b/8/b/dataset_b8bb5baa-4f64-4df6-8eb5-8db472092467.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/185/configs/tmpav3uifr1\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/185/configs/tmpav3uifr1\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-03-03T11:03:14.441633",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-wgmmg",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "747d33f83a9caa6c",  "inputs": {   "adata": {    "id": "cb2d7724bc1c15ee",    "src": "hda",    "uuid": "b8bb5baa-4f64-4df6-8eb5-8db472092467"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841410.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:03:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841405.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:03:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "collection_png": {    "id": "d68dba9a05f76e22",    "src": "hdca"   }  },  "outputs": {},  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 23, \"gene_symbols\": \"\", \"genes\": {\"__current_case__\": 0, \"n_genes\": \"10\", \"select\": \"n_genes\"}, \"groups\": \"\", \"method\": \"pl.rank_genes_groups_violin\", \"split\": \"true\", \"use_raw\": \"false\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/185/configs/tmpav3uifr1\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    use_raw=False,\n    split=True,\n    strip=True,\n    jitter=True,\n    size=1.0,\n    scale=\u0027width\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/185/configs/tmpav3uifr1\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    use_raw=False,\n    split=True,\n    strip=True,\n    jitter=True,\n    size=1.0,\n    scale=\u0027width\u0027)\n\n",  "traceback": null,  "update_time": "2023-03-03T11:03:39.053583",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/185/configs/tmpav3uifr1\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Output collection \u0027collection_png\u0027: failed to find identifier \u0027cell_type_Ery\u0027 in the tool generated elements []" ], "status": "failure", "test_index": 20, "time_seconds": 39.1038031578064, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_violin(        adata,    save='.png',    show=False,                n_genes=10,    use_raw=False,    split=True,    strip=True,    jitter=True,    size=1.0,    scale='width')
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/185/configs/tmpav3uifr1", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="32.27125358581543">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "cb2d7724bc1c15ee",   "src": "hda"  },  "format": "png",  "method|color_map": "viridis",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_scatter|edgecolors": "face",  "method|matplotlib_pyplot_scatter|linewidths": "0",  "method|method": "pl.rank_genes_groups_dotplot",  "method|n_genes": "10",  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/b/8/b/dataset_b8bb5baa-4f64-4df6-8eb5-8db472092467.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/186/configs/tmpikggz0o9\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/186/configs/tmpikggz0o9\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T11:03:24.669775",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-b29dw",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "1be0e88ca1e499d6",  "inputs": {   "adata": {    "id": "cb2d7724bc1c15ee",    "src": "hda",    "uuid": "b8bb5baa-4f64-4df6-8eb5-8db472092467"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841411.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:03:31"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841407.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:03:27"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "d6b97787af8cb852",    "src": "hda",    "uuid": "7d181071-ee74-4301-991f-097b97830362"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 24, \"color_map\": \"viridis\", \"dendrogram\": \"false\", \"dot_max\": \"\", \"dot_min\": \"\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_dotplot\", \"n_genes\": \"10\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/186/configs/tmpikggz0o9\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/186/configs/tmpikggz0o9\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-03-03T11:03:41.168566",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/186/configs/tmpikggz0o9\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/186/configs/tmpikggz0o9\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 21, "time_seconds": 32.27125358581543, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_dotplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            color_map='viridis',        linewidths=0.0,    edgecolors='face'            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/186/configs/tmpikggz0o9", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="26.871824741363525">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "3e0400070b8cef7d",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_imshow|cmap": "viridis",  "method|matplotlib_pyplot_imshow|interpolation": "None",  "method|matplotlib_pyplot_imshow|origin": "upper",  "method|method": "pl.rank_genes_groups_heatmap",  "method|n_genes": "10",  "method|show_gene_labels": false,  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/0/e/b/dataset_0ebcd08c-078b-44e9-ab8a-92ff134f4486.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/189/configs/tmp3a9uc7kd\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/189/configs/tmp3a9uc7kd\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-03-03T11:03:54.165393",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-fznsz",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "5fee907b7a7b8648",  "inputs": {   "adata": {    "id": "3e0400070b8cef7d",    "src": "hda",    "uuid": "0ebcd08c-078b-44e9-ab8a-92ff134f4486"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "b2101715ff2b3fe8",    "src": "hda",    "uuid": "724a6b2d-4717-4215-b853-f1919ff1fc2d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 25, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_imshow\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"interpolation\": \"None\", \"origin\": \"upper\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_heatmap\", \"n_genes\": \"10\", \"show_gene_labels\": \"false\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-03-03T11:04:05.767595",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Standard output of the job different than expected\nExpected text matching expression \u0027sc.pl.rank_genes_groups_heatmap\u0027 in output (\u0027\u0027)" ], "status": "failure", "test_index": 22, "time_seconds": 26.871824741363525, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="30.484882831573486">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "3e0400070b8cef7d",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_pcolor|cmap": "viridis",  "method|matplotlib_pyplot_pcolor|edgecolors": "face",  "method|matplotlib_pyplot_pcolor|snap": false,  "method|method": "pl.rank_genes_groups_matrixplot",  "method|n_genes": "10",  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/0/e/b/dataset_0ebcd08c-078b-44e9-ab8a-92ff134f4486.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/190/configs/tmps36k03lm\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/190/configs/tmps36k03lm\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T11:03:56.219079",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-2rtm2",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "c698f33d02d55bee",  "inputs": {   "adata": {    "id": "3e0400070b8cef7d",    "src": "hda",    "uuid": "0ebcd08c-078b-44e9-ab8a-92ff134f4486"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841443.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:04:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841439.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:03:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "af50d1ac530cb092",    "src": "hda",    "uuid": "b4e9ec6b-cfaf-44d8-a248-ebc058e1761d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 26, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_pcolor\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"edgecolors\": \"face\", \"snap\": \"false\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_matrixplot\", \"n_genes\": \"10\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/190/configs/tmps36k03lm\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/190/configs/tmps36k03lm\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "traceback": null,  "update_time": "2023-03-03T11:04:11.605848",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/190/configs/tmps36k03lm\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/190/configs/tmps36k03lm\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 23, "time_seconds": 30.484882831573486, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_matrixplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            swap_axes=False,    cmap='viridis',    edgecolors='face',    snap=False        )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/190/configs/tmps36k03lm", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="29.740294218063354">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "7d1ee9142c7786b7",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|log": false,  "method|method": "pl.rank_genes_groups_stacked_violin",  "method|n_genes": "10",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/1/5/dataset_d1542e6c-07cb-4c60-adfa-3d4dd53bade9.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/193/configs/tmphwq6ihae\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/193/configs/tmphwq6ihae\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T11:04:20.285496",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-j4wqk",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "0e81adb1e64ae1fe",  "inputs": {   "adata": {    "id": "7d1ee9142c7786b7",    "src": "hda",    "uuid": "d1542e6c-07cb-4c60-adfa-3d4dd53bade9"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841465.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:04:25"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841461.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:04:21"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "64b04394da85339d",    "src": "hda",    "uuid": "1728c937-8b22-48f5-9d78-0e4aa7e620fe"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 27, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.rank_genes_groups_stacked_violin\", \"n_genes\": \"10\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/193/configs/tmphwq6ihae\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/193/configs/tmphwq6ihae\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-03-03T11:04:35.557403",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/193/configs/tmphwq6ihae\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/193/configs/tmphwq6ihae\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 24, "time_seconds": 29.740294218063354, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_stacked_violin(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,        stripplot=True,    jitter=True,    size=1.0,        scale='width',    row_palette='muted',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/193/configs/tmphwq6ihae", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="33.24792194366455">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dotplot(        adata,    save='.png',    show=False,            var_names=['CD79A', 'MS4A1', 'CD8A', 'CD8B', 'LYZ', 'GNLY', 'NKG7', 'RP3-467N11.1', 'FCGR3A', 'FCER1A', 'CST3', 'POU2AF1', 'LINC00402'],    groupby='louvain',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    var_group_positions=[(0, 1), (11, 12)],    var_group_labels=['B cells', 'dendritic'],            color_map='hot',    dot_max=0.7,    dot_min=0.1,        linewidths=0.0,    edgecolors='face'            )anndata.h5addotplot.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="33.388465881347656">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "087c81d195f29d44",   "src": "hda"  },  "format": "png",  "method|key_variables|keys": "n_genes, percent_mito, n_counts",  "method|key_variables|type": "custom",  "method|log": false,  "method|method": "pl.violin",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|use_raw": false,  "method|violin_plot|multi_panel|height": "20",  "method|violin_plot|multi_panel|multi_panel": "True",  "method|violin_plot|multi_panel|width": "20",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/5/f/b/dataset_5fba4a5e-3b2a-4378-9455-abd937895bcd.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmpy4av5u8a\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmpy4av5u8a\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T10:59:11.652764",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8jtfs",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "db431d4e54c37f3f",  "inputs": {   "adata": {    "id": "087c81d195f29d44",    "src": "hda",    "uuid": "5fba4a5e-3b2a-4378-9455-abd937895bcd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841159.0000000",    "title": "Job End Time",    "value": "2023-03-03 10:59:19"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841154.0000000",    "title": "Job Start Time",    "value": "2023-03-03 10:59:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "1f6483e9459bc8d9",    "src": "hda",    "uuid": "d452f941-e06c-424e-b9cf-a296c3673cb3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 3, \"groupby\": \"\", \"key_variables\": {\"__current_case__\": 2, \"keys\": \"n_genes, percent_mito, n_counts\", \"type\": \"custom\"}, \"log\": \"false\", \"method\": \"pl.violin\", \"rotation\": \"\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"use_raw\": \"false\", \"violin_plot\": {\"multi_panel\": {\"__current_case__\": 0, \"height\": \"20\", \"multi_panel\": \"True\", \"width\": \"20\"}, \"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}, \"xlabel\": \"\"}"  },  "state": "ok",  "stderr": "WARNING: saving figure to file violin.png\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    keys=[\u0027n_genes\u0027, \u0027percent_mito\u0027, \u0027n_counts\u0027],\n    log=False,\n    use_raw=False,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    multi_panel=True, \n    figsize=(20, 20),\n    scale=\u0027width\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    )\n\nanndata.h5ad\nviolin.png\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "WARNING: saving figure to file violin.png\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    keys=[\u0027n_genes\u0027, \u0027percent_mito\u0027, \u0027n_counts\u0027],\n    log=False,\n    use_raw=False,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    multi_panel=True, \n    figsize=(20, 20),\n    scale=\u0027width\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    )\n\nanndata.h5ad\nviolin.png\n",  "traceback": null,  "update_time": "2023-03-03T10:59:27.820689",  "user_email": "tests@fake.org" }, "output_problems": [  "Output out_png:  different than expected, difference (using sim_size):\n( /tmp/tmpwne2oucfpl.violin.pbmc68k_reduced_custom.png v. /tmp/tmpvnkj3jqlpl.violin.pbmc68k_reduced_custom.png )\nFiles /tmp/tmpwne2oucfpl.violin.pbmc68k_reduced_custom.png=90967b but /tmp/tmpvnkj3jqlpl.violin.pbmc68k_reduced_custom.png=54396b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 4, "time_seconds": 33.388465881347656, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.violin(        adata,    save='.png',    show=False,        keys=['n_genes', 'percent_mito', 'n_counts'],    log=False,    use_raw=False,        stripplot=True,    jitter=True,    size=1.0,        multi_panel=True,     figsize=(20, 20),    scale='width',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,    )anndata.h5adviolin.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="35.83798360824585">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "282db5465b1e1722",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|figsize|test": "no",  "method|groupby": "cell_type",  "method|log": false,  "method|method": "pl.stacked_violin",  "method|num_categories": "7",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|var_names|type": "all",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/f/9/dataset_6f95351e-d62d-479b-9d34-fae1bfb48c1c.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpu993iuko\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/155/configs/tmpu993iuko\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T10:59:13.272771",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-q6ftd",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "03d654bc6f71ba7e",  "inputs": {   "adata": {    "id": "282db5465b1e1722",    "src": "hda",    "uuid": "6f95351e-d62d-479b-9d34-fae1bfb48c1c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "7.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "7 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841162.0000000",    "title": "Job End Time",    "value": "2023-03-03 10:59:22"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841155.0000000",    "title": "Job Start Time",    "value": "2023-03-03 10:59:15"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "d89b9fc14ef54c06",    "src": "hda",    "uuid": "e2388db7-cbb2-45f4-b53d-2a802ff1ab1d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 4, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groupby\": \"cell_type\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.stacked_violin\", \"num_categories\": \"7\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"var_names\": {\"__current_case__\": 0, \"type\": \"all\"}, \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\nWARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.\nWARNING: saving figure to file stacked_violin.png\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    var_names=adata.var_names,\n    groupby=\u0027cell_type\u0027,\n    num_categories=7,\n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\nanndata.h5ad\nstacked_violin.png\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\nWARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.\nWARNING: saving figure to file stacked_violin.png\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    var_names=adata.var_names,\n    groupby=\u0027cell_type\u0027,\n    num_categories=7,\n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\nanndata.h5ad\nstacked_violin.png\n",  "traceback": null,  "update_time": "2023-03-03T10:59:32.142996",  "user_email": "tests@fake.org" }, "output_problems": [  "Output out_png:  different than expected, difference (using sim_size):\n( /tmp/tmpt4ukckfkpl.stacked_violin.krumsiek11.png v. /tmp/tmp1k88wqf2pl.stacked_violin.krumsiek11.png )\nFiles /tmp/tmpt4ukckfkpl.stacked_violin.krumsiek11.png=25327b but /tmp/tmp1k88wqf2pl.stacked_violin.krumsiek11.png=37096b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 35.83798360824585, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.stacked_violin(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,        stripplot=True,    jitter=True,    size=1.0,        scale='width',    row_palette='muted',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,            )anndata.h5adstacked_violin.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="8.469588994979858">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 8.469588994979858, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="31.52922773361206">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.clustermap(    adata=adata,    show=False,    use_raw=False,    method='single',    metric='euclidean',    col_cluster=False,    row_cluster=False).savefig(fname="output.png")anndata.h5adoutput.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="31.456251621246338">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "68accd364eb83cfb",   "src": "hda"  },  "format": "png",  "method|gene_symbols": "means",  "method|method": "pl.highest_expr_genes",  "method|n_top": "30",  "method|setseaborn_boxplot|color": "blue",  "method|setseaborn_boxplot|saturation": "0.5" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/1/2/dataset_e12a8f02-7644-4463-a9c3-fa842231b117.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/160/configs/tmph8wx8v8y\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/160/configs/tmph8wx8v8y\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T10:59:52.401203",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-jqfg7",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "b2d25d64063a2b9e",  "inputs": {   "adata": {    "id": "68accd364eb83cfb",    "src": "hda",    "uuid": "e12a8f02-7644-4463-a9c3-fa842231b117"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841198.0000000",    "title": "Job End Time",    "value": "2023-03-03 10:59:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841194.0000000",    "title": "Job Start Time",    "value": "2023-03-03 10:59:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "007fee4fb52b8977",    "src": "hda",    "uuid": "da5c2acb-96b9-499e-98bf-d9a8041a3b09"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 8, \"gene_symbols\": \"means\", \"method\": \"pl.highest_expr_genes\", \"n_top\": \"30\", \"setseaborn_boxplot\": {\"color\": \"blue\", \"palette\": null, \"saturation\": \"0.5\"}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/160/configs/tmph8wx8v8y\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/160/configs/tmph8wx8v8y\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "traceback": null,  "update_time": "2023-03-03T11:00:08.026446",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/160/configs/tmph8wx8v8y\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/160/configs/tmph8wx8v8y\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 8, "time_seconds": 31.456251621246338, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highest_expr_genes(        adata,    save='.png',    show=False,        n_top=30,    gene_symbols='means',    color='blue',    saturation=0.5)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/160/configs/tmph8wx8v8y", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="30.99952721595764">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "45c9eb2635da9ac9",   "src": "hda"  },  "format": "png",  "method|highly_variable_genes": true,  "method|log": false,  "method|method": "pl.highly_variable_genes" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/8/9/dataset_d8907c30-aded-4a74-81d5-c6662020f781.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmpfz9sosff\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmpfz9sosff\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-03-03T11:00:19.633493",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-9vhrb",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "2cc5ac37a194b8ed",  "inputs": {   "adata": {    "id": "45c9eb2635da9ac9",    "src": "hda",    "uuid": "d8907c30-aded-4a74-81d5-c6662020f781"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1677841226.0000000",    "title": "Job End Time",    "value": "2023-03-03 11:00:26"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1677841222.0000000",    "title": "Job Start Time",    "value": "2023-03-03 11:00:22"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "8245cfc701d7f5e2",    "src": "hda",    "uuid": "559b150e-215e-4716-b650-86fceceec056"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 7, \"highly_variable_genes\": \"true\", \"log\": \"false\", \"method\": \"pl.highly_variable_genes\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/163/configs/tmpfz9sosff\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/163/configs/tmpfz9sosff\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "traceback": null,  "update_time": "2023-03-03T11:00:34.826203",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/163/configs/tmpfz9sosff\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/163/configs/tmpfz9sosff\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 9, "time_seconds": 30.99952721595764, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highly_variable_genes(    adata_or_result=adata,    log=False,    save='.png',    show=False,    highly_variable_genes=True)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/163/configs/tmpfz9sosff", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="29.014028310775757">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="9.128962278366089">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 9.128962278366089, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.7.1+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="28.73662042617798">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="30.952691793441772">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="8.125553131103516">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 8.125553131103516, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.7.1+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="31.74243998527527">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file filter_genes_dispersion.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="34.87391805648804">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="34.80757021903992">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="30.882913827896118">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="29.617010831832886">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="31.691996574401855">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file tsne.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="31.37980318069458">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="31.350159883499146">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="32.18059158325195">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="30.534759998321533">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="49.4385883808136">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="29.635465383529663">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file rank_genes_groups_cell_type.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="38.44135761260986">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #26)" name="25" time="32.47935605049133">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #27)" name="26" time="32.03321623802185">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #28)" name="27" time="31.80781102180481">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "b65395da32ee961c",   "src": "hda"  },  "advanced_common|show_log": true,  "format": "png",  "method|dendrogram": true,  "method|log": false,  "method|method": "pl.rank_genes_groups_stacked_violin",  "method|n_genes": "10",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/8/2/d/dataset_82dc9b09-54b2-47d6-8da5-526bb54b219f.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/143/configs/tmpq8rs4qha\u0027 \u003e \u0027/galaxy/server/database/objects/6/b/3/dataset_6b34dbc1-c3b0-462e-9dfd-944d014cadd9.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/143/configs/tmpq8rs4qha\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/6/b/3/dataset_6b34dbc1-c3b0-462e-9dfd-944d014cadd9.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/6/b/3/dataset_6b34dbc1-c3b0-462e-9dfd-944d014cadd9.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": null,  "create_time": "2023-03-03T10:56:58.309341",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-rbnv9",  "galaxy_version": "22.05",  "history_id": "d68dba9a05f76e22",  "id": "7b77b5539ac6d091",  "inputs": {   "adata": {    "id": "b65395da32ee961c",    "src": "hda",    "uuid": "82dc9b09-54b2-47d6-8da5-526bb54b219f"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "hidden_output": {    "id": "3bf8fbe0719b69b7",    "src": "hda",    "uuid": "6b34dbc1-c3b0-462e-9dfd-944d014cadd9"   },   "out_png": {    "id": "c0f6fdeb136cd228",    "src": "hda",    "uuid": "0fabcab6-2d82-404a-9070-e88f0f9a1b50"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 27, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.rank_genes_groups_stacked_violin\", \"n_genes\": \"10\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-03-03T10:57:14.809018",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 27, "time_seconds": 31.80781102180481, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.7.1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="28.585835933685303">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="30.025562047958374">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="28.9696204662323">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="30.837120056152344">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="29.309147119522095">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="30.790416955947876">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="31.318076372146606">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #1)" name="0" time="27.430216312408447">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #2)" name="1" time="29.49232244491577">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'blobs' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="78.6104998588562">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "After filtering out unexpressed features:  40 cells and 1733 features."[1] "After filtering out low library counts:  39 cells and 1733 features."[1] "After filtering out low expressed:  39 cells and 1733 features."[1] "After filtering out high MT gene counts:  34 cells and 1733 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filter
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="69.36443591117859">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "Ending with 40 cells and 2000 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: sgeostatRegistered S3 method overwritten by 'GGally':  method from     +.gg   ggplot2sROC 0.1-2 loaded
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="10.693643808364868">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.693643808364868, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter", "tool_version": "1.22.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="104.85612916946411">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells"[1] "Ending with 33 cells"[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Attaching package: ‘robustbase’The following object is masked from ‘package:Biobase’:    rowMediansThe following objects are masked from ‘package:MatrixGenerics’:    colMedians, rowMediansThe following objects are masked from ‘package:matrixStats’:    colMedians, rowMedians
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/scater_normalize (Test #1)" name="0" time="88.12712097167969">
        
            
            <system-out><![CDATA[
            [1] "Normalising...."[1] "Finished normalising"[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factors
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="70.8608877658844">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="37.389180421829224">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 6 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="66.15355920791626">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="46.02863097190857">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_exprs_freq/scater_plot_exprs_freq (Test #1)" name="0" time="64.2104389667511">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterSaving 7 x 7 in image`geom_smooth()` using method = 'loess' and formula 'y ~ x'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="45.08875346183777">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factorsWarning message:In sweep(mat, MARGIN = 2, STATS = sqrt(vars), FUN = "/", check.margin = FALSE) :  'check.margin' is ignored when 'x' is a DelayedArray object or  derivativeSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="63.798757553100586">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE,  :  You're computing too large a percentage of total singular values, use a standard svd instead.Warning message:In check_numbers(k = k, nu = nu, nv = nv, limit = min(dim(x)) -  :  more singular values/vectors requested than availableSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne (Test #1)" name="0" time="124.94807982444763">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
</testsuite>