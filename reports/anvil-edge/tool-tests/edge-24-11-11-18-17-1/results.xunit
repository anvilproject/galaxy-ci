<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="83"
           errors="10"
           failures="5"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="45.18278098106384">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="37.177308559417725">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #11)" name="10" time="37.836689472198486">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="38.10821342468262">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="37.52478742599487">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="38.15065622329712">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="39.48850607872009">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="38.18357729911804">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="38.59991478919983">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="39.15936899185181">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #10)" name="9" time="38.36113739013672">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="48.512141942977905">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="39.43610215187073">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="50.87323594093323">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="30.634453296661377">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 30.634453296661377, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="14.07096529006958">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 14.07096529006958, "tool_id": "bcftools_mpileup", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #7)" name="6" time="43.1146137714386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="65.73313164710999">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="49.188398361206055">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.09969115257263184">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.09969115257263184, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="54.17818260192871">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="38.474979639053345">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="39.41342234611511">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="37.24301266670227">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="37.62254190444946">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="37.80902028083801">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="38.19419455528259">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="38.432535886764526">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="12.451347589492798">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 12.451347589492798, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="46.73405480384827">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="38.354572057724">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="39.44725036621094">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #4)" name="3" time="12.46577501296997">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 12.46577501296997, "tool_id": "filter_tabular", "tool_version": "3.3.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #5)" name="4" time="38.22472071647644">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="70.79780793190002">
        
            
            <system-out><![CDATA[
            gnuplot 5.4 patchlevel 8
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #2)" name="1" time="12.745658874511719">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.745658874511719, "tool_id": "mummer_nucmer", "tool_version": "4.0.0rc1+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #3)" name="2" time="42.10373592376709">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="73.10533499717712">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="43.66159772872925">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="67.26974868774414">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/e/3/c/dataset_e3cc4b5f-39b1-470e-b1c9-98771038b018.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/d/b/5/dataset_db5132d2-cf31-4e08-85d6-f5c7e42abfc4.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/4/a/e/dataset_4aef87e6-11b2-4a86-92d2-859206eb4ba0.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-11T19:14:02.244205",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-bxz97",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0f5026defeba8fc0",  "id": "c397b142507af780",  "inputs": {},  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "408e4bfeec5fd7cc",    "src": "hda",    "uuid": "4aef87e6-11b2-4a86-92d2-859206eb4ba0"   },   "design_tsv": {    "id": "60b42cbf9b2588d7",    "src": "hda",    "uuid": "e30ec67b-cedf-4068-acb4-bdaa4ecd4d04"   },   "genes_tsv": {    "id": "c873173b96dd9abd",    "src": "hda",    "uuid": "db5132d2-cf31-4e08-85d6-f5c7e42abfc4"   },   "matrix_mtx": {    "id": "e5392c9d8cdd3d7d",    "src": "hda",    "uuid": "e3cc4b5f-39b1-470e-b1c9-98771038b018"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "error",  "stderr": "--2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  194K\n    50K .......... .......... .......... .......... ..........  194K\n   100K .......... .......... .......... .......... ..........  193K\n   150K .......... .......... .......... .......... ..........  193K\n   200K .......... .......... .......... .......... ..........  290K\n   250K .......... .......... .......... .......... ..........  194K\n   300K .......... .......... .......... .......... ..........  288K\n   350K .......... .......... .......... .......... ..........  145K\n   400K .......... .......... .......... .......... ..........  290K\n   450K .......... .......... .......... .......... ..........  193K\n   500K .......... .......... .......... .......... ..........  289K\n   550K .......... .......... .......... .......... ..........  192K\n   600K .......... .......... .......... .......... ..........  288K\n   650K .......... .......... .......... .......... ..........  193K\n   700K .......... .......... .......... .......... ..........  289K\n   750K .......... .......... .......... .......... ..........  145K\n   800K .......... .......... .......... .......... ..........  287K\n   850K .......... .......... .......... .......... ..........  194K\n   900K .......... .......... .......... .......... ..........  290K\n   950K .......... .......... .......... .......... ..........  288K\n  1000K .......... .......... .......... .......... ..........  290K\n  1050K .......... .......... .......... .......... ..........  290K\n  1100K .......... .......... .......... .......... ..........  291K\n  1150K .......... .......... .......... .......... ..........  290K\n  1200K .......... .......... .......... .......... ..........  292K\n  1250K .......... .......... .......... .......... ..........  578K\n  1300K .......... .......... .......... .......... ..........  290K\n  1350K .......... .......... .......... .......... ..........  581K\n  1400K .......... .......... .......... .......... ..........  291K\n  1450K .......... .......... .......... .......... ..........  580K\n  1500K .......... .......... .......... .......... ..........  551K\n  1550K .......... .......... .......... .......... ..........  291K\n  1600K .......... .......... .......... .......... ..........  581K\n  1650K .......... .......... .......... .......... ..........  581K\n  1700K .......... .......... .......... .......... ..........  578K\n  1750K .......... .......... .......... .......... ..........  581K\n  1800K .......... .......... .......... .......... ..........  580K\n  1850K .......... .......... .......... .......... ..........  582K\n  1900K .......... .......... .......... .......... ..........  582K\n  1950K .......... .......... .......... .......... ..........  580K\n  2000K .......... .......... .......... .......... ..........  581K\n  2050K .......... .......... .......... .......... ..........  582K\n  2100K .......... .......... .......... .......... .......... 26.8M\n  2150K .......... .......... .......... .......... ..........  587K\n  2200K .......... .......... .......... .......... ..........  579K\n  2250K .......... .......... .......... .......... .......... 21.0M\n  2300K .......... .......... .......... .......... ..........  590K\n  2350K .......... .......... .......... .......... ..........  580K\n  2400K .......... .......... .......... .......... ..........  588K\n  2450K .......... .......... .......... .......... .......... 29.1M\n  2500K .......... .......... .......... .......... ..........  584K\n  2550K .......... .......... .......... .......... .......... 35.8M\n  2600K .......... .......... .......... .......... ..........  587K\n  2650K .......... .......... .......... .......... ..........  586K\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... ..........  582K\n  2800K .......... .......... .......... .......... ..........  581K\n  2850K .......... .......... .......... .......... ..........  109M\n  2900K .......... .......... .......... .......... ..........  584K\n  2950K .......... .......... .......... .......... ..........  122M\n  3000K .......... .......... .......... .......... ..........  582K\n  3050K .......... .......... .......... .......... .......... 20.7M\n  3100K .......... .......... .......... .......... ..........  595K\n  3150K .......... .......... .......... .......... .......... 14.8M\n  3200K .......... .......... .......... .......... ..........  603K\n  3250K .......... .......... .......... .......... .......... 13.7M\n  3300K .......... .......... .......... .......... ..........  605K\n  3350K .......... .......... .......... .......... .......... 13.8M\n  3400K .......... .......... .......... .......... ..........  602K\n  3450K .......... .......... .......... .......... .......... 14.7M\n  3500K .......... .......... .......... .......... ..........  593K\n  3550K .......... .......... .......... .......... .......... 23.6M\n  3600K .......... .......... .......... .......... ..........  591K\n  3650K .......... .......... .......... .......... .......... 35.8M\n  3700K .......... .......... .......... .......... ..........  600K\n  3750K .......... .......... .......... .......... .......... 19.7M\n  3800K .......... .......... .......... .......... .......... 23.2M\n  3850K .......... .......... .......... .......... ..........  596K\n  3900K .......... .......... .......... .......... .......... 68.7M\n  3950K .......... .......... .......... .......... ..........  585K\n  4000K .......... .......... .......... .......... .......... 68.6M\n  4050K .......... .......... .......... .......... ..........  591K\n  4100K .......... .......... .......... .......... .......... 28.1M\n  4150K .......... .......... .......... .......... ..........  120M\n  4200K .......... .......... .......... .......... ..........  585K\n  4250K .......... .......... .......... .......... ..........  581K\n  4300K .......... .......... .......... .......... ..........  122M\n  4350K .......... .......... .......... .......... .......... 15.7M\n  4400K .......... .......... .......... .......... ..........  594K\n  4450K .......... .......... .......... .......... .......... 18.2M\n  4500K .......... .......... .......... .......... ..........  598K\n  4550K .......... .......... .......... .......... .......... 16.4M\n  4600K .......... .......... .......... .......... ..........  602K\n  4650K .......... .......... .......... .......... .......... 14.9M\n  4700K .......... .......... .......... .......... ..........  601K\n  4750K .......... .......... .......... .......... ..........  582K\n  4800K .......... .......... .......... .......... ..........  101M\n  4850K .......... .......... .......... .......... .......... 15.5M\n  4900K .......... .......... .......... .......... ..........  602K\n  4950K .......... .......... .......... .......... .......... 15.7M\n  5000K .......... .......... .......... .......... ..........  600K\n  5050K .......... .......... .......... .......... .......... 20.9M\n  5100K .......... .......... .......... .......... ..........  595K\n  5150K .......... .......... .......... .......... .......... 17.7M\n  5200K .......... .......... .......... .......... ..........  600K\n  5250K .......... .......... .......... .......... .......... 19.9M\n  5300K .......... .......... .......... .......... ..........  597K\n  5350K .......... .......... .......... .......... .......... 52.9M\n  5400K .......... .......... .......... .......... ..........  585K\n  5450K .......... .......... .......... .......... ..........  116M\n  5500K .......... .......... .......... .......... .......... 14.5M\n  5550K .......... .......... .......... .......... ..........  604K\n  5600K .......... .......... .......... .......... .......... 16.5M\n  5650K .......... .......... .......... .......... ..........  600K\n  5700K .......... .......... .......... .......... .......... 25.2M\n  5750K .......... .......... .......... .......... ..........  594K\n  5800K .......... .......... .......... .......... .......... 50.2M\n  5850K .......... .......... .......... .......... .......... 19.8M\n  5900K .......... .......... .......... .......... ..........  603K\n  5950K .......... .......... .......... .......... .......... 14.0M\n  6000K .......... .......... .......... .......... ..........  604K\n  6050K .......... .......... .......... .......... .......... 28.8M\n  6100K .......... .......... .......... .......... ..........  593K\n  6150K .......... .......... .......... .......... .......... 71.5M\n  6200K .......... .......... .......... .......... .......... 12.2M\n  6250K .......... .......... .......... .......... ..........  608K\n  6300K .......... .......... .......... .......... .......... 23.1M\n  6350K .......... .......... .......... .......... ..........  592K\n  6400K .......... .......... .......... .......... ..........  116M\n  6450K .......... .......... .......... .......... ..........  583K\n  6500K .......... .......... .......... .......... .......... 95.2M\n  6550K .......... .......... .......... .......... .......... 27.9M\n  6600K .......... .......... .......... .......... ..........  592K\n  6650K .......... .......... .......... .......... .......... 96.4M\n  6700K .......... .......... .......... .......... ..........  582K\n  6750K .......... .......... .......... .......... .......... 66.5M\n  6800K .......... .......... .......... .......... .......... 32.0M\n  6850K .......... .......... .......... .......... ..........  590K\n  6900K .......... .......... .......... .......... ..........  107M\n  6950K .......... .......... .......... .......... ..........  584K\n  7000K .......... .......... .......... .......... ..........  114M\n  7050K .......... .......... .......... .......... ..........  138M\n  7100K .......... .......... .......... .......... ..........  581K\n  7150K .......... .......... .......... .......... ..........  137M\n  7200K .......... .......... .......... .......... ..........  584K\n  7250K .......... .......... .......... .......... ..........  136M\n  7300K .......... .......... .......... .......... ..........  133M\n  7350K .......... .......... .......... .......... ..........  583K\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  587K\n  7500K .......... .......... .......... .......... ..........  101M\n  7550K .......... .......... .......... .......... ..........  133M\n  7600K .......... .......... .......... .......... ..........  584K\n  7650K .......... .......... .......... .......... ..........  132M\n  7700K .......... .......... .......... .......... ..........  585K\n  7750K .......... .......... .......... .......... ..........  107M\n  7800K .......... .......... .......... .......... ..........  125M\n  7850K .......... .......... .......... .......... ..........  582K\n  7900K .......... .......... .......... .......... .......... 95.4M\n  7950K .......... .......... .......... .......... ..........  586K\n  8000K .......... .......... .......... .......... .......... 92.5M\n  8050K .......... .......... .......... .......... ..........  151M\n  8100K .......... .......... .......... .......... ..........  584K\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... ..........  585K\n  8300K .......... .......... .......... .......... .......... 71.0M\n  8350K .......... .......... .......... .......... ..........  585K\n  8400K .......... .......... .......... .......... ..........  107M\n  8450K .......... .......... .......... .......... ..........  145M\n  8500K .......... .......... .......... .......... ..........  583K\n  8550K .......... .......... .......... .......... ..........  100M\n  8600K .......... .......... .......... .......... ..........  588K\n  8650K .......... .......... .......... .......... ..........  122M\n  8700K .......... .......... .......... .......... .......... 67.7M\n  8750K .......... .......... .......... .......... ..........  587K\n  8800K .......... .......... .......... .......... ..........  128M\n  8850K .......... .......... .......... .......... .......... 77.0M\n  8900K .......... .......... .......... .......... ..........  585K\n  8950K .......... .......... .......... .......... ..........  129M\n  9000K .......... .......... .......... .......... ..........  585K\n  9050K .......... .......... .......... .......... ..........  148M\n  9100K .......... .......... .......... .......... .......... 47.2M\n  9150K .......... .......... .......... .......... ..........  587K\n  9200K .......... .......... .......... .......... ..........  113M\n  9250K .......... .......... .......... .......... ..........  585K\n  9300K .......... .......... .......... .......... ..........  125M\n  9350K .......... .......... .......... .......... .......... 81.8M\n  9400K .......... .......... .......... .......... ..........  586K\n  9450K .......... .......... .......... .......... ..........  121M\n  9500K .......... .......... .......... .......... ..........  584K\n  9550K .......... .......... .......... .......... ..........  111M\n  9600K .......... .......... .......... .......... .......... 36.8M\n  9650K .......... .......... .......... .......... ..........  591K\n  9700K .......... .......... .......... .......... ..........  103M\n  9750K .......... .......... .......... .......... .......... 26.6M\n  9800K .......... .......... .......... .......... ..........  589K\n  9850K .......... .......... .......... .......... .......... 95.1M\n  9900K .......... .......... .......... .......... ..........  587K\n  9950K .......... .......... .......... .......... ..........  117M\n 10000K .......... .......... .......... .......... .......... 22.4M\n 10050K .......... .......... .......... .......... ..........  597K\n 10100K .......... .......... .......... .......... ..........  146M\n 10150K .......... .......... .......... .......... ..........  582K\n 10200K .......... .......... .......... .......... ..........  122M\n 10250K .......... .......... .......... .......... ..........  122M\n 10300K .......... .......... .......... .......... ..........  571K\n 10350K .......... .......... .......... .......... ..........  127M\n 10400K .......... .......... .......... .......... ..........  584K\n 10450K .......... .......... .......... .......... ..........  124M\n 10500K .......... .......... .......... .......... ..........  134M\n 10550K .......... .......... .......... .......... ..........  585K\n 10600K .......... .......... .......... .......... ..........  104M\n 10650K .......... .......... .......... .......... ..........  142M\n 10700K .......... .......... .......... .......... ..........  584K\n 10750K .......... .......... .......... .......... ..........  131M\n 10800K .......... .......... .......... .......... ..........  584K\n 10850K .......... .......... .......... .......... ..........  126M\n 10900K .......... .......... .......... .......... ..........  127M\n 10950K .......... .......... .......... .......... ..........  584K\n 11000K .......... .......... .......... .......... ..........  121M\n 11050K .......... .......... .......... .......... ..........  586K\n 11100K .......... .......... .......... .......... ..........  111M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... ..........  584K\n 11250K .......... .......... .......... .......... ..........  134M\n 11300K .......... .......... .......... .......... ..........  586K\n 11350K .......... .......... .......... .......... ..........  120M\n 11400K .......... .......... .......... .......... ..........  116M\n 11450K .......... .......... .......... .......... ..........  585K\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n......  920K\n 50150K .......... .......... .......... .......... .......... 2.23M\n 50200K .......... .......... .......... .......... .......... 58.0M\n 50250K .......... .......... .......... .......... .......... 1.20M\n 50300K .......... .......... .......... .......... .......... 1.09M\n 50350K .......... .......... .......... .......... ..........  129M\n 50400K .......... .......... .......... .......... .......... 1.16M\n 50450K .......... .......... .......... .......... .......... 1.09M\n 50500K .......... .......... .......... .......... ..........  139M\n 50550K .......... .......... .......... .......... .......... 1.40M\n 50600K .......... .......... .......... .......... ..........  982K\n 50650K .......... .......... .......... .......... ..........  137M\n 50700K .......... .......... .......... .......... .......... 4.97M\n 50750K .......... .......... .......... .......... ..........  915K\n 50800K .......... .......... .......... .......... .......... 2.23M\n 50850K .......... .......... .......... .......... .......... 5.19M\n 50900K .......... .......... .......... .......... ..........  909K\n 50950K .......... .......... .......... .......... .......... 2.21M\n 51000K .......... .......... .......... .......... ..........  122M\n 51050K .......... .......... .......... .......... .......... 1.17M\n 51100K .......... .......... .......... .......... .......... 1.12M\n 51150K .......... .......... .......... .......... ..........  137M\n 51200K .......... .......... .......... .......... .......... 1.15M\n 51250K .......... .......... .......... .......... .......... 1.13M\n 51300K .......... .......... .......... .......... .......... 84.8M\n 51350K .......... .......... .......... .......... .......... 1.38M\n 51400K .......... .......... .......... .......... .......... 1.71M\n 51450K .......... .......... .......... .......... .......... 2.22M\n 51500K .......... .......... .......... .......... ..........  105M\n 51550K .......... .......... .......... .......... ..........  806K\n 51600K .......... .......... .......... .......... .......... 2.08M\n 51650K .......... .......... .......... .......... .......... 65.9M\n 51700K .......... .......... .......... .......... .......... 1.16M\n 51750K .......... .......... .......... .......... .......... 1.13M\n 51800K .......... .......... .......... .......... ..........  106M\n 51850K .......... .......... .......... .......... .......... 1.34M\n 51900K .......... .......... .......... .......... .......... 1022K\n 51950K .......... .......... .......... .......... .......... 63.4M\n 52000K .......... .......... .......... .......... .......... 1.34M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... .......... 44.0M\n 52150K .......... .......... .......... .......... .......... 4.47M\n 52200K .......... .......... .......... .......... ..........  936K\n 52250K .......... .......... .......... .......... .......... 2.18M\n 52300K .......... .......... .......... .......... .......... 22.4M\n 52350K .......... .......... .......... .......... .......... 1.19M\n 52400K .......... .......... .......... .......... .......... 1.14M\n 52450K .......... .......... .......... .......... .......... 20.2M\n 52500K .......... .......... .......... .......... .......... 1.20M\n 52550K .......... .......... .......... .......... .......... 1.13M\n 52600K .......... .......... .......... .......... .......... 45.7M\n 52650K .......... .......... .......... .......... .......... 1.30M\n 52700K .......... .......... .......... .......... .......... 1.06M\n 52750K .......... .......... .......... .......... .......... 17.6M\n 52800K .......... .......... .......... .......... .......... 1.30M\n 52850K .......... .......... .......... .......... .......... 1.87M\n 52900K .......... .......... .......... .......... .......... 2.13M\n 52950K .......... .......... .......... .......... .......... 11.9M\n 53000K .......... .......... .......... .......... ..........  856K\n 53050K .......... .......... .......... .......... .......... 2.05M\n 53100K .......... .......... .......... .......... ..........  140M\n 53150K .......... .......... .......... .......... ..........  810K\n 53200K .......... .......... .......... .......... .......... 2.02M\n 53250K .......... .......... .......... .......... ..........  136M\n 53300K .......... .......... .......... .......... .......... 1.21M\n 53350K .......... .......... .......... .......... .......... 1.14M\n 53400K .......... .......... .......... .......... .......... 19.3M\n 53450K .......... .......... .......... .......... .......... 4.83M\n 53500K .......... .......... .......... .......... ..........  957K\n 53550K .......... .......... .......... .......... .......... 2.04M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... ..........  937K\n 53700K .......... .......... .......... .......... .......... 2.18M\n 53750K .......... .......... .......... .......... .......... 12.0M\n 53800K .......... .......... .......... .......... .......... 1.19M\n 53850K .......... .......... .......... .......... .......... 1.18M\n 53900K .......... .......... .......... .......... .......... 20.9M\n 53950K .......... .......... .......... .......... .......... 1.16M\n 54000K .......... .......... .......... .......... .......... 1.17M\n 54050K .......... .......... .......... .......... .......... 21.3M\n 54100K .......... .......... .......... .......... .......... 1.30M\n 54150K .......... .......... .......... .......... .......... 1.12M\n 54200K .......... .......... .......... .......... .......... 14.8M\n 54250K .......... .......... .......... .......... .......... 5.13M\n 54300K .......... .......... .......... .......... ..........  924K\n 54350K .......... .......... .......... .......... .......... 2.03M\n 54400K .......... .......... .......... .......... .......... 23.5M\n 54450K .......... .......... .......... .......... ..........  827K\n 54500K .......... .......... .......... .......... .......... 2.04M\n 54550K .......... .......... .......... .......... ..........  133M\n 54600K .......... .......... .......... .......... .......... 1.32M\n 54650K .......... .......... .......... .......... .......... 1.08M\n 54700K .......... .......... .......... .......... .......... 13.4M\n 54750K .......... .......... .......... .......... .......... 1.32M\n 54800K .......... .......... .......... .......... .......... 1.07M\n 54850K .......... .......... .......... .......... .......... 13.1M\n 54900K .......... .......... .......... .......... .......... 5.95M\n 54950K .......... .......... .......... .......... ..........  918K\n 55000K .......... .......... .......... .......... .......... 2.08M\n 55050K .......... .......... .......... .......... .......... 44.4M\n 55100K .......... .......... .......... .......... .......... 1.27M\n 55150K .......... .......... .......... .......... .......... 1.05M\n 55200K .......... .......... .......... .......... .......... 59.5M\n 55250K .......... .......... .......... .......... .......... 1.27M\n 55300K .......... .......... .......... .......... .......... 1.08M\n 55350K .......... .......... .......... .......... .......... 22.5M\n 55400K .......... .......... .......... .......... .......... 5.34M\n 55450K .......... .......... .......... .......... ..........  920K\n 55500K .......... .......... .......... .......... .......... 2.13M\n 55550K .......... .......... .......... .......... .......... 18.1M\n 55600K .......... .......... .......... .......... .......... 1.21M\n 55650K .......... .......... .......... .......... .......... 1.13M\n 55700K .......... .......... .......... .......... .......... 66.7M\n 55750K .......... .......... .......... .......... .......... 1.37M\n 55800K .......... .......... .......... .......... .......... 1.00M\n 55850K .......... .......... .......... .......... .......... 30.7M\n 55900K .......... .......... .......... .......... .......... 27.5M\n 55950K .......... .......... .......... .......... ..........  809K\n 56000K .......... .......... .......... .......... .......... 2.17M\n 56050K .......... .......... .......... .......... .......... 19.8M\n 56100K .......... .......... .......... .......... .......... 1.20M\n 56150K .......... .......... .......... .......... .......... 1.14M\n 56200K .......... .......... .......... .......... ..........  117M\n 56250K .......... .......... .......... .......... .......... 1.28M\n 56300K .......... .......... .......... .......... .......... 1.85M\n 56350K .......... .......... .......... .......... .......... 2.23M\n 56400K .......... .......... .......... .......... .......... 5.17M\n 56450K .......... .......... .......... .......... ..........  914K\n 56500K .......... .......... .......... .......... .......... 2.25M\n 56550K .......... .......... .......... .......... .......... 59.1M\n 56600K .......... .......... .......... .......... .......... 1.30M\n 56650K .......... .......... .......... .......... .......... 1.03M\n 56700K .......... .......... .......... .......... .......... 55.1M\n 56750K .......... .......... .......... .......... .......... 1.27M\n 56800K .......... .......... .......... .......... .......... 1.84M\n 56850K .......... .......... .......... .......... .......... 2.31M\n 56900K .......... .......... .......... .......... ..........  131M\n 56950K .......... .......... .......... .......... .......... 1.25M\n 57000K .......... .......... .......... .......... .......... 1.03M\n 57050K .......... .......... .......... .......... .......... 74.7M\n 57100K .......... .......... .......... .......... .......... 5.74M\n 57150K .......... .......... .......... .......... ..........  896K\n 57200K .......... .......... .......... .......... .......... 2.26M\n 57250K .......... .......... .......... .......... .......... 19.4M\n 57300K .......... .......... .......... .......... .......... 1.28M\n 57350K .......... .......... .......... .......... .......... 1.08M\n 57400K .......... .......... .......... .......... ..........  119M\n 57450K .......... .......... .......... .......... .......... 5.70M\n 57500K .......... .......... .......... .......... ..........  864K\n 57550K .......... .......... .......... .......... .......... 2.46M\n 57600K .......... .......... .......... .......... .......... 17.7M\n 57650K .......... .......... .......... .......... .......... 1.29M\n 57700K .......... .......... .......... .......... .......... 1.07M\n 57750K .......... .......... .......... .......... ..........  126M\n 57800K .......... .......... .......... .......... .......... 5.94M\n 57850K .......... .......... .......... .......... ..........  911K\n 57900K .......... .......... .......... .......... .......... 2.13M\n 57950K .......... .......... .......... .......... ..........  120M\n 58000K .......... .......... .......... .......... .......... 1.18M\n 58050K .......... .......... .......... .......... .......... 1.10M\n 58100K .......... .......... .......... .......... ..........  121M\n 58150K .......... .......... .......... .......... .......... 17.1M\n 58200K .......... .......... .......... .......... .......... 1.23M\n 58250K .......... .......... .......... .......... .......... 1.12M\n 58300K .......... .......... .......... .......... ..........  126M\n 58350K .......... .......... .......... .......... .......... 1.17M\n 58400K .......... .......... .......... .......... .......... 1.95M\n 58450K .......... .......... .......... .......... .......... 2.55M\n 58500K .......... .......... .......... .......... ..........  140M\n 58550K .......... .......... .......... .......... .......... 1.15M\n 58600K .......... .......... .......... .......... .......... 1.13M\n 58650K .......... .......... .......... .......... ..........  130M\n 58700K .......... .......... .......... .......... .......... 87.0M\n 58750K .......... .......... .......... .......... .......... 1.16M\n 58800K .......... .......... .......... .......... .......... 1.13M\n 58850K .......... .......... .......... .......... .......... 98.1M\n 58900K .......... .......... .......... .......... .......... 4.10M\n 58950K .......... .......... .......... .......... ..........  940K\n 59000K .......... .......... .......... .......... .......... 2.33M\n 59050K .......... .......... .......... .......... .......... 37.3M\n 59100K .......... .......... .......... .......... .......... 1.20M\n 59150K .......... .......... .......... .......... .......... 1.71M\n 59200K .......... .......... .......... .......... .......... 3.15M\n 59250K .......... .......... .......... .......... .......... 28.7M\n 59300K .......... .......... .......... .......... .......... 1.20M\n 59350K .......... .......... .......... .......... .......... 1.71M\n 59400K .......... .......... .......... .......... .......... 3.11M\n 59450K .......... .......... .......... .......... .......... 35.0M\n 59500K .......... .......... .......... .......... .......... 1.16M\n 59550K .......... .......... .......... .......... .......... 1.17M\n 59600K .......... .......... .......... .......... .......... 59.8M\n 59650K .......... .......... .......... .......... .......... 18.2M\n 59700K .......... .......... .......... .......... .......... 1.20M\n 59750K .......... .......... .......... .......... .......... 1.17M\n 59800K .......... .......... .......... .......... .......... 48.8M\n 59850K .......... .......... .......... .......... .......... 31.2M\n 59900K .......... .......... .......... .......... .......... 1.16M\n 59950K .......... .......... .......... .......... .......... 1.18M\n 60000K .......... .......... .......... .......... .......... 22.1M\n 60050K .......... .......... .......... .......... .......... 28.6M\n 60100K .......... .......... .......... .......... .......... 1.21M\n 60150K .......... .......... .......... .......... .......... 1.17M\n 60200K .......... .......... .......... .......... .......... 22.4M\n 60250K .......... .......... .......... .......... .......... 39.3M\n 60300K .......... .......... .......... .......... .......... 1.19M\n 60350K .......... .......... .......... .......... .......... 1.17M\n 60400K .......... .......... .......... .......... .......... 24.7M\n 60450K .......... .......... .......... .......... .......... 43.4M\n 60500K .......... .......... .......... .......... .......... 1.16M\n 60550K .......... .......... .......... .......... .......... 1.71M\n 60600K .......... .......... .......... .......... .......... 3.49M\n 60650K .......... .........                                    156M=50s\n\n2024-11-11 19:14:58 (1.19 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  290K 3s\n   100K .......... .......... .......... .......... .......... 18%  290K 3s\n   150K .......... .......... .......... .......... .......... 24%  578K 2s\n   200K .......... .......... .......... .......... .......... 30%  579K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  290K 1s\n   350K .......... .......... .......... .......... .......... 48% 1.12M 1s\n   400K .......... .......... .......... .......... .......... 54%  387K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.4M 1s\n   500K .......... .......... .......... .......... .......... 66%  597K 1s\n   550K .......... .......... .......... .......... .......... 72%  581K 1s\n   600K .......... .......... .......... .......... .......... 78% 1.11M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.14M 0s\n   700K .......... .......... .......... .......... .......... 90%  580K 0s\n   750K .......... .......... .......... .......... .......... 96% 23.1M 0s\n   800K .......... .......... .......                         100%  670K=1.6s\n\n2024-11-11 19:15:05 (518 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  194K\n    50K .......... .......... .......... .......... ..........  194K\n   100K .......... .......... .......... .......... ..........  193K\n   150K .......... .......... .......... .......... ..........  193K\n   200K .......... .......... .......... .......... ..........  290K\n   250K .......... .......... .......... .......... ..........  194K\n   300K .......... .......... .......... .......... ..........  288K\n   350K .......... .......... .......... .......... ..........  145K\n   400K .......... .......... .......... .......... ..........  290K\n   450K .......... .......... .......... .......... ..........  193K\n   500K .......... .......... .......... .......... ..........  289K\n   550K .......... .......... .......... .......... ..........  192K\n   600K .......... .......... .......... .......... ..........  288K\n   650K .......... .......... .......... .......... ..........  193K\n   700K .......... .......... .......... .......... ..........  289K\n   750K .......... .......... .......... .......... ..........  145K\n   800K .......... .......... .......... .......... ..........  287K\n   850K .......... .......... .......... .......... ..........  194K\n   900K .......... .......... .......... .......... ..........  290K\n   950K .......... .......... .......... .......... ..........  288K\n  1000K .......... .......... .......... .......... ..........  290K\n  1050K .......... .......... .......... .......... ..........  290K\n  1100K .......... .......... .......... .......... ..........  291K\n  1150K .......... .......... .......... .......... ..........  290K\n  1200K .......... .......... .......... .......... ..........  292K\n  1250K .......... .......... .......... .......... ..........  578K\n  1300K .......... .......... .......... .......... ..........  290K\n  1350K .......... .......... .......... .......... ..........  581K\n  1400K .......... .......... .......... .......... ..........  291K\n  1450K .......... .......... .......... .......... ..........  580K\n  1500K .......... .......... .......... .......... ..........  551K\n  1550K .......... .......... .......... .......... ..........  291K\n  1600K .......... .......... .......... .......... ..........  581K\n  1650K .......... .......... .......... .......... ..........  581K\n  1700K .......... .......... .......... .......... ..........  578K\n  1750K .......... .......... .......... .......... ..........  581K\n  1800K .......... .......... .......... .......... ..........  580K\n  1850K .......... .......... .......... .......... ..........  582K\n  1900K .......... .......... .......... .......... ..........  582K\n  1950K .......... .......... .......... .......... ..........  580K\n  2000K .......... .......... .......... .......... ..........  581K\n  2050K .......... .......... .......... .......... ..........  582K\n  2100K .......... .......... .......... .......... .......... 26.8M\n  2150K .......... .......... .......... .......... ..........  587K\n  2200K .......... .......... .......... .......... ..........  579K\n  2250K .......... .......... .......... .......... .......... 21.0M\n  2300K .......... .......... .......... .......... ..........  590K\n  2350K .......... .......... .......... .......... ..........  580K\n  2400K .......... .......... .......... .......... ..........  588K\n  2450K .......... .......... .......... .......... .......... 29.1M\n  2500K .......... .......... .......... .......... ..........  584K\n  2550K .......... .......... .......... .......... .......... 35.8M\n  2600K .......... .......... .......... .......... ..........  587K\n  2650K .......... .......... .......... .......... ..........  586K\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... ..........  582K\n  2800K .......... .......... .......... .......... ..........  581K\n  2850K .......... .......... .......... .......... ..........  109M\n  2900K .......... .......... .......... .......... ..........  584K\n  2950K .......... .......... .......... .......... ..........  122M\n  3000K .......... .......... .......... .......... ..........  582K\n  3050K .......... .......... .......... .......... .......... 20.7M\n  3100K .......... .......... .......... .......... ..........  595K\n  3150K .......... .......... .......... .......... .......... 14.8M\n  3200K .......... .......... .......... .......... ..........  603K\n  3250K .......... .......... .......... .......... .......... 13.7M\n  3300K .......... .......... .......... .......... ..........  605K\n  3350K .......... .......... .......... .......... .......... 13.8M\n  3400K .......... .......... .......... .......... ..........  602K\n  3450K .......... .......... .......... .......... .......... 14.7M\n  3500K .......... .......... .......... .......... ..........  593K\n  3550K .......... .......... .......... .......... .......... 23.6M\n  3600K .......... .......... .......... .......... ..........  591K\n  3650K .......... .......... .......... .......... .......... 35.8M\n  3700K .......... .......... .......... .......... ..........  600K\n  3750K .......... .......... .......... .......... .......... 19.7M\n  3800K .......... .......... .......... .......... .......... 23.2M\n  3850K .......... .......... .......... .......... ..........  596K\n  3900K .......... .......... .......... .......... .......... 68.7M\n  3950K .......... .......... .......... .......... ..........  585K\n  4000K .......... .......... .......... .......... .......... 68.6M\n  4050K .......... .......... .......... .......... ..........  591K\n  4100K .......... .......... .......... .......... .......... 28.1M\n  4150K .......... .......... .......... .......... ..........  120M\n  4200K .......... .......... .......... .......... ..........  585K\n  4250K .......... .......... .......... .......... ..........  581K\n  4300K .......... .......... .......... .......... ..........  122M\n  4350K .......... .......... .......... .......... .......... 15.7M\n  4400K .......... .......... .......... .......... ..........  594K\n  4450K .......... .......... .......... .......... .......... 18.2M\n  4500K .......... .......... .......... .......... ..........  598K\n  4550K .......... .......... .......... .......... .......... 16.4M\n  4600K .......... .......... .......... .......... ..........  602K\n  4650K .......... .......... .......... .......... .......... 14.9M\n  4700K .......... .......... .......... .......... ..........  601K\n  4750K .......... .......... .......... .......... ..........  582K\n  4800K .......... .......... .......... .......... ..........  101M\n  4850K .......... .......... .......... .......... .......... 15.5M\n  4900K .......... .......... .......... .......... ..........  602K\n  4950K .......... .......... .......... .......... .......... 15.7M\n  5000K .......... .......... .......... .......... ..........  600K\n  5050K .......... .......... .......... .......... .......... 20.9M\n  5100K .......... .......... .......... .......... ..........  595K\n  5150K .......... .......... .......... .......... .......... 17.7M\n  5200K .......... .......... .......... .......... ..........  600K\n  5250K .......... .......... .......... .......... .......... 19.9M\n  5300K .......... .......... .......... .......... ..........  597K\n  5350K .......... .......... .......... .......... .......... 52.9M\n  5400K .......... .......... .......... .......... ..........  585K\n  5450K .......... .......... .......... .......... ..........  116M\n  5500K .......... .......... .......... .......... .......... 14.5M\n  5550K .......... .......... .......... .......... ..........  604K\n  5600K .......... .......... .......... .......... .......... 16.5M\n  5650K .......... .......... .......... .......... ..........  600K\n  5700K .......... .......... .......... .......... .......... 25.2M\n  5750K .......... .......... .......... .......... ..........  594K\n  5800K .......... .......... .......... .......... .......... 50.2M\n  5850K .......... .......... .......... .......... .......... 19.8M\n  5900K .......... .......... .......... .......... ..........  603K\n  5950K .......... .......... .......... .......... .......... 14.0M\n  6000K .......... .......... .......... .......... ..........  604K\n  6050K .......... .......... .......... .......... .......... 28.8M\n  6100K .......... .......... .......... .......... ..........  593K\n  6150K .......... .......... .......... .......... .......... 71.5M\n  6200K .......... .......... .......... .......... .......... 12.2M\n  6250K .......... .......... .......... .......... ..........  608K\n  6300K .......... .......... .......... .......... .......... 23.1M\n  6350K .......... .......... .......... .......... ..........  592K\n  6400K .......... .......... .......... .......... ..........  116M\n  6450K .......... .......... .......... .......... ..........  583K\n  6500K .......... .......... .......... .......... .......... 95.2M\n  6550K .......... .......... .......... .......... .......... 27.9M\n  6600K .......... .......... .......... .......... ..........  592K\n  6650K .......... .......... .......... .......... .......... 96.4M\n  6700K .......... .......... .......... .......... ..........  582K\n  6750K .......... .......... .......... .......... .......... 66.5M\n  6800K .......... .......... .......... .......... .......... 32.0M\n  6850K .......... .......... .......... .......... ..........  590K\n  6900K .......... .......... .......... .......... ..........  107M\n  6950K .......... .......... .......... .......... ..........  584K\n  7000K .......... .......... .......... .......... ..........  114M\n  7050K .......... .......... .......... .......... ..........  138M\n  7100K .......... .......... .......... .......... ..........  581K\n  7150K .......... .......... .......... .......... ..........  137M\n  7200K .......... .......... .......... .......... ..........  584K\n  7250K .......... .......... .......... .......... ..........  136M\n  7300K .......... .......... .......... .......... ..........  133M\n  7350K .......... .......... .......... .......... ..........  583K\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  587K\n  7500K .......... .......... .......... .......... ..........  101M\n  7550K .......... .......... .......... .......... ..........  133M\n  7600K .......... .......... .......... .......... ..........  584K\n  7650K .......... .......... .......... .......... ..........  132M\n  7700K .......... .......... .......... .......... ..........  585K\n  7750K .......... .......... .......... .......... ..........  107M\n  7800K .......... .......... .......... .......... ..........  125M\n  7850K .......... .......... .......... .......... ..........  582K\n  7900K .......... .......... .......... .......... .......... 95.4M\n  7950K .......... .......... .......... .......... ..........  586K\n  8000K .......... .......... .......... .......... .......... 92.5M\n  8050K .......... .......... .......... .......... ..........  151M\n  8100K .......... .......... .......... .......... ..........  584K\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... ..........  585K\n  8300K .......... .......... .......... .......... .......... 71.0M\n  8350K .......... .......... .......... .......... ..........  585K\n  8400K .......... .......... .......... .......... ..........  107M\n  8450K .......... .......... .......... .......... ..........  145M\n  8500K .......... .......... .......... .......... ..........  583K\n  8550K .......... .......... .......... .......... ..........  100M\n  8600K .......... .......... .......... .......... ..........  588K\n  8650K .......... .......... .......... .......... ..........  122M\n  8700K .......... .......... .......... .......... .......... 67.7M\n  8750K .......... .......... .......... .......... ..........  587K\n  8800K .......... .......... .......... .......... ..........  128M\n  8850K .......... .......... .......... .......... .......... 77.0M\n  8900K .......... .......... .......... .......... ..........  585K\n  8950K .......... .......... .......... .......... ..........  129M\n  9000K .......... .......... .......... .......... ..........  585K\n  9050K .......... .......... .......... .......... ..........  148M\n  9100K .......... .......... .......... .......... .......... 47.2M\n  9150K .......... .......... .......... .......... ..........  587K\n  9200K .......... .......... .......... .......... ..........  113M\n  9250K .......... .......... .......... .......... ..........  585K\n  9300K .......... .......... .......... .......... ..........  125M\n  9350K .......... .......... .......... .......... .......... 81.8M\n  9400K .......... .......... .......... .......... ..........  586K\n  9450K .......... .......... .......... .......... ..........  121M\n  9500K .......... .......... .......... .......... ..........  584K\n  9550K .......... .......... .......... .......... ..........  111M\n  9600K .......... .......... .......... .......... .......... 36.8M\n  9650K .......... .......... .......... .......... ..........  591K\n  9700K .......... .......... .......... .......... ..........  103M\n  9750K .......... .......... .......... .......... .......... 26.6M\n  9800K .......... .......... .......... .......... ..........  589K\n  9850K .......... .......... .......... .......... .......... 95.1M\n  9900K .......... .......... .......... .......... ..........  587K\n  9950K .......... .......... .......... .......... ..........  117M\n 10000K .......... .......... .......... .......... .......... 22.4M\n 10050K .......... .......... .......... .......... ..........  597K\n 10100K .......... .......... .......... .......... ..........  146M\n 10150K .......... .......... .......... .......... ..........  582K\n 10200K .......... .......... .......... .......... ..........  122M\n 10250K .......... .......... .......... .......... ..........  122M\n 10300K .......... .......... .......... .......... ..........  571K\n 10350K .......... .......... .......... .......... ..........  127M\n 10400K .......... .......... .......... .......... ..........  584K\n 10450K .......... .......... .......... .......... ..........  124M\n 10500K .......... .......... .......... .......... ..........  134M\n 10550K .......... .......... .......... .......... ..........  585K\n 10600K .......... .......... .......... .......... ..........  104M\n 10650K .......... .......... .......... .......... ..........  142M\n 10700K .......... .......... .......... .......... ..........  584K\n 10750K .......... .......... .......... .......... ..........  131M\n 10800K .......... .......... .......... .......... ..........  584K\n 10850K .......... .......... .......... .......... ..........  126M\n 10900K .......... .......... .......... .......... ..........  127M\n 10950K .......... .......... .......... .......... ..........  584K\n 11000K .......... .......... .......... .......... ..........  121M\n 11050K .......... .......... .......... .......... ..........  586K\n 11100K .......... .......... .......... .......... ..........  111M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... ..........  584K\n 11250K .......... .......... .......... .......... ..........  134M\n 11300K .......... .......... .......... .......... ..........  586K\n 11350K .......... .......... .......... .......... ..........  120M\n 11400K .......... .......... .......... .......... ..........  116M\n 11450K .......... .......... .......... .......... ..........  585K\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n......  920K\n 50150K .......... .......... .......... .......... .......... 2.23M\n 50200K .......... .......... .......... .......... .......... 58.0M\n 50250K .......... .......... .......... .......... .......... 1.20M\n 50300K .......... .......... .......... .......... .......... 1.09M\n 50350K .......... .......... .......... .......... ..........  129M\n 50400K .......... .......... .......... .......... .......... 1.16M\n 50450K .......... .......... .......... .......... .......... 1.09M\n 50500K .......... .......... .......... .......... ..........  139M\n 50550K .......... .......... .......... .......... .......... 1.40M\n 50600K .......... .......... .......... .......... ..........  982K\n 50650K .......... .......... .......... .......... ..........  137M\n 50700K .......... .......... .......... .......... .......... 4.97M\n 50750K .......... .......... .......... .......... ..........  915K\n 50800K .......... .......... .......... .......... .......... 2.23M\n 50850K .......... .......... .......... .......... .......... 5.19M\n 50900K .......... .......... .......... .......... ..........  909K\n 50950K .......... .......... .......... .......... .......... 2.21M\n 51000K .......... .......... .......... .......... ..........  122M\n 51050K .......... .......... .......... .......... .......... 1.17M\n 51100K .......... .......... .......... .......... .......... 1.12M\n 51150K .......... .......... .......... .......... ..........  137M\n 51200K .......... .......... .......... .......... .......... 1.15M\n 51250K .......... .......... .......... .......... .......... 1.13M\n 51300K .......... .......... .......... .......... .......... 84.8M\n 51350K .......... .......... .......... .......... .......... 1.38M\n 51400K .......... .......... .......... .......... .......... 1.71M\n 51450K .......... .......... .......... .......... .......... 2.22M\n 51500K .......... .......... .......... .......... ..........  105M\n 51550K .......... .......... .......... .......... ..........  806K\n 51600K .......... .......... .......... .......... .......... 2.08M\n 51650K .......... .......... .......... .......... .......... 65.9M\n 51700K .......... .......... .......... .......... .......... 1.16M\n 51750K .......... .......... .......... .......... .......... 1.13M\n 51800K .......... .......... .......... .......... ..........  106M\n 51850K .......... .......... .......... .......... .......... 1.34M\n 51900K .......... .......... .......... .......... .......... 1022K\n 51950K .......... .......... .......... .......... .......... 63.4M\n 52000K .......... .......... .......... .......... .......... 1.34M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... .......... 44.0M\n 52150K .......... .......... .......... .......... .......... 4.47M\n 52200K .......... .......... .......... .......... ..........  936K\n 52250K .......... .......... .......... .......... .......... 2.18M\n 52300K .......... .......... .......... .......... .......... 22.4M\n 52350K .......... .......... .......... .......... .......... 1.19M\n 52400K .......... .......... .......... .......... .......... 1.14M\n 52450K .......... .......... .......... .......... .......... 20.2M\n 52500K .......... .......... .......... .......... .......... 1.20M\n 52550K .......... .......... .......... .......... .......... 1.13M\n 52600K .......... .......... .......... .......... .......... 45.7M\n 52650K .......... .......... .......... .......... .......... 1.30M\n 52700K .......... .......... .......... .......... .......... 1.06M\n 52750K .......... .......... .......... .......... .......... 17.6M\n 52800K .......... .......... .......... .......... .......... 1.30M\n 52850K .......... .......... .......... .......... .......... 1.87M\n 52900K .......... .......... .......... .......... .......... 2.13M\n 52950K .......... .......... .......... .......... .......... 11.9M\n 53000K .......... .......... .......... .......... ..........  856K\n 53050K .......... .......... .......... .......... .......... 2.05M\n 53100K .......... .......... .......... .......... ..........  140M\n 53150K .......... .......... .......... .......... ..........  810K\n 53200K .......... .......... .......... .......... .......... 2.02M\n 53250K .......... .......... .......... .......... ..........  136M\n 53300K .......... .......... .......... .......... .......... 1.21M\n 53350K .......... .......... .......... .......... .......... 1.14M\n 53400K .......... .......... .......... .......... .......... 19.3M\n 53450K .......... .......... .......... .......... .......... 4.83M\n 53500K .......... .......... .......... .......... ..........  957K\n 53550K .......... .......... .......... .......... .......... 2.04M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... ..........  937K\n 53700K .......... .......... .......... .......... .......... 2.18M\n 53750K .......... .......... .......... .......... .......... 12.0M\n 53800K .......... .......... .......... .......... .......... 1.19M\n 53850K .......... .......... .......... .......... .......... 1.18M\n 53900K .......... .......... .......... .......... .......... 20.9M\n 53950K .......... .......... .......... .......... .......... 1.16M\n 54000K .......... .......... .......... .......... .......... 1.17M\n 54050K .......... .......... .......... .......... .......... 21.3M\n 54100K .......... .......... .......... .......... .......... 1.30M\n 54150K .......... .......... .......... .......... .......... 1.12M\n 54200K .......... .......... .......... .......... .......... 14.8M\n 54250K .......... .......... .......... .......... .......... 5.13M\n 54300K .......... .......... .......... .......... ..........  924K\n 54350K .......... .......... .......... .......... .......... 2.03M\n 54400K .......... .......... .......... .......... .......... 23.5M\n 54450K .......... .......... .......... .......... ..........  827K\n 54500K .......... .......... .......... .......... .......... 2.04M\n 54550K .......... .......... .......... .......... ..........  133M\n 54600K .......... .......... .......... .......... .......... 1.32M\n 54650K .......... .......... .......... .......... .......... 1.08M\n 54700K .......... .......... .......... .......... .......... 13.4M\n 54750K .......... .......... .......... .......... .......... 1.32M\n 54800K .......... .......... .......... .......... .......... 1.07M\n 54850K .......... .......... .......... .......... .......... 13.1M\n 54900K .......... .......... .......... .......... .......... 5.95M\n 54950K .......... .......... .......... .......... ..........  918K\n 55000K .......... .......... .......... .......... .......... 2.08M\n 55050K .......... .......... .......... .......... .......... 44.4M\n 55100K .......... .......... .......... .......... .......... 1.27M\n 55150K .......... .......... .......... .......... .......... 1.05M\n 55200K .......... .......... .......... .......... .......... 59.5M\n 55250K .......... .......... .......... .......... .......... 1.27M\n 55300K .......... .......... .......... .......... .......... 1.08M\n 55350K .......... .......... .......... .......... .......... 22.5M\n 55400K .......... .......... .......... .......... .......... 5.34M\n 55450K .......... .......... .......... .......... ..........  920K\n 55500K .......... .......... .......... .......... .......... 2.13M\n 55550K .......... .......... .......... .......... .......... 18.1M\n 55600K .......... .......... .......... .......... .......... 1.21M\n 55650K .......... .......... .......... .......... .......... 1.13M\n 55700K .......... .......... .......... .......... .......... 66.7M\n 55750K .......... .......... .......... .......... .......... 1.37M\n 55800K .......... .......... .......... .......... .......... 1.00M\n 55850K .......... .......... .......... .......... .......... 30.7M\n 55900K .......... .......... .......... .......... .......... 27.5M\n 55950K .......... .......... .......... .......... ..........  809K\n 56000K .......... .......... .......... .......... .......... 2.17M\n 56050K .......... .......... .......... .......... .......... 19.8M\n 56100K .......... .......... .......... .......... .......... 1.20M\n 56150K .......... .......... .......... .......... .......... 1.14M\n 56200K .......... .......... .......... .......... ..........  117M\n 56250K .......... .......... .......... .......... .......... 1.28M\n 56300K .......... .......... .......... .......... .......... 1.85M\n 56350K .......... .......... .......... .......... .......... 2.23M\n 56400K .......... .......... .......... .......... .......... 5.17M\n 56450K .......... .......... .......... .......... ..........  914K\n 56500K .......... .......... .......... .......... .......... 2.25M\n 56550K .......... .......... .......... .......... .......... 59.1M\n 56600K .......... .......... .......... .......... .......... 1.30M\n 56650K .......... .......... .......... .......... .......... 1.03M\n 56700K .......... .......... .......... .......... .......... 55.1M\n 56750K .......... .......... .......... .......... .......... 1.27M\n 56800K .......... .......... .......... .......... .......... 1.84M\n 56850K .......... .......... .......... .......... .......... 2.31M\n 56900K .......... .......... .......... .......... ..........  131M\n 56950K .......... .......... .......... .......... .......... 1.25M\n 57000K .......... .......... .......... .......... .......... 1.03M\n 57050K .......... .......... .......... .......... .......... 74.7M\n 57100K .......... .......... .......... .......... .......... 5.74M\n 57150K .......... .......... .......... .......... ..........  896K\n 57200K .......... .......... .......... .......... .......... 2.26M\n 57250K .......... .......... .......... .......... .......... 19.4M\n 57300K .......... .......... .......... .......... .......... 1.28M\n 57350K .......... .......... .......... .......... .......... 1.08M\n 57400K .......... .......... .......... .......... ..........  119M\n 57450K .......... .......... .......... .......... .......... 5.70M\n 57500K .......... .......... .......... .......... ..........  864K\n 57550K .......... .......... .......... .......... .......... 2.46M\n 57600K .......... .......... .......... .......... .......... 17.7M\n 57650K .......... .......... .......... .......... .......... 1.29M\n 57700K .......... .......... .......... .......... .......... 1.07M\n 57750K .......... .......... .......... .......... ..........  126M\n 57800K .......... .......... .......... .......... .......... 5.94M\n 57850K .......... .......... .......... .......... ..........  911K\n 57900K .......... .......... .......... .......... .......... 2.13M\n 57950K .......... .......... .......... .......... ..........  120M\n 58000K .......... .......... .......... .......... .......... 1.18M\n 58050K .......... .......... .......... .......... .......... 1.10M\n 58100K .......... .......... .......... .......... ..........  121M\n 58150K .......... .......... .......... .......... .......... 17.1M\n 58200K .......... .......... .......... .......... .......... 1.23M\n 58250K .......... .......... .......... .......... .......... 1.12M\n 58300K .......... .......... .......... .......... ..........  126M\n 58350K .......... .......... .......... .......... .......... 1.17M\n 58400K .......... .......... .......... .......... .......... 1.95M\n 58450K .......... .......... .......... .......... .......... 2.55M\n 58500K .......... .......... .......... .......... ..........  140M\n 58550K .......... .......... .......... .......... .......... 1.15M\n 58600K .......... .......... .......... .......... .......... 1.13M\n 58650K .......... .......... .......... .......... ..........  130M\n 58700K .......... .......... .......... .......... .......... 87.0M\n 58750K .......... .......... .......... .......... .......... 1.16M\n 58800K .......... .......... .......... .......... .......... 1.13M\n 58850K .......... .......... .......... .......... .......... 98.1M\n 58900K .......... .......... .......... .......... .......... 4.10M\n 58950K .......... .......... .......... .......... ..........  940K\n 59000K .......... .......... .......... .......... .......... 2.33M\n 59050K .......... .......... .......... .......... .......... 37.3M\n 59100K .......... .......... .......... .......... .......... 1.20M\n 59150K .......... .......... .......... .......... .......... 1.71M\n 59200K .......... .......... .......... .......... .......... 3.15M\n 59250K .......... .......... .......... .......... .......... 28.7M\n 59300K .......... .......... .......... .......... .......... 1.20M\n 59350K .......... .......... .......... .......... .......... 1.71M\n 59400K .......... .......... .......... .......... .......... 3.11M\n 59450K .......... .......... .......... .......... .......... 35.0M\n 59500K .......... .......... .......... .......... .......... 1.16M\n 59550K .......... .......... .......... .......... .......... 1.17M\n 59600K .......... .......... .......... .......... .......... 59.8M\n 59650K .......... .......... .......... .......... .......... 18.2M\n 59700K .......... .......... .......... .......... .......... 1.20M\n 59750K .......... .......... .......... .......... .......... 1.17M\n 59800K .......... .......... .......... .......... .......... 48.8M\n 59850K .......... .......... .......... .......... .......... 31.2M\n 59900K .......... .......... .......... .......... .......... 1.16M\n 59950K .......... .......... .......... .......... .......... 1.18M\n 60000K .......... .......... .......... .......... .......... 22.1M\n 60050K .......... .......... .......... .......... .......... 28.6M\n 60100K .......... .......... .......... .......... .......... 1.21M\n 60150K .......... .......... .......... .......... .......... 1.17M\n 60200K .......... .......... .......... .......... .......... 22.4M\n 60250K .......... .......... .......... .......... .......... 39.3M\n 60300K .......... .......... .......... .......... .......... 1.19M\n 60350K .......... .......... .......... .......... .......... 1.17M\n 60400K .......... .......... .......... .......... .......... 24.7M\n 60450K .......... .......... .......... .......... .......... 43.4M\n 60500K .......... .......... .......... .......... .......... 1.16M\n 60550K .......... .......... .......... .......... .......... 1.71M\n 60600K .......... .......... .......... .......... .......... 3.49M\n 60650K .......... .........                                    156M=50s\n\n2024-11-11 19:14:58 (1.19 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  290K 3s\n   100K .......... .......... .......... .......... .......... 18%  290K 3s\n   150K .......... .......... .......... .......... .......... 24%  578K 2s\n   200K .......... .......... .......... .......... .......... 30%  579K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  290K 1s\n   350K .......... .......... .......... .......... .......... 48% 1.12M 1s\n   400K .......... .......... .......... .......... .......... 54%  387K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.4M 1s\n   500K .......... .......... .......... .......... .......... 66%  597K 1s\n   550K .......... .......... .......... .......... .......... 72%  581K 1s\n   600K .......... .......... .......... .......... .......... 78% 1.11M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.14M 0s\n   700K .......... .......... .......... .......... .......... 90%  580K 0s\n   750K .......... .......... .......... .......... .......... 96% 23.1M 0s\n   800K .......... .......... .......                         100%  670K=1.6s\n\n2024-11-11 19:15:05 (518 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "update_time": "2024-11-11T19:15:08.663131",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2, exit_code: None, stderr: --2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  194K\n    50K .......... .......... .......... .......... ..........  194K\n   100K .......... .......... .......... .......... ..........  193K\n   150K .......... .......... .......... .......... ..........  193K\n   200K .......... .......... .......... .......... ..........  290K\n   250K .......... .......... .......... .......... ..........  194K\n   300K .......... .......... .......... .......... ..........  288K\n   350K .......... .......... .......... .......... ..........  145K\n   400K .......... .......... .......... .......... ..........  290K\n   450K .......... .......... .......... .......... ..........  193K\n   500K .......... .......... .......... .......... ..........  289K\n   550K .......... .......... .......... .......... ..........  192K\n   600K .......... .......... .......... .......... ..........  288K\n   650K .......... .......... .......... .......... ..........  193K\n   700K .......... .......... .......... .......... ..........  289K\n   750K .......... .......... .......... .......... ..........  145K\n   800K .......... .......... .......... .......... ..........  287K\n   850K .......... .......... .......... .......... ..........  194K\n   900K .......... .......... .......... .......... ..........  290K\n   950K .......... .......... .......... .......... ..........  288K\n  1000K .......... .......... .......... .......... ..........  290K\n  1050K .......... .......... .......... .......... ..........  290K\n  1100K .......... .......... .......... .......... ..........  291K\n  1150K .......... .......... .......... .......... ..........  290K\n  1200K .......... .......... .......... .......... ..........  292K\n  1250K .......... .......... .......... .......... ..........  578K\n  1300K .......... .......... .......... .......... ..........  290K\n  1350K .......... .......... .......... .......... ..........  581K\n  1400K .......... .......... .......... .......... ..........  291K\n  1450K .......... .......... .......... .......... ..........  580K\n  1500K .......... .......... .......... .......... ..........  551K\n  1550K .......... .......... .......... .......... ..........  291K\n  1600K .......... .......... .......... .......... ..........  581K\n  1650K .......... .......... .......... .......... ..........  581K\n  1700K .......... .......... .......... .......... ..........  578K\n  1750K .......... .......... .......... .......... ..........  581K\n  1800K .......... .......... .......... .......... ..........  580K\n  1850K .......... .......... .......... .......... ..........  582K\n  1900K .......... .......... .......... .......... ..........  582K\n  1950K .......... .......... .......... .......... ..........  580K\n  2000K .......... .......... .......... .......... ..........  581K\n  2050K .......... .......... .......... .......... ..........  582K\n  2100K .......... .......... .......... .......... .......... 26.8M\n  2150K .......... .......... .......... .......... ..........  587K\n  2200K .......... .......... .......... .......... ..........  579K\n  2250K .......... .......... .......... .......... .......... 21.0M\n  2300K .......... .......... .......... .......... ..........  590K\n  2350K .......... .......... .......... .......... ..........  580K\n  2400K .......... .......... .......... .......... ..........  588K\n  2450K .......... .......... .......... .......... .......... 29.1M\n  2500K .......... .......... .......... .......... ..........  584K\n  2550K .......... .......... .......... .......... .......... 35.8M\n  2600K .......... .......... .......... .......... ..........  587K\n  2650K .......... .......... .......... .......... ..........  586K\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... ..........  582K\n  2800K .......... .......... .......... .......... ..........  581K\n  2850K .......... .......... .......... .......... ..........  109M\n  2900K .......... .......... .......... .......... ..........  584K\n  2950K .......... .......... .......... .......... ..........  122M\n  3000K .......... .......... .......... .......... ..........  582K\n  3050K .......... .......... .......... .......... .......... 20.7M\n  3100K .......... .......... .......... .......... ..........  595K\n  3150K .......... .......... .......... .......... .......... 14.8M\n  3200K .......... .......... .......... .......... ..........  603K\n  3250K .......... .......... .......... .......... .......... 13.7M\n  3300K .......... .......... .......... .......... ..........  605K\n  3350K .......... .......... .......... .......... .......... 13.8M\n  3400K .......... .......... .......... .......... ..........  602K\n  3450K .......... .......... .......... .......... .......... 14.7M\n  3500K .......... .......... .......... .......... ..........  593K\n  3550K .......... .......... .......... .......... .......... 23.6M\n  3600K .......... .......... .......... .......... ..........  591K\n  3650K .......... .......... .......... .......... .......... 35.8M\n  3700K .......... .......... .......... .......... ..........  600K\n  3750K .......... .......... .......... .......... .......... 19.7M\n  3800K .......... .......... .......... .......... .......... 23.2M\n  3850K .......... .......... .......... .......... ..........  596K\n  3900K .......... .......... .......... .......... .......... 68.7M\n  3950K .......... .......... .......... .......... ..........  585K\n  4000K .......... .......... .......... .......... .......... 68.6M\n  4050K .......... .......... .......... .......... ..........  591K\n  4100K .......... .......... .......... .......... .......... 28.1M\n  4150K .......... .......... .......... .......... ..........  120M\n  4200K .......... .......... .......... .......... ..........  585K\n  4250K .......... .......... .......... .......... ..........  581K\n  4300K .......... .......... .......... .......... ..........  122M\n  4350K .......... .......... .......... .......... .......... 15.7M\n  4400K .......... .......... .......... .......... ..........  594K\n  4450K .......... .......... .......... .......... .......... 18.2M\n  4500K .......... .......... .......... .......... ..........  598K\n  4550K .......... .......... .......... .......... .......... 16.4M\n  4600K .......... .......... .......... .......... ..........  602K\n  4650K .......... .......... .......... .......... .......... 14.9M\n  4700K .......... .......... .......... .......... ..........  601K\n  4750K .......... .......... .......... .......... ..........  582K\n  4800K .......... .......... .......... .......... ..........  101M\n  4850K .......... .......... .......... .......... .......... 15.5M\n  4900K .......... .......... .......... .......... ..........  602K\n  4950K .......... .......... .......... .......... .......... 15.7M\n  5000K .......... .......... .......... .......... ..........  600K\n  5050K .......... .......... .......... .......... .......... 20.9M\n  5100K .......... .......... .......... .......... ..........  595K\n  5150K .......... .......... .......... .......... .......... 17.7M\n  5200K .......... .......... .......... .......... ..........  600K\n  5250K .......... .......... .......... .......... .......... 19.9M\n  5300K .......... .......... .......... .......... ..........  597K\n  5350K .......... .......... .......... .......... .......... 52.9M\n  5400K .......... .......... .......... .......... ..........  585K\n  5450K .......... .......... .......... .......... ..........  116M\n  5500K .......... .......... .......... .......... .......... 14.5M\n  5550K .......... .......... .......... .......... ..........  604K\n  5600K .......... .......... .......... .......... .......... 16.5M\n  5650K .......... .......... .......... .......... ..........  600K\n  5700K .......... .......... .......... .......... .......... 25.2M\n  5750K .......... .......... .......... .......... ..........  594K\n  5800K .......... .......... .......... .......... .......... 50.2M\n  5850K .......... .......... .......... .......... .......... 19.8M\n  5900K .......... .......... .......... .......... ..........  603K\n  5950K .......... .......... .......... .......... .......... 14.0M\n  6000K .......... .......... .......... .......... ..........  604K\n  6050K .......... .......... .......... .......... .......... 28.8M\n  6100K .......... .......... .......... .......... ..........  593K\n  6150K .......... .......... .......... .......... .......... 71.5M\n  6200K .......... .......... .......... .......... .......... 12.2M\n  6250K .......... .......... .......... .......... ..........  608K\n  6300K .......... .......... .......... .......... .......... 23.1M\n  6350K .......... .......... .......... .......... ..........  592K\n  6400K .......... .......... .......... .......... ..........  116M\n  6450K .......... .......... .......... .......... ..........  583K\n  6500K .......... .......... .......... .......... .......... 95.2M\n  6550K .......... .......... .......... .......... .......... 27.9M\n  6600K .......... .......... .......... .......... ..........  592K\n  6650K .......... .......... .......... .......... .......... 96.4M\n  6700K .......... .......... .......... .......... ..........  582K\n  6750K .......... .......... .......... .......... .......... 66.5M\n  6800K .......... .......... .......... .......... .......... 32.0M\n  6850K .......... .......... .......... .......... ..........  590K\n  6900K .......... .......... .......... .......... ..........  107M\n  6950K .......... .......... .......... .......... ..........  584K\n  7000K .......... .......... .......... .......... ..........  114M\n  7050K .......... .......... .......... .......... ..........  138M\n  7100K .......... .......... .......... .......... ..........  581K\n  7150K .......... .......... .......... .......... ..........  137M\n  7200K .......... .......... .......... .......... ..........  584K\n  7250K .......... .......... .......... .......... ..........  136M\n  7300K .......... .......... .......... .......... ..........  133M\n  7350K .......... .......... .......... .......... ..........  583K\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  587K\n  7500K .......... .......... .......... .......... ..........  101M\n  7550K .......... .......... .......... .......... ..........  133M\n  7600K .......... .......... .......... .......... ..........  584K\n  7650K .......... .......... .......... .......... ..........  132M\n  7700K .......... .......... .......... .......... ..........  585K\n  7750K .......... .......... .......... .......... ..........  107M\n  7800K .......... .......... .......... .......... ..........  125M\n  7850K .......... .......... .......... .......... ..........  582K\n  7900K .......... .......... .......... .......... .......... 95.4M\n  7950K .......... .......... .......... .......... ..........  586K\n  8000K .......... .......... .......... .......... .......... 92.5M\n  8050K .......... .......... .......... .......... ..........  151M\n  8100K .......... .......... .......... .......... ..........  584K\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... ..........  585K\n  8300K .......... .......... .......... .......... .......... 71.0M\n  8350K .......... .......... .......... .......... ..........  585K\n  8400K .......... .......... .......... .......... ..........  107M\n  8450K .......... .......... .......... .......... ..........  145M\n  8500K .......... .......... .......... .......... ..........  583K\n  8550K .......... .......... .......... .......... ..........  100M\n  8600K .......... .......... .......... .......... ..........  588K\n  8650K .......... .......... .......... .......... ..........  122M\n  8700K .......... .......... .......... .......... .......... 67.7M\n  8750K .......... .......... .......... .......... ..........  587K\n  8800K .......... .......... .......... .......... ..........  128M\n  8850K .......... .......... .......... .......... .......... 77.0M\n  8900K .......... .......... .......... .......... ..........  585K\n  8950K .......... .......... .......... .......... ..........  129M\n  9000K .......... .......... .......... .......... ..........  585K\n  9050K .......... .......... .......... .......... ..........  148M\n  9100K .......... .......... .......... .......... .......... 47.2M\n  9150K .......... .......... .......... .......... ..........  587K\n  9200K .......... .......... .......... .......... ..........  113M\n  9250K .......... .......... .......... .......... ..........  585K\n  9300K .......... .......... .......... .......... ..........  125M\n  9350K .......... .......... .......... .......... .......... 81.8M\n  9400K .......... .......... .......... .......... ..........  586K\n  9450K .......... .......... .......... .......... ..........  121M\n  9500K .......... .......... .......... .......... ..........  584K\n  9550K .......... .......... .......... .......... ..........  111M\n  9600K .......... .......... .......... .......... .......... 36.8M\n  9650K .......... .......... .......... .......... ..........  591K\n  9700K .......... .......... .......... .......... ..........  103M\n  9750K .......... .......... .......... .......... .......... 26.6M\n  9800K .......... .......... .......... .......... ..........  589K\n  9850K .......... .......... .......... .......... .......... 95.1M\n  9900K .......... .......... .......... .......... ..........  587K\n  9950K .......... .......... .......... .......... ..........  117M\n 10000K .......... .......... .......... .......... .......... 22.4M\n 10050K .......... .......... .......... .......... ..........  597K\n 10100K .......... .......... .......... .......... ..........  146M\n 10150K .......... .......... .......... .......... ..........  582K\n 10200K .......... .......... .......... .......... ..........  122M\n 10250K .......... .......... .......... .......... ..........  122M\n 10300K .......... .......... .......... .......... ..........  571K\n 10350K .......... .......... .......... .......... ..........  127M\n 10400K .......... .......... .......... .......... ..........  584K\n 10450K .......... .......... .......... .......... ..........  124M\n 10500K .......... .......... .......... .......... ..........  134M\n 10550K .......... .......... .......... .......... ..........  585K\n 10600K .......... .......... .......... .......... ..........  104M\n 10650K .......... .......... .......... .......... ..........  142M\n 10700K .......... .......... .......... .......... ..........  584K\n 10750K .......... .......... .......... .......... ..........  131M\n 10800K .......... .......... .......... .......... ..........  584K\n 10850K .......... .......... .......... .......... ..........  126M\n 10900K .......... .......... .......... .......... ..........  127M\n 10950K .......... .......... .......... .......... ..........  584K\n 11000K .......... .......... .......... .......... ..........  121M\n 11050K .......... .......... .......... .......... ..........  586K\n 11100K .......... .......... .......... .......... ..........  111M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... ..........  584K\n 11250K .......... .......... .......... .......... ..........  134M\n 11300K .......... .......... .......... .......... ..........  586K\n 11350K .......... .......... .......... .......... ..........  120M\n 11400K .......... .......... .......... .......... ..........  116M\n 11450K .......... .......... .......... .......... ..........  585K\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n......  920K\n 50150K .......... .......... .......... .......... .......... 2.23M\n 50200K .......... .......... .......... .......... .......... 58.0M\n 50250K .......... .......... .......... .......... .......... 1.20M\n 50300K .......... .......... .......... .......... .......... 1.09M\n 50350K .......... .......... .......... .......... ..........  129M\n 50400K .......... .......... .......... .......... .......... 1.16M\n 50450K .......... .......... .......... .......... .......... 1.09M\n 50500K .......... .......... .......... .......... ..........  139M\n 50550K .......... .......... .......... .......... .......... 1.40M\n 50600K .......... .......... .......... .......... ..........  982K\n 50650K .......... .......... .......... .......... ..........  137M\n 50700K .......... .......... .......... .......... .......... 4.97M\n 50750K .......... .......... .......... .......... ..........  915K\n 50800K .......... .......... .......... .......... .......... 2.23M\n 50850K .......... .......... .......... .......... .......... 5.19M\n 50900K .......... .......... .......... .......... ..........  909K\n 50950K .......... .......... .......... .......... .......... 2.21M\n 51000K .......... .......... .......... .......... ..........  122M\n 51050K .......... .......... .......... .......... .......... 1.17M\n 51100K .......... .......... .......... .......... .......... 1.12M\n 51150K .......... .......... .......... .......... ..........  137M\n 51200K .......... .......... .......... .......... .......... 1.15M\n 51250K .......... .......... .......... .......... .......... 1.13M\n 51300K .......... .......... .......... .......... .......... 84.8M\n 51350K .......... .......... .......... .......... .......... 1.38M\n 51400K .......... .......... .......... .......... .......... 1.71M\n 51450K .......... .......... .......... .......... .......... 2.22M\n 51500K .......... .......... .......... .......... ..........  105M\n 51550K .......... .......... .......... .......... ..........  806K\n 51600K .......... .......... .......... .......... .......... 2.08M\n 51650K .......... .......... .......... .......... .......... 65.9M\n 51700K .......... .......... .......... .......... .......... 1.16M\n 51750K .......... .......... .......... .......... .......... 1.13M\n 51800K .......... .......... .......... .......... ..........  106M\n 51850K .......... .......... .......... .......... .......... 1.34M\n 51900K .......... .......... .......... .......... .......... 1022K\n 51950K .......... .......... .......... .......... .......... 63.4M\n 52000K .......... .......... .......... .......... .......... 1.34M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... .......... 44.0M\n 52150K .......... .......... .......... .......... .......... 4.47M\n 52200K .......... .......... .......... .......... ..........  936K\n 52250K .......... .......... .......... .......... .......... 2.18M\n 52300K .......... .......... .......... .......... .......... 22.4M\n 52350K .......... .......... .......... .......... .......... 1.19M\n 52400K .......... .......... .......... .......... .......... 1.14M\n 52450K .......... .......... .......... .......... .......... 20.2M\n 52500K .......... .......... .......... .......... .......... 1.20M\n 52550K .......... .......... .......... .......... .......... 1.13M\n 52600K .......... .......... .......... .......... .......... 45.7M\n 52650K .......... .......... .......... .......... .......... 1.30M\n 52700K .......... .......... .......... .......... .......... 1.06M\n 52750K .......... .......... .......... .......... .......... 17.6M\n 52800K .......... .......... .......... .......... .......... 1.30M\n 52850K .......... .......... .......... .......... .......... 1.87M\n 52900K .......... .......... .......... .......... .......... 2.13M\n 52950K .......... .......... .......... .......... .......... 11.9M\n 53000K .......... .......... .......... .......... ..........  856K\n 53050K .......... .......... .......... .......... .......... 2.05M\n 53100K .......... .......... .......... .......... ..........  140M\n 53150K .......... .......... .......... .......... ..........  810K\n 53200K .......... .......... .......... .......... .......... 2.02M\n 53250K .......... .......... .......... .......... ..........  136M\n 53300K .......... .......... .......... .......... .......... 1.21M\n 53350K .......... .......... .......... .......... .......... 1.14M\n 53400K .......... .......... .......... .......... .......... 19.3M\n 53450K .......... .......... .......... .......... .......... 4.83M\n 53500K .......... .......... .......... .......... ..........  957K\n 53550K .......... .......... .......... .......... .......... 2.04M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... ..........  937K\n 53700K .......... .......... .......... .......... .......... 2.18M\n 53750K .......... .......... .......... .......... .......... 12.0M\n 53800K .......... .......... .......... .......... .......... 1.19M\n 53850K .......... .......... .......... .......... .......... 1.18M\n 53900K .......... .......... .......... .......... .......... 20.9M\n 53950K .......... .......... .......... .......... .......... 1.16M\n 54000K .......... .......... .......... .......... .......... 1.17M\n 54050K .......... .......... .......... .......... .......... 21.3M\n 54100K .......... .......... .......... .......... .......... 1.30M\n 54150K .......... .......... .......... .......... .......... 1.12M\n 54200K .......... .......... .......... .......... .......... 14.8M\n 54250K .......... .......... .......... .......... .......... 5.13M\n 54300K .......... .......... .......... .......... ..........  924K\n 54350K .......... .......... .......... .......... .......... 2.03M\n 54400K .......... .......... .......... .......... .......... 23.5M\n 54450K .......... .......... .......... .......... ..........  827K\n 54500K .......... .......... .......... .......... .......... 2.04M\n 54550K .......... .......... .......... .......... ..........  133M\n 54600K .......... .......... .......... .......... .......... 1.32M\n 54650K .......... .......... .......... .......... .......... 1.08M\n 54700K .......... .......... .......... .......... .......... 13.4M\n 54750K .......... .......... .......... .......... .......... 1.32M\n 54800K .......... .......... .......... .......... .......... 1.07M\n 54850K .......... .......... .......... .......... .......... 13.1M\n 54900K .......... .......... .......... .......... .......... 5.95M\n 54950K .......... .......... .......... .......... ..........  918K\n 55000K .......... .......... .......... .......... .......... 2.08M\n 55050K .......... .......... .......... .......... .......... 44.4M\n 55100K .......... .......... .......... .......... .......... 1.27M\n 55150K .......... .......... .......... .......... .......... 1.05M\n 55200K .......... .......... .......... .......... .......... 59.5M\n 55250K .......... .......... .......... .......... .......... 1.27M\n 55300K .......... .......... .......... .......... .......... 1.08M\n 55350K .......... .......... .......... .......... .......... 22.5M\n 55400K .......... .......... .......... .......... .......... 5.34M\n 55450K .......... .......... .......... .......... ..........  920K\n 55500K .......... .......... .......... .......... .......... 2.13M\n 55550K .......... .......... .......... .......... .......... 18.1M\n 55600K .......... .......... .......... .......... .......... 1.21M\n 55650K .......... .......... .......... .......... .......... 1.13M\n 55700K .......... .......... .......... .......... .......... 66.7M\n 55750K .......... .......... .......... .......... .......... 1.37M\n 55800K .......... .......... .......... .......... .......... 1.00M\n 55850K .......... .......... .......... .......... .......... 30.7M\n 55900K .......... .......... .......... .......... .......... 27.5M\n 55950K .......... .......... .......... .......... ..........  809K\n 56000K .......... .......... .......... .......... .......... 2.17M\n 56050K .......... .......... .......... .......... .......... 19.8M\n 56100K .......... .......... .......... .......... .......... 1.20M\n 56150K .......... .......... .......... .......... .......... 1.14M\n 56200K .......... .......... .......... .......... ..........  117M\n 56250K .......... .......... .......... .......... .......... 1.28M\n 56300K .......... .......... .......... .......... .......... 1.85M\n 56350K .......... .......... .......... .......... .......... 2.23M\n 56400K .......... .......... .......... .......... .......... 5.17M\n 56450K .......... .......... .......... .......... ..........  914K\n 56500K .......... .......... .......... .......... .......... 2.25M\n 56550K .......... .......... .......... .......... .......... 59.1M\n 56600K .......... .......... .......... .......... .......... 1.30M\n 56650K .......... .......... .......... .......... .......... 1.03M\n 56700K .......... .......... .......... .......... .......... 55.1M\n 56750K .......... .......... .......... .......... .......... 1.27M\n 56800K .......... .......... .......... .......... .......... 1.84M\n 56850K .......... .......... .......... .......... .......... 2.31M\n 56900K .......... .......... .......... .......... ..........  131M\n 56950K .......... .......... .......... .......... .......... 1.25M\n 57000K .......... .......... .......... .......... .......... 1.03M\n 57050K .......... .......... .......... .......... .......... 74.7M\n 57100K .......... .......... .......... .......... .......... 5.74M\n 57150K .......... .......... .......... .......... ..........  896K\n 57200K .......... .......... .......... .......... .......... 2.26M\n 57250K .......... .......... .......... .......... .......... 19.4M\n 57300K .......... .......... .......... .......... .......... 1.28M\n 57350K .......... .......... .......... .......... .......... 1.08M\n 57400K .......... .......... .......... .......... ..........  119M\n 57450K .......... .......... .......... .......... .......... 5.70M\n 57500K .......... .......... .......... .......... ..........  864K\n 57550K .......... .......... .......... .......... .......... 2.46M\n 57600K .......... .......... .......... .......... .......... 17.7M\n 57650K .......... .......... .......... .......... .......... 1.29M\n 57700K .......... .......... .......... .......... .......... 1.07M\n 57750K .......... .......... .......... .......... ..........  126M\n 57800K .......... .......... .......... .......... .......... 5.94M\n 57850K .......... .......... .......... .......... ..........  911K\n 57900K .......... .......... .......... .......... .......... 2.13M\n 57950K .......... .......... .......... .......... ..........  120M\n 58000K .......... .......... .......... .......... .......... 1.18M\n 58050K .......... .......... .......... .......... .......... 1.10M\n 58100K .......... .......... .......... .......... ..........  121M\n 58150K .......... .......... .......... .......... .......... 17.1M\n 58200K .......... .......... .......... .......... .......... 1.23M\n 58250K .......... .......... .......... .......... .......... 1.12M\n 58300K .......... .......... .......... .......... ..........  126M\n 58350K .......... .......... .......... .......... .......... 1.17M\n 58400K .......... .......... .......... .......... .......... 1.95M\n 58450K .......... .......... .......... .......... .......... 2.55M\n 58500K .......... .......... .......... .......... ..........  140M\n 58550K .......... .......... .......... .......... .......... 1.15M\n 58600K .......... .......... .......... .......... .......... 1.13M\n 58650K .......... .......... .......... .......... ..........  130M\n 58700K .......... .......... .......... .......... .......... 87.0M\n 58750K .......... .......... .......... .......... .......... 1.16M\n 58800K .......... .......... .......... .......... .......... 1.13M\n 58850K .......... .......... .......... .......... .......... 98.1M\n 58900K .......... .......... .......... .......... .......... 4.10M\n 58950K .......... .......... .......... .......... ..........  940K\n 59000K .......... .......... .......... .......... .......... 2.33M\n 59050K .......... .......... .......... .......... .......... 37.3M\n 59100K .......... .......... .......... .......... .......... 1.20M\n 59150K .......... .......... .......... .......... .......... 1.71M\n 59200K .......... .......... .......... .......... .......... 3.15M\n 59250K .......... .......... .......... .......... .......... 28.7M\n 59300K .......... .......... .......... .......... .......... 1.20M\n 59350K .......... .......... .......... .......... .......... 1.71M\n 59400K .......... .......... .......... .......... .......... 3.11M\n 59450K .......... .......... .......... .......... .......... 35.0M\n 59500K .......... .......... .......... .......... .......... 1.16M\n 59550K .......... .......... .......... .......... .......... 1.17M\n 59600K .......... .......... .......... .......... .......... 59.8M\n 59650K .......... .......... .......... .......... .......... 18.2M\n 59700K .......... .......... .......... .......... .......... 1.20M\n 59750K .......... .......... .......... .......... .......... 1.17M\n 59800K .......... .......... .......... .......... .......... 48.8M\n 59850K .......... .......... .......... .......... .......... 31.2M\n 59900K .......... .......... .......... .......... .......... 1.16M\n 59950K .......... .......... .......... .......... .......... 1.18M\n 60000K .......... .......... .......... .......... .......... 22.1M\n 60050K .......... .......... .......... .......... .......... 28.6M\n 60100K .......... .......... .......... .......... .......... 1.21M\n 60150K .......... .......... .......... .......... .......... 1.17M\n 60200K .......... .......... .......... .......... .......... 22.4M\n 60250K .......... .......... .......... .......... .......... 39.3M\n 60300K .......... .......... .......... .......... .......... 1.19M\n 60350K .......... .......... .......... .......... .......... 1.17M\n 60400K .......... .......... .......... .......... .......... 24.7M\n 60450K .......... .......... .......... .......... .......... 43.4M\n 60500K .......... .......... .......... .......... .......... 1.16M\n 60550K .......... .......... .......... .......... .......... 1.71M\n 60600K .......... .......... .......... .......... .......... 3.49M\n 60650K .......... .........                                    156M=50s\n\n2024-11-11 19:14:58 (1.19 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  290K 3s\n   100K .......... .......... .......... .......... .......... 18%  290K 3s\n   150K .......... .......... .......... .......... .......... 24%  578K 2s\n   200K .......... .......... .......... .......... .......... 30%  579K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  290K 1s\n   350K .......... .......... .......... .......... .......... 48% 1.12M 1s\n   400K .......... .......... .......... .......... .......... 54%  387K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.4M 1s\n   500K .......... .......... .......... .......... .......... 66%  597K 1s\n   550K .......... .......... .......... .......... .......... 72%  581K 1s\n   600K .......... .......... .......... .......... .......... 78% 1.11M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.14M 0s\n   700K .......... .......... .......... .......... .......... 90%  580K 0s\n   750K .......... .......... .......... .......... .......... 96% 23.1M 0s\n   800K .......... .......... .......                         100%  670K=1.6s\n\n2024-11-11 19:15:05 (518 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2, exit_code: None, stderr: --2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  194K\n    50K .......... .......... .......... .......... ..........  194K\n   100K .......... .......... .......... .......... ..........  193K\n   150K .......... .......... .......... .......... ..........  193K\n   200K .......... .......... .......... .......... ..........  290K\n   250K .......... .......... .......... .......... ..........  194K\n   300K .......... .......... .......... .......... ..........  288K\n   350K .......... .......... .......... .......... ..........  145K\n   400K .......... .......... .......... .......... ..........  290K\n   450K .......... .......... .......... .......... ..........  193K\n   500K .......... .......... .......... .......... ..........  289K\n   550K .......... .......... .......... .......... ..........  192K\n   600K .......... .......... .......... .......... ..........  288K\n   650K .......... .......... .......... .......... ..........  193K\n   700K .......... .......... .......... .......... ..........  289K\n   750K .......... .......... .......... .......... ..........  145K\n   800K .......... .......... .......... .......... ..........  287K\n   850K .......... .......... .......... .......... ..........  194K\n   900K .......... .......... .......... .......... ..........  290K\n   950K .......... .......... .......... .......... ..........  288K\n  1000K .......... .......... .......... .......... ..........  290K\n  1050K .......... .......... .......... .......... ..........  290K\n  1100K .......... .......... .......... .......... ..........  291K\n  1150K .......... .......... .......... .......... ..........  290K\n  1200K .......... .......... .......... .......... ..........  292K\n  1250K .......... .......... .......... .......... ..........  578K\n  1300K .......... .......... .......... .......... ..........  290K\n  1350K .......... .......... .......... .......... ..........  581K\n  1400K .......... .......... .......... .......... ..........  291K\n  1450K .......... .......... .......... .......... ..........  580K\n  1500K .......... .......... .......... .......... ..........  551K\n  1550K .......... .......... .......... .......... ..........  291K\n  1600K .......... .......... .......... .......... ..........  581K\n  1650K .......... .......... .......... .......... ..........  581K\n  1700K .......... .......... .......... .......... ..........  578K\n  1750K .......... .......... .......... .......... ..........  581K\n  1800K .......... .......... .......... .......... ..........  580K\n  1850K .......... .......... .......... .......... ..........  582K\n  1900K .......... .......... .......... .......... ..........  582K\n  1950K .......... .......... .......... .......... ..........  580K\n  2000K .......... .......... .......... .......... ..........  581K\n  2050K .......... .......... .......... .......... ..........  582K\n  2100K .......... .......... .......... .......... .......... 26.8M\n  2150K .......... .......... .......... .......... ..........  587K\n  2200K .......... .......... .......... .......... ..........  579K\n  2250K .......... .......... .......... .......... .......... 21.0M\n  2300K .......... .......... .......... .......... ..........  590K\n  2350K .......... .......... .......... .......... ..........  580K\n  2400K .......... .......... .......... .......... ..........  588K\n  2450K .......... .......... .......... .......... .......... 29.1M\n  2500K .......... .......... .......... .......... ..........  584K\n  2550K .......... .......... .......... .......... .......... 35.8M\n  2600K .......... .......... .......... .......... ..........  587K\n  2650K .......... .......... .......... .......... ..........  586K\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... ..........  582K\n  2800K .......... .......... .......... .......... ..........  581K\n  2850K .......... .......... .......... .......... ..........  109M\n  2900K .......... .......... .......... .......... ..........  584K\n  2950K .......... .......... .......... .......... ..........  122M\n  3000K .......... .......... .......... .......... ..........  582K\n  3050K .......... .......... .......... .......... .......... 20.7M\n  3100K .......... .......... .......... .......... ..........  595K\n  3150K .......... .......... .......... .......... .......... 14.8M\n  3200K .......... .......... .......... .......... ..........  603K\n  3250K .......... .......... .......... .......... .......... 13.7M\n  3300K .......... .......... .......... .......... ..........  605K\n  3350K .......... .......... .......... .......... .......... 13.8M\n  3400K .......... .......... .......... .......... ..........  602K\n  3450K .......... .......... .......... .......... .......... 14.7M\n  3500K .......... .......... .......... .......... ..........  593K\n  3550K .......... .......... .......... .......... .......... 23.6M\n  3600K .......... .......... .......... .......... ..........  591K\n  3650K .......... .......... .......... .......... .......... 35.8M\n  3700K .......... .......... .......... .......... ..........  600K\n  3750K .......... .......... .......... .......... .......... 19.7M\n  3800K .......... .......... .......... .......... .......... 23.2M\n  3850K .......... .......... .......... .......... ..........  596K\n  3900K .......... .......... .......... .......... .......... 68.7M\n  3950K .......... .......... .......... .......... ..........  585K\n  4000K .......... .......... .......... .......... .......... 68.6M\n  4050K .......... .......... .......... .......... ..........  591K\n  4100K .......... .......... .......... .......... .......... 28.1M\n  4150K .......... .......... .......... .......... ..........  120M\n  4200K .......... .......... .......... .......... ..........  585K\n  4250K .......... .......... .......... .......... ..........  581K\n  4300K .......... .......... .......... .......... ..........  122M\n  4350K .......... .......... .......... .......... .......... 15.7M\n  4400K .......... .......... .......... .......... ..........  594K\n  4450K .......... .......... .......... .......... .......... 18.2M\n  4500K .......... .......... .......... .......... ..........  598K\n  4550K .......... .......... .......... .......... .......... 16.4M\n  4600K .......... .......... .......... .......... ..........  602K\n  4650K .......... .......... .......... .......... .......... 14.9M\n  4700K .......... .......... .......... .......... ..........  601K\n  4750K .......... .......... .......... .......... ..........  582K\n  4800K .......... .......... .......... .......... ..........  101M\n  4850K .......... .......... .......... .......... .......... 15.5M\n  4900K .......... .......... .......... .......... ..........  602K\n  4950K .......... .......... .......... .......... .......... 15.7M\n  5000K .......... .......... .......... .......... ..........  600K\n  5050K .......... .......... .......... .......... .......... 20.9M\n  5100K .......... .......... .......... .......... ..........  595K\n  5150K .......... .......... .......... .......... .......... 17.7M\n  5200K .......... .......... .......... .......... ..........  600K\n  5250K .......... .......... .......... .......... .......... 19.9M\n  5300K .......... .......... .......... .......... ..........  597K\n  5350K .......... .......... .......... .......... .......... 52.9M\n  5400K .......... .......... .......... .......... ..........  585K\n  5450K .......... .......... .......... .......... ..........  116M\n  5500K .......... .......... .......... .......... .......... 14.5M\n  5550K .......... .......... .......... .......... ..........  604K\n  5600K .......... .......... .......... .......... .......... 16.5M\n  5650K .......... .......... .......... .......... ..........  600K\n  5700K .......... .......... .......... .......... .......... 25.2M\n  5750K .......... .......... .......... .......... ..........  594K\n  5800K .......... .......... .......... .......... .......... 50.2M\n  5850K .......... .......... .......... .......... .......... 19.8M\n  5900K .......... .......... .......... .......... ..........  603K\n  5950K .......... .......... .......... .......... .......... 14.0M\n  6000K .......... .......... .......... .......... ..........  604K\n  6050K .......... .......... .......... .......... .......... 28.8M\n  6100K .......... .......... .......... .......... ..........  593K\n  6150K .......... .......... .......... .......... .......... 71.5M\n  6200K .......... .......... .......... .......... .......... 12.2M\n  6250K .......... .......... .......... .......... ..........  608K\n  6300K .......... .......... .......... .......... .......... 23.1M\n  6350K .......... .......... .......... .......... ..........  592K\n  6400K .......... .......... .......... .......... ..........  116M\n  6450K .......... .......... .......... .......... ..........  583K\n  6500K .......... .......... .......... .......... .......... 95.2M\n  6550K .......... .......... .......... .......... .......... 27.9M\n  6600K .......... .......... .......... .......... ..........  592K\n  6650K .......... .......... .......... .......... .......... 96.4M\n  6700K .......... .......... .......... .......... ..........  582K\n  6750K .......... .......... .......... .......... .......... 66.5M\n  6800K .......... .......... .......... .......... .......... 32.0M\n  6850K .......... .......... .......... .......... ..........  590K\n  6900K .......... .......... .......... .......... ..........  107M\n  6950K .......... .......... .......... .......... ..........  584K\n  7000K .......... .......... .......... .......... ..........  114M\n  7050K .......... .......... .......... .......... ..........  138M\n  7100K .......... .......... .......... .......... ..........  581K\n  7150K .......... .......... .......... .......... ..........  137M\n  7200K .......... .......... .......... .......... ..........  584K\n  7250K .......... .......... .......... .......... ..........  136M\n  7300K .......... .......... .......... .......... ..........  133M\n  7350K .......... .......... .......... .......... ..........  583K\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  587K\n  7500K .......... .......... .......... .......... ..........  101M\n  7550K .......... .......... .......... .......... ..........  133M\n  7600K .......... .......... .......... .......... ..........  584K\n  7650K .......... .......... .......... .......... ..........  132M\n  7700K .......... .......... .......... .......... ..........  585K\n  7750K .......... .......... .......... .......... ..........  107M\n  7800K .......... .......... .......... .......... ..........  125M\n  7850K .......... .......... .......... .......... ..........  582K\n  7900K .......... .......... .......... .......... .......... 95.4M\n  7950K .......... .......... .......... .......... ..........  586K\n  8000K .......... .......... .......... .......... .......... 92.5M\n  8050K .......... .......... .......... .......... ..........  151M\n  8100K .......... .......... .......... .......... ..........  584K\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... ..........  585K\n  8300K .......... .......... .......... .......... .......... 71.0M\n  8350K .......... .......... .......... .......... ..........  585K\n  8400K .......... .......... .......... .......... ..........  107M\n  8450K .......... .......... .......... .......... ..........  145M\n  8500K .......... .......... .......... .......... ..........  583K\n  8550K .......... .......... .......... .......... ..........  100M\n  8600K .......... .......... .......... .......... ..........  588K\n  8650K .......... .......... .......... .......... ..........  122M\n  8700K .......... .......... .......... .......... .......... 67.7M\n  8750K .......... .......... .......... .......... ..........  587K\n  8800K .......... .......... .......... .......... ..........  128M\n  8850K .......... .......... .......... .......... .......... 77.0M\n  8900K .......... .......... .......... .......... ..........  585K\n  8950K .......... .......... .......... .......... ..........  129M\n  9000K .......... .......... .......... .......... ..........  585K\n  9050K .......... .......... .......... .......... ..........  148M\n  9100K .......... .......... .......... .......... .......... 47.2M\n  9150K .......... .......... .......... .......... ..........  587K\n  9200K .......... .......... .......... .......... ..........  113M\n  9250K .......... .......... .......... .......... ..........  585K\n  9300K .......... .......... .......... .......... ..........  125M\n  9350K .......... .......... .......... .......... .......... 81.8M\n  9400K .......... .......... .......... .......... ..........  586K\n  9450K .......... .......... .......... .......... ..........  121M\n  9500K .......... .......... .......... .......... ..........  584K\n  9550K .......... .......... .......... .......... ..........  111M\n  9600K .......... .......... .......... .......... .......... 36.8M\n  9650K .......... .......... .......... .......... ..........  591K\n  9700K .......... .......... .......... .......... ..........  103M\n  9750K .......... .......... .......... .......... .......... 26.6M\n  9800K .......... .......... .......... .......... ..........  589K\n  9850K .......... .......... .......... .......... .......... 95.1M\n  9900K .......... .......... .......... .......... ..........  587K\n  9950K .......... .......... .......... .......... ..........  117M\n 10000K .......... .......... .......... .......... .......... 22.4M\n 10050K .......... .......... .......... .......... ..........  597K\n 10100K .......... .......... .......... .......... ..........  146M\n 10150K .......... .......... .......... .......... ..........  582K\n 10200K .......... .......... .......... .......... ..........  122M\n 10250K .......... .......... .......... .......... ..........  122M\n 10300K .......... .......... .......... .......... ..........  571K\n 10350K .......... .......... .......... .......... ..........  127M\n 10400K .......... .......... .......... .......... ..........  584K\n 10450K .......... .......... .......... .......... ..........  124M\n 10500K .......... .......... .......... .......... ..........  134M\n 10550K .......... .......... .......... .......... ..........  585K\n 10600K .......... .......... .......... .......... ..........  104M\n 10650K .......... .......... .......... .......... ..........  142M\n 10700K .......... .......... .......... .......... ..........  584K\n 10750K .......... .......... .......... .......... ..........  131M\n 10800K .......... .......... .......... .......... ..........  584K\n 10850K .......... .......... .......... .......... ..........  126M\n 10900K .......... .......... .......... .......... ..........  127M\n 10950K .......... .......... .......... .......... ..........  584K\n 11000K .......... .......... .......... .......... ..........  121M\n 11050K .......... .......... .......... .......... ..........  586K\n 11100K .......... .......... .......... .......... ..........  111M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... ..........  584K\n 11250K .......... .......... .......... .......... ..........  134M\n 11300K .......... .......... .......... .......... ..........  586K\n 11350K .......... .......... .......... .......... ..........  120M\n 11400K .......... .......... .......... .......... ..........  116M\n 11450K .......... .......... .......... .......... ..........  585K\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n......  920K\n 50150K .......... .......... .......... .......... .......... 2.23M\n 50200K .......... .......... .......... .......... .......... 58.0M\n 50250K .......... .......... .......... .......... .......... 1.20M\n 50300K .......... .......... .......... .......... .......... 1.09M\n 50350K .......... .......... .......... .......... ..........  129M\n 50400K .......... .......... .......... .......... .......... 1.16M\n 50450K .......... .......... .......... .......... .......... 1.09M\n 50500K .......... .......... .......... .......... ..........  139M\n 50550K .......... .......... .......... .......... .......... 1.40M\n 50600K .......... .......... .......... .......... ..........  982K\n 50650K .......... .......... .......... .......... ..........  137M\n 50700K .......... .......... .......... .......... .......... 4.97M\n 50750K .......... .......... .......... .......... ..........  915K\n 50800K .......... .......... .......... .......... .......... 2.23M\n 50850K .......... .......... .......... .......... .......... 5.19M\n 50900K .......... .......... .......... .......... ..........  909K\n 50950K .......... .......... .......... .......... .......... 2.21M\n 51000K .......... .......... .......... .......... ..........  122M\n 51050K .......... .......... .......... .......... .......... 1.17M\n 51100K .......... .......... .......... .......... .......... 1.12M\n 51150K .......... .......... .......... .......... ..........  137M\n 51200K .......... .......... .......... .......... .......... 1.15M\n 51250K .......... .......... .......... .......... .......... 1.13M\n 51300K .......... .......... .......... .......... .......... 84.8M\n 51350K .......... .......... .......... .......... .......... 1.38M\n 51400K .......... .......... .......... .......... .......... 1.71M\n 51450K .......... .......... .......... .......... .......... 2.22M\n 51500K .......... .......... .......... .......... ..........  105M\n 51550K .......... .......... .......... .......... ..........  806K\n 51600K .......... .......... .......... .......... .......... 2.08M\n 51650K .......... .......... .......... .......... .......... 65.9M\n 51700K .......... .......... .......... .......... .......... 1.16M\n 51750K .......... .......... .......... .......... .......... 1.13M\n 51800K .......... .......... .......... .......... ..........  106M\n 51850K .......... .......... .......... .......... .......... 1.34M\n 51900K .......... .......... .......... .......... .......... 1022K\n 51950K .......... .......... .......... .......... .......... 63.4M\n 52000K .......... .......... .......... .......... .......... 1.34M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... .......... 44.0M\n 52150K .......... .......... .......... .......... .......... 4.47M\n 52200K .......... .......... .......... .......... ..........  936K\n 52250K .......... .......... .......... .......... .......... 2.18M\n 52300K .......... .......... .......... .......... .......... 22.4M\n 52350K .......... .......... .......... .......... .......... 1.19M\n 52400K .......... .......... .......... .......... .......... 1.14M\n 52450K .......... .......... .......... .......... .......... 20.2M\n 52500K .......... .......... .......... .......... .......... 1.20M\n 52550K .......... .......... .......... .......... .......... 1.13M\n 52600K .......... .......... .......... .......... .......... 45.7M\n 52650K .......... .......... .......... .......... .......... 1.30M\n 52700K .......... .......... .......... .......... .......... 1.06M\n 52750K .......... .......... .......... .......... .......... 17.6M\n 52800K .......... .......... .......... .......... .......... 1.30M\n 52850K .......... .......... .......... .......... .......... 1.87M\n 52900K .......... .......... .......... .......... .......... 2.13M\n 52950K .......... .......... .......... .......... .......... 11.9M\n 53000K .......... .......... .......... .......... ..........  856K\n 53050K .......... .......... .......... .......... .......... 2.05M\n 53100K .......... .......... .......... .......... ..........  140M\n 53150K .......... .......... .......... .......... ..........  810K\n 53200K .......... .......... .......... .......... .......... 2.02M\n 53250K .......... .......... .......... .......... ..........  136M\n 53300K .......... .......... .......... .......... .......... 1.21M\n 53350K .......... .......... .......... .......... .......... 1.14M\n 53400K .......... .......... .......... .......... .......... 19.3M\n 53450K .......... .......... .......... .......... .......... 4.83M\n 53500K .......... .......... .......... .......... ..........  957K\n 53550K .......... .......... .......... .......... .......... 2.04M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... ..........  937K\n 53700K .......... .......... .......... .......... .......... 2.18M\n 53750K .......... .......... .......... .......... .......... 12.0M\n 53800K .......... .......... .......... .......... .......... 1.19M\n 53850K .......... .......... .......... .......... .......... 1.18M\n 53900K .......... .......... .......... .......... .......... 20.9M\n 53950K .......... .......... .......... .......... .......... 1.16M\n 54000K .......... .......... .......... .......... .......... 1.17M\n 54050K .......... .......... .......... .......... .......... 21.3M\n 54100K .......... .......... .......... .......... .......... 1.30M\n 54150K .......... .......... .......... .......... .......... 1.12M\n 54200K .......... .......... .......... .......... .......... 14.8M\n 54250K .......... .......... .......... .......... .......... 5.13M\n 54300K .......... .......... .......... .......... ..........  924K\n 54350K .......... .......... .......... .......... .......... 2.03M\n 54400K .......... .......... .......... .......... .......... 23.5M\n 54450K .......... .......... .......... .......... ..........  827K\n 54500K .......... .......... .......... .......... .......... 2.04M\n 54550K .......... .......... .......... .......... ..........  133M\n 54600K .......... .......... .......... .......... .......... 1.32M\n 54650K .......... .......... .......... .......... .......... 1.08M\n 54700K .......... .......... .......... .......... .......... 13.4M\n 54750K .......... .......... .......... .......... .......... 1.32M\n 54800K .......... .......... .......... .......... .......... 1.07M\n 54850K .......... .......... .......... .......... .......... 13.1M\n 54900K .......... .......... .......... .......... .......... 5.95M\n 54950K .......... .......... .......... .......... ..........  918K\n 55000K .......... .......... .......... .......... .......... 2.08M\n 55050K .......... .......... .......... .......... .......... 44.4M\n 55100K .......... .......... .......... .......... .......... 1.27M\n 55150K .......... .......... .......... .......... .......... 1.05M\n 55200K .......... .......... .......... .......... .......... 59.5M\n 55250K .......... .......... .......... .......... .......... 1.27M\n 55300K .......... .......... .......... .......... .......... 1.08M\n 55350K .......... .......... .......... .......... .......... 22.5M\n 55400K .......... .......... .......... .......... .......... 5.34M\n 55450K .......... .......... .......... .......... ..........  920K\n 55500K .......... .......... .......... .......... .......... 2.13M\n 55550K .......... .......... .......... .......... .......... 18.1M\n 55600K .......... .......... .......... .......... .......... 1.21M\n 55650K .......... .......... .......... .......... .......... 1.13M\n 55700K .......... .......... .......... .......... .......... 66.7M\n 55750K .......... .......... .......... .......... .......... 1.37M\n 55800K .......... .......... .......... .......... .......... 1.00M\n 55850K .......... .......... .......... .......... .......... 30.7M\n 55900K .......... .......... .......... .......... .......... 27.5M\n 55950K .......... .......... .......... .......... ..........  809K\n 56000K .......... .......... .......... .......... .......... 2.17M\n 56050K .......... .......... .......... .......... .......... 19.8M\n 56100K .......... .......... .......... .......... .......... 1.20M\n 56150K .......... .......... .......... .......... .......... 1.14M\n 56200K .......... .......... .......... .......... ..........  117M\n 56250K .......... .......... .......... .......... .......... 1.28M\n 56300K .......... .......... .......... .......... .......... 1.85M\n 56350K .......... .......... .......... .......... .......... 2.23M\n 56400K .......... .......... .......... .......... .......... 5.17M\n 56450K .......... .......... .......... .......... ..........  914K\n 56500K .......... .......... .......... .......... .......... 2.25M\n 56550K .......... .......... .......... .......... .......... 59.1M\n 56600K .......... .......... .......... .......... .......... 1.30M\n 56650K .......... .......... .......... .......... .......... 1.03M\n 56700K .......... .......... .......... .......... .......... 55.1M\n 56750K .......... .......... .......... .......... .......... 1.27M\n 56800K .......... .......... .......... .......... .......... 1.84M\n 56850K .......... .......... .......... .......... .......... 2.31M\n 56900K .......... .......... .......... .......... ..........  131M\n 56950K .......... .......... .......... .......... .......... 1.25M\n 57000K .......... .......... .......... .......... .......... 1.03M\n 57050K .......... .......... .......... .......... .......... 74.7M\n 57100K .......... .......... .......... .......... .......... 5.74M\n 57150K .......... .......... .......... .......... ..........  896K\n 57200K .......... .......... .......... .......... .......... 2.26M\n 57250K .......... .......... .......... .......... .......... 19.4M\n 57300K .......... .......... .......... .......... .......... 1.28M\n 57350K .......... .......... .......... .......... .......... 1.08M\n 57400K .......... .......... .......... .......... ..........  119M\n 57450K .......... .......... .......... .......... .......... 5.70M\n 57500K .......... .......... .......... .......... ..........  864K\n 57550K .......... .......... .......... .......... .......... 2.46M\n 57600K .......... .......... .......... .......... .......... 17.7M\n 57650K .......... .......... .......... .......... .......... 1.29M\n 57700K .......... .......... .......... .......... .......... 1.07M\n 57750K .......... .......... .......... .......... ..........  126M\n 57800K .......... .......... .......... .......... .......... 5.94M\n 57850K .......... .......... .......... .......... ..........  911K\n 57900K .......... .......... .......... .......... .......... 2.13M\n 57950K .......... .......... .......... .......... ..........  120M\n 58000K .......... .......... .......... .......... .......... 1.18M\n 58050K .......... .......... .......... .......... .......... 1.10M\n 58100K .......... .......... .......... .......... ..........  121M\n 58150K .......... .......... .......... .......... .......... 17.1M\n 58200K .......... .......... .......... .......... .......... 1.23M\n 58250K .......... .......... .......... .......... .......... 1.12M\n 58300K .......... .......... .......... .......... ..........  126M\n 58350K .......... .......... .......... .......... .......... 1.17M\n 58400K .......... .......... .......... .......... .......... 1.95M\n 58450K .......... .......... .......... .......... .......... 2.55M\n 58500K .......... .......... .......... .......... ..........  140M\n 58550K .......... .......... .......... .......... .......... 1.15M\n 58600K .......... .......... .......... .......... .......... 1.13M\n 58650K .......... .......... .......... .......... ..........  130M\n 58700K .......... .......... .......... .......... .......... 87.0M\n 58750K .......... .......... .......... .......... .......... 1.16M\n 58800K .......... .......... .......... .......... .......... 1.13M\n 58850K .......... .......... .......... .......... .......... 98.1M\n 58900K .......... .......... .......... .......... .......... 4.10M\n 58950K .......... .......... .......... .......... ..........  940K\n 59000K .......... .......... .......... .......... .......... 2.33M\n 59050K .......... .......... .......... .......... .......... 37.3M\n 59100K .......... .......... .......... .......... .......... 1.20M\n 59150K .......... .......... .......... .......... .......... 1.71M\n 59200K .......... .......... .......... .......... .......... 3.15M\n 59250K .......... .......... .......... .......... .......... 28.7M\n 59300K .......... .......... .......... .......... .......... 1.20M\n 59350K .......... .......... .......... .......... .......... 1.71M\n 59400K .......... .......... .......... .......... .......... 3.11M\n 59450K .......... .......... .......... .......... .......... 35.0M\n 59500K .......... .......... .......... .......... .......... 1.16M\n 59550K .......... .......... .......... .......... .......... 1.17M\n 59600K .......... .......... .......... .......... .......... 59.8M\n 59650K .......... .......... .......... .......... .......... 18.2M\n 59700K .......... .......... .......... .......... .......... 1.20M\n 59750K .......... .......... .......... .......... .......... 1.17M\n 59800K .......... .......... .......... .......... .......... 48.8M\n 59850K .......... .......... .......... .......... .......... 31.2M\n 59900K .......... .......... .......... .......... .......... 1.16M\n 59950K .......... .......... .......... .......... .......... 1.18M\n 60000K .......... .......... .......... .......... .......... 22.1M\n 60050K .......... .......... .......... .......... .......... 28.6M\n 60100K .......... .......... .......... .......... .......... 1.21M\n 60150K .......... .......... .......... .......... .......... 1.17M\n 60200K .......... .......... .......... .......... .......... 22.4M\n 60250K .......... .......... .......... .......... .......... 39.3M\n 60300K .......... .......... .......... .......... .......... 1.19M\n 60350K .......... .......... .......... .......... .......... 1.17M\n 60400K .......... .......... .......... .......... .......... 24.7M\n 60450K .......... .......... .......... .......... .......... 43.4M\n 60500K .......... .......... .......... .......... .......... 1.16M\n 60550K .......... .......... .......... .......... .......... 1.71M\n 60600K .......... .......... .......... .......... .......... 3.49M\n 60650K .......... .........                                    156M=50s\n\n2024-11-11 19:14:58 (1.19 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  290K 3s\n   100K .......... .......... .......... .......... .......... 18%  290K 3s\n   150K .......... .......... .......... .......... .......... 24%  578K 2s\n   200K .......... .......... .......... .......... .......... 30%  579K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  290K 1s\n   350K .......... .......... .......... .......... .......... 48% 1.12M 1s\n   400K .......... .......... .......... .......... .......... 54%  387K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.4M 1s\n   500K .......... .......... .......... .......... .......... 66%  597K 1s\n   550K .......... .......... .......... .......... .......... 72%  581K 1s\n   600K .......... .......... .......... .......... .......... 78% 1.11M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.14M 0s\n   700K .......... .......... .......... .......... .......... 90%  580K 0s\n   750K .......... .......... .......... .......... .......... 96% 23.1M 0s\n   800K .......... .......... .......                         100%  670K=1.6s\n\n2024-11-11 19:15:05 (518 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2, exit_code: None, stderr: --2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  194K\n    50K .......... .......... .......... .......... ..........  194K\n   100K .......... .......... .......... .......... ..........  193K\n   150K .......... .......... .......... .......... ..........  193K\n   200K .......... .......... .......... .......... ..........  290K\n   250K .......... .......... .......... .......... ..........  194K\n   300K .......... .......... .......... .......... ..........  288K\n   350K .......... .......... .......... .......... ..........  145K\n   400K .......... .......... .......... .......... ..........  290K\n   450K .......... .......... .......... .......... ..........  193K\n   500K .......... .......... .......... .......... ..........  289K\n   550K .......... .......... .......... .......... ..........  192K\n   600K .......... .......... .......... .......... ..........  288K\n   650K .......... .......... .......... .......... ..........  193K\n   700K .......... .......... .......... .......... ..........  289K\n   750K .......... .......... .......... .......... ..........  145K\n   800K .......... .......... .......... .......... ..........  287K\n   850K .......... .......... .......... .......... ..........  194K\n   900K .......... .......... .......... .......... ..........  290K\n   950K .......... .......... .......... .......... ..........  288K\n  1000K .......... .......... .......... .......... ..........  290K\n  1050K .......... .......... .......... .......... ..........  290K\n  1100K .......... .......... .......... .......... ..........  291K\n  1150K .......... .......... .......... .......... ..........  290K\n  1200K .......... .......... .......... .......... ..........  292K\n  1250K .......... .......... .......... .......... ..........  578K\n  1300K .......... .......... .......... .......... ..........  290K\n  1350K .......... .......... .......... .......... ..........  581K\n  1400K .......... .......... .......... .......... ..........  291K\n  1450K .......... .......... .......... .......... ..........  580K\n  1500K .......... .......... .......... .......... ..........  551K\n  1550K .......... .......... .......... .......... ..........  291K\n  1600K .......... .......... .......... .......... ..........  581K\n  1650K .......... .......... .......... .......... ..........  581K\n  1700K .......... .......... .......... .......... ..........  578K\n  1750K .......... .......... .......... .......... ..........  581K\n  1800K .......... .......... .......... .......... ..........  580K\n  1850K .......... .......... .......... .......... ..........  582K\n  1900K .......... .......... .......... .......... ..........  582K\n  1950K .......... .......... .......... .......... ..........  580K\n  2000K .......... .......... .......... .......... ..........  581K\n  2050K .......... .......... .......... .......... ..........  582K\n  2100K .......... .......... .......... .......... .......... 26.8M\n  2150K .......... .......... .......... .......... ..........  587K\n  2200K .......... .......... .......... .......... ..........  579K\n  2250K .......... .......... .......... .......... .......... 21.0M\n  2300K .......... .......... .......... .......... ..........  590K\n  2350K .......... .......... .......... .......... ..........  580K\n  2400K .......... .......... .......... .......... ..........  588K\n  2450K .......... .......... .......... .......... .......... 29.1M\n  2500K .......... .......... .......... .......... ..........  584K\n  2550K .......... .......... .......... .......... .......... 35.8M\n  2600K .......... .......... .......... .......... ..........  587K\n  2650K .......... .......... .......... .......... ..........  586K\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... ..........  582K\n  2800K .......... .......... .......... .......... ..........  581K\n  2850K .......... .......... .......... .......... ..........  109M\n  2900K .......... .......... .......... .......... ..........  584K\n  2950K .......... .......... .......... .......... ..........  122M\n  3000K .......... .......... .......... .......... ..........  582K\n  3050K .......... .......... .......... .......... .......... 20.7M\n  3100K .......... .......... .......... .......... ..........  595K\n  3150K .......... .......... .......... .......... .......... 14.8M\n  3200K .......... .......... .......... .......... ..........  603K\n  3250K .......... .......... .......... .......... .......... 13.7M\n  3300K .......... .......... .......... .......... ..........  605K\n  3350K .......... .......... .......... .......... .......... 13.8M\n  3400K .......... .......... .......... .......... ..........  602K\n  3450K .......... .......... .......... .......... .......... 14.7M\n  3500K .......... .......... .......... .......... ..........  593K\n  3550K .......... .......... .......... .......... .......... 23.6M\n  3600K .......... .......... .......... .......... ..........  591K\n  3650K .......... .......... .......... .......... .......... 35.8M\n  3700K .......... .......... .......... .......... ..........  600K\n  3750K .......... .......... .......... .......... .......... 19.7M\n  3800K .......... .......... .......... .......... .......... 23.2M\n  3850K .......... .......... .......... .......... ..........  596K\n  3900K .......... .......... .......... .......... .......... 68.7M\n  3950K .......... .......... .......... .......... ..........  585K\n  4000K .......... .......... .......... .......... .......... 68.6M\n  4050K .......... .......... .......... .......... ..........  591K\n  4100K .......... .......... .......... .......... .......... 28.1M\n  4150K .......... .......... .......... .......... ..........  120M\n  4200K .......... .......... .......... .......... ..........  585K\n  4250K .......... .......... .......... .......... ..........  581K\n  4300K .......... .......... .......... .......... ..........  122M\n  4350K .......... .......... .......... .......... .......... 15.7M\n  4400K .......... .......... .......... .......... ..........  594K\n  4450K .......... .......... .......... .......... .......... 18.2M\n  4500K .......... .......... .......... .......... ..........  598K\n  4550K .......... .......... .......... .......... .......... 16.4M\n  4600K .......... .......... .......... .......... ..........  602K\n  4650K .......... .......... .......... .......... .......... 14.9M\n  4700K .......... .......... .......... .......... ..........  601K\n  4750K .......... .......... .......... .......... ..........  582K\n  4800K .......... .......... .......... .......... ..........  101M\n  4850K .......... .......... .......... .......... .......... 15.5M\n  4900K .......... .......... .......... .......... ..........  602K\n  4950K .......... .......... .......... .......... .......... 15.7M\n  5000K .......... .......... .......... .......... ..........  600K\n  5050K .......... .......... .......... .......... .......... 20.9M\n  5100K .......... .......... .......... .......... ..........  595K\n  5150K .......... .......... .......... .......... .......... 17.7M\n  5200K .......... .......... .......... .......... ..........  600K\n  5250K .......... .......... .......... .......... .......... 19.9M\n  5300K .......... .......... .......... .......... ..........  597K\n  5350K .......... .......... .......... .......... .......... 52.9M\n  5400K .......... .......... .......... .......... ..........  585K\n  5450K .......... .......... .......... .......... ..........  116M\n  5500K .......... .......... .......... .......... .......... 14.5M\n  5550K .......... .......... .......... .......... ..........  604K\n  5600K .......... .......... .......... .......... .......... 16.5M\n  5650K .......... .......... .......... .......... ..........  600K\n  5700K .......... .......... .......... .......... .......... 25.2M\n  5750K .......... .......... .......... .......... ..........  594K\n  5800K .......... .......... .......... .......... .......... 50.2M\n  5850K .......... .......... .......... .......... .......... 19.8M\n  5900K .......... .......... .......... .......... ..........  603K\n  5950K .......... .......... .......... .......... .......... 14.0M\n  6000K .......... .......... .......... .......... ..........  604K\n  6050K .......... .......... .......... .......... .......... 28.8M\n  6100K .......... .......... .......... .......... ..........  593K\n  6150K .......... .......... .......... .......... .......... 71.5M\n  6200K .......... .......... .......... .......... .......... 12.2M\n  6250K .......... .......... .......... .......... ..........  608K\n  6300K .......... .......... .......... .......... .......... 23.1M\n  6350K .......... .......... .......... .......... ..........  592K\n  6400K .......... .......... .......... .......... ..........  116M\n  6450K .......... .......... .......... .......... ..........  583K\n  6500K .......... .......... .......... .......... .......... 95.2M\n  6550K .......... .......... .......... .......... .......... 27.9M\n  6600K .......... .......... .......... .......... ..........  592K\n  6650K .......... .......... .......... .......... .......... 96.4M\n  6700K .......... .......... .......... .......... ..........  582K\n  6750K .......... .......... .......... .......... .......... 66.5M\n  6800K .......... .......... .......... .......... .......... 32.0M\n  6850K .......... .......... .......... .......... ..........  590K\n  6900K .......... .......... .......... .......... ..........  107M\n  6950K .......... .......... .......... .......... ..........  584K\n  7000K .......... .......... .......... .......... ..........  114M\n  7050K .......... .......... .......... .......... ..........  138M\n  7100K .......... .......... .......... .......... ..........  581K\n  7150K .......... .......... .......... .......... ..........  137M\n  7200K .......... .......... .......... .......... ..........  584K\n  7250K .......... .......... .......... .......... ..........  136M\n  7300K .......... .......... .......... .......... ..........  133M\n  7350K .......... .......... .......... .......... ..........  583K\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  587K\n  7500K .......... .......... .......... .......... ..........  101M\n  7550K .......... .......... .......... .......... ..........  133M\n  7600K .......... .......... .......... .......... ..........  584K\n  7650K .......... .......... .......... .......... ..........  132M\n  7700K .......... .......... .......... .......... ..........  585K\n  7750K .......... .......... .......... .......... ..........  107M\n  7800K .......... .......... .......... .......... ..........  125M\n  7850K .......... .......... .......... .......... ..........  582K\n  7900K .......... .......... .......... .......... .......... 95.4M\n  7950K .......... .......... .......... .......... ..........  586K\n  8000K .......... .......... .......... .......... .......... 92.5M\n  8050K .......... .......... .......... .......... ..........  151M\n  8100K .......... .......... .......... .......... ..........  584K\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... ..........  585K\n  8300K .......... .......... .......... .......... .......... 71.0M\n  8350K .......... .......... .......... .......... ..........  585K\n  8400K .......... .......... .......... .......... ..........  107M\n  8450K .......... .......... .......... .......... ..........  145M\n  8500K .......... .......... .......... .......... ..........  583K\n  8550K .......... .......... .......... .......... ..........  100M\n  8600K .......... .......... .......... .......... ..........  588K\n  8650K .......... .......... .......... .......... ..........  122M\n  8700K .......... .......... .......... .......... .......... 67.7M\n  8750K .......... .......... .......... .......... ..........  587K\n  8800K .......... .......... .......... .......... ..........  128M\n  8850K .......... .......... .......... .......... .......... 77.0M\n  8900K .......... .......... .......... .......... ..........  585K\n  8950K .......... .......... .......... .......... ..........  129M\n  9000K .......... .......... .......... .......... ..........  585K\n  9050K .......... .......... .......... .......... ..........  148M\n  9100K .......... .......... .......... .......... .......... 47.2M\n  9150K .......... .......... .......... .......... ..........  587K\n  9200K .......... .......... .......... .......... ..........  113M\n  9250K .......... .......... .......... .......... ..........  585K\n  9300K .......... .......... .......... .......... ..........  125M\n  9350K .......... .......... .......... .......... .......... 81.8M\n  9400K .......... .......... .......... .......... ..........  586K\n  9450K .......... .......... .......... .......... ..........  121M\n  9500K .......... .......... .......... .......... ..........  584K\n  9550K .......... .......... .......... .......... ..........  111M\n  9600K .......... .......... .......... .......... .......... 36.8M\n  9650K .......... .......... .......... .......... ..........  591K\n  9700K .......... .......... .......... .......... ..........  103M\n  9750K .......... .......... .......... .......... .......... 26.6M\n  9800K .......... .......... .......... .......... ..........  589K\n  9850K .......... .......... .......... .......... .......... 95.1M\n  9900K .......... .......... .......... .......... ..........  587K\n  9950K .......... .......... .......... .......... ..........  117M\n 10000K .......... .......... .......... .......... .......... 22.4M\n 10050K .......... .......... .......... .......... ..........  597K\n 10100K .......... .......... .......... .......... ..........  146M\n 10150K .......... .......... .......... .......... ..........  582K\n 10200K .......... .......... .......... .......... ..........  122M\n 10250K .......... .......... .......... .......... ..........  122M\n 10300K .......... .......... .......... .......... ..........  571K\n 10350K .......... .......... .......... .......... ..........  127M\n 10400K .......... .......... .......... .......... ..........  584K\n 10450K .......... .......... .......... .......... ..........  124M\n 10500K .......... .......... .......... .......... ..........  134M\n 10550K .......... .......... .......... .......... ..........  585K\n 10600K .......... .......... .......... .......... ..........  104M\n 10650K .......... .......... .......... .......... ..........  142M\n 10700K .......... .......... .......... .......... ..........  584K\n 10750K .......... .......... .......... .......... ..........  131M\n 10800K .......... .......... .......... .......... ..........  584K\n 10850K .......... .......... .......... .......... ..........  126M\n 10900K .......... .......... .......... .......... ..........  127M\n 10950K .......... .......... .......... .......... ..........  584K\n 11000K .......... .......... .......... .......... ..........  121M\n 11050K .......... .......... .......... .......... ..........  586K\n 11100K .......... .......... .......... .......... ..........  111M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... ..........  584K\n 11250K .......... .......... .......... .......... ..........  134M\n 11300K .......... .......... .......... .......... ..........  586K\n 11350K .......... .......... .......... .......... ..........  120M\n 11400K .......... .......... .......... .......... ..........  116M\n 11450K .......... .......... .......... .......... ..........  585K\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n......  920K\n 50150K .......... .......... .......... .......... .......... 2.23M\n 50200K .......... .......... .......... .......... .......... 58.0M\n 50250K .......... .......... .......... .......... .......... 1.20M\n 50300K .......... .......... .......... .......... .......... 1.09M\n 50350K .......... .......... .......... .......... ..........  129M\n 50400K .......... .......... .......... .......... .......... 1.16M\n 50450K .......... .......... .......... .......... .......... 1.09M\n 50500K .......... .......... .......... .......... ..........  139M\n 50550K .......... .......... .......... .......... .......... 1.40M\n 50600K .......... .......... .......... .......... ..........  982K\n 50650K .......... .......... .......... .......... ..........  137M\n 50700K .......... .......... .......... .......... .......... 4.97M\n 50750K .......... .......... .......... .......... ..........  915K\n 50800K .......... .......... .......... .......... .......... 2.23M\n 50850K .......... .......... .......... .......... .......... 5.19M\n 50900K .......... .......... .......... .......... ..........  909K\n 50950K .......... .......... .......... .......... .......... 2.21M\n 51000K .......... .......... .......... .......... ..........  122M\n 51050K .......... .......... .......... .......... .......... 1.17M\n 51100K .......... .......... .......... .......... .......... 1.12M\n 51150K .......... .......... .......... .......... ..........  137M\n 51200K .......... .......... .......... .......... .......... 1.15M\n 51250K .......... .......... .......... .......... .......... 1.13M\n 51300K .......... .......... .......... .......... .......... 84.8M\n 51350K .......... .......... .......... .......... .......... 1.38M\n 51400K .......... .......... .......... .......... .......... 1.71M\n 51450K .......... .......... .......... .......... .......... 2.22M\n 51500K .......... .......... .......... .......... ..........  105M\n 51550K .......... .......... .......... .......... ..........  806K\n 51600K .......... .......... .......... .......... .......... 2.08M\n 51650K .......... .......... .......... .......... .......... 65.9M\n 51700K .......... .......... .......... .......... .......... 1.16M\n 51750K .......... .......... .......... .......... .......... 1.13M\n 51800K .......... .......... .......... .......... ..........  106M\n 51850K .......... .......... .......... .......... .......... 1.34M\n 51900K .......... .......... .......... .......... .......... 1022K\n 51950K .......... .......... .......... .......... .......... 63.4M\n 52000K .......... .......... .......... .......... .......... 1.34M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... .......... 44.0M\n 52150K .......... .......... .......... .......... .......... 4.47M\n 52200K .......... .......... .......... .......... ..........  936K\n 52250K .......... .......... .......... .......... .......... 2.18M\n 52300K .......... .......... .......... .......... .......... 22.4M\n 52350K .......... .......... .......... .......... .......... 1.19M\n 52400K .......... .......... .......... .......... .......... 1.14M\n 52450K .......... .......... .......... .......... .......... 20.2M\n 52500K .......... .......... .......... .......... .......... 1.20M\n 52550K .......... .......... .......... .......... .......... 1.13M\n 52600K .......... .......... .......... .......... .......... 45.7M\n 52650K .......... .......... .......... .......... .......... 1.30M\n 52700K .......... .......... .......... .......... .......... 1.06M\n 52750K .......... .......... .......... .......... .......... 17.6M\n 52800K .......... .......... .......... .......... .......... 1.30M\n 52850K .......... .......... .......... .......... .......... 1.87M\n 52900K .......... .......... .......... .......... .......... 2.13M\n 52950K .......... .......... .......... .......... .......... 11.9M\n 53000K .......... .......... .......... .......... ..........  856K\n 53050K .......... .......... .......... .......... .......... 2.05M\n 53100K .......... .......... .......... .......... ..........  140M\n 53150K .......... .......... .......... .......... ..........  810K\n 53200K .......... .......... .......... .......... .......... 2.02M\n 53250K .......... .......... .......... .......... ..........  136M\n 53300K .......... .......... .......... .......... .......... 1.21M\n 53350K .......... .......... .......... .......... .......... 1.14M\n 53400K .......... .......... .......... .......... .......... 19.3M\n 53450K .......... .......... .......... .......... .......... 4.83M\n 53500K .......... .......... .......... .......... ..........  957K\n 53550K .......... .......... .......... .......... .......... 2.04M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... ..........  937K\n 53700K .......... .......... .......... .......... .......... 2.18M\n 53750K .......... .......... .......... .......... .......... 12.0M\n 53800K .......... .......... .......... .......... .......... 1.19M\n 53850K .......... .......... .......... .......... .......... 1.18M\n 53900K .......... .......... .......... .......... .......... 20.9M\n 53950K .......... .......... .......... .......... .......... 1.16M\n 54000K .......... .......... .......... .......... .......... 1.17M\n 54050K .......... .......... .......... .......... .......... 21.3M\n 54100K .......... .......... .......... .......... .......... 1.30M\n 54150K .......... .......... .......... .......... .......... 1.12M\n 54200K .......... .......... .......... .......... .......... 14.8M\n 54250K .......... .......... .......... .......... .......... 5.13M\n 54300K .......... .......... .......... .......... ..........  924K\n 54350K .......... .......... .......... .......... .......... 2.03M\n 54400K .......... .......... .......... .......... .......... 23.5M\n 54450K .......... .......... .......... .......... ..........  827K\n 54500K .......... .......... .......... .......... .......... 2.04M\n 54550K .......... .......... .......... .......... ..........  133M\n 54600K .......... .......... .......... .......... .......... 1.32M\n 54650K .......... .......... .......... .......... .......... 1.08M\n 54700K .......... .......... .......... .......... .......... 13.4M\n 54750K .......... .......... .......... .......... .......... 1.32M\n 54800K .......... .......... .......... .......... .......... 1.07M\n 54850K .......... .......... .......... .......... .......... 13.1M\n 54900K .......... .......... .......... .......... .......... 5.95M\n 54950K .......... .......... .......... .......... ..........  918K\n 55000K .......... .......... .......... .......... .......... 2.08M\n 55050K .......... .......... .......... .......... .......... 44.4M\n 55100K .......... .......... .......... .......... .......... 1.27M\n 55150K .......... .......... .......... .......... .......... 1.05M\n 55200K .......... .......... .......... .......... .......... 59.5M\n 55250K .......... .......... .......... .......... .......... 1.27M\n 55300K .......... .......... .......... .......... .......... 1.08M\n 55350K .......... .......... .......... .......... .......... 22.5M\n 55400K .......... .......... .......... .......... .......... 5.34M\n 55450K .......... .......... .......... .......... ..........  920K\n 55500K .......... .......... .......... .......... .......... 2.13M\n 55550K .......... .......... .......... .......... .......... 18.1M\n 55600K .......... .......... .......... .......... .......... 1.21M\n 55650K .......... .......... .......... .......... .......... 1.13M\n 55700K .......... .......... .......... .......... .......... 66.7M\n 55750K .......... .......... .......... .......... .......... 1.37M\n 55800K .......... .......... .......... .......... .......... 1.00M\n 55850K .......... .......... .......... .......... .......... 30.7M\n 55900K .......... .......... .......... .......... .......... 27.5M\n 55950K .......... .......... .......... .......... ..........  809K\n 56000K .......... .......... .......... .......... .......... 2.17M\n 56050K .......... .......... .......... .......... .......... 19.8M\n 56100K .......... .......... .......... .......... .......... 1.20M\n 56150K .......... .......... .......... .......... .......... 1.14M\n 56200K .......... .......... .......... .......... ..........  117M\n 56250K .......... .......... .......... .......... .......... 1.28M\n 56300K .......... .......... .......... .......... .......... 1.85M\n 56350K .......... .......... .......... .......... .......... 2.23M\n 56400K .......... .......... .......... .......... .......... 5.17M\n 56450K .......... .......... .......... .......... ..........  914K\n 56500K .......... .......... .......... .......... .......... 2.25M\n 56550K .......... .......... .......... .......... .......... 59.1M\n 56600K .......... .......... .......... .......... .......... 1.30M\n 56650K .......... .......... .......... .......... .......... 1.03M\n 56700K .......... .......... .......... .......... .......... 55.1M\n 56750K .......... .......... .......... .......... .......... 1.27M\n 56800K .......... .......... .......... .......... .......... 1.84M\n 56850K .......... .......... .......... .......... .......... 2.31M\n 56900K .......... .......... .......... .......... ..........  131M\n 56950K .......... .......... .......... .......... .......... 1.25M\n 57000K .......... .......... .......... .......... .......... 1.03M\n 57050K .......... .......... .......... .......... .......... 74.7M\n 57100K .......... .......... .......... .......... .......... 5.74M\n 57150K .......... .......... .......... .......... ..........  896K\n 57200K .......... .......... .......... .......... .......... 2.26M\n 57250K .......... .......... .......... .......... .......... 19.4M\n 57300K .......... .......... .......... .......... .......... 1.28M\n 57350K .......... .......... .......... .......... .......... 1.08M\n 57400K .......... .......... .......... .......... ..........  119M\n 57450K .......... .......... .......... .......... .......... 5.70M\n 57500K .......... .......... .......... .......... ..........  864K\n 57550K .......... .......... .......... .......... .......... 2.46M\n 57600K .......... .......... .......... .......... .......... 17.7M\n 57650K .......... .......... .......... .......... .......... 1.29M\n 57700K .......... .......... .......... .......... .......... 1.07M\n 57750K .......... .......... .......... .......... ..........  126M\n 57800K .......... .......... .......... .......... .......... 5.94M\n 57850K .......... .......... .......... .......... ..........  911K\n 57900K .......... .......... .......... .......... .......... 2.13M\n 57950K .......... .......... .......... .......... ..........  120M\n 58000K .......... .......... .......... .......... .......... 1.18M\n 58050K .......... .......... .......... .......... .......... 1.10M\n 58100K .......... .......... .......... .......... ..........  121M\n 58150K .......... .......... .......... .......... .......... 17.1M\n 58200K .......... .......... .......... .......... .......... 1.23M\n 58250K .......... .......... .......... .......... .......... 1.12M\n 58300K .......... .......... .......... .......... ..........  126M\n 58350K .......... .......... .......... .......... .......... 1.17M\n 58400K .......... .......... .......... .......... .......... 1.95M\n 58450K .......... .......... .......... .......... .......... 2.55M\n 58500K .......... .......... .......... .......... ..........  140M\n 58550K .......... .......... .......... .......... .......... 1.15M\n 58600K .......... .......... .......... .......... .......... 1.13M\n 58650K .......... .......... .......... .......... ..........  130M\n 58700K .......... .......... .......... .......... .......... 87.0M\n 58750K .......... .......... .......... .......... .......... 1.16M\n 58800K .......... .......... .......... .......... .......... 1.13M\n 58850K .......... .......... .......... .......... .......... 98.1M\n 58900K .......... .......... .......... .......... .......... 4.10M\n 58950K .......... .......... .......... .......... ..........  940K\n 59000K .......... .......... .......... .......... .......... 2.33M\n 59050K .......... .......... .......... .......... .......... 37.3M\n 59100K .......... .......... .......... .......... .......... 1.20M\n 59150K .......... .......... .......... .......... .......... 1.71M\n 59200K .......... .......... .......... .......... .......... 3.15M\n 59250K .......... .......... .......... .......... .......... 28.7M\n 59300K .......... .......... .......... .......... .......... 1.20M\n 59350K .......... .......... .......... .......... .......... 1.71M\n 59400K .......... .......... .......... .......... .......... 3.11M\n 59450K .......... .......... .......... .......... .......... 35.0M\n 59500K .......... .......... .......... .......... .......... 1.16M\n 59550K .......... .......... .......... .......... .......... 1.17M\n 59600K .......... .......... .......... .......... .......... 59.8M\n 59650K .......... .......... .......... .......... .......... 18.2M\n 59700K .......... .......... .......... .......... .......... 1.20M\n 59750K .......... .......... .......... .......... .......... 1.17M\n 59800K .......... .......... .......... .......... .......... 48.8M\n 59850K .......... .......... .......... .......... .......... 31.2M\n 59900K .......... .......... .......... .......... .......... 1.16M\n 59950K .......... .......... .......... .......... .......... 1.18M\n 60000K .......... .......... .......... .......... .......... 22.1M\n 60050K .......... .......... .......... .......... .......... 28.6M\n 60100K .......... .......... .......... .......... .......... 1.21M\n 60150K .......... .......... .......... .......... .......... 1.17M\n 60200K .......... .......... .......... .......... .......... 22.4M\n 60250K .......... .......... .......... .......... .......... 39.3M\n 60300K .......... .......... .......... .......... .......... 1.19M\n 60350K .......... .......... .......... .......... .......... 1.17M\n 60400K .......... .......... .......... .......... .......... 24.7M\n 60450K .......... .......... .......... .......... .......... 43.4M\n 60500K .......... .......... .......... .......... .......... 1.16M\n 60550K .......... .......... .......... .......... .......... 1.71M\n 60600K .......... .......... .......... .......... .......... 3.49M\n 60650K .......... .........                                    156M=50s\n\n2024-11-11 19:14:58 (1.19 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  290K 3s\n   100K .......... .......... .......... .......... .......... 18%  290K 3s\n   150K .......... .......... .......... .......... .......... 24%  578K 2s\n   200K .......... .......... .......... .......... .......... 30%  579K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  290K 1s\n   350K .......... .......... .......... .......... .......... 48% 1.12M 1s\n   400K .......... .......... .......... .......... .......... 54%  387K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.4M 1s\n   500K .......... .......... .......... .......... .......... 66%  597K 1s\n   550K .......... .......... .......... .......... .......... 72%  581K 1s\n   600K .......... .......... .......... .......... .......... 78% 1.11M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.14M 0s\n   700K .......... .......... .......... .......... .......... 90%  580K 0s\n   750K .......... .......... .......... .......... .......... 96% 23.1M 0s\n   800K .......... .......... .......                         100%  670K=1.6s\n\n2024-11-11 19:15:05 (518 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2, exit_code: None, stderr: --2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  194K\n    50K .......... .......... .......... .......... ..........  194K\n   100K .......... .......... .......... .......... ..........  193K\n   150K .......... .......... .......... .......... ..........  193K\n   200K .......... .......... .......... .......... ..........  290K\n   250K .......... .......... .......... .......... ..........  194K\n   300K .......... .......... .......... .......... ..........  288K\n   350K .......... .......... .......... .......... ..........  145K\n   400K .......... .......... .......... .......... ..........  290K\n   450K .......... .......... .......... .......... ..........  193K\n   500K .......... .......... .......... .......... ..........  289K\n   550K .......... .......... .......... .......... ..........  192K\n   600K .......... .......... .......... .......... ..........  288K\n   650K .......... .......... .......... .......... ..........  193K\n   700K .......... .......... .......... .......... ..........  289K\n   750K .......... .......... .......... .......... ..........  145K\n   800K .......... .......... .......... .......... ..........  287K\n   850K .......... .......... .......... .......... ..........  194K\n   900K .......... .......... .......... .......... ..........  290K\n   950K .......... .......... .......... .......... ..........  288K\n  1000K .......... .......... .......... .......... ..........  290K\n  1050K .......... .......... .......... .......... ..........  290K\n  1100K .......... .......... .......... .......... ..........  291K\n  1150K .......... .......... .......... .......... ..........  290K\n  1200K .......... .......... .......... .......... ..........  292K\n  1250K .......... .......... .......... .......... ..........  578K\n  1300K .......... .......... .......... .......... ..........  290K\n  1350K .......... .......... .......... .......... ..........  581K\n  1400K .......... .......... .......... .......... ..........  291K\n  1450K .......... .......... .......... .......... ..........  580K\n  1500K .......... .......... .......... .......... ..........  551K\n  1550K .......... .......... .......... .......... ..........  291K\n  1600K .......... .......... .......... .......... ..........  581K\n  1650K .......... .......... .......... .......... ..........  581K\n  1700K .......... .......... .......... .......... ..........  578K\n  1750K .......... .......... .......... .......... ..........  581K\n  1800K .......... .......... .......... .......... ..........  580K\n  1850K .......... .......... .......... .......... ..........  582K\n  1900K .......... .......... .......... .......... ..........  582K\n  1950K .......... .......... .......... .......... ..........  580K\n  2000K .......... .......... .......... .......... ..........  581K\n  2050K .......... .......... .......... .......... ..........  582K\n  2100K .......... .......... .......... .......... .......... 26.8M\n  2150K .......... .......... .......... .......... ..........  587K\n  2200K .......... .......... .......... .......... ..........  579K\n  2250K .......... .......... .......... .......... .......... 21.0M\n  2300K .......... .......... .......... .......... ..........  590K\n  2350K .......... .......... .......... .......... ..........  580K\n  2400K .......... .......... .......... .......... ..........  588K\n  2450K .......... .......... .......... .......... .......... 29.1M\n  2500K .......... .......... .......... .......... ..........  584K\n  2550K .......... .......... .......... .......... .......... 35.8M\n  2600K .......... .......... .......... .......... ..........  587K\n  2650K .......... .......... .......... .......... ..........  586K\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... ..........  582K\n  2800K .......... .......... .......... .......... ..........  581K\n  2850K .......... .......... .......... .......... ..........  109M\n  2900K .......... .......... .......... .......... ..........  584K\n  2950K .......... .......... .......... .......... ..........  122M\n  3000K .......... .......... .......... .......... ..........  582K\n  3050K .......... .......... .......... .......... .......... 20.7M\n  3100K .......... .......... .......... .......... ..........  595K\n  3150K .......... .......... .......... .......... .......... 14.8M\n  3200K .......... .......... .......... .......... ..........  603K\n  3250K .......... .......... .......... .......... .......... 13.7M\n  3300K .......... .......... .......... .......... ..........  605K\n  3350K .......... .......... .......... .......... .......... 13.8M\n  3400K .......... .......... .......... .......... ..........  602K\n  3450K .......... .......... .......... .......... .......... 14.7M\n  3500K .......... .......... .......... .......... ..........  593K\n  3550K .......... .......... .......... .......... .......... 23.6M\n  3600K .......... .......... .......... .......... ..........  591K\n  3650K .......... .......... .......... .......... .......... 35.8M\n  3700K .......... .......... .......... .......... ..........  600K\n  3750K .......... .......... .......... .......... .......... 19.7M\n  3800K .......... .......... .......... .......... .......... 23.2M\n  3850K .......... .......... .......... .......... ..........  596K\n  3900K .......... .......... .......... .......... .......... 68.7M\n  3950K .......... .......... .......... .......... ..........  585K\n  4000K .......... .......... .......... .......... .......... 68.6M\n  4050K .......... .......... .......... .......... ..........  591K\n  4100K .......... .......... .......... .......... .......... 28.1M\n  4150K .......... .......... .......... .......... ..........  120M\n  4200K .......... .......... .......... .......... ..........  585K\n  4250K .......... .......... .......... .......... ..........  581K\n  4300K .......... .......... .......... .......... ..........  122M\n  4350K .......... .......... .......... .......... .......... 15.7M\n  4400K .......... .......... .......... .......... ..........  594K\n  4450K .......... .......... .......... .......... .......... 18.2M\n  4500K .......... .......... .......... .......... ..........  598K\n  4550K .......... .......... .......... .......... .......... 16.4M\n  4600K .......... .......... .......... .......... ..........  602K\n  4650K .......... .......... .......... .......... .......... 14.9M\n  4700K .......... .......... .......... .......... ..........  601K\n  4750K .......... .......... .......... .......... ..........  582K\n  4800K .......... .......... .......... .......... ..........  101M\n  4850K .......... .......... .......... .......... .......... 15.5M\n  4900K .......... .......... .......... .......... ..........  602K\n  4950K .......... .......... .......... .......... .......... 15.7M\n  5000K .......... .......... .......... .......... ..........  600K\n  5050K .......... .......... .......... .......... .......... 20.9M\n  5100K .......... .......... .......... .......... ..........  595K\n  5150K .......... .......... .......... .......... .......... 17.7M\n  5200K .......... .......... .......... .......... ..........  600K\n  5250K .......... .......... .......... .......... .......... 19.9M\n  5300K .......... .......... .......... .......... ..........  597K\n  5350K .......... .......... .......... .......... .......... 52.9M\n  5400K .......... .......... .......... .......... ..........  585K\n  5450K .......... .......... .......... .......... ..........  116M\n  5500K .......... .......... .......... .......... .......... 14.5M\n  5550K .......... .......... .......... .......... ..........  604K\n  5600K .......... .......... .......... .......... .......... 16.5M\n  5650K .......... .......... .......... .......... ..........  600K\n  5700K .......... .......... .......... .......... .......... 25.2M\n  5750K .......... .......... .......... .......... ..........  594K\n  5800K .......... .......... .......... .......... .......... 50.2M\n  5850K .......... .......... .......... .......... .......... 19.8M\n  5900K .......... .......... .......... .......... ..........  603K\n  5950K .......... .......... .......... .......... .......... 14.0M\n  6000K .......... .......... .......... .......... ..........  604K\n  6050K .......... .......... .......... .......... .......... 28.8M\n  6100K .......... .......... .......... .......... ..........  593K\n  6150K .......... .......... .......... .......... .......... 71.5M\n  6200K .......... .......... .......... .......... .......... 12.2M\n  6250K .......... .......... .......... .......... ..........  608K\n  6300K .......... .......... .......... .......... .......... 23.1M\n  6350K .......... .......... .......... .......... ..........  592K\n  6400K .......... .......... .......... .......... ..........  116M\n  6450K .......... .......... .......... .......... ..........  583K\n  6500K .......... .......... .......... .......... .......... 95.2M\n  6550K .......... .......... .......... .......... .......... 27.9M\n  6600K .......... .......... .......... .......... ..........  592K\n  6650K .......... .......... .......... .......... .......... 96.4M\n  6700K .......... .......... .......... .......... ..........  582K\n  6750K .......... .......... .......... .......... .......... 66.5M\n  6800K .......... .......... .......... .......... .......... 32.0M\n  6850K .......... .......... .......... .......... ..........  590K\n  6900K .......... .......... .......... .......... ..........  107M\n  6950K .......... .......... .......... .......... ..........  584K\n  7000K .......... .......... .......... .......... ..........  114M\n  7050K .......... .......... .......... .......... ..........  138M\n  7100K .......... .......... .......... .......... ..........  581K\n  7150K .......... .......... .......... .......... ..........  137M\n  7200K .......... .......... .......... .......... ..........  584K\n  7250K .......... .......... .......... .......... ..........  136M\n  7300K .......... .......... .......... .......... ..........  133M\n  7350K .......... .......... .......... .......... ..........  583K\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  587K\n  7500K .......... .......... .......... .......... ..........  101M\n  7550K .......... .......... .......... .......... ..........  133M\n  7600K .......... .......... .......... .......... ..........  584K\n  7650K .......... .......... .......... .......... ..........  132M\n  7700K .......... .......... .......... .......... ..........  585K\n  7750K .......... .......... .......... .......... ..........  107M\n  7800K .......... .......... .......... .......... ..........  125M\n  7850K .......... .......... .......... .......... ..........  582K\n  7900K .......... .......... .......... .......... .......... 95.4M\n  7950K .......... .......... .......... .......... ..........  586K\n  8000K .......... .......... .......... .......... .......... 92.5M\n  8050K .......... .......... .......... .......... ..........  151M\n  8100K .......... .......... .......... .......... ..........  584K\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... ..........  585K\n  8300K .......... .......... .......... .......... .......... 71.0M\n  8350K .......... .......... .......... .......... ..........  585K\n  8400K .......... .......... .......... .......... ..........  107M\n  8450K .......... .......... .......... .......... ..........  145M\n  8500K .......... .......... .......... .......... ..........  583K\n  8550K .......... .......... .......... .......... ..........  100M\n  8600K .......... .......... .......... .......... ..........  588K\n  8650K .......... .......... .......... .......... ..........  122M\n  8700K .......... .......... .......... .......... .......... 67.7M\n  8750K .......... .......... .......... .......... ..........  587K\n  8800K .......... .......... .......... .......... ..........  128M\n  8850K .......... .......... .......... .......... .......... 77.0M\n  8900K .......... .......... .......... .......... ..........  585K\n  8950K .......... .......... .......... .......... ..........  129M\n  9000K .......... .......... .......... .......... ..........  585K\n  9050K .......... .......... .......... .......... ..........  148M\n  9100K .......... .......... .......... .......... .......... 47.2M\n  9150K .......... .......... .......... .......... ..........  587K\n  9200K .......... .......... .......... .......... ..........  113M\n  9250K .......... .......... .......... .......... ..........  585K\n  9300K .......... .......... .......... .......... ..........  125M\n  9350K .......... .......... .......... .......... .......... 81.8M\n  9400K .......... .......... .......... .......... ..........  586K\n  9450K .......... .......... .......... .......... ..........  121M\n  9500K .......... .......... .......... .......... ..........  584K\n  9550K .......... .......... .......... .......... ..........  111M\n  9600K .......... .......... .......... .......... .......... 36.8M\n  9650K .......... .......... .......... .......... ..........  591K\n  9700K .......... .......... .......... .......... ..........  103M\n  9750K .......... .......... .......... .......... .......... 26.6M\n  9800K .......... .......... .......... .......... ..........  589K\n  9850K .......... .......... .......... .......... .......... 95.1M\n  9900K .......... .......... .......... .......... ..........  587K\n  9950K .......... .......... .......... .......... ..........  117M\n 10000K .......... .......... .......... .......... .......... 22.4M\n 10050K .......... .......... .......... .......... ..........  597K\n 10100K .......... .......... .......... .......... ..........  146M\n 10150K .......... .......... .......... .......... ..........  582K\n 10200K .......... .......... .......... .......... ..........  122M\n 10250K .......... .......... .......... .......... ..........  122M\n 10300K .......... .......... .......... .......... ..........  571K\n 10350K .......... .......... .......... .......... ..........  127M\n 10400K .......... .......... .......... .......... ..........  584K\n 10450K .......... .......... .......... .......... ..........  124M\n 10500K .......... .......... .......... .......... ..........  134M\n 10550K .......... .......... .......... .......... ..........  585K\n 10600K .......... .......... .......... .......... ..........  104M\n 10650K .......... .......... .......... .......... ..........  142M\n 10700K .......... .......... .......... .......... ..........  584K\n 10750K .......... .......... .......... .......... ..........  131M\n 10800K .......... .......... .......... .......... ..........  584K\n 10850K .......... .......... .......... .......... ..........  126M\n 10900K .......... .......... .......... .......... ..........  127M\n 10950K .......... .......... .......... .......... ..........  584K\n 11000K .......... .......... .......... .......... ..........  121M\n 11050K .......... .......... .......... .......... ..........  586K\n 11100K .......... .......... .......... .......... ..........  111M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... ..........  584K\n 11250K .......... .......... .......... .......... ..........  134M\n 11300K .......... .......... .......... .......... ..........  586K\n 11350K .......... .......... .......... .......... ..........  120M\n 11400K .......... .......... .......... .......... ..........  116M\n 11450K .......... .......... .......... .......... ..........  585K\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n......  920K\n 50150K .......... .......... .......... .......... .......... 2.23M\n 50200K .......... .......... .......... .......... .......... 58.0M\n 50250K .......... .......... .......... .......... .......... 1.20M\n 50300K .......... .......... .......... .......... .......... 1.09M\n 50350K .......... .......... .......... .......... ..........  129M\n 50400K .......... .......... .......... .......... .......... 1.16M\n 50450K .......... .......... .......... .......... .......... 1.09M\n 50500K .......... .......... .......... .......... ..........  139M\n 50550K .......... .......... .......... .......... .......... 1.40M\n 50600K .......... .......... .......... .......... ..........  982K\n 50650K .......... .......... .......... .......... ..........  137M\n 50700K .......... .......... .......... .......... .......... 4.97M\n 50750K .......... .......... .......... .......... ..........  915K\n 50800K .......... .......... .......... .......... .......... 2.23M\n 50850K .......... .......... .......... .......... .......... 5.19M\n 50900K .......... .......... .......... .......... ..........  909K\n 50950K .......... .......... .......... .......... .......... 2.21M\n 51000K .......... .......... .......... .......... ..........  122M\n 51050K .......... .......... .......... .......... .......... 1.17M\n 51100K .......... .......... .......... .......... .......... 1.12M\n 51150K .......... .......... .......... .......... ..........  137M\n 51200K .......... .......... .......... .......... .......... 1.15M\n 51250K .......... .......... .......... .......... .......... 1.13M\n 51300K .......... .......... .......... .......... .......... 84.8M\n 51350K .......... .......... .......... .......... .......... 1.38M\n 51400K .......... .......... .......... .......... .......... 1.71M\n 51450K .......... .......... .......... .......... .......... 2.22M\n 51500K .......... .......... .......... .......... ..........  105M\n 51550K .......... .......... .......... .......... ..........  806K\n 51600K .......... .......... .......... .......... .......... 2.08M\n 51650K .......... .......... .......... .......... .......... 65.9M\n 51700K .......... .......... .......... .......... .......... 1.16M\n 51750K .......... .......... .......... .......... .......... 1.13M\n 51800K .......... .......... .......... .......... ..........  106M\n 51850K .......... .......... .......... .......... .......... 1.34M\n 51900K .......... .......... .......... .......... .......... 1022K\n 51950K .......... .......... .......... .......... .......... 63.4M\n 52000K .......... .......... .......... .......... .......... 1.34M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... .......... 44.0M\n 52150K .......... .......... .......... .......... .......... 4.47M\n 52200K .......... .......... .......... .......... ..........  936K\n 52250K .......... .......... .......... .......... .......... 2.18M\n 52300K .......... .......... .......... .......... .......... 22.4M\n 52350K .......... .......... .......... .......... .......... 1.19M\n 52400K .......... .......... .......... .......... .......... 1.14M\n 52450K .......... .......... .......... .......... .......... 20.2M\n 52500K .......... .......... .......... .......... .......... 1.20M\n 52550K .......... .......... .......... .......... .......... 1.13M\n 52600K .......... .......... .......... .......... .......... 45.7M\n 52650K .......... .......... .......... .......... .......... 1.30M\n 52700K .......... .......... .......... .......... .......... 1.06M\n 52750K .......... .......... .......... .......... .......... 17.6M\n 52800K .......... .......... .......... .......... .......... 1.30M\n 52850K .......... .......... .......... .......... .......... 1.87M\n 52900K .......... .......... .......... .......... .......... 2.13M\n 52950K .......... .......... .......... .......... .......... 11.9M\n 53000K .......... .......... .......... .......... ..........  856K\n 53050K .......... .......... .......... .......... .......... 2.05M\n 53100K .......... .......... .......... .......... ..........  140M\n 53150K .......... .......... .......... .......... ..........  810K\n 53200K .......... .......... .......... .......... .......... 2.02M\n 53250K .......... .......... .......... .......... ..........  136M\n 53300K .......... .......... .......... .......... .......... 1.21M\n 53350K .......... .......... .......... .......... .......... 1.14M\n 53400K .......... .......... .......... .......... .......... 19.3M\n 53450K .......... .......... .......... .......... .......... 4.83M\n 53500K .......... .......... .......... .......... ..........  957K\n 53550K .......... .......... .......... .......... .......... 2.04M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... ..........  937K\n 53700K .......... .......... .......... .......... .......... 2.18M\n 53750K .......... .......... .......... .......... .......... 12.0M\n 53800K .......... .......... .......... .......... .......... 1.19M\n 53850K .......... .......... .......... .......... .......... 1.18M\n 53900K .......... .......... .......... .......... .......... 20.9M\n 53950K .......... .......... .......... .......... .......... 1.16M\n 54000K .......... .......... .......... .......... .......... 1.17M\n 54050K .......... .......... .......... .......... .......... 21.3M\n 54100K .......... .......... .......... .......... .......... 1.30M\n 54150K .......... .......... .......... .......... .......... 1.12M\n 54200K .......... .......... .......... .......... .......... 14.8M\n 54250K .......... .......... .......... .......... .......... 5.13M\n 54300K .......... .......... .......... .......... ..........  924K\n 54350K .......... .......... .......... .......... .......... 2.03M\n 54400K .......... .......... .......... .......... .......... 23.5M\n 54450K .......... .......... .......... .......... ..........  827K\n 54500K .......... .......... .......... .......... .......... 2.04M\n 54550K .......... .......... .......... .......... ..........  133M\n 54600K .......... .......... .......... .......... .......... 1.32M\n 54650K .......... .......... .......... .......... .......... 1.08M\n 54700K .......... .......... .......... .......... .......... 13.4M\n 54750K .......... .......... .......... .......... .......... 1.32M\n 54800K .......... .......... .......... .......... .......... 1.07M\n 54850K .......... .......... .......... .......... .......... 13.1M\n 54900K .......... .......... .......... .......... .......... 5.95M\n 54950K .......... .......... .......... .......... ..........  918K\n 55000K .......... .......... .......... .......... .......... 2.08M\n 55050K .......... .......... .......... .......... .......... 44.4M\n 55100K .......... .......... .......... .......... .......... 1.27M\n 55150K .......... .......... .......... .......... .......... 1.05M\n 55200K .......... .......... .......... .......... .......... 59.5M\n 55250K .......... .......... .......... .......... .......... 1.27M\n 55300K .......... .......... .......... .......... .......... 1.08M\n 55350K .......... .......... .......... .......... .......... 22.5M\n 55400K .......... .......... .......... .......... .......... 5.34M\n 55450K .......... .......... .......... .......... ..........  920K\n 55500K .......... .......... .......... .......... .......... 2.13M\n 55550K .......... .......... .......... .......... .......... 18.1M\n 55600K .......... .......... .......... .......... .......... 1.21M\n 55650K .......... .......... .......... .......... .......... 1.13M\n 55700K .......... .......... .......... .......... .......... 66.7M\n 55750K .......... .......... .......... .......... .......... 1.37M\n 55800K .......... .......... .......... .......... .......... 1.00M\n 55850K .......... .......... .......... .......... .......... 30.7M\n 55900K .......... .......... .......... .......... .......... 27.5M\n 55950K .......... .......... .......... .......... ..........  809K\n 56000K .......... .......... .......... .......... .......... 2.17M\n 56050K .......... .......... .......... .......... .......... 19.8M\n 56100K .......... .......... .......... .......... .......... 1.20M\n 56150K .......... .......... .......... .......... .......... 1.14M\n 56200K .......... .......... .......... .......... ..........  117M\n 56250K .......... .......... .......... .......... .......... 1.28M\n 56300K .......... .......... .......... .......... .......... 1.85M\n 56350K .......... .......... .......... .......... .......... 2.23M\n 56400K .......... .......... .......... .......... .......... 5.17M\n 56450K .......... .......... .......... .......... ..........  914K\n 56500K .......... .......... .......... .......... .......... 2.25M\n 56550K .......... .......... .......... .......... .......... 59.1M\n 56600K .......... .......... .......... .......... .......... 1.30M\n 56650K .......... .......... .......... .......... .......... 1.03M\n 56700K .......... .......... .......... .......... .......... 55.1M\n 56750K .......... .......... .......... .......... .......... 1.27M\n 56800K .......... .......... .......... .......... .......... 1.84M\n 56850K .......... .......... .......... .......... .......... 2.31M\n 56900K .......... .......... .......... .......... ..........  131M\n 56950K .......... .......... .......... .......... .......... 1.25M\n 57000K .......... .......... .......... .......... .......... 1.03M\n 57050K .......... .......... .......... .......... .......... 74.7M\n 57100K .......... .......... .......... .......... .......... 5.74M\n 57150K .......... .......... .......... .......... ..........  896K\n 57200K .......... .......... .......... .......... .......... 2.26M\n 57250K .......... .......... .......... .......... .......... 19.4M\n 57300K .......... .......... .......... .......... .......... 1.28M\n 57350K .......... .......... .......... .......... .......... 1.08M\n 57400K .......... .......... .......... .......... ..........  119M\n 57450K .......... .......... .......... .......... .......... 5.70M\n 57500K .......... .......... .......... .......... ..........  864K\n 57550K .......... .......... .......... .......... .......... 2.46M\n 57600K .......... .......... .......... .......... .......... 17.7M\n 57650K .......... .......... .......... .......... .......... 1.29M\n 57700K .......... .......... .......... .......... .......... 1.07M\n 57750K .......... .......... .......... .......... ..........  126M\n 57800K .......... .......... .......... .......... .......... 5.94M\n 57850K .......... .......... .......... .......... ..........  911K\n 57900K .......... .......... .......... .......... .......... 2.13M\n 57950K .......... .......... .......... .......... ..........  120M\n 58000K .......... .......... .......... .......... .......... 1.18M\n 58050K .......... .......... .......... .......... .......... 1.10M\n 58100K .......... .......... .......... .......... ..........  121M\n 58150K .......... .......... .......... .......... .......... 17.1M\n 58200K .......... .......... .......... .......... .......... 1.23M\n 58250K .......... .......... .......... .......... .......... 1.12M\n 58300K .......... .......... .......... .......... ..........  126M\n 58350K .......... .......... .......... .......... .......... 1.17M\n 58400K .......... .......... .......... .......... .......... 1.95M\n 58450K .......... .......... .......... .......... .......... 2.55M\n 58500K .......... .......... .......... .......... ..........  140M\n 58550K .......... .......... .......... .......... .......... 1.15M\n 58600K .......... .......... .......... .......... .......... 1.13M\n 58650K .......... .......... .......... .......... ..........  130M\n 58700K .......... .......... .......... .......... .......... 87.0M\n 58750K .......... .......... .......... .......... .......... 1.16M\n 58800K .......... .......... .......... .......... .......... 1.13M\n 58850K .......... .......... .......... .......... .......... 98.1M\n 58900K .......... .......... .......... .......... .......... 4.10M\n 58950K .......... .......... .......... .......... ..........  940K\n 59000K .......... .......... .......... .......... .......... 2.33M\n 59050K .......... .......... .......... .......... .......... 37.3M\n 59100K .......... .......... .......... .......... .......... 1.20M\n 59150K .......... .......... .......... .......... .......... 1.71M\n 59200K .......... .......... .......... .......... .......... 3.15M\n 59250K .......... .......... .......... .......... .......... 28.7M\n 59300K .......... .......... .......... .......... .......... 1.20M\n 59350K .......... .......... .......... .......... .......... 1.71M\n 59400K .......... .......... .......... .......... .......... 3.11M\n 59450K .......... .......... .......... .......... .......... 35.0M\n 59500K .......... .......... .......... .......... .......... 1.16M\n 59550K .......... .......... .......... .......... .......... 1.17M\n 59600K .......... .......... .......... .......... .......... 59.8M\n 59650K .......... .......... .......... .......... .......... 18.2M\n 59700K .......... .......... .......... .......... .......... 1.20M\n 59750K .......... .......... .......... .......... .......... 1.17M\n 59800K .......... .......... .......... .......... .......... 48.8M\n 59850K .......... .......... .......... .......... .......... 31.2M\n 59900K .......... .......... .......... .......... .......... 1.16M\n 59950K .......... .......... .......... .......... .......... 1.18M\n 60000K .......... .......... .......... .......... .......... 22.1M\n 60050K .......... .......... .......... .......... .......... 28.6M\n 60100K .......... .......... .......... .......... .......... 1.21M\n 60150K .......... .......... .......... .......... .......... 1.17M\n 60200K .......... .......... .......... .......... .......... 22.4M\n 60250K .......... .......... .......... .......... .......... 39.3M\n 60300K .......... .......... .......... .......... .......... 1.19M\n 60350K .......... .......... .......... .......... .......... 1.17M\n 60400K .......... .......... .......... .......... .......... 24.7M\n 60450K .......... .......... .......... .......... .......... 43.4M\n 60500K .......... .......... .......... .......... .......... 1.16M\n 60550K .......... .......... .......... .......... .......... 1.71M\n 60600K .......... .......... .......... .......... .......... 3.49M\n 60650K .......... .........                                    156M=50s\n\n2024-11-11 19:14:58 (1.19 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  290K 3s\n   100K .......... .......... .......... .......... .......... 18%  290K 3s\n   150K .......... .......... .......... .......... .......... 24%  578K 2s\n   200K .......... .......... .......... .......... .......... 30%  579K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  290K 1s\n   350K .......... .......... .......... .......... .......... 48% 1.12M 1s\n   400K .......... .......... .......... .......... .......... 54%  387K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.4M 1s\n   500K .......... .......... .......... .......... .......... 66%  597K 1s\n   550K .......... .......... .......... .......... .......... 72%  581K 1s\n   600K .......... .......... .......... .......... .......... 78% 1.11M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.14M 0s\n   700K .......... .......... .......... .......... .......... 90%  580K 0s\n   750K .......... .......... .......... .......... .......... 96% 23.1M 0s\n   800K .......... .......... .......                         100%  670K=1.6s\n\n2024-11-11 19:15:05 (518 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2, exit_code: None, stderr: --2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  194K\n    50K .......... .......... .......... .......... ..........  194K\n   100K .......... .......... .......... .......... ..........  193K\n   150K .......... .......... .......... .......... ..........  193K\n   200K .......... .......... .......... .......... ..........  290K\n   250K .......... .......... .......... .......... ..........  194K\n   300K .......... .......... .......... .......... ..........  288K\n   350K .......... .......... .......... .......... ..........  145K\n   400K .......... .......... .......... .......... ..........  290K\n   450K .......... .......... .......... .......... ..........  193K\n   500K .......... .......... .......... .......... ..........  289K\n   550K .......... .......... .......... .......... ..........  192K\n   600K .......... .......... .......... .......... ..........  288K\n   650K .......... .......... .......... .......... ..........  193K\n   700K .......... .......... .......... .......... ..........  289K\n   750K .......... .......... .......... .......... ..........  145K\n   800K .......... .......... .......... .......... ..........  287K\n   850K .......... .......... .......... .......... ..........  194K\n   900K .......... .......... .......... .......... ..........  290K\n   950K .......... .......... .......... .......... ..........  288K\n  1000K .......... .......... .......... .......... ..........  290K\n  1050K .......... .......... .......... .......... ..........  290K\n  1100K .......... .......... .......... .......... ..........  291K\n  1150K .......... .......... .......... .......... ..........  290K\n  1200K .......... .......... .......... .......... ..........  292K\n  1250K .......... .......... .......... .......... ..........  578K\n  1300K .......... .......... .......... .......... ..........  290K\n  1350K .......... .......... .......... .......... ..........  581K\n  1400K .......... .......... .......... .......... ..........  291K\n  1450K .......... .......... .......... .......... ..........  580K\n  1500K .......... .......... .......... .......... ..........  551K\n  1550K .......... .......... .......... .......... ..........  291K\n  1600K .......... .......... .......... .......... ..........  581K\n  1650K .......... .......... .......... .......... ..........  581K\n  1700K .......... .......... .......... .......... ..........  578K\n  1750K .......... .......... .......... .......... ..........  581K\n  1800K .......... .......... .......... .......... ..........  580K\n  1850K .......... .......... .......... .......... ..........  582K\n  1900K .......... .......... .......... .......... ..........  582K\n  1950K .......... .......... .......... .......... ..........  580K\n  2000K .......... .......... .......... .......... ..........  581K\n  2050K .......... .......... .......... .......... ..........  582K\n  2100K .......... .......... .......... .......... .......... 26.8M\n  2150K .......... .......... .......... .......... ..........  587K\n  2200K .......... .......... .......... .......... ..........  579K\n  2250K .......... .......... .......... .......... .......... 21.0M\n  2300K .......... .......... .......... .......... ..........  590K\n  2350K .......... .......... .......... .......... ..........  580K\n  2400K .......... .......... .......... .......... ..........  588K\n  2450K .......... .......... .......... .......... .......... 29.1M\n  2500K .......... .......... .......... .......... ..........  584K\n  2550K .......... .......... .......... .......... .......... 35.8M\n  2600K .......... .......... .......... .......... ..........  587K\n  2650K .......... .......... .......... .......... ..........  586K\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... ..........  582K\n  2800K .......... .......... .......... .......... ..........  581K\n  2850K .......... .......... .......... .......... ..........  109M\n  2900K .......... .......... .......... .......... ..........  584K\n  2950K .......... .......... .......... .......... ..........  122M\n  3000K .......... .......... .......... .......... ..........  582K\n  3050K .......... .......... .......... .......... .......... 20.7M\n  3100K .......... .......... .......... .......... ..........  595K\n  3150K .......... .......... .......... .......... .......... 14.8M\n  3200K .......... .......... .......... .......... ..........  603K\n  3250K .......... .......... .......... .......... .......... 13.7M\n  3300K .......... .......... .......... .......... ..........  605K\n  3350K .......... .......... .......... .......... .......... 13.8M\n  3400K .......... .......... .......... .......... ..........  602K\n  3450K .......... .......... .......... .......... .......... 14.7M\n  3500K .......... .......... .......... .......... ..........  593K\n  3550K .......... .......... .......... .......... .......... 23.6M\n  3600K .......... .......... .......... .......... ..........  591K\n  3650K .......... .......... .......... .......... .......... 35.8M\n  3700K .......... .......... .......... .......... ..........  600K\n  3750K .......... .......... .......... .......... .......... 19.7M\n  3800K .......... .......... .......... .......... .......... 23.2M\n  3850K .......... .......... .......... .......... ..........  596K\n  3900K .......... .......... .......... .......... .......... 68.7M\n  3950K .......... .......... .......... .......... ..........  585K\n  4000K .......... .......... .......... .......... .......... 68.6M\n  4050K .......... .......... .......... .......... ..........  591K\n  4100K .......... .......... .......... .......... .......... 28.1M\n  4150K .......... .......... .......... .......... ..........  120M\n  4200K .......... .......... .......... .......... ..........  585K\n  4250K .......... .......... .......... .......... ..........  581K\n  4300K .......... .......... .......... .......... ..........  122M\n  4350K .......... .......... .......... .......... .......... 15.7M\n  4400K .......... .......... .......... .......... ..........  594K\n  4450K .......... .......... .......... .......... .......... 18.2M\n  4500K .......... .......... .......... .......... ..........  598K\n  4550K .......... .......... .......... .......... .......... 16.4M\n  4600K .......... .......... .......... .......... ..........  602K\n  4650K .......... .......... .......... .......... .......... 14.9M\n  4700K .......... .......... .......... .......... ..........  601K\n  4750K .......... .......... .......... .......... ..........  582K\n  4800K .......... .......... .......... .......... ..........  101M\n  4850K .......... .......... .......... .......... .......... 15.5M\n  4900K .......... .......... .......... .......... ..........  602K\n  4950K .......... .......... .......... .......... .......... 15.7M\n  5000K .......... .......... .......... .......... ..........  600K\n  5050K .......... .......... .......... .......... .......... 20.9M\n  5100K .......... .......... .......... .......... ..........  595K\n  5150K .......... .......... .......... .......... .......... 17.7M\n  5200K .......... .......... .......... .......... ..........  600K\n  5250K .......... .......... .......... .......... .......... 19.9M\n  5300K .......... .......... .......... .......... ..........  597K\n  5350K .......... .......... .......... .......... .......... 52.9M\n  5400K .......... .......... .......... .......... ..........  585K\n  5450K .......... .......... .......... .......... ..........  116M\n  5500K .......... .......... .......... .......... .......... 14.5M\n  5550K .......... .......... .......... .......... ..........  604K\n  5600K .......... .......... .......... .......... .......... 16.5M\n  5650K .......... .......... .......... .......... ..........  600K\n  5700K .......... .......... .......... .......... .......... 25.2M\n  5750K .......... .......... .......... .......... ..........  594K\n  5800K .......... .......... .......... .......... .......... 50.2M\n  5850K .......... .......... .......... .......... .......... 19.8M\n  5900K .......... .......... .......... .......... ..........  603K\n  5950K .......... .......... .......... .......... .......... 14.0M\n  6000K .......... .......... .......... .......... ..........  604K\n  6050K .......... .......... .......... .......... .......... 28.8M\n  6100K .......... .......... .......... .......... ..........  593K\n  6150K .......... .......... .......... .......... .......... 71.5M\n  6200K .......... .......... .......... .......... .......... 12.2M\n  6250K .......... .......... .......... .......... ..........  608K\n  6300K .......... .......... .......... .......... .......... 23.1M\n  6350K .......... .......... .......... .......... ..........  592K\n  6400K .......... .......... .......... .......... ..........  116M\n  6450K .......... .......... .......... .......... ..........  583K\n  6500K .......... .......... .......... .......... .......... 95.2M\n  6550K .......... .......... .......... .......... .......... 27.9M\n  6600K .......... .......... .......... .......... ..........  592K\n  6650K .......... .......... .......... .......... .......... 96.4M\n  6700K .......... .......... .......... .......... ..........  582K\n  6750K .......... .......... .......... .......... .......... 66.5M\n  6800K .......... .......... .......... .......... .......... 32.0M\n  6850K .......... .......... .......... .......... ..........  590K\n  6900K .......... .......... .......... .......... ..........  107M\n  6950K .......... .......... .......... .......... ..........  584K\n  7000K .......... .......... .......... .......... ..........  114M\n  7050K .......... .......... .......... .......... ..........  138M\n  7100K .......... .......... .......... .......... ..........  581K\n  7150K .......... .......... .......... .......... ..........  137M\n  7200K .......... .......... .......... .......... ..........  584K\n  7250K .......... .......... .......... .......... ..........  136M\n  7300K .......... .......... .......... .......... ..........  133M\n  7350K .......... .......... .......... .......... ..........  583K\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  587K\n  7500K .......... .......... .......... .......... ..........  101M\n  7550K .......... .......... .......... .......... ..........  133M\n  7600K .......... .......... .......... .......... ..........  584K\n  7650K .......... .......... .......... .......... ..........  132M\n  7700K .......... .......... .......... .......... ..........  585K\n  7750K .......... .......... .......... .......... ..........  107M\n  7800K .......... .......... .......... .......... ..........  125M\n  7850K .......... .......... .......... .......... ..........  582K\n  7900K .......... .......... .......... .......... .......... 95.4M\n  7950K .......... .......... .......... .......... ..........  586K\n  8000K .......... .......... .......... .......... .......... 92.5M\n  8050K .......... .......... .......... .......... ..........  151M\n  8100K .......... .......... .......... .......... ..........  584K\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... ..........  585K\n  8300K .......... .......... .......... .......... .......... 71.0M\n  8350K .......... .......... .......... .......... ..........  585K\n  8400K .......... .......... .......... .......... ..........  107M\n  8450K .......... .......... .......... .......... ..........  145M\n  8500K .......... .......... .......... .......... ..........  583K\n  8550K .......... .......... .......... .......... ..........  100M\n  8600K .......... .......... .......... .......... ..........  588K\n  8650K .......... .......... .......... .......... ..........  122M\n  8700K .......... .......... .......... .......... .......... 67.7M\n  8750K .......... .......... .......... .......... ..........  587K\n  8800K .......... .......... .......... .......... ..........  128M\n  8850K .......... .......... .......... .......... .......... 77.0M\n  8900K .......... .......... .......... .......... ..........  585K\n  8950K .......... .......... .......... .......... ..........  129M\n  9000K .......... .......... .......... .......... ..........  585K\n  9050K .......... .......... .......... .......... ..........  148M\n  9100K .......... .......... .......... .......... .......... 47.2M\n  9150K .......... .......... .......... .......... ..........  587K\n  9200K .......... .......... .......... .......... ..........  113M\n  9250K .......... .......... .......... .......... ..........  585K\n  9300K .......... .......... .......... .......... ..........  125M\n  9350K .......... .......... .......... .......... .......... 81.8M\n  9400K .......... .......... .......... .......... ..........  586K\n  9450K .......... .......... .......... .......... ..........  121M\n  9500K .......... .......... .......... .......... ..........  584K\n  9550K .......... .......... .......... .......... ..........  111M\n  9600K .......... .......... .......... .......... .......... 36.8M\n  9650K .......... .......... .......... .......... ..........  591K\n  9700K .......... .......... .......... .......... ..........  103M\n  9750K .......... .......... .......... .......... .......... 26.6M\n  9800K .......... .......... .......... .......... ..........  589K\n  9850K .......... .......... .......... .......... .......... 95.1M\n  9900K .......... .......... .......... .......... ..........  587K\n  9950K .......... .......... .......... .......... ..........  117M\n 10000K .......... .......... .......... .......... .......... 22.4M\n 10050K .......... .......... .......... .......... ..........  597K\n 10100K .......... .......... .......... .......... ..........  146M\n 10150K .......... .......... .......... .......... ..........  582K\n 10200K .......... .......... .......... .......... ..........  122M\n 10250K .......... .......... .......... .......... ..........  122M\n 10300K .......... .......... .......... .......... ..........  571K\n 10350K .......... .......... .......... .......... ..........  127M\n 10400K .......... .......... .......... .......... ..........  584K\n 10450K .......... .......... .......... .......... ..........  124M\n 10500K .......... .......... .......... .......... ..........  134M\n 10550K .......... .......... .......... .......... ..........  585K\n 10600K .......... .......... .......... .......... ..........  104M\n 10650K .......... .......... .......... .......... ..........  142M\n 10700K .......... .......... .......... .......... ..........  584K\n 10750K .......... .......... .......... .......... ..........  131M\n 10800K .......... .......... .......... .......... ..........  584K\n 10850K .......... .......... .......... .......... ..........  126M\n 10900K .......... .......... .......... .......... ..........  127M\n 10950K .......... .......... .......... .......... ..........  584K\n 11000K .......... .......... .......... .......... ..........  121M\n 11050K .......... .......... .......... .......... ..........  586K\n 11100K .......... .......... .......... .......... ..........  111M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... ..........  584K\n 11250K .......... .......... .......... .......... ..........  134M\n 11300K .......... .......... .......... .......... ..........  586K\n 11350K .......... .......... .......... .......... ..........  120M\n 11400K .......... .......... .......... .......... ..........  116M\n 11450K .......... .......... .......... .......... ..........  585K\n 11500K .......... .......... .......... .......... ..........  101M\n 11550K .......... .......... .......... .......... ..........\n..\n......  920K\n 50150K .......... .......... .......... .......... .......... 2.23M\n 50200K .......... .......... .......... .......... .......... 58.0M\n 50250K .......... .......... .......... .......... .......... 1.20M\n 50300K .......... .......... .......... .......... .......... 1.09M\n 50350K .......... .......... .......... .......... ..........  129M\n 50400K .......... .......... .......... .......... .......... 1.16M\n 50450K .......... .......... .......... .......... .......... 1.09M\n 50500K .......... .......... .......... .......... ..........  139M\n 50550K .......... .......... .......... .......... .......... 1.40M\n 50600K .......... .......... .......... .......... ..........  982K\n 50650K .......... .......... .......... .......... ..........  137M\n 50700K .......... .......... .......... .......... .......... 4.97M\n 50750K .......... .......... .......... .......... ..........  915K\n 50800K .......... .......... .......... .......... .......... 2.23M\n 50850K .......... .......... .......... .......... .......... 5.19M\n 50900K .......... .......... .......... .......... ..........  909K\n 50950K .......... .......... .......... .......... .......... 2.21M\n 51000K .......... .......... .......... .......... ..........  122M\n 51050K .......... .......... .......... .......... .......... 1.17M\n 51100K .......... .......... .......... .......... .......... 1.12M\n 51150K .......... .......... .......... .......... ..........  137M\n 51200K .......... .......... .......... .......... .......... 1.15M\n 51250K .......... .......... .......... .......... .......... 1.13M\n 51300K .......... .......... .......... .......... .......... 84.8M\n 51350K .......... .......... .......... .......... .......... 1.38M\n 51400K .......... .......... .......... .......... .......... 1.71M\n 51450K .......... .......... .......... .......... .......... 2.22M\n 51500K .......... .......... .......... .......... ..........  105M\n 51550K .......... .......... .......... .......... ..........  806K\n 51600K .......... .......... .......... .......... .......... 2.08M\n 51650K .......... .......... .......... .......... .......... 65.9M\n 51700K .......... .......... .......... .......... .......... 1.16M\n 51750K .......... .......... .......... .......... .......... 1.13M\n 51800K .......... .......... .......... .......... ..........  106M\n 51850K .......... .......... .......... .......... .......... 1.34M\n 51900K .......... .......... .......... .......... .......... 1022K\n 51950K .......... .......... .......... .......... .......... 63.4M\n 52000K .......... .......... .......... .......... .......... 1.34M\n 52050K .......... .......... .......... .......... .......... 1.00M\n 52100K .......... .......... .......... .......... .......... 44.0M\n 52150K .......... .......... .......... .......... .......... 4.47M\n 52200K .......... .......... .......... .......... ..........  936K\n 52250K .......... .......... .......... .......... .......... 2.18M\n 52300K .......... .......... .......... .......... .......... 22.4M\n 52350K .......... .......... .......... .......... .......... 1.19M\n 52400K .......... .......... .......... .......... .......... 1.14M\n 52450K .......... .......... .......... .......... .......... 20.2M\n 52500K .......... .......... .......... .......... .......... 1.20M\n 52550K .......... .......... .......... .......... .......... 1.13M\n 52600K .......... .......... .......... .......... .......... 45.7M\n 52650K .......... .......... .......... .......... .......... 1.30M\n 52700K .......... .......... .......... .......... .......... 1.06M\n 52750K .......... .......... .......... .......... .......... 17.6M\n 52800K .......... .......... .......... .......... .......... 1.30M\n 52850K .......... .......... .......... .......... .......... 1.87M\n 52900K .......... .......... .......... .......... .......... 2.13M\n 52950K .......... .......... .......... .......... .......... 11.9M\n 53000K .......... .......... .......... .......... ..........  856K\n 53050K .......... .......... .......... .......... .......... 2.05M\n 53100K .......... .......... .......... .......... ..........  140M\n 53150K .......... .......... .......... .......... ..........  810K\n 53200K .......... .......... .......... .......... .......... 2.02M\n 53250K .......... .......... .......... .......... ..........  136M\n 53300K .......... .......... .......... .......... .......... 1.21M\n 53350K .......... .......... .......... .......... .......... 1.14M\n 53400K .......... .......... .......... .......... .......... 19.3M\n 53450K .......... .......... .......... .......... .......... 4.83M\n 53500K .......... .......... .......... .......... ..........  957K\n 53550K .......... .......... .......... .......... .......... 2.04M\n 53600K .......... .......... .......... .......... .......... 4.81M\n 53650K .......... .......... .......... .......... ..........  937K\n 53700K .......... .......... .......... .......... .......... 2.18M\n 53750K .......... .......... .......... .......... .......... 12.0M\n 53800K .......... .......... .......... .......... .......... 1.19M\n 53850K .......... .......... .......... .......... .......... 1.18M\n 53900K .......... .......... .......... .......... .......... 20.9M\n 53950K .......... .......... .......... .......... .......... 1.16M\n 54000K .......... .......... .......... .......... .......... 1.17M\n 54050K .......... .......... .......... .......... .......... 21.3M\n 54100K .......... .......... .......... .......... .......... 1.30M\n 54150K .......... .......... .......... .......... .......... 1.12M\n 54200K .......... .......... .......... .......... .......... 14.8M\n 54250K .......... .......... .......... .......... .......... 5.13M\n 54300K .......... .......... .......... .......... ..........  924K\n 54350K .......... .......... .......... .......... .......... 2.03M\n 54400K .......... .......... .......... .......... .......... 23.5M\n 54450K .......... .......... .......... .......... ..........  827K\n 54500K .......... .......... .......... .......... .......... 2.04M\n 54550K .......... .......... .......... .......... ..........  133M\n 54600K .......... .......... .......... .......... .......... 1.32M\n 54650K .......... .......... .......... .......... .......... 1.08M\n 54700K .......... .......... .......... .......... .......... 13.4M\n 54750K .......... .......... .......... .......... .......... 1.32M\n 54800K .......... .......... .......... .......... .......... 1.07M\n 54850K .......... .......... .......... .......... .......... 13.1M\n 54900K .......... .......... .......... .......... .......... 5.95M\n 54950K .......... .......... .......... .......... ..........  918K\n 55000K .......... .......... .......... .......... .......... 2.08M\n 55050K .......... .......... .......... .......... .......... 44.4M\n 55100K .......... .......... .......... .......... .......... 1.27M\n 55150K .......... .......... .......... .......... .......... 1.05M\n 55200K .......... .......... .......... .......... .......... 59.5M\n 55250K .......... .......... .......... .......... .......... 1.27M\n 55300K .......... .......... .......... .......... .......... 1.08M\n 55350K .......... .......... .......... .......... .......... 22.5M\n 55400K .......... .......... .......... .......... .......... 5.34M\n 55450K .......... .......... .......... .......... ..........  920K\n 55500K .......... .......... .......... .......... .......... 2.13M\n 55550K .......... .......... .......... .......... .......... 18.1M\n 55600K .......... .......... .......... .......... .......... 1.21M\n 55650K .......... .......... .......... .......... .......... 1.13M\n 55700K .......... .......... .......... .......... .......... 66.7M\n 55750K .......... .......... .......... .......... .......... 1.37M\n 55800K .......... .......... .......... .......... .......... 1.00M\n 55850K .......... .......... .......... .......... .......... 30.7M\n 55900K .......... .......... .......... .......... .......... 27.5M\n 55950K .......... .......... .......... .......... ..........  809K\n 56000K .......... .......... .......... .......... .......... 2.17M\n 56050K .......... .......... .......... .......... .......... 19.8M\n 56100K .......... .......... .......... .......... .......... 1.20M\n 56150K .......... .......... .......... .......... .......... 1.14M\n 56200K .......... .......... .......... .......... ..........  117M\n 56250K .......... .......... .......... .......... .......... 1.28M\n 56300K .......... .......... .......... .......... .......... 1.85M\n 56350K .......... .......... .......... .......... .......... 2.23M\n 56400K .......... .......... .......... .......... .......... 5.17M\n 56450K .......... .......... .......... .......... ..........  914K\n 56500K .......... .......... .......... .......... .......... 2.25M\n 56550K .......... .......... .......... .......... .......... 59.1M\n 56600K .......... .......... .......... .......... .......... 1.30M\n 56650K .......... .......... .......... .......... .......... 1.03M\n 56700K .......... .......... .......... .......... .......... 55.1M\n 56750K .......... .......... .......... .......... .......... 1.27M\n 56800K .......... .......... .......... .......... .......... 1.84M\n 56850K .......... .......... .......... .......... .......... 2.31M\n 56900K .......... .......... .......... .......... ..........  131M\n 56950K .......... .......... .......... .......... .......... 1.25M\n 57000K .......... .......... .......... .......... .......... 1.03M\n 57050K .......... .......... .......... .......... .......... 74.7M\n 57100K .......... .......... .......... .......... .......... 5.74M\n 57150K .......... .......... .......... .......... ..........  896K\n 57200K .......... .......... .......... .......... .......... 2.26M\n 57250K .......... .......... .......... .......... .......... 19.4M\n 57300K .......... .......... .......... .......... .......... 1.28M\n 57350K .......... .......... .......... .......... .......... 1.08M\n 57400K .......... .......... .......... .......... ..........  119M\n 57450K .......... .......... .......... .......... .......... 5.70M\n 57500K .......... .......... .......... .......... ..........  864K\n 57550K .......... .......... .......... .......... .......... 2.46M\n 57600K .......... .......... .......... .......... .......... 17.7M\n 57650K .......... .......... .......... .......... .......... 1.29M\n 57700K .......... .......... .......... .......... .......... 1.07M\n 57750K .......... .......... .......... .......... ..........  126M\n 57800K .......... .......... .......... .......... .......... 5.94M\n 57850K .......... .......... .......... .......... ..........  911K\n 57900K .......... .......... .......... .......... .......... 2.13M\n 57950K .......... .......... .......... .......... ..........  120M\n 58000K .......... .......... .......... .......... .......... 1.18M\n 58050K .......... .......... .......... .......... .......... 1.10M\n 58100K .......... .......... .......... .......... ..........  121M\n 58150K .......... .......... .......... .......... .......... 17.1M\n 58200K .......... .......... .......... .......... .......... 1.23M\n 58250K .......... .......... .......... .......... .......... 1.12M\n 58300K .......... .......... .......... .......... ..........  126M\n 58350K .......... .......... .......... .......... .......... 1.17M\n 58400K .......... .......... .......... .......... .......... 1.95M\n 58450K .......... .......... .......... .......... .......... 2.55M\n 58500K .......... .......... .......... .......... ..........  140M\n 58550K .......... .......... .......... .......... .......... 1.15M\n 58600K .......... .......... .......... .......... .......... 1.13M\n 58650K .......... .......... .......... .......... ..........  130M\n 58700K .......... .......... .......... .......... .......... 87.0M\n 58750K .......... .......... .......... .......... .......... 1.16M\n 58800K .......... .......... .......... .......... .......... 1.13M\n 58850K .......... .......... .......... .......... .......... 98.1M\n 58900K .......... .......... .......... .......... .......... 4.10M\n 58950K .......... .......... .......... .......... ..........  940K\n 59000K .......... .......... .......... .......... .......... 2.33M\n 59050K .......... .......... .......... .......... .......... 37.3M\n 59100K .......... .......... .......... .......... .......... 1.20M\n 59150K .......... .......... .......... .......... .......... 1.71M\n 59200K .......... .......... .......... .......... .......... 3.15M\n 59250K .......... .......... .......... .......... .......... 28.7M\n 59300K .......... .......... .......... .......... .......... 1.20M\n 59350K .......... .......... .......... .......... .......... 1.71M\n 59400K .......... .......... .......... .......... .......... 3.11M\n 59450K .......... .......... .......... .......... .......... 35.0M\n 59500K .......... .......... .......... .......... .......... 1.16M\n 59550K .......... .......... .......... .......... .......... 1.17M\n 59600K .......... .......... .......... .......... .......... 59.8M\n 59650K .......... .......... .......... .......... .......... 18.2M\n 59700K .......... .......... .......... .......... .......... 1.20M\n 59750K .......... .......... .......... .......... .......... 1.17M\n 59800K .......... .......... .......... .......... .......... 48.8M\n 59850K .......... .......... .......... .......... .......... 31.2M\n 59900K .......... .......... .......... .......... .......... 1.16M\n 59950K .......... .......... .......... .......... .......... 1.18M\n 60000K .......... .......... .......... .......... .......... 22.1M\n 60050K .......... .......... .......... .......... .......... 28.6M\n 60100K .......... .......... .......... .......... .......... 1.21M\n 60150K .......... .......... .......... .......... .......... 1.17M\n 60200K .......... .......... .......... .......... .......... 22.4M\n 60250K .......... .......... .......... .......... .......... 39.3M\n 60300K .......... .......... .......... .......... .......... 1.19M\n 60350K .......... .......... .......... .......... .......... 1.17M\n 60400K .......... .......... .......... .......... .......... 24.7M\n 60450K .......... .......... .......... .......... .......... 43.4M\n 60500K .......... .......... .......... .......... .......... 1.16M\n 60550K .......... .......... .......... .......... .......... 1.71M\n 60600K .......... .......... .......... .......... .......... 3.49M\n 60650K .......... .........                                    156M=50s\n\n2024-11-11 19:14:58 (1.19 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  290K 3s\n   100K .......... .......... .......... .......... .......... 18%  290K 3s\n   150K .......... .......... .......... .......... .......... 24%  578K 2s\n   200K .......... .......... .......... .......... .......... 30%  579K 2s\n   250K .......... .......... .......... .......... .......... 36%  578K 2s\n   300K .......... .......... .......... .......... .......... 42%  290K 1s\n   350K .......... .......... .......... .......... .......... 48% 1.12M 1s\n   400K .......... .......... .......... .......... .......... 54%  387K 1s\n   450K .......... .......... .......... .......... .......... 60% 14.4M 1s\n   500K .......... .......... .......... .......... .......... 66%  597K 1s\n   550K .......... .......... .......... .......... .......... 72%  581K 1s\n   600K .......... .......... .......... .......... .......... 78% 1.11M 0s\n   650K .......... .......... .......... .......... .......... 84% 1.14M 0s\n   700K .......... .......... .......... .......... .......... 90%  580K 0s\n   750K .......... .......... .......... .......... .......... 96% 23.1M 0s\n   800K .......... .......... .......                         100%  670K=1.6s\n\n2024-11-11 19:15:05 (518 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n." ], "status": "failure", "test_index": 0, "time_seconds": 67.26974868774414, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-11-11 19:14:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  194K    50K .......... .......... .......... .......... ..........  194K   100K .......... .......... .......... .......... ..........  193K   150K .......... .......... .......... .......... ..........  193K   200K .......... .......... .......... .......... ..........  290K   250K .......... .......... .......... .......... ..........  194K   300K .......... .......... .......... .......... ..........  288K   350K .......... .......... .......... .......... ..........  145K   400K .......... .......... .......... .......... ..........  290K   450K .......... .......... .......... .......... ..........  193K   500K .......... .......... .......... .......... ..........  289K   550K .......... .......... .......... .......... ..........  192K   600K .......... .......... .......... .......... ..........  288K   650K .......... .......... .......... .......... ..........  193K   700K .......... .......... .......... .......... ..........  289K   750K .......... .......... .......... .......... ..........  145K   800K .......... .......... .......... .......... ..........  287K   850K .......... .......... .......... .......... ..........  194K   900K .......... .......... .......... .......... ..........  290K   950K .......... .......... .......... .......... ..........  288K  1000K .......... .......... .......... .......... ..........  290K  1050K .......... .......... .......... .......... ..........  290K  1100K .......... .......... .......... .......... ..........  291K  1150K .......... .......... .......... .......... ..........  290K  1200K .......... .......... .......... .......... ..........  292K  1250K .......... .......... .......... .......... ..........  578K  1300K .......... .......... .......... .......... ..........  290K  1350K .......... .......... .......... .......... ..........  581K  1400K .......... .......... .......... .......... ..........  291K  1450K .......... .......... .......... .......... ..........  580K  1500K .......... .......... .......... .......... ..........  551K  1550K .......... .......... .......... .......... ..........  291K  1600K .......... .......... .......... .......... ..........  581K  1650K .......... .......... .......... .......... ..........  581K  1700K .......... .......... .......... .......... ..........  578K  1750K .......... .......... .......... .......... ..........  581K  1800K .......... .......... .......... .......... ..........  580K  1850K .......... .......... .......... .......... ..........  582K  1900K .......... .......... .......... .......... ..........  582K  1950K .......... .......... .......... .......... ..........  580K  2000K .......... .......... .......... .......... ..........  581K  2050K .......... .......... .......... .......... ..........  582K  2100K .......... .......... .......... .......... .......... 26.8M  2150K .......... .......... .......... .......... ..........  587K  2200K .......... .......... .......... .......... ..........  579K  2250K .......... .......... .......... .......... .......... 21.0M  2300K .......... .......... .......... .......... ..........  590K  2350K .......... .......... .......... .......... ..........  580K  2400K .......... .......... .......... .......... ..........  588K  2450K .......... .......... .......... .......... .......... 29.1M  2500K .......... .......... .......... .......... ..........  584K  2550K .......... .......... .......... .......... .......... 35.8M  2600K .......... .......... .......... .......... ..........  587K  2650K .......... .......... .......... .......... ..........  586K  2700K .......... .......... .......... .......... .......... 50.2M  2750K .......... .......... .......... .......... ..........  582K  2800K .......... .......... .......... .......... ..........  581K  2850K .......... .......... .......... .......... ..........  109M  2900K .......... .......... .......... .......... ..........  584K  2950K .......... .......... .......... .......... ..........  122M  3000K .......... .......... .......... .......... ..........  582K  3050K .......... .......... .......... .......... .......... 20.7M  3100K .......... .......... .......... .......... ..........  595K  3150K .......... .......... .......... .......... .......... 14.8M  3200K .......... .......... .......... .......... ..........  603K  3250K .......... .......... .......... .......... .......... 13.7M  3300K .......... .......... .......... .......... ..........  605K  3350K .......... .......... .......... .......... .......... 13.8M  3400K .......... .......... .......... .......... ..........  602K  3450K .......... .......... .......... .......... .......... 14.7M  3500K .......... .......... .......... .......... ..........  593K  3550K .......... .......... .......... .......... .......... 23.6M  3600K .......... .......... .......... .......... ..........  591K  3650K .......... .......... .......... .......... .......... 35.8M  3700K .......... .......... .......... .......... ..........  600K  3750K .......... .......... .......... .......... .......... 19.7M  3800K .......... .......... .......... .......... .......... 23.2M  3850K .......... .......... .......... .......... ..........  596K  3900K .......... .......... .......... .......... .......... 68.7M  3950K .......... .......... .......... .......... ..........  585K  4000K .......... .......... .......... .......... .......... 68.6M  4050K .......... .......... .......... .......... ..........  591K  4100K .......... .......... .......... .......... .......... 28.1M  4150K .......... .......... .......... .......... ..........  120M  4200K .......... .......... .......... .......... ..........  585K  4250K .......... .......... .......... .......... ..........  581K  4300K .......... .......... .......... .......... ..........  122M  4350K .......... .......... .......... .......... .......... 15.7M  4400K .......... .......... .......... .......... ..........  594K  4450K .......... .......... .......... .......... .......... 18.2M  4500K .......... .......... .......... .......... ..........  598K  4550K .......... .......... .......... .......... .......... 16.4M  4600K .......... .......... .......... .......... ..........  602K  4650K .......... .......... .......... .......... .......... 14.9M  4700K .......... .......... .......... .......... ..........  601K  4750K .......... .......... .......... .......... ..........  582K  4800K .......... .......... .......... .......... ..........  101M  4850K .......... .......... .......... .......... .......... 15.5M  4900K .......... .......... .......... .......... ..........  602K  4950K .......... .......... .......... .......... .......... 15.7M  5000K .......... .......... .......... .......... ..........  600K  5050K .......... .......... .......... .......... .......... 20.9M  5100K .......... .......... .......... .......... ..........  595K  5150K .......... .......... .......... .......... .......... 17.7M  5200K .......... .......... .......... .......... ..........  600K  5250K .......... .......... .......... .......... .......... 19.9M  5300K .......... .......... .......... .......... ..........  597K  5350K .......... .......... .......... .......... .......... 52.9M  5400K .......... .......... .......... .......... ..........  585K  5450K .......... .......... .......... .......... ..........  116M  5500K .......... .......... .......... .......... .......... 14.5M  5550K .......... .......... .......... .......... ..........  604K  5600K .......... .......... .......... .......... .......... 16.5M  5650K .......... .......... .......... .......... ..........  600K  5700K .......... .......... .......... .......... .......... 25.2M  5750K .......... .......... .......... .......... ..........  594K  5800K .......... .......... .......... .......... .......... 50.2M  5850K .......... .......... .......... .......... .......... 19.8M  5900K .......... .......... .......... .......... ..........  603K  5950K .......... .......... .......... .......... .......... 14.0M  6000K .......... .......... .......... .......... ..........  604K  6050K .......... .......... .......... .......... .......... 28.8M  6100K .......... .......... .......... .......... ..........  593K  6150K .......... .......... .......... .......... .......... 71.5M  6200K .......... .......... .......... .......... .......... 12.2M  6250K .......... .......... .......... .......... ..........  608K  6300K .......... .......... .......... .......... .......... 23.1M  6350K .......... .......... .......... .......... ..........  592K  6400K .......... .......... .......... .......... ..........  116M  6450K .......... .......... .......... .......... ..........  583K  6500K .......... .......... .......... .......... .......... 95.2M  6550K .......... .......... .......... .......... .......... 27.9M  6600K .......... .......... .......... .......... ..........  592K  6650K .......... .......... .......... .......... .......... 96.4M  6700K .......... .......... .......... .......... ..........  582K  6750K .......... .......... .......... .......... .......... 66.5M  6800K .......... .......... .......... .......... .......... 32.0M  6850K .......... .......... .......... .......... ..........  590K  6900K .......... .......... .......... .......... ..........  107M  6950K .......... .......... .......... .......... ..........  584K  7000K .......... .......... .......... .......... ..........  114M  7050K .......... .......... .......... .......... ..........  138M  7100K .......... .......... .......... .......... ..........  581K  7150K .......... .......... .......... .......... ..........  137M  7200K .......... .......... .......... .......... ..........  584K  7250K .......... .......... .......... .......... ..........  136M  7300K .......... .......... .......... .......... ..........  133M  7350K .......... .......... .......... .......... ..........  583K  7400K .......... .......... .......... .......... ..........  128M  7450K .......... .......... .......... .......... ..........  587K  7500K .......... .......... .......... .......... ..........  101M  7550K .......... .......... .......... .......... ..........  133M  7600K .......... .......... .......... .......... ..........  584K  7650K .......... .......... .......... .......... ..........  132M  7700K .......... .......... .......... .......... ..........  585K  7750K .......... .......... .......... .......... ..........  107M  7800K .......... .......... .......... .......... ..........  125M  7850K .......... .......... .......... .......... ..........  582K  7900K .......... .......... .......... .......... .......... 95.4M  7950K .......... .......... .......... .......... ..........  586K  8000K .......... .......... .......... .......... .......... 92.5M  8050K .......... .......... .......... .......... ..........  151M  8100K .......... .......... .......... .......... ..........  584K  8150K .......... .......... .......... .......... ..........  109M  8200K .......... .......... .......... .......... ..........  126M  8250K .......... .......... .......... .......... ..........  585K  8300K .......... .......... .......... .......... .......... 71.0M  8350K .......... .......... .......... .......... ..........  585K  8400K .......... .......... .......... .......... ..........  107M  8450K .......... .......... .......... .......... ..........  145M  8500K .......... .......... .......... .......... ..........  583K  8550K .......... .......... .......... .......... ..........  100M  8600K .......... .......... .......... .......... ..........  588K  8650K .......... .......... .......... .......... ..........  122M  8700K .......... .......... .......... .......... .......... 67.7M  8750K .......... .......... .......... .......... ..........  587K  8800K .......... .......... .......... .......... ..........  128M  8850K .......... .......... .......... .......... .......... 77.0M  8900K .......... .......... .......... .......... ..........  585K  8950K .......... .......... .......... .......... ..........  129M  9000K .......... .......... .......... .......... ..........  585K  9050K .......... .......... .......... .......... ..........  148M  9100K .......... .......... .......... .......... .......... 47.2M  9150K .......... .......... .......... .......... ..........  587K  9200K .......... .......... .......... .......... ..........  113M  9250K .......... .......... .......... .......... ..........  585K  9300K .......... .......... .......... .......... ..........  125M  9350K .......... .......... .......... .......... .......... 81.8M  9400K .......... .......... .......... .......... ..........  586K  9450K .......... .......... .......... .......... ..........  121M  9500K .......... .......... .......... .......... ..........  584K  9550K .......... .......... .......... .......... ..........  111M  9600K .......... .......... .......... .......... .......... 36.8M  9650K .......... .......... .......... .......... ..........  591K  9700K .......... .......... .......... .......... ..........  103M  9750K .......... .......... .......... .......... .......... 26.6M  9800K .......... .......... .......... .......... ..........  589K  9850K .......... .......... .......... .......... .......... 95.1M  9900K .......... .......... .......... .......... ..........  587K  9950K .......... .......... .......... .......... ..........  117M 10000K .......... .......... .......... .......... .......... 22.4M 10050K .......... .......... .......... .......... ..........  597K 10100K .......... .......... .......... .......... ..........  146M 10150K .......... .......... .......... .......... ..........  582K 10200K .......... .......... .......... .......... ..........  122M 10250K .......... .......... .......... .......... ..........  122M 10300K .......... .......... .......... .......... ..........  571K 10350K .......... .......... .......... .......... ..........  127M 10400K .......... .......... .......... .......... ..........  584K 10450K .......... .......... .......... .......... ..........  124M 10500K .......... .......... .......... .......... ..........  134M 10550K .......... .......... .......... .......... ..........  585K 10600K .......... .......... .......... .......... ..........  104M 10650K .......... .......... .......... .......... ..........  142M 10700K .......... .......... .......... .......... ..........  584K 10750K .......... .......... .......... .......... ..........  131M 10800K .......... .......... .......... .......... ..........  584K 10850K .......... .......... .......... .......... ..........  126M 10900K .......... .......... .......... .......... ..........  127M 10950K .......... .......... .......... .......... ..........  584K 11000K .......... .......... .......... .......... ..........  121M 11050K .......... .......... .......... .......... ..........  586K 11100K .......... .......... .......... .......... ..........  111M 11150K .......... .......... .......... .......... ..........  117M 11200K .......... .......... .......... .......... ..........  584K 11250K .......... .......... .......... .......... ..........  134M 11300K .......... .......... .......... .......... ..........  586K 11350K .......... .......... .......... .......... ..........  120M 11400K .......... .......... .......... .......... ..........  116M 11450K .......... .......... .......... .......... ..........  585K 11500K .......... .......... .......... .......... ..........  101M 11550K .......... .......... .......... .......... ..................  920K 50150K .......... .......... .......... .......... .......... 2.23M 50200K .......... .......... .......... .......... .......... 58.0M 50250K .......... .......... .......... .......... .......... 1.20M 50300K .......... .......... .......... .......... .......... 1.09M 50350K .......... .......... .......... .......... ..........  129M 50400K .......... .......... .......... .......... .......... 1.16M 50450K .......... .......... .......... .......... .......... 1.09M 50500K .......... .......... .......... .......... ..........  139M 50550K .......... .......... .......... .......... .......... 1.40M 50600K .......... .......... .......... .......... ..........  982K 50650K .......... .......... .......... .......... ..........  137M 50700K .......... .......... .......... .......... .......... 4.97M 50750K .......... .......... .......... .......... ..........  915K 50800K .......... .......... .......... .......... .......... 2.23M 50850K .......... .......... .......... .......... .......... 5.19M 50900K .......... .......... .......... .......... ..........  909K 50950K .......... .......... .......... .......... .......... 2.21M 51000K .......... .......... .......... .......... ..........  122M 51050K .......... .......... .......... .......... .......... 1.17M 51100K .......... .......... .......... .......... .......... 1.12M 51150K .......... .......... .......... .......... ..........  137M 51200K .......... .......... .......... .......... .......... 1.15M 51250K .......... .......... .......... .......... .......... 1.13M 51300K .......... .......... .......... .......... .......... 84.8M 51350K .......... .......... .......... .......... .......... 1.38M 51400K .......... .......... .......... .......... .......... 1.71M 51450K .......... .......... .......... .......... .......... 2.22M 51500K .......... .......... .......... .......... ..........  105M 51550K .......... .......... .......... .......... ..........  806K 51600K .......... .......... .......... .......... .......... 2.08M 51650K .......... .......... .......... .......... .......... 65.9M 51700K .......... .......... .......... .......... .......... 1.16M 51750K .......... .......... .......... .......... .......... 1.13M 51800K .......... .......... .......... .......... ..........  106M 51850K .......... .......... .......... .......... .......... 1.34M 51900K .......... .......... .......... .......... .......... 1022K 51950K .......... .......... .......... .......... .......... 63.4M 52000K .......... .......... .......... .......... .......... 1.34M 52050K .......... .......... .......... .......... .......... 1.00M 52100K .......... .......... .......... .......... .......... 44.0M 52150K .......... .......... .......... .......... .......... 4.47M 52200K .......... .......... .......... .......... ..........  936K 52250K .......... .......... .......... .......... .......... 2.18M 52300K .......... .......... .......... .......... .......... 22.4M 52350K .......... .......... .......... .......... .......... 1.19M 52400K .......... .......... .......... .......... .......... 1.14M 52450K .......... .......... .......... .......... .......... 20.2M 52500K .......... .......... .......... .......... .......... 1.20M 52550K .......... .......... .......... .......... .......... 1.13M 52600K .......... .......... .......... .......... .......... 45.7M 52650K .......... .......... .......... .......... .......... 1.30M 52700K .......... .......... .......... .......... .......... 1.06M 52750K .......... .......... .......... .......... .......... 17.6M 52800K .......... .......... .......... .......... .......... 1.30M 52850K .......... .......... .......... .......... .......... 1.87M 52900K .......... .......... .......... .......... .......... 2.13M 52950K .......... .......... .......... .......... .......... 11.9M 53000K .......... .......... .......... .......... ..........  856K 53050K .......... .......... .......... .......... .......... 2.05M 53100K .......... .......... .......... .......... ..........  140M 53150K .......... .......... .......... .......... ..........  810K 53200K .......... .......... .......... .......... .......... 2.02M 53250K .......... .......... .......... .......... ..........  136M 53300K .......... .......... .......... .......... .......... 1.21M 53350K .......... .......... .......... .......... .......... 1.14M 53400K .......... .......... .......... .......... .......... 19.3M 53450K .......... .......... .......... .......... .......... 4.83M 53500K .......... .......... .......... .......... ..........  957K 53550K .......... .......... .......... .......... .......... 2.04M 53600K .......... .......... .......... .......... .......... 4.81M 53650K .......... .......... .......... .......... ..........  937K 53700K .......... .......... .......... .......... .......... 2.18M 53750K .......... .......... .......... .......... .......... 12.0M 53800K .......... .......... .......... .......... .......... 1.19M 53850K .......... .......... .......... .......... .......... 1.18M 53900K .......... .......... .......... .......... .......... 20.9M 53950K .......... .......... .......... .......... .......... 1.16M 54000K .......... .......... .......... .......... .......... 1.17M 54050K .......... .......... .......... .......... .......... 21.3M 54100K .......... .......... .......... .......... .......... 1.30M 54150K .......... .......... .......... .......... .......... 1.12M 54200K .......... .......... .......... .......... .......... 14.8M 54250K .......... .......... .......... .......... .......... 5.13M 54300K .......... .......... .......... .......... ..........  924K 54350K .......... .......... .......... .......... .......... 2.03M 54400K .......... .......... .......... .......... .......... 23.5M 54450K .......... .......... .......... .......... ..........  827K 54500K .......... .......... .......... .......... .......... 2.04M 54550K .......... .......... .......... .......... ..........  133M 54600K .......... .......... .......... .......... .......... 1.32M 54650K .......... .......... .......... .......... .......... 1.08M 54700K .......... .......... .......... .......... .......... 13.4M 54750K .......... .......... .......... .......... .......... 1.32M 54800K .......... .......... .......... .......... .......... 1.07M 54850K .......... .......... .......... .......... .......... 13.1M 54900K .......... .......... .......... .......... .......... 5.95M 54950K .......... .......... .......... .......... ..........  918K 55000K .......... .......... .......... .......... .......... 2.08M 55050K .......... .......... .......... .......... .......... 44.4M 55100K .......... .......... .......... .......... .......... 1.27M 55150K .......... .......... .......... .......... .......... 1.05M 55200K .......... .......... .......... .......... .......... 59.5M 55250K .......... .......... .......... .......... .......... 1.27M 55300K .......... .......... .......... .......... .......... 1.08M 55350K .......... .......... .......... .......... .......... 22.5M 55400K .......... .......... .......... .......... .......... 5.34M 55450K .......... .......... .......... .......... ..........  920K 55500K .......... .......... .......... .......... .......... 2.13M 55550K .......... .......... .......... .......... .......... 18.1M 55600K .......... .......... .......... .......... .......... 1.21M 55650K .......... .......... .......... .......... .......... 1.13M 55700K .......... .......... .......... .......... .......... 66.7M 55750K .......... .......... .......... .......... .......... 1.37M 55800K .......... .......... .......... .......... .......... 1.00M 55850K .......... .......... .......... .......... .......... 30.7M 55900K .......... .......... .......... .......... .......... 27.5M 55950K .......... .......... .......... .......... ..........  809K 56000K .......... .......... .......... .......... .......... 2.17M 56050K .......... .......... .......... .......... .......... 19.8M 56100K .......... .......... .......... .......... .......... 1.20M 56150K .......... .......... .......... .......... .......... 1.14M 56200K .......... .......... .......... .......... ..........  117M 56250K .......... .......... .......... .......... .......... 1.28M 56300K .......... .......... .......... .......... .......... 1.85M 56350K .......... .......... .......... .......... .......... 2.23M 56400K .......... .......... .......... .......... .......... 5.17M 56450K .......... .......... .......... .......... ..........  914K 56500K .......... .......... .......... .......... .......... 2.25M 56550K .......... .......... .......... .......... .......... 59.1M 56600K .......... .......... .......... .......... .......... 1.30M 56650K .......... .......... .......... .......... .......... 1.03M 56700K .......... .......... .......... .......... .......... 55.1M 56750K .......... .......... .......... .......... .......... 1.27M 56800K .......... .......... .......... .......... .......... 1.84M 56850K .......... .......... .......... .......... .......... 2.31M 56900K .......... .......... .......... .......... ..........  131M 56950K .......... .......... .......... .......... .......... 1.25M 57000K .......... .......... .......... .......... .......... 1.03M 57050K .......... .......... .......... .......... .......... 74.7M 57100K .......... .......... .......... .......... .......... 5.74M 57150K .......... .......... .......... .......... ..........  896K 57200K .......... .......... .......... .......... .......... 2.26M 57250K .......... .......... .......... .......... .......... 19.4M 57300K .......... .......... .......... .......... .......... 1.28M 57350K .......... .......... .......... .......... .......... 1.08M 57400K .......... .......... .......... .......... ..........  119M 57450K .......... .......... .......... .......... .......... 5.70M 57500K .......... .......... .......... .......... ..........  864K 57550K .......... .......... .......... .......... .......... 2.46M 57600K .......... .......... .......... .......... .......... 17.7M 57650K .......... .......... .......... .......... .......... 1.29M 57700K .......... .......... .......... .......... .......... 1.07M 57750K .......... .......... .......... .......... ..........  126M 57800K .......... .......... .......... .......... .......... 5.94M 57850K .......... .......... .......... .......... ..........  911K 57900K .......... .......... .......... .......... .......... 2.13M 57950K .......... .......... .......... .......... ..........  120M 58000K .......... .......... .......... .......... .......... 1.18M 58050K .......... .......... .......... .......... .......... 1.10M 58100K .......... .......... .......... .......... ..........  121M 58150K .......... .......... .......... .......... .......... 17.1M 58200K .......... .......... .......... .......... .......... 1.23M 58250K .......... .......... .......... .......... .......... 1.12M 58300K .......... .......... .......... .......... ..........  126M 58350K .......... .......... .......... .......... .......... 1.17M 58400K .......... .......... .......... .......... .......... 1.95M 58450K .......... .......... .......... .......... .......... 2.55M 58500K .......... .......... .......... .......... ..........  140M 58550K .......... .......... .......... .......... .......... 1.15M 58600K .......... .......... .......... .......... .......... 1.13M 58650K .......... .......... .......... .......... ..........  130M 58700K .......... .......... .......... .......... .......... 87.0M 58750K .......... .......... .......... .......... .......... 1.16M 58800K .......... .......... .......... .......... .......... 1.13M 58850K .......... .......... .......... .......... .......... 98.1M 58900K .......... .......... .......... .......... .......... 4.10M 58950K .......... .......... .......... .......... ..........  940K 59000K .......... .......... .......... .......... .......... 2.33M 59050K .......... .......... .......... .......... .......... 37.3M 59100K .......... .......... .......... .......... .......... 1.20M 59150K .......... .......... .......... .......... .......... 1.71M 59200K .......... .......... .......... .......... .......... 3.15M 59250K .......... .......... .......... .......... .......... 28.7M 59300K .......... .......... .......... .......... .......... 1.20M 59350K .......... .......... .......... .......... .......... 1.71M 59400K .......... .......... .......... .......... .......... 3.11M 59450K .......... .......... .......... .......... .......... 35.0M 59500K .......... .......... .......... .......... .......... 1.16M 59550K .......... .......... .......... .......... .......... 1.17M 59600K .......... .......... .......... .......... .......... 59.8M 59650K .......... .......... .......... .......... .......... 18.2M 59700K .......... .......... .......... .......... .......... 1.20M 59750K .......... .......... .......... .......... .......... 1.17M 59800K .......... .......... .......... .......... .......... 48.8M 59850K .......... .......... .......... .......... .......... 31.2M 59900K .......... .......... .......... .......... .......... 1.16M 59950K .......... .......... .......... .......... .......... 1.18M 60000K .......... .......... .......... .......... .......... 22.1M 60050K .......... .......... .......... .......... .......... 28.6M 60100K .......... .......... .......... .......... .......... 1.21M 60150K .......... .......... .......... .......... .......... 1.17M 60200K .......... .......... .......... .......... .......... 22.4M 60250K .......... .......... .......... .......... .......... 39.3M 60300K .......... .......... .......... .......... .......... 1.19M 60350K .......... .......... .......... .......... .......... 1.17M 60400K .......... .......... .......... .......... .......... 24.7M 60450K .......... .......... .......... .......... .......... 43.4M 60500K .......... .......... .......... .......... .......... 1.16M 60550K .......... .......... .......... .......... .......... 1.71M 60600K .......... .......... .......... .......... .......... 3.49M 60650K .......... .........                                    156M=50s2024-11-11 19:14:58 (1.19 MB/s) - 'exp_quant.zip' saved [62125370]--2024-11-11 19:15:03--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  193K 4s    50K .......... .......... .......... .......... .......... 12%  290K 3s   100K .......... .......... .......... .......... .......... 18%  290K 3s   150K .......... .......... .......... .......... .......... 24%  578K 2s   200K .......... .......... .......... .......... .......... 30%  579K 2s   250K .......... .......... .......... .......... .......... 36%  578K 2s   300K .......... .......... .......... .......... .......... 42%  290K 1s   350K .......... .......... .......... .......... .......... 48% 1.12M 1s   400K .......... .......... .......... .......... .......... 54%  387K 1s   450K .......... .......... .......... .......... .......... 60% 14.4M 1s   500K .......... .......... .......... .......... .......... 66%  597K 1s   550K .......... .......... .......... .......... .......... 72%  581K 1s   600K .......... .......... .......... .......... .......... 78% 1.11M 0s   650K .......... .......... .......... .......... .......... 84% 1.14M 0s   700K .......... .......... .......... .......... .......... 90%  580K 0s   750K .......... .......... .......... .......... .......... 96% 23.1M 0s   800K .......... .......... .......                         100%  670K=1.6s2024-11-11 19:15:05 (518 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="69.19834613800049">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-11-11 19:00:32.969] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-11-11 19:00:32.970] [jLog] [info] building indexout : ./index[2024-11-11 19:00:32.970] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-11-11 19:00:32.980] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-11-11 19:00:32.980] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-11-11 19:00:32.995] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-11-11 19:00:32.997] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-11-11 19:00:33.066] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-11-11 19:00:33.066] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.2562 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 799.18 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-11-11 19:00:33.068] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-11-11 19:00:33.068] [puff::index::jointLog] [info] contig count for validation: 23[2024-11-11 19:00:33.069] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-11-11 19:00:33.069] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-11-11 19:00:33.069] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-11-11 19:00:33.069] [puff::index::jointLog] [info] bits per offset entry 6[2024-11-11 19:00:33.069] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-11-11 19:00:33.082] [puff::index::jointLog] [info] # segments = 23[2024-11-11 19:00:33.082] [puff::index::jointLog] [info] total length = 19592[2024-11-11 19:00:33.082] [puff::index::jointLog] [info] Reading the reference files ...[2024-11-11 19:00:33.093] [puff::index::jointLog] [info] positional integer width = 15[2024-11-11 19:00:33.093] [puff::index::jointLog] [info] seqSize = 19592[2024-11-11 19:00:33.093] [puff::index::jointLog] [info] rankSize = 19592[2024-11-11 19:00:33.093] [puff::index::jointLog] [info] edgeVecSize = 0[2024-11-11 19:00:33.093] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela.. sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-11-11 19:00:33.179] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-11-11 19:00:33.179] [puff::index::jointLog] [info] chunk size = 9796[2024-11-11 19:00:33.179] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-11-11 19:00:33.179] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-11-11 19:00:33.181] [puff::index::jointLog] [info] finished populating pos vector[2024-11-11 19:00:33.181] [puff::index::jointLog] [info] writing index components[2024-11-11 19:00:33.195] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-11-11 19:00:33.201] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-11-11 19:00:33.942] [jointLog] [info] setting maxHashResizeThreads to 6[2024-11-11 19:00:33.942] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-11-11 19:00:33.942] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-11-11 19:00:33.942] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-11-11 19:00:33.942] [jointLog] [info] parsing read library format[2024-11-11 19:00:33.942] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 830.36 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.5442 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 583.65 us----------------------------------------------------------------------------------| Loading mphf table | Time = 1.0128 ms-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.1884 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 935.19 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.4119 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 868.31 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 568.43 us-----------------------------------------[2024-11-11 19:00:34.082] [jointLog] [info] Loading pufferfish index[2024-11-11 19:00:34.083] [jointLog] [info] Loading dense pufferfish index.[2024-11-11 19:00:34.095] [jointLog] [info] done[2024-11-11 19:00:34.095] [jointLog] [info] Index contained 15 targets[2024-11-11 19:00:34.095] [jointLog] [info] Number of decoys : 0[2024-11-11 19:00:34.166] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-11-11 19:00:34.166] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-11-11 19:00:34.167] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-11-11 19:00:34.167] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-11-11 19:00:34.167] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-11-11 19:00:34.167] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-11-11 19:00:34.168] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-11-11 19:00:34.168] [jointLog] [info] Mapping rate = 100%[2024-11-11 19:00:34.168] [jointLog] [info] finished quantifyLibrary()[2024-11-11 19:00:34.173] [jointLog] [info] Starting optimizer[2024-11-11 19:00:34.174] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-11-11 19:00:34.174] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-11-11 19:00:34.175] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-11-11 19:00:34.175] [jointLog] [info] Finished optimizer[2024-11-11 19:00:34.175] [jointLog] [info] writing output [2024-11-11 19:00:34.181] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="40.27420973777771">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 57--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-11-11 19:01:17.394] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-11-11 19:01:17.394] [jLog] [info] building indexout : ./index[2024-11-11 19:01:17.395] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-11-11 19:01:17.403] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-11-11 19:01:17.403] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-11-11 19:01:17.416] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-11-11 19:01:17.418] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-11-11 19:01:17.488] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-11-11 19:01:17.488] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.2097 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 919.98 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-11-11 19:01:17.490] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-11-11 19:01:17.490] [puff::index::jointLog] [info] contig count for validation: 23[2024-11-11 19:01:17.491] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-11-11 19:01:17.491] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-11-11 19:01:17.491] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-11-11 19:01:17.491] [puff::index::jointLog] [info] bits per offset entry 6[2024-11-11 19:01:17.491] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-11-11 19:01:17.502] [puff::index::jointLog] [info] # segments = 23[2024-11-11 19:01:17.502] [puff::index::jointLog] [info] total length = 19592[2024-11-11 19:01:17.502] [puff::index::jointLog] [info] Reading the reference files ...[2024-11-11 19:01:17.517] [puff::index::jointLog] [info] positional integer width = 15[2024-11-11 19:01:17.517] [puff::index::jointLog] [info] seqSize = 19592[2024-11-11 19:01:17.517] [puff::index::jointLog] [info] rankSize = 19592[2024-11-11 19:01:17.517] [puff::index::jointLog] [info] edgeVecSize = 0[2024-11-11 19:01:17.517] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-11-11 19:01:17.608] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-11-11 19:01:17.608] [puff::index::jointLog] [info] chunk size = 9796[2024-11-11 19:01:17.608] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-11-11 19:01:17.608] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-11-11 19:01:17.610] [puff::index::jointLog] [info] finished populating pos vector[2024-11-11 19:01:17.610] [puff::index::jointLog] [info] writing index components[2024-11-11 19:01:17.626] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-11-11 19:01:17.633] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-11-11 19:01:17.723] [jointLog] [info] setting maxHashResizeThreads to 6[2024-11-11 19:01:17.723] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-11-11 19:01:17.723] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-11-11 19:01:17.723] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-11-11 19:01:17.723] [jointLog] [info] parsing read library format[2024-11-11 19:01:17.723] [jointLog] [info] There is 1 library.[2024-11-11 19:01:17.843] [jointLog] [info] Loading pufferfish index-----------------------------------------| Loading contig table | Time = 823.26 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.4424 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 533.37 us----------------------------------------------------------------------------------| Loading mphf table | Time = 878.12 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 810.66 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 946.93 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.7649 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 937.83 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 697.83 us-----------------------------------------[2024-11-11 19:01:17.844] [jointLog] [info] Loading dense pufferfish index.[2024-11-11 19:01:17.855] [jointLog] [info] done[2024-11-11 19:01:17.855] [jointLog] [info] Index contained 15 targets[2024-11-11 19:01:17.855] [jointLog] [info] Number of decoys : 0[2024-11-11 19:01:17.927] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-11-11 19:01:17.927] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-11-11 19:01:17.929] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-11-11 19:01:17.929] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-11-11 19:01:17.929] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-11-11 19:01:17.929] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-11-11 19:01:17.929] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-11-11 19:01:17.929] [jointLog] [info] Mapping rate = 100%[2024-11-11 19:01:17.929] [jointLog] [info] finished quantifyLibrary()[2024-11-11 19:01:17.935] [jointLog] [info] Starting optimizer[2024-11-11 19:01:17.935] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-11-11 19:01:17.935] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-11-11 19:01:17.936] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-11-11 19:01:17.937] [jointLog] [info] Finished optimizer[2024-11-11 19:01:17.937] [jointLog] [info] writing output [2024-11-11 19:01:17.942] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="39.60263538360596">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-11-11 19:01:57.147] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-11-11 19:01:57.147] [jLog] [info] building indexout : ./index[2024-11-11 19:01:57.148] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-11-11 19:01:57.157] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-11-11 19:01:57.157] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-11-11 19:01:57.172] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-11-11 19:01:57.174] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-11-11 19:01:57.242] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-11-11 19:01:57.242] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.1561 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 926.17 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-11-11 19:01:57.244] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-11-11 19:01:57.244] [puff::index::jointLog] [info] contig count for validation: 23[2024-11-11 19:01:57.245] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-11-11 19:01:57.245] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-11-11 19:01:57.245] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-11-11 19:01:57.245] [puff::index::jointLog] [info] bits per offset entry 6[2024-11-11 19:01:57.245] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-11-11 19:01:57.257] [puff::index::jointLog] [info] # segments = 23[2024-11-11 19:01:57.257] [puff::index::jointLog] [info] total length = 19592[2024-11-11 19:01:57.257] [puff::index::jointLog] [info] Reading the reference files ...[2024-11-11 19:01:57.267] [puff::index::jointLog] [info] positional integer width = 15[2024-11-11 19:01:57.267] [puff::index::jointLog] [info] seqSize = 19592[2024-11-11 19:01:57.267] [puff::index::jointLog] [info] rankSize = 19592[2024-11-11 19:01:57.267] [puff::index::jointLog] [info] edgeVecSize = 0[2024-11-11 19:01:57.267] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-11-11 19:01:57.357] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-11-11 19:01:57.357] [puff::index::jointLog] [info] chunk size = 9796[2024-11-11 19:01:57.357] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-11-11 19:01:57.357] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-11-11 19:01:57.358] [puff::index::jointLog] [info] finished populating pos vector[2024-11-11 19:01:57.358] [puff::index::jointLog] [info] writing index components[2024-11-11 19:01:57.373] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-11-11 19:01:57.380] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-11-11 19:01:57.480] [jointLog] [info] setting maxHashResizeThreads to 6[2024-11-11 19:01:57.480] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-11-11 19:01:57.480] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-11-11 19:01:57.480] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-11-11 19:01:57.480] [jointLog] [info] parsing read library format[2024-11-11 19:01:57.480] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 781.86 us-----------------------------------------[2024-11-11 19:01:57.598] [jointLog] [info] Loading pufferfish index[2024-11-11 19:01:57.599] [jointLog] [info] Loading dense pufferfish index.size = 24-----------------------------------------| Loading contig offsets | Time = 1.227 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 442.35 us----------------------------------------------------------------------------------| Loading mphf table | Time = 838.73 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 799.92 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 687.51 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 845.68 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 868.91 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 520.26 us-----------------------------------------[2024-11-11 19:01:57.608] [jointLog] [info] done[2024-11-11 19:01:57.608] [jointLog] [info] Index contained 15 targets[2024-11-11 19:01:57.608] [jointLog] [info] Number of decoys : 0[2024-11-11 19:01:57.680] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-11-11 19:01:57.680] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-11-11 19:01:57.682] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-11-11 19:01:57.682] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-11-11 19:01:57.682] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-11-11 19:01:57.682] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-11-11 19:01:57.682] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-11-11 19:01:57.682] [jointLog] [info] Mapping rate = 100%[2024-11-11 19:01:57.682] [jointLog] [info] finished quantifyLibrary()[2024-11-11 19:01:57.687] [jointLog] [info] Starting optimizer[2024-11-11 19:01:57.688] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-11-11 19:01:57.688] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-11-11 19:01:57.689] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-11-11 19:01:57.689] [jointLog] [info] Finished optimizer[2024-11-11 19:01:57.689] [jointLog] [info] writing output [2024-11-11 19:01:57.694] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="42.806406021118164">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "237806c3fbcada64",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "a58136f5ecf2fe4a",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/3/4/d/dataset_34d52ce9-31b8-4a43-9124-f1b3f1261345.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-11-11T19:02:36.461396",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xhthh",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0f5026defeba8fc0",  "id": "bb071d88d93add40",  "inputs": {   "quant_type|afile": {    "id": "237806c3fbcada64",    "src": "hda",    "uuid": "3287d064-3d0e-4a7e-94bb-fa334ddf6afe"   },   "quant_type|transcript": {    "id": "a58136f5ecf2fe4a",    "src": "hda",    "uuid": "34d52ce9-31b8-4a43-9124-f1b3f1261345"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1731351760.0000000",    "title": "Job End Time",    "value": "2024-11-11 19:02:40"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1731351758.0000000",    "title": "Job Start Time",    "value": "2024-11-11 19:02:38"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "8a52dcf4adbdc47b",    "src": "hda",    "uuid": "66e19c57-41df-4378-8aa0-f8e181e88bad"   },   "postSample": {    "id": "3d60f048e15adf12",    "src": "hda",    "uuid": "e6f751fd-8eb3-40c4-b593-76935f80c170"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 150, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 151, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/3/4/d/dataset_34d52ce9-31b8-4a43-9124-f1b3f1261345.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-11-11 19:02:38.316] [jointLog] [info] setting maxHashResizeThreads to 6\nLibrary format { type:[2024-11-11 19:02:38.316] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nsingle end, relative orientation:none, strandedness:unstranded }\n[2024-11-11 19:02:38.316] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat\", fasta = \"/galaxy/server/database/objects/3/4/d/dataset_34d52ce9-31b8-4a43-9124-f1b3f1261345.dat\" . . .done\n[2024-11-11 19:02:38.892] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-11-11 19:02:39.143] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-11-11 19:02:39.152] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-11-11 19:02:39.152] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-11-11 19:02:39.152] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-11-11 19:02:39.154] [jointLog] [info] starting optimizer\n[2024-11-11 19:02:39.154] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-11-11 19:02:39.154] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-11-11 19:02:39.156] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-11-11 19:02:39.156] [jointLog] [info] finished optimizer\n[2024-11-11 19:02:39.156] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-11-11 19:02:39.161] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/3/4/d/dataset_34d52ce9-31b8-4a43-9124-f1b3f1261345.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-11-11 19:02:38.316] [jointLog] [info] setting maxHashResizeThreads to 6\nLibrary format { type:[2024-11-11 19:02:38.316] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nsingle end, relative orientation:none, strandedness:unstranded }\n[2024-11-11 19:02:38.316] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat\", fasta = \"/galaxy/server/database/objects/3/4/d/dataset_34d52ce9-31b8-4a43-9124-f1b3f1261345.dat\" . . .done\n[2024-11-11 19:02:38.892] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-11-11 19:02:39.143] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-11-11 19:02:39.152] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-11-11 19:02:39.152] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-11-11 19:02:39.152] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-11-11 19:02:39.154] [jointLog] [info] starting optimizer\n[2024-11-11 19:02:39.154] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-11-11 19:02:39.154] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-11-11 19:02:39.156] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-11-11 19:02:39.156] [jointLog] [info] finished optimizer\n[2024-11-11 19:02:39.156] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-11-11 19:02:39.161] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "update_time": "2024-11-11T19:02:53.877119",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_j9cog6e8.sam v. /tmp/history_bam_converted_to_sam_gm92yrct.sam )\n--- local_file\n+++ history_data\n@@ -1,4 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n+@PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -14,66 +16,136 @@\n @SQ\tSN:NM_153693\tLN:2072\n @SQ\tSN:NM_173860\tLN:849\n @SQ\tSN:NR_003084\tLN:1640\n-@PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n-@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.16.1\tCL:samtools sort -@ 1 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n+1811:NM_174914:0:188\t99\tNM_001168316\t1\t1\t50M\t=\t139\t188\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+3775:NM_174914:0:140\t99\tNM_001168316\t1\t1\t50M\t=\t91\t140\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n 8380:NM_174914:0:170\t163\tNM_001168316\t1\t1\t50M\t=\t121\t170\tTTAGTGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+567:NM_174914:5:165\t99\tNM_001168316\t6\t1\t50M\t=\t121\t165\tGAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGG\t*\tNH:i:3\tHI:i:1\tAS:i:0\n 2546:NM_174914:6:160\t163\tNM_001168316\t7\t1\t50M\t=\t117\t160\tAGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+4806:NR_031764:7:194\t99\tNM_001168316\t8\t1\t50M\t=\t152\t194\tGGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+2590:NR_031764:8:152\t99\tNM_001168316\t9\t1\t50M\t=\t111\t152\tGTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAA\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+1161:NM_174914:9:183\t99\tNM_001168316\t10\t1\t50M\t=\t143\t183\tTTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAAC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+1332:NM_174914:10:177\t99\tNM_001168316\t11\t1\t50M\t=\t138\t177\tTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAACC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n+6621:NM_174914:10:179\t99\tNM_001168316\t11\t1\t50M\t=\t140\t179\tTGGGGAGAGATAACGCTGTAAACTTTTATTTTTCAGGAAATCTGGAAACC\t*\tNH:i:3\tHI:i:1\tAS:i:0\n********\n*SNIP *\n********\n+9853:NM_018953:1427:182\t355\tNR_003084\t1456\t1\t50M\t=\t1588\t182\tCAACTAGTGGGGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+7857:NM_018953:1428:165\t419\tNR_003084\t1457\t1\t50M\t=\t1572\t165\tAACTAGTGGGGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3858:NM_018953:1305:183\t339\tNR_003084\t1467\t1\t50M\t=\t1334\t-183\tGTTTCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+8186:NM_018953:1442:153\t355\tNR_003084\t1471\t1\t50M\t=\t1574\t153\tCCTGGCACTGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCAT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3225:NM_018953:1324:177\t403\tNR_003084\t1480\t1\t50M\t=\t1353\t-177\tGGACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9380:NM_018953:1348:155\t403\tNR_003084\t1482\t1\t50M\t=\t1377\t-155\tACCCCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6585:NM_018953:1338:169\t403\tNR_003084\t1486\t1\t50M\t=\t1367\t-169\tCAGCAAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6863:NM_018953:1319:193\t339\tNR_003084\t1491\t1\t50M\t=\t1348\t-193\tAGTGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9258:NM_018953:1324:191\t403\tNR_003084\t1494\t1\t50M\t=\t1353\t-191\tGGTCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+4115:NM_018953:1339:179\t403\tNR_003084\t1497\t1\t50M\t=\t1368\t-179\tCCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6135:NM_018953:1469:91\t355\tNR_003084\t1498\t1\t50M\t=\t1539\t91\tCTAGAGGCCCTTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCCT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9697:NM_018953:1346:184\t339\tNR_003084\t1509\t1\t50M\t=\t1375\t-184\tTTGCTGTCCCATAGTCCCTGCCACGAATTTCTGTGCCCTCCTGACCCATT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+434:NM_018953:1346:194\t339\tNR_003084\t1519\t1\t50M\t=\t1375\t-194\tATAGTCCCTGCCACGAATTTCTGTGCCCTCCTGACCCATTGCTGTTGTCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9192:NM_018953:1402:146\t403\tNR_003084\t1527\t1\t50M\t=\t1431\t-146\tTGCCACGAATTTCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+5171:NM_018953:1389:171\t339\tNR_003084\t1539\t1\t50M\t=\t1418\t-171\tCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+6135:NM_018953:1469:91\t403\tNR_003084\t1539\t1\t50M\t=\t1498\t-91\tCTGTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9690:NM_018953:1392:171\t339\tNR_003084\t1542\t1\t50M\t=\t1421\t-171\tTGCCCTCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+1465:NM_018953:1400:169\t339\tNR_003084\t1548\t1\t50M\t=\t1429\t-169\tCCTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3052:NM_018953:1396:175\t339\tNR_003084\t1550\t1\t50M\t=\t1425\t-175\tTGACCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTGAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+381:NM_018953:1382:192\t339\tNR_003084\t1553\t1\t50M\t=\t1411\t-192\tCCCATTGCTGTTGTCCAACTATTTATTGACTCTGGGTCCTTCCTGAAACT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+7857:NM_018953:1428:165\t339\tNR_003084\t1572\t1\t50M\t=\t1457\t-165\tTATTTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAAT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+8186:NM_018953:1442:153\t403\tNR_003084\t1574\t1\t50M\t=\t1471\t-153\tTTTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAA\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+3331:NM_018953:1404:193\t403\tNR_003084\t1576\t1\t50M\t=\t1433\t-193\tTATTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+2226:NM_018953:1422:177\t403\tNR_003084\t1578\t1\t50M\t=\t1451\t-177\tTTGACTCTGGGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAGAG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n+9853:NM_018953:1427:182\t403\tNR_003084\t1588\t1\t50M\t=\t1456\t-182\tGTCCTTCCTGAAACTATATTTTGTCATATCAAATAAAGAGAGAACAGGAC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 42.806406021118164, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/3/4/d/dataset_34d52ce9-31b8-4a43-9124-f1b3f1261345.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-11-11 19:02:38.316] [jointLog] [info] setting maxHashResizeThreads to 6Library format { type:[2024-11-11 19:02:38.316] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.single end, relative orientation:none, strandedness:unstranded }[2024-11-11 19:02:38.316] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat", fasta = "/galaxy/server/database/objects/3/4/d/dataset_34d52ce9-31b8-4a43-9124-f1b3f1261345.dat" . . .done[2024-11-11 19:02:38.892] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2024-11-11 19:02:39.143] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2024-11-11 19:02:39.152] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-11-11 19:02:39.152] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-11-11 19:02:39.152] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-11-11 19:02:39.154] [jointLog] [info] starting optimizer[2024-11-11 19:02:39.154] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-11-11 19:02:39.154] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2024-11-11 19:02:39.156] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-11-11 19:02:39.156] [jointLog] [info] finished optimizer[2024-11-11 19:02:39.156] [jointLog] [info] writing outputResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2024-11-11 19:02:39.161] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/3/2/8/dataset_3287d064-3d0e-4a7e-94bb-fa334ddf6afe.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="38.896995544433594">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-11-11 19:03:19.473] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-11-11 19:03:19.473] [jLog] [info] building indexout : ./index[2024-11-11 19:03:19.474] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-11-11 19:03:19.483] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-11-11 19:03:19.483] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-11-11 19:03:19.496] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-11-11 19:03:19.498] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-11-11 19:03:19.564] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-11-11 19:03:19.564] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.0337 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 851.74 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-11-11 19:03:19.566] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-11-11 19:03:19.566] [puff::index::jointLog] [info] contig count for validation: 23[2024-11-11 19:03:19.566] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-11-11 19:03:19.566] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-11-11 19:03:19.567] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-11-11 19:03:19.567] [puff::index::jointLog] [info] bits per offset entry 6[2024-11-11 19:03:19.567] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-11-11 19:03:19.578] [puff::index::jointLog] [info] # segments = 23[2024-11-11 19:03:19.578] [puff::index::jointLog] [info] total length = 19592[2024-11-11 19:03:19.578] [puff::index::jointLog] [info] Reading the reference files ...[2024-11-11 19:03:19.589] [puff::index::jointLog] [info] positional integer width = 15[2024-11-11 19:03:19.589] [puff::index::jointLog] [info] seqSize = 19592[2024-11-11 19:03:19.589] [puff::index::jointLog] [info] rankSize = 19592[2024-11-11 19:03:19.589] [puff::index::jointLog] [info] edgeVecSize = 0[2024-11-11 19:03:19.589] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..ec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-11-11 19:03:19.674] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-11-11 19:03:19.674] [puff::index::jointLog] [info] chunk size = 9796[2024-11-11 19:03:19.674] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-11-11 19:03:19.674] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-11-11 19:03:19.676] [puff::index::jointLog] [info] finished populating pos vector[2024-11-11 19:03:19.676] [puff::index::jointLog] [info] writing index components[2024-11-11 19:03:19.693] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-11-11 19:03:19.699] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-11-11 19:03:19.796] [jointLog] [info] setting maxHashResizeThreads to 6[2024-11-11 19:03:19.796] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-11-11 19:03:19.796] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-11-11 19:03:19.796] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-11-11 19:03:19.796] [jointLog] [info] parsing read library format[2024-11-11 19:03:19.796] [jointLog] [info] There is 1 library.[2024-11-11 19:03:19.915] [jointLog] [info] Loading pufferfish index[2024-11-11 19:03:19.916] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading contig table | Time = 898.35 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.5565 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 622.37 us----------------------------------------------------------------------------------| Loading mphf table | Time = 762.92 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 1.0354 ms-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 989.47 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.5489 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 774.05 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 691.93 us-----------------------------------------[2024-11-11 19:03:19.928] [jointLog] [info] done[2024-11-11 19:03:19.928] [jointLog] [info] Index contained 15 targets[2024-11-11 19:03:19.928] [jointLog] [info] Number of decoys : 0[2024-11-11 19:03:19.998] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-11-11 19:03:19.998] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-11-11 19:03:20.000] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-11-11 19:03:20.000] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-11-11 19:03:20.000] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-11-11 19:03:20.000] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-11-11 19:03:20.000] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-11-11 19:03:20.000] [jointLog] [info] Mapping rate = 100%[2024-11-11 19:03:20.000] [jointLog] [info] finished quantifyLibrary()[2024-11-11 19:03:20.005] [jointLog] [info] Starting optimizer[2024-11-11 19:03:20.006] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-11-11 19:03:20.006] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-11-11 19:03:20.007] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-11-11 19:03:20.007] [jointLog] [info] Finished optimizer[2024-11-11 19:03:20.007] [jointLog] [info] writing output [2024-11-11 19:03:20.012] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="40.53917074203491">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-11-11 19:03:58.917] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-11-11 19:03:58.917] [jLog] [info] building indexout : ./index[2024-11-11 19:03:58.918] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-11-11 19:03:58.926] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-11-11 19:03:58.926] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-11-11 19:03:58.939] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-11-11 19:03:58.941] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-11-11 19:03:59.013] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-11-11 19:03:59.013] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.2253 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 1.0782 ms-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-11-11 19:03:59.015] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-11-11 19:03:59.015] [puff::index::jointLog] [info] contig count for validation: 23[2024-11-11 19:03:59.016] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-11-11 19:03:59.016] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-11-11 19:03:59.016] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-11-11 19:03:59.016] [puff::index::jointLog] [info] bits per offset entry 6[2024-11-11 19:03:59.016] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-11-11 19:03:59.031] [puff::index::jointLog] [info] # segments = 23[2024-11-11 19:03:59.031] [puff::index::jointLog] [info] total length = 19592[2024-11-11 19:03:59.031] [puff::index::jointLog] [info] Reading the reference files ...[2024-11-11 19:03:59.043] [puff::index::jointLog] [info] positional integer width = 15[2024-11-11 19:03:59.043] [puff::index::jointLog] [info] seqSize = 19592[2024-11-11 19:03:59.043] [puff::index::jointLog] [info] rankSize = 19592[2024-11-11 19:03:59.043] [puff::index::jointLog] [info] edgeVecSize = 0[2024-11-11 19:03:59.043] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela..Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-11-11 19:03:59.129] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-11-11 19:03:59.129] [puff::index::jointLog] [info] chunk size = 9796[2024-11-11 19:03:59.129] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-11-11 19:03:59.129] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-11-11 19:03:59.130] [puff::index::jointLog] [info] finished populating pos vector[2024-11-11 19:03:59.130] [puff::index::jointLog] [info] writing index components[2024-11-11 19:03:59.145] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-11-11 19:03:59.151] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-11-11 19:03:59.252] [jointLog] [info] setting maxHashResizeThreads to 6[2024-11-11 19:03:59.252] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-11-11 19:03:59.252] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-11-11 19:03:59.252] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-11-11 19:03:59.252] [jointLog] [info] parsing read library format[2024-11-11 19:03:59.252] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 918.58 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.5474 ms-----------------------------------------[2024-11-11 19:03:59.369] [jointLog] [info] Loading pufferfish index[2024-11-11 19:03:59.370] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading reference lengths | Time = 593.84 us----------------------------------------------------------------------------------| Loading mphf table | Time = 588.97 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 959.78 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 854.5 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.1666 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 888.25 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 517.13 us-----------------------------------------[2024-11-11 19:03:59.380] [jointLog] [info] done[2024-11-11 19:03:59.380] [jointLog] [info] Index contained 15 targets[2024-11-11 19:03:59.381] [jointLog] [info] Number of decoys : 0[2024-11-11 19:03:59.381] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-11-11 19:03:59.451] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-11-11 19:03:59.451] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-11-11 19:03:59.453] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-11-11 19:03:59.453] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-11-11 19:03:59.453] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-11-11 19:03:59.453] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-11-11 19:03:59.453] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-11-11 19:03:59.453] [jointLog] [info] Mapping rate = 100%[2024-11-11 19:03:59.453] [jointLog] [info] finished quantifyLibrary()[2024-11-11 19:03:59.458] [jointLog] [info] Starting optimizer[2024-11-11 19:03:59.459] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-11-11 19:03:59.459] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-11-11 19:03:59.459] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-11-11 19:03:59.464] [jointLog] [info] Computed expected counts (for bias correction)[2024-11-11 19:03:59.467] [jointLog] [info] processed bias for 26.7% of the transcripts[2024-11-11 19:03:59.467] [jointLog] [info] processed bias for 26.7% of the transcripts[2024-11-11 19:03:59.467] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-11-11 19:03:59.467] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-11-11 19:03:59.468] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-11-11 19:03:59.469] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-11-11 19:03:59.469] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-11-11 19:03:59.470] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-11-11 19:03:59.471] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-11-11 19:03:59.471] [jointLog] [info] Finished optimizer[2024-11-11 19:03:59.471] [jointLog] [info] writing output [2024-11-11 19:03:59.476] [jointLog] [info] writing equivalence class counts.[2024-11-11 19:03:59.477] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-11-11 19:03:59.477] [jointLog] [info] done.[2024-11-11 19:03:59.481] [jointLog] [info] done writing equivalence class counts.[2024-11-11 19:03:59.482] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="43.75766086578369">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="12.93001127243042">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.93001127243042, "tool_id": "samtools_bedcov", "tool_version": "2.0.4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="40.7454400062561">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="44.878504276275635">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #5)" name="4" time="39.882559299468994">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #6)" name="5" time="39.339707136154175">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #7)" name="6" time="39.79503035545349">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="42.65440535545349">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="41.23112106323242">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="87.32259893417358">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="48.759785652160645">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="49.42183232307434">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="49.744462728500366">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="101.28257298469543">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/f/2/7/dataset_f273c38c-e96a-41d7-8000-c9227514e295.dat--pe1-2fastq:/galaxy/server/database/objects/1/d/9/dataset_1d9a1464-4aa9-41d8-8947-9f885102c849.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/f/2/7/dataset_f273c38c-e96a-41d7-8000-c9227514e295.dat']      right reads: ['/galaxy/server/database/objects/1/d/9/dataset_1d9a1464-4aa9-41d8-8947-9f885102c849.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/2/7/dataset_f273c38c-e96a-41d7-8000-c9227514e295.dat  0:00:01.200     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/d/9/dataset_1d9a1464-4aa9-41d8-8947-9f885102c849.dat  0:00:02.456     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.470    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.870    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.870    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.149    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.189    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.227    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:03.230    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:03.234    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:03.236    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:03.249    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:03.249    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:03.249    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/2/7/dataset_f273c38c-e96a-41d7-8000-c9227514e295.dat  0:00:03.269    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/d/9/dataset_1d9a1464-4aa9-41d8-8947-9f885102c849.dat  0:00:03.289    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:03.289    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:03.289    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:03.303    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:03.304    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:03.304    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:03.316    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:03.316    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:03.316    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:03.316    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/2/7/dataset_f273c38c-e96a-41d7-8000-c9227514e295.dat and /galaxy/server/database/objects/1/d/9/dataset_1d9a1464-4aa9-41d8-8947-9f885102c849.dat  0:00:03.395    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.399    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.403    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.439    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.440    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.440    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:03.443    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.127    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.134     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.326   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.335     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.510   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.631     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.631     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.631     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.632     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.633     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.633     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.633     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.205     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.216    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.216    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.454    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.454    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.582    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.583    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.583    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.584    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.584    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.584    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.690     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.705    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.138    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.138    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.389    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.415    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.442    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.442    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.444    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.445    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensin..      : 346)   Closing short gaps  0:00:10.540    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.543    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.543    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.543    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.543    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.543    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.543    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.543    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.543    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.543    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.543    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.543    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.543    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.560    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.560    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.560    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.566    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.567    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.571    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.577    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:10.582    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:10.590    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.590    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.590    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.590    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.590    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.590    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.739   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.964   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.755   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:12.755   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:12.770    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:12.925   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:12.930   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.933   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.936   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:12.936   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:12.936   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:12.957   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.963   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.987    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:12.987    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:12.987    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:12.987    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:12.988    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.988    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.988    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.988    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:12.988    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:12.988    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:12.988    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.988    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.988    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:12.988    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:12.988    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.988    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.988    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.988    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:12.988    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:12.988    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:12.988    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:12.989    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.989    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.989    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:12.989    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:12.989    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.989    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.989    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.989    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.989    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.989    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.989    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.989    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.989    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:12.989    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:12.990    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:12.990    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.990    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.990    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.990    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.990    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.990    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.990    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.990    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.990    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.990    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.990    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.990    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.990    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:12.990    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.990    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.991    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:12.995    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:13.000    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:13.010    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:13.026    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:13.028    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 13 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="54.63875675201416">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/8/1/7/dataset_817a006c-7a29-46a9-874f-28c962844b20.dat--pe1-2fasta:/galaxy/server/database/objects/6/8/6/dataset_68653bb0-b64a-492b-a174-5c2406baf8f2.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/8/1/7/dataset_817a006c-7a29-46a9-874f-28c962844b20.dat']      right reads: ['/galaxy/server/database/objects/6/8/6/dataset_68653bb0-b64a-492b-a174-5c2406baf8f2.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.123    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.129     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.305   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.315     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.490   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.588     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.588     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.588     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.589     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.590     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.590     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.590     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.136     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.145    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.145    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.348    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.348    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.470    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.472    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.472    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.473    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.473    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.473    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.639     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.654    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.152    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:03.152    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.400    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.430    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.461    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:03.461    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.463    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.464    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:03.465    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:03.465    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:03.466    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:03.466    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:03.466    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:03.466    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:03.466    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.482    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:03.482    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:03.489    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:03.501    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:03.501    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:03.501    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:03.501    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:03.501    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:03.542    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:03.647    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:04.018    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:04.654    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:05.796    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:07.666    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:07.667    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:07.667    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:07.667    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:07.667    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:07.667    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:07.667    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:07.667    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:07.667    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:07.667    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:07.669    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:07.669    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:07.670    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:07.670    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:07.670    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:08.722     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:08.733    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:09.131    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:09.131    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:09.332    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:09.354    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:09.378    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:09.378    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:09.379    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:09.382    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:09.382    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:09.384    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:09.384    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:09.384    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.384    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.387    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:09.387    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:09.387    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:09.387    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:09.387    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:09.387    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:09.387    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.387  ..indices  0:00:11.145    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:11.145    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:11.147    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:11.147    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:11.147    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:11.147    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:11.147    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:11.147    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:11.147    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:11.147    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:11.147    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:11.147    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:11.148    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:11.148    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:11.148    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:11.148    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:11.148    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:11.148    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:11.148    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:11.148    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:11.148    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:11.148    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:11.148    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:11.161    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:11.161    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:11.161    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:11.168    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.168    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.168    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:11.173    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:11.177    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:11.181    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:11.188    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:11.188    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:11.188    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:11.188    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:11.188    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:11.188    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:11.327   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.552   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.331   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:13.331   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:13.346    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:13.497   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:13.502   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.506   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.510   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:13.510   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:13.510   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:13.528   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.534   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.558    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:13.558    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.558    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.558    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:13.558    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.558    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:13.558    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.558    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.558    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.558    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:13.558    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:13.558    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:13.558    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:13.559    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:13.559    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.559    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.559    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:13.560    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:13.560    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.560    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.560    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.560    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.560    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.560    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.560    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:13.560    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:13.560    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:13.561    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:13.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:13.570    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:13.580    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:13.596    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:13.599    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 13 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="56.43950796127319">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/9/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/c/8/3/dataset_c83f1238-168f-4e28-8cd9-85de42547de5.dat--pe1-2fastq.gz:/galaxy/server/database/objects/c/6/8/dataset_c68ffb6c-7fa9-43cd-9190-aae13092c78d.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/9/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/8/3/dataset_c83f1238-168f-4e28-8cd9-85de42547de5.dat']      right reads: ['/galaxy/server/database/objects/c/6/8/dataset_c68ffb6c-7fa9-43cd-9190-aae13092c78d.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.008     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/8/3/dataset_c83f1238-168f-4e28-8cd9-85de42547de5.dat  0:00:01.106     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/6/8/dataset_c68ffb6c-7fa9-43cd-9190-aae13092c78d.dat  0:00:02.061     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.074    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.440    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.440    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.681    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.705    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.728    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.730    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.733    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.734    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.744    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.744    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.744    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/8/3/dataset_c83f1238-168f-4e28-8cd9-85de42547de5.dat  0:00:02.763    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/6/8/dataset_c68ffb6c-7fa9-43cd-9190-aae13092c78d.dat  0:00:02.790    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.790    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.790    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.800    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.801    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.801    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.816    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.816    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.816    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.816    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/8/3/dataset_c83f1238-168f-4e28-8cd9-85de42547de5.dat and /galaxy/server/database/objects/c/6/8/dataset_c68ffb6c-7fa9-43cd-9190-aae13092c78d.dat  0:00:02.882    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.888    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.892    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.933    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.933    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.933    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml  0:00:02.937    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.119    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.126     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.302   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.314     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.499   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.609     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.609     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.609     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.610     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.611     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.612     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.612     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.181     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.190    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.190    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.391    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.392    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.517    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.518    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.518    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.518    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.519    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.519    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.556     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.570    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.992    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.992    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.228    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.251    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.275    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.275    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.277    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.278    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Con..      : 346)   Closing short gaps  0:00:10.263    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.265    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.265    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.265    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.265    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.265    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.265    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.265    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.265    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.265    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.265    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.265    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.265    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.279    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.279    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.279    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.287    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.287    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.287    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:10.292    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:10.297    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta  0:00:10.301    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta  0:00:10.309    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.309    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.309    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.309    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.309    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.309    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.451   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.680   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.457   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:12.457   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:12.473    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:12.629   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:12.636   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.639   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.643   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:12.643   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:12.643   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:12.661   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.666   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.693    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:12.693    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:12.693    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:12.693    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:12.693    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.693    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.693    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.693    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:12.693    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:12.693    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:12.693    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.694    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.694    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:12.694    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:12.694    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.694    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.694    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.694    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:12.694    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:12.694    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:12.694    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:12.696    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.696    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.696    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:12.696    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:12.696    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.696    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.696    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.696    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.696    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.696    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.696    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:12.696    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.696    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.698    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:12.703    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:12.707    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths  0:00:12.717    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths  0:00:12.734    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:12.737    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="67.03059768676758">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/12/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/3/a/2/dataset_3a26cc6e-2a06-467c-8841-26e973d4d356.dat--pe1-2fastq:/galaxy/server/database/objects/b/5/e/dataset_b5e5d64e-f77a-4037-9dd8-5d0bc14cba85.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/12/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/a/2/dataset_3a26cc6e-2a06-467c-8841-26e973d4d356.dat']      right reads: ['/galaxy/server/database/objects/b/5/e/dataset_b5e5d64e-f77a-4037-9dd8-5d0bc14cba85.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/a/2/dataset_3a26cc6e-2a06-467c-8841-26e973d4d356.dat  0:00:01.085     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/5/e/dataset_b5e5d64e-f77a-4037-9dd8-5d0bc14cba85.dat  0:00:02.053     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.067    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.407    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.407    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.640    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.667    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.692    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.695    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.698    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.700    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.709    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.709    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.709    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/a/2/dataset_3a26cc6e-2a06-467c-8841-26e973d4d356.dat  0:00:02.725    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/5/e/dataset_b5e5d64e-f77a-4037-9dd8-5d0bc14cba85.dat  0:00:02.741    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.741    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.741    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.752    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.754    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.754    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.763    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.763    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.763    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.763    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/a/2/dataset_3a26cc6e-2a06-467c-8841-26e973d4d356.dat and /galaxy/server/database/objects/b/5/e/dataset_b5e5d64e-f77a-4037-9dd8-5d0bc14cba85.dat  0:00:02.825    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.831    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.835    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.879    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.879    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.879    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml  0:00:02.884    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.116    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.124     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.299   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.309     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.486   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.593     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.593     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.593     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.595     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.596     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.596     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.596     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:01.128     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.136    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.136    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.331    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.331    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.449    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.450    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.450    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.451    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.451    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.451    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.480     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.495    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.932    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.932    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.179    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.206    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.234    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:03.234    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.236    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.238    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:03.238    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ear.. short gaps  0:00:06.944    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:06.947    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:06.947    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:06.947    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:06.947    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:06.947    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.947    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:06.947    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:06.947    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:06.947    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:06.947    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:06.947    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.947    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.958    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:06.958    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:06.958    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:06.963    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:06.963    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:06.964    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:06.969    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:06.973    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta  0:00:06.978    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta  0:00:06.985    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:06.985    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.985    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.985    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:06.985    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:06.985    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:07.121   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.353   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.132   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:09.132   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:09.148    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:09.314   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:09.320   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.322   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.328   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:09.328   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:09.328   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:09.347   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.353   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.380    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:09.380    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:09.380    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:09.380    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:09.380    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.380    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.380    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.380    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:09.380    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:09.380    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:09.380    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.381    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:09.381    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:09.381    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:09.381    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:09.381    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:09.381    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:09.381    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:09.381    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:09.381    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:09.381    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:09.382    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:09.383    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:09.383    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:09.383    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:09.383    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:09.383    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.383    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.383    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.383    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.383    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.383    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:09.383    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:09.383    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.383    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:09.384    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:09.390    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:09.395    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths  0:00:09.404    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths  0:00:09.421    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:09.424    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="54.01365637779236">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/15/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/e/8/a/dataset_e8ac479f-6598-4426-ad90-de110e3f5e68.dat--pe1-2fastq:/galaxy/server/database/objects/4/a/0/dataset_4a0e8039-e1e3-4157-90a1-85f976a4566f.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/15/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/e/8/a/dataset_e8ac479f-6598-4426-ad90-de110e3f5e68.dat']      right reads: ['/galaxy/server/database/objects/4/a/0/dataset_4a0e8039-e1e3-4157-90a1-85f976a4566f.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.004     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.004     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.010     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/8/a/dataset_e8ac479f-6598-4426-ad90-de110e3f5e68.dat  0:00:01.178     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/a/0/dataset_4a0e8039-e1e3-4157-90a1-85f976a4566f.dat  0:00:02.246     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.260    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.624    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.624    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.865    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.889    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.911    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.913    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.917    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.918    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.929    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.929    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.929    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/8/a/dataset_e8ac479f-6598-4426-ad90-de110e3f5e68.dat  0:00:02.945    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/a/0/dataset_4a0e8039-e1e3-4157-90a1-85f976a4566f.dat  0:00:02.960    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.960    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.960    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.968    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.969    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.969    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.978    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.978    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.978    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.978    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/e/8/a/dataset_e8ac479f-6598-4426-ad90-de110e3f5e68.dat and /galaxy/server/database/objects/4/a/0/dataset_4a0e8039-e1e3-4157-90a1-85f976a4566f.dat  0:00:03.039    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.046    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.050    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.092    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.092    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.092    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml  0:00:03.097    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.114    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.121     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.301   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.311     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.485   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.608     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.608     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.608     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.610     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.611     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.611     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.611     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:01.296     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.306    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.306    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.548    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.548    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.703    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.704    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.704    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.706    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.706    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.706    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:02.996     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:03.011    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.520    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:03.520    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.770    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.797    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.828    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:03.828    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.831    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.832    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==..sing short gaps  0:00:07.931    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.932    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.932    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.932    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.932    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.932    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.932    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.933    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.933    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.933    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.933    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:07.933    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.933    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.933    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.942    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.942    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.942    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.948    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.948    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:07.949    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:07.953    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:07.957    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta  0:00:07.961    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta  0:00:07.968    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.968    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.968    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.968    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:07.968    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.968    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.104   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.323   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.100   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.100   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:10.115    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:10.267   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.272   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.275   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.279   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.279   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.279   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.296   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.301   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.325    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.325    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.325    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.325    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.325    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.325    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.325    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.325    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.325    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.325    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.326    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.326    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.326    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.326    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.326    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.326    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.326    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.326    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.326    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.326    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.326    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.327    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:10.327    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:10.327    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.327    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.327    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.327    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.327    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.327    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.327    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.327    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.327    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.328    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.328    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.328    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.328    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.328    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:10.329    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:10.334    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:10.338    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths  0:00:10.345    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths  0:00:10.362    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.365    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="24.221231698989868">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 24.221231698989868, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="55.43926548957825">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/20/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/7/8/8/dataset_78876a1f-591c-4c75-8040-0b7fa12bf8fa.dat--pe1-2fastq:/galaxy/server/database/objects/4/a/d/dataset_4adfea38-2dfa-4756-8095-c8b7fb09fd66.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/20/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/8/8/dataset_78876a1f-591c-4c75-8040-0b7fa12bf8fa.dat']      right reads: ['/galaxy/server/database/objects/4/a/d/dataset_4adfea38-2dfa-4756-8095-c8b7fb09fd66.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/8/8/dataset_78876a1f-591c-4c75-8040-0b7fa12bf8fa.dat  0:00:01.167     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/a/d/dataset_4adfea38-2dfa-4756-8095-c8b7fb09fd66.dat  0:00:02.208     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.222    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.590    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.590    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.845    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.867    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.890    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.892    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.895    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.896    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.907    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.907    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.907    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/8/8/dataset_78876a1f-591c-4c75-8040-0b7fa12bf8fa.dat  0:00:02.923    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/a/d/dataset_4adfea38-2dfa-4756-8095-c8b7fb09fd66.dat  0:00:02.940    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.940    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.940    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.949    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.950    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.950    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.959    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.959    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.959    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.959    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/8/8/dataset_78876a1f-591c-4c75-8040-0b7fa12bf8fa.dat and /galaxy/server/database/objects/4/a/d/dataset_4adfea38-2dfa-4756-8095-c8b7fb09fd66.dat  0:00:03.021    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.027    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.030    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.073    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.073    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.073    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml  0:00:03.078    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.116    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.123     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.301   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.312     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.492   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.616     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.616     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.616     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.617     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.618     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.618     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.618     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.184     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.194    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.194    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.405    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.544    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.546    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.546    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.547    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.547    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.547    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.659     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.673    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.079    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.079    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.313    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.336    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.361    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.361    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.364    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.364    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE ==..sing short gaps  0:00:10.246    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.249    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.249    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.249    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.249    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.249    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.249    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.249    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.249    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.249    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.249    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.249    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.249    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.250    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.250    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.250    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.250    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.250    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.250    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.250    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.250    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.250    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.264    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.264    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.264    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.270    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.270    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.270    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:10.274    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:10.280    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta  0:00:10.284    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta  0:00:10.292    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.292    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.292    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.292    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.292    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.292    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.430   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.655   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.433   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:12.433   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:12.450    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:12.602   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:12.608   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.611   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.616   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:12.616   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:12.616   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:12.633   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.640   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.671    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:12.671    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:12.671    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:12.671    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:12.671    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.671    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.671    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.671    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:12.671    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:12.671    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:12.672    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.672    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.672    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:12.672    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:12.672    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.672    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.672    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.672    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:12.672    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:12.672    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:12.672    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:12.674    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.674    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.674    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:12.674    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:12.674    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.674    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.674    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.674    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.674    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.674    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.674    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:12.674    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.674    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.676    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:12.681    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:12.686    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths  0:00:12.694    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths  0:00:12.715    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:12.719    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="57.68396282196045">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/23/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/7/0/d/dataset_70da2203-0c92-4c6d-a604-afe3268abe48.dat--pe1-2fastq.gz:/galaxy/server/database/objects/7/b/c/dataset_7bc62676-9981-42f6-bf86-0f584f23cf3f.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.100+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/23/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/0/d/dataset_70da2203-0c92-4c6d-a604-afe3268abe48.dat']      right reads: ['/galaxy/server/database/objects/7/b/c/dataset_7bc62676-9981-42f6-bf86-0f584f23cf3f.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/0/d/dataset_70da2203-0c92-4c6d-a604-afe3268abe48.dat  0:00:01.111     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/b/c/dataset_7bc62676-9981-42f6-bf86-0f584f23cf3f.dat  0:00:02.135     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.149    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.492    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.492    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.741    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.767    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.796    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.800    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.804    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.806    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.816    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.816    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.817    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/0/d/dataset_70da2203-0c92-4c6d-a604-afe3268abe48.dat  0:00:02.835    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/b/c/dataset_7bc62676-9981-42f6-bf86-0f584f23cf3f.dat  0:00:02.852    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.852    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.852    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.860    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.861    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.861    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.881    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.881    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.881    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.881    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/0/d/dataset_70da2203-0c92-4c6d-a604-afe3268abe48.dat and /galaxy/server/database/objects/7/b/c/dataset_7bc62676-9981-42f6-bf86-0f584f23cf3f.dat  0:00:02.948    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.954    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.958    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.000    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml  0:00:03.006    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.116    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.123     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.306   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.316     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.496   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.627     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.627     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.627     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.628     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.630     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.630     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.630     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.218     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.228    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.228    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.439    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.439    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.558    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.559    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.559    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.561    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.561    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.561    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.658     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.673    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.082    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:03.082    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.332    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.360    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.387    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.389    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.390    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCED..sing short gaps  0:00:10.216    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.218    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.218    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.218    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.218    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.218    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.218    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.219    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.219    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.219    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.219    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:10.219    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.219    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.219    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.233    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.234    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.234    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.239    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.239    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.240    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:10.245    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:10.249    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/simplified_contigs.fasta  0:00:10.254    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/intermediate_contigs.fasta  0:00:10.263    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.263    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.263    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.263    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.263    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.263    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.403   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.626   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.410   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:12.410   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:12.427    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:12.582   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:12.587   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.590   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.593   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:12.593   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:12.593   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:12.610   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.616   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.644    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:12.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:12.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:12.644    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:12.644    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.644    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.644    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:12.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:12.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:12.644    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.644    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.644    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:12.644    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:12.645    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.645    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.645    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.645    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:12.645    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:12.645    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:12.645    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:12.646    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:12.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:12.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:12.646    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:12.646    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:12.646    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.646    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.646    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.646    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.646    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.646    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.646    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.646    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.646    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.646    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.647    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.647    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.647    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:12.647    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.647    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.648    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:12.655    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:12.660    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/final_contigs.paths  0:00:12.671    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/scaffolds.paths  0:00:12.688    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:12.691    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="61.332268476486206">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "a61c4d22c8b9c183",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/5/3/8/dataset_53835b36-3681-4498-9a37-d50c63f0878c.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/a/4/0/dataset_a40d9627-3535-4af0-a797-3520960b6543.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-11-11T18:48:10.955602",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p7rnm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0f5026defeba8fc0",  "id": "2edc71bd2269b32d",  "inputs": {   "readtype|fastq_in": {    "id": "a61c4d22c8b9c183",    "src": "hda",    "uuid": "53835b36-3681-4498-9a37-d50c63f0878c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1731350912.0000000",    "title": "Job End Time",    "value": "2024-11-11 18:48:32"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1731350912.0000000",    "title": "Job Start Time",    "value": "2024-11-11 18:48:32"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "a1e4879bc3ff2ce5",    "src": "hda",    "uuid": "c76a0493-fde0-41e3-95bb-c1e7e500b3bc"   },   "fastq_out": {    "id": "f6409728a31002b4",    "src": "hda",    "uuid": "a40d9627-3535-4af0-a797-3520960b6543"   },   "log_file": {    "id": "1f48bbbadf174afa",    "src": "hda",    "uuid": "dfc577d9-68a0-4b98-a343-5947ee8b4f67"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 78, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "update_time": "2024-11-11T18:48:49.059357",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpwyvrw81strimmomatic_se_out1.err v. /tmp/tmppaglrt3qtrimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 61.332268476486206, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="38.76003623008728">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="29.4364972114563">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "MAXINFO",  "operations_0|operation|strictness": "0.8",  "operations_0|operation|target_length": "75",  "readtype|fastq_in": {   "id": "adbd17fe774c41a0",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/6/8/6/dataset_6864f5fd-26ab-478e-ad8c-4ecce268db23.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 MAXINFO:75:0.8 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/d/c/4/dataset_dc4fb758-ea81-47e5-81a2-98f8066a41df.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-11T18:54:36.329935",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-c2lnc",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0f5026defeba8fc0",  "id": "55af28dd83cead58",  "inputs": {   "readtype|fastq_in": {    "id": "adbd17fe774c41a0",    "src": "hda",    "uuid": "6864f5fd-26ab-478e-ad8c-4ecce268db23"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out": {    "id": "f42babb80c3ec818",    "src": "hda",    "uuid": "dc4fb758-ea81-47e5-81a2-98f8066a41df"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 7, \"name\": \"MAXINFO\", \"strictness\": \"0.8\", \"target_length\": \"75\"}}]",   "output_err": "false",   "output_logs": "false",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 120, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "error",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n",  "update_time": "2024-11-11T18:54:42.703749",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 10, "time_seconds": 29.4364972114563, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="12.325553178787231">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 12.325553178787231, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="41.70873737335205">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/76/configs/tmp3lyqmr21:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="13.971606969833374">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 13.971606969833374, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="30.48515009880066">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "readtype|fastq_r1_in": {   "id": "97ccb9c8d282b2e5",   "src": "hda"  },  "readtype|fastq_r2_in": {   "id": "97856dc934caede6",   "src": "hda"  },  "readtype|single_or_paired": "pair_of_files" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/0/f/3/dataset_0f3f1c8e-31f0-4455-94ed-a1ddc4fadcf9.dat\u0027 fastq_r1.\u0027fastqsanger\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/7/6/2/dataset_7624cb67-e7e6-4fb7-8761-0c0af8940ac6.dat\u0027 fastq_r2.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.\u0027fastqsanger\u0027 fastq_r2.\u0027fastqsanger\u0027 fastq_out_r1_paired.\u0027fastqsanger\u0027 fastq_out_r1_unpaired.\u0027fastqsanger\u0027 fastq_out_r2_paired.\u0027fastqsanger\u0027 fastq_out_r2_unpaired.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out_r1_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/4/3/4/dataset_4342fe30-0a1e-488b-ae50-0fdb1f8c0806.dat\u0027 \u0026\u0026 mv fastq_out_r1_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/e/c/3/dataset_ec351387-cc77-4858-9978-ea8f08290cc4.dat\u0027 \u0026\u0026 mv fastq_out_r2_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/1/0/d/dataset_10d77ca5-c641-48a1-bf86-1750a68e548a.dat\u0027 \u0026\u0026 mv fastq_out_r2_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/f/f/e/dataset_ffe545ee-21f8-465f-ab9b-af1f12b86e80.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-11T18:50:06.694707",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-bhbdr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "0f5026defeba8fc0",  "id": "4dbb850f8e9ec3e3",  "inputs": {   "readtype|fastq_r1_in": {    "id": "97ccb9c8d282b2e5",    "src": "hda",    "uuid": "0f3f1c8e-31f0-4455-94ed-a1ddc4fadcf9"   },   "readtype|fastq_r2_in": {    "id": "97856dc934caede6",    "src": "hda",    "uuid": "7624cb67-e7e6-4fb7-8761-0c0af8940ac6"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out_r1_paired": {    "id": "d199f479cf388805",    "src": "hda",    "uuid": "4342fe30-0a1e-488b-ae50-0fdb1f8c0806"   },   "fastq_out_r1_unpaired": {    "id": "e83df86e17c83fa1",    "src": "hda",    "uuid": "ec351387-cc77-4858-9978-ea8f08290cc4"   },   "fastq_out_r2_paired": {    "id": "1cc13c97f1ca03ce",    "src": "hda",    "uuid": "10d77ca5-c641-48a1-bf86-1750a68e548a"   },   "fastq_out_r2_unpaired": {    "id": "59739ad783237e80",    "src": "hda",    "uuid": "ffe545ee-21f8-465f-ab9b-af1f12b86e80"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "false",   "output_logs": "false",   "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 86, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 87, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"  },  "state": "error",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n",  "update_time": "2024-11-11T18:50:12.700700",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 30.48515009880066, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="40.62951993942261">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="40.9220757484436">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="38.10337829589844">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="41.37339782714844">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="40.49239730834961">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="38.20301127433777">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="47.31419324874878">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>