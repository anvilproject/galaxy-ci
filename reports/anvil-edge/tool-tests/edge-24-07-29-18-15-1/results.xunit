<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="14"
           failures="6"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="42.245253562927246">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="13.514453411102295">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 13.514453411102295, "tool_id": "bcftools_filter", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="36.07256484031677">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="12.523228168487549">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 12.523228168487549, "tool_id": "bcftools_filter", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="35.443917989730835">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="12.191207885742188">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 12.191207885742188, "tool_id": "bcftools_filter", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="35.39241409301758">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="36.44934034347534">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="37.454681158065796">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="45.545145988464355">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="11.863869190216064">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 11.863869190216064, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="26.533623933792114">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 26.533623933792114, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="47.8997483253479">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="48.683922290802">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="67.1831738948822">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="12.820167064666748">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.820167064666748, "tool_id": "deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.20461320877075195">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.20461320877075195, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="40.51109313964844">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="36.064494609832764">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="36.43373894691467">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="36.82329344749451">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="36.057037115097046">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="36.23942017555237">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="35.399434089660645">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="12.147445678710938">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 12.147445678710938, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="35.46471929550171">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="12.535216093063354">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.535216093063354, "tool_id": "filter_tabular", "tool_version": "3.1.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="42.18980407714844">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="27.63065505027771">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "e4aef175e9886c8e",   "src": "hda"  },  "linefilters_0|filter|filter_type": "regex",  "linefilters_0|filter|regex_action": "include_find",  "linefilters_0|filter|regex_pattern": "^\\d+",  "linefilters_1|filter|add": "after",  "linefilters_1|filter|column": "c4",  "linefilters_1|filter|filter_type": "replace",  "linefilters_1|filter|regex_pattern": ".*@(.*)",  "linefilters_1|filter|regex_replace": "\\1",  "linefilters_2|filter|add": "append",  "linefilters_2|filter|column": "c4",  "linefilters_2|filter|filter_type": "replace",  "linefilters_2|filter|regex_pattern": ".*(com|org|net)$",  "linefilters_2|filter|regex_replace": "\\1",  "linefilters_3|filter|add": "prepend",  "linefilters_3|filter|column": "c6",  "linefilters_3|filter|filter_type": "replace",  "linefilters_3|filter|regex_pattern": "^(\\d+)-(\\d+)-(\\d+)$",  "linefilters_3|filter|regex_replace": "\\1" }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py\u0027 -i \u0027/galaxy/server/database/objects/7/7/e/dataset_77ebfda4-15a0-4bec-85ed-b8bf8830f934.dat\u0027 -j \u0027/galaxy/server/database/jobs_directory/000/128/configs/tmpk2y00mj9\u0027 -o \u0027/galaxy/server/database/objects/0/5/2/dataset_052b838b-a1a0-4ddb-82be-617f1787bd22.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-29T19:09:39.564567",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-wcj6s",  "galaxy_version": "24.1",  "handler": null,  "history_id": "74905bf568c2edc0",  "id": "1a4eef255b4fd9ed",  "inputs": {   "input": {    "id": "e4aef175e9886c8e",    "src": "hda",    "uuid": "77ebfda4-15a0-4bec-85ed-b8bf8830f934"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "65556b48ca1b9d71",    "src": "hda",    "uuid": "052b838b-a1a0-4ddb-82be-617f1787bd22"   }  },  "params": {   "__input_ext": "\"tabular\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 8, \"add\": \"after\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*@(.*)\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 8, \"add\": \"append\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*(com|org|net)$\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 8, \"add\": \"prepend\", \"column\": \"c6\", \"filter_type\": \"replace\", \"regex_pattern\": \"^(\\\\d+)-(\\\\d+)-(\\\\d+)$\", \"regex_replace\": \"\\\\1\"}}]"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-07-29T19:09:44.966611",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 27.63065505027771, "tool_id": "filter_tabular", "tool_version": "3.1.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="62.88498067855835">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="66.26710796356201">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="40.17621088027954">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="59.83726763725281">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/e/4/9/dataset_e49439db-736b-492a-b32d-7181d6953236.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/4/a/6/dataset_4a6b9ba1-35bf-4921-acf3-e5fe5e71a4f0.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/a/a/c/dataset_aac65e14-7ab8-4001-919c-2ed513538c67.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-07-29T19:07:22.105340",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p6dww",  "galaxy_version": "24.1",  "handler": null,  "history_id": "74905bf568c2edc0",  "id": "ec6f5905bea986cc",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "27.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "27 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1722280073.0000000",    "title": "Job End Time",    "value": "2024-07-29 19:07:53"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1722280046.0000000",    "title": "Job Start Time",    "value": "2024-07-29 19:07:26"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "050c26bece3ea093",    "src": "hda",    "uuid": "aac65e14-7ab8-4001-919c-2ed513538c67"   },   "design_tsv": {    "id": "617fdd7978135784",    "src": "hda",    "uuid": "3caa0952-d99f-49df-84c1-ea560b9c042e"   },   "genes_tsv": {    "id": "7e84a8fa914dff3e",    "src": "hda",    "uuid": "4a6b9ba1-35bf-4921-acf3-e5fe5e71a4f0"   },   "matrix_mtx": {    "id": "4226f9d4eef9c043",    "src": "hda",    "uuid": "e49439db-736b-492a-b32d-7181d6953236"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-07-29 19:07:26--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  192K\n    50K .......... .......... .......... .......... ..........  288K\n   100K .......... .......... .......... .......... ..........  382K\n   150K .......... .......... .......... .......... ..........  385K\n   200K .......... .......... .......... .......... ..........  574K\n   250K .......... .......... .......... .......... ..........  575K\n   300K .......... .......... .......... .......... ..........  575K\n   350K .......... .......... .......... .......... ..........  576K\n   400K .......... .......... .......... .......... .......... 1.10M\n   450K .......... .......... .......... .......... .......... 1.15M\n   500K .......... .......... .......... .......... ..........  577K\n   550K .......... .......... .......... .......... ..........  129M\n   600K .......... .......... .......... .......... ..........  577K\n   650K .......... .......... .......... .......... ..........  129M\n   700K .......... .......... .......... .......... ..........  576K\n   750K .......... .......... .......... .......... .......... 1.11M\n   800K .......... .......... .......... .......... .......... 1.11M\n   850K .......... .......... .......... .......... ..........  137M\n   900K .......... .......... .......... .......... .......... 1.09M\n   950K .......... .......... .......... .......... .......... 1.16M\n  1000K .......... .......... .......... .......... .......... 1.14M\n  1050K .......... .......... .......... .......... .......... 1.11M\n  1100K .......... .......... .......... .......... .......... 97.1M\n  1150K .......... .......... .......... .......... .......... 1.14M\n  1200K .......... .......... .......... .......... .......... 1.12M\n  1250K .......... .......... .......... .......... .......... 76.7M\n  1300K .......... .......... .......... .......... .......... 1.14M\n  1350K .......... .......... .......... .......... .......... 1.12M\n  1400K .......... .......... .......... .......... .......... 92.7M\n  1450K .......... .......... .......... .......... .......... 1.15M\n  1500K .......... .......... .......... .......... .......... 22.8M\n  1550K .......... .......... .......... .......... .......... 1.15M\n  1600K .......... .......... .......... .......... .......... 1.05M\n  1650K .......... .......... .......... .......... ..........  119M\n  1700K .......... .......... .......... .......... .......... 1.24M\n  1750K .......... .......... .......... .......... ..........  119M\n  1800K .......... .......... .......... .......... .......... 1.17M\n  1850K .......... .......... .......... .......... .......... 9.52M\n  1900K .......... .......... .......... .......... .......... 1.24M\n  1950K .......... .......... .......... .......... .......... 54.3M\n  2000K .......... .......... .......... .......... .......... 1.05M\n  2050K .......... .......... .......... .......... ..........  129M\n  2100K .......... .......... .......... .......... .......... 1.24M\n  2150K .......... .......... .......... .......... .......... 68.1M\n  2200K .......... .......... .......... .......... .......... 1.18M\n  2250K .......... .......... .......... .......... .......... 9.37M\n  2300K .......... .......... .......... .......... .......... 1.24M\n  2350K .......... .......... .......... .......... .......... 71.1M\n  2400K .......... .......... .......... .......... .......... 45.4M\n  2450K .......... .......... .......... .......... .......... 1.07M\n  2500K .......... .......... .......... .......... .......... 1.25M\n  2550K .......... .......... .......... .......... ..........  117M\n  2600K .......... .......... .......... .......... .......... 73.4M\n  2650K .......... .......... .......... .......... .......... 1.18M\n  2700K .......... .......... .......... .......... .......... 9.31M\n  2750K .......... .......... .......... .......... .......... 1.24M\n  2800K .......... .......... .......... .......... ..........  116M\n  2850K .......... .......... .......... .......... ..........  143M\n  2900K .......... .......... .......... .......... .......... 1.18M\n  2950K .......... .......... .......... .......... .......... 9.65M\n  3000K .......... .......... .......... .......... .......... 1.22M\n  3050K .......... .......... .......... .......... ..........  131M\n  3100K .......... .......... .......... .......... ..........  125M\n  3150K .......... .......... .......... .......... .......... 1.20M\n  3200K .......... .......... .......... .......... .......... 9.19M\n  3250K .......... .......... .......... .......... ..........  124M\n  3300K .......... .......... .......... .......... .......... 1.23M\n  3350K .......... .......... .......... .......... ..........  146M\n  3400K .......... .......... .......... .......... ..........  127M\n  3450K .......... .......... .......... .......... .......... 1.19M\n  3500K .......... .......... .......... .......... .......... 9.64M\n  3550K .......... .......... .......... .......... .......... 1.22M\n  3600K .......... .......... .......... .......... ..........  119M\n  3650K .......... .......... .......... .......... ..........  142M\n  3700K .......... .......... .......... .......... ..........  108M\n  3750K .......... .......... .......... .......... .......... 1.07M\n  3800K .......... .......... .......... .......... ..........  125M\n  3850K .......... .......... .......... .......... .......... 1.23M\n  3900K .......... .......... .......... .......... ..........  132M\n  3950K .......... .......... .......... .......... ..........  119M\n  4000K .......... .......... .......... .......... .......... 88.4M\n  4050K .......... .......... .......... .......... .......... 1.08M\n  4100K .......... .......... .......... .......... ..........  110M\n  4150K .......... .......... .......... .......... .......... 1.23M\n  4200K .......... .......... .......... .......... .......... 84.8M\n  4250K .......... .......... .......... .......... ..........  142M\n  4300K .......... .......... .......... .......... ..........  140M\n  4350K .......... .......... .......... .......... .......... 1.19M\n  4400K .......... .......... .......... .......... .......... 10.5M\n  4450K .......... .......... .......... .......... ..........  122M\n  4500K .......... .......... .......... .......... .......... 1.21M\n  4550K .......... .......... .......... .......... ..........  144M\n  4600K .......... .......... .......... .......... ..........  120M\n  4650K .......... .......... .......... .......... ..........  134M\n  4700K .......... .......... .......... .......... .......... 1.18M\n  4750K .......... .......... .......... .......... .......... 12.7M\n  4800K .......... .......... .......... .......... .......... 57.4M\n  4850K .......... .......... .......... .......... .......... 1.22M\n  4900K .......... .......... .......... .......... ..........  101M\n  4950K .......... .......... .......... .......... ..........  106M\n  5000K .......... .......... .......... .......... ..........  116M\n  5050K .......... .......... .......... .......... .......... 1.20M\n  5100K .......... .......... .......... .......... .......... 13.1M\n  5150K .......... .......... .......... .......... ..........  101M\n  5200K .......... .......... .......... .......... .......... 1.21M\n  5250K .......... .......... .......... .......... ..........  136M\n  5300K .......... .......... .......... .......... ..........  136M\n  5350K .......... .......... .......... .......... ..........  147M\n  5400K .......... .......... .......... .......... .......... 1.18M\n  5450K .......... .......... .......... .......... .......... 13.0M\n  5500K .......... .......... .......... .......... ..........  152M\n  5550K .......... .......... .......... .......... .......... 1.22M\n  5600K .......... .......... .......... .......... ..........  113M\n  5650K .......... .......... .......... .......... ..........  132M\n  5700K .......... .......... .......... .......... ..........  146M\n  5750K .......... .......... .......... .......... .......... 1.19M\n  5800K .......... .......... .......... .......... .......... 12.3M\n  5850K .......... .......... .......... .......... ..........  137M\n  5900K .......... .......... .......... .......... ..........  151M\n  5950K .......... .......... .......... .......... .......... 1.21M\n  6000K .......... .......... .......... .......... ..........  121M\n  6050K .......... .......... .......... .......... ..........  150M\n  6100K .......... .......... .......... .......... ..........  145M\n  6150K .......... .......... .......... .......... .......... 1.19M\n  6200K .......... .......... .......... .......... .......... 78.5M\n  6250K .......... .......... .......... .......... .......... 14.7M\n  6300K .......... .......... .......... .......... ..........  141M\n  6350K .......... .......... .......... .......... .......... 1.21M\n  6400K .......... .......... .......... .......... ..........  119M\n  6450K .......... .......... .......... .......... ..........  146M\n  6500K .......... .......... .......... .......... ..........  152M\n  6550K .......... .......... .......... .......... ..........  148M\n  6600K .......... .......... .......... .......... .......... 1.18M\n  6650K .......... .......... .......... .......... .......... 14.5M\n  6700K .......... .......... .......... .......... ..........  134M\n  6750K .......... .......... .......... .......... .......... 1.21M\n  6800K .......... .......... .......... .......... .......... 93.9M\n  6850K .......... .......... .......... .......... .......... 82.0M\n  6900K .......... .......... .......... .......... ..........  110M\n  6950K .......... .......... .......... .......... .......... 97.7M\n  7000K .......... .......... .......... .......... .......... 1.21M\n  7050K .......... .......... .......... .......... ..........  125M\n  7100K .......... .......... .......... .......... .......... 14.3M\n  7150K .......... .......... .......... .......... ..........  105M\n  7200K .......... .......... .......... .......... .......... 1.21M\n  7250K .......... .......... .......... .......... ..........  110M\n  7300K .......... .......... .......... .......... ..........  102M\n  7350K .......... .......... .......... .......... ..........  108M\n  7400K .......... .......... .......... .......... ..........  103M\n  7450K .......... .......... .......... .......... .......... 94.4M\n  7500K .......... .......... .......... .......... .......... 1.20M\n  7550K .......... .......... .......... .......... .......... 15.9M\n  7600K .......... .......... .......... .......... ..........  573K\n  7650K .......... .......... .......... .......... ..........  140M\n  7700K .......... .......... .......... .......... ..........  108M\n  7750K .......... .......... .......... .......... ..........  116M\n  7800K .......... .......... .......... .......... ..........  100M\n  7850K .......... .......... .......... .......... ..........  113M\n  7900K .......... .......... .......... .......... .......... 94.4M\n  7950K .......... .......... .......... .......... ..........  116M\n  8000K .......... .......... .......... .......... ..........  104M\n  8050K .......... .......... .......... .......... ..........  114M\n  8100K .......... .......... .......... .......... ..........  119M\n  8150K .......... .......... .......... .......... .......... 1.31M\n  8200K .......... .......... .......... .......... ..........  111M\n  8250K .......... .......... .......... .......... ..........  109M\n  8300K .......... .......... .......... .......... .......... 1.16M\n  8350K .......... .......... .......... .......... .......... 15.6M\n  8400K .......... .......... .......... .......... ..........  137M\n  8450K .......... .......... .......... .......... ..........  148M\n  8500K .......... .......... .......... .......... .......... 1.22M\n  8550K .......... .......... .......... .......... ..........  140M\n  8600K .......... .......... .......... .......... .......... 1.16M\n  8650K .......... .......... .......... .......... ..........  139M\n  8700K .......... .......... .......... .......... .......... 15.2M\n  8750K .......... .......... .......... .......... ..........  141M\n  8800K .......... .......... .......... .......... .......... 1.22M\n  8850K .......... .......... .......... .......... ..........  118M\n  8900K .......... .......... .......... .......... ..........  146M\n  8950K .......... .......... .......... .......... .......... 1.15M\n  9000K .......... .......... .......... .......... .......... 16.2M\n  9050K .......... .......... .......... .......... ..........  141M\n  9100K .......... .......... .......... .......... ..........  127M\n  9150K .......... .......... .......... .......... .......... 1.22M\n  9200K .......... .......... .......... .......... ..........  124M\n  9250K .......... .......... .......... .......... ..........  149M\n  9300K .......... .......... .......... .......... .......... 1.15M\n  9350K .......... .......... .......... .......... .......... 19.4M\n  9400K .......... .......... .......... .......... ..........  109M\n  9450K .......... .......... .......... .......... .......... 99.5M\n  9500K .......... .......... .......... .......... ..........  578K\n  9550K .......... .......... .......... .......... .......... 1.19M\n  9600K .......... .......... .......... .......... .......... 1.13M\n  9650K .......... .......... .......... .......... ..........  110M\n  9700K .......... .......... .......... .......... ..........  127M\n  9750K .......... .......... .......... .......... ..........  146M\n  9800K .......... .......... .......... .......... ..........  107M\n  9850K .......... .......... .......... .......... ..........  124M\n  9900K .......... .......... .......... .......... ..........  114M\n  9950K .......... .......... .......... .......... ..........  112M\n 10000K .......... .......... .......... .......... ..........  396K\n 10050K .......... .......... .......... .......... .......... 61.8M\n 10100K .......... .......... .......... .......... ..........  109M\n 10150K .......... .......... .......... .......... ..........  104M\n 10200K .......... .......... .......... .......... .......... 97.8M\n 10250K .......... .......... .......... .......... .......... 1.12M\n 10300K .......... .......... .......... .......... .......... 45.6M\n 10350K .......... .......... .......... .......... ..........  125M\n 10400K .......... .......... .......... .......... ..........  583K\n 10450K .......... .......... .......... .......... ..........  102M\n 10500K .......... .......... .......... .......... ..........  108M\n 10550K .......... .......... .......... .......... .......... 1.21M\n 10600K .......... .......... .......... .......... .......... 1.06M\n 10650K .......... .......... .......... .......... ..........  122M\n 10700K .......... .......... .......... .......... .......... 1.21M\n 10750K .......... .......... .......... .......... .......... 1.06M\n 10800K .......... .......... .......... .......... ..........  100M\n 10850K .......... .......... .......... .......... ..........  119M\n 10900K .......... .......... .......... .......... .......... 1.16M\n 10950K .......... .......... .......... .......... .......... 1.10M\n 11000K .......... .......... .......... .......... .......... 95.9M\n 11050K .......... .......... .......... .......... .......... 1.22M\n 11100K .......... .......... .......... .......... .......... 1.05M\n 11150K .......... .......... .......... .......... ..........  119M\n 11200K .......... .......... .......... .......... ..........  102M\n 11250K .......... .......... .......... .......... .......... 1.19M\n 11300K .......... .......... .......... .......... .......... 1.08M\n 11350K .......... .......... .......... .......... ..........  135M\n 11400K .......... .......... .......... .......... .......... 1.24M\n 11450K .......... .......... .......... .......... .......... 14.6M\n 11500K .......... .......... .......... .......... .......... 1.11M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 10.6M\n 50150K .......... .......... .......... .......... ..........  119M\n 50200K .......... .......... .......... .......... .......... 27.6M\n 50250K .......... .......... .......... .......... .......... 48.5M\n 50300K .......... .......... .......... .......... .......... 9.57M\n 50350K .......... .......... .......... .......... .......... 4.11M\n 50400K .......... .......... .......... .......... .......... 2.11M\n 50450K .......... .......... .......... .......... .......... 71.3M\n 50500K .......... .......... .......... .......... .......... 10.7M\n 50550K .......... .......... .......... .......... .......... 4.24M\n 50600K .......... .......... .......... .......... .......... 4.37M\n 50650K .......... .......... .......... .......... .......... 3.18M\n 50700K .......... .......... .......... .......... .......... 35.3M\n 50750K .......... .......... .......... .......... .......... 4.13M\n 50800K .......... .......... .......... .......... .......... 4.23M\n 50850K .......... .......... .......... .......... .......... 8.27M\n 50900K .......... .......... .......... .......... .......... 4.19M\n 50950K .......... .......... .......... .......... .......... 4.52M\n 51000K .......... .......... .......... .......... .......... 3.77M\n 51050K .......... .......... .......... .......... .......... 11.1M\n 51100K .......... .......... .......... .......... .......... 4.95M\n 51150K .......... .......... .......... .......... .......... 4.31M\n 51200K .......... .......... .......... .......... .......... 3.50M\n 51250K .......... .......... .......... .......... .......... 5.98M\n 51300K .......... .......... .......... .......... .......... 7.93M\n 51350K .......... .......... .......... .......... .......... 4.02M\n 51400K .......... .......... .......... .......... .......... 3.96M\n 51450K .......... .......... .......... .......... .......... 4.00M\n 51500K .......... .......... .......... .......... .......... 8.15M\n 51550K .......... .......... .......... .......... .......... 4.68M\n 51600K .......... .......... .......... .......... .......... 4.14M\n 51650K .......... .......... .......... .......... .......... 4.54M\n 51700K .......... .......... .......... .......... .......... 4.50M\n 51750K .......... .......... .......... .......... .......... 8.62M\n 51800K .......... .......... .......... .......... .......... 4.43M\n 51850K .......... .......... .......... .......... .......... 4.59M\n 51900K .......... .......... .......... .......... .......... 4.33M\n 51950K .......... .......... .......... .......... .......... 8.39M\n 52000K .......... .......... .......... .......... .......... 4.21M\n 52050K .......... .......... .......... .......... .......... 4.42M\n 52100K .......... .......... .......... .......... .......... 4.32M\n 52150K .......... .......... .......... .......... .......... 8.23M\n 52200K .......... .......... .......... .......... .......... 4.04M\n 52250K .......... .......... .......... .......... .......... 4.31M\n 52300K .......... .......... .......... .......... .......... 4.17M\n 52350K .......... .......... .......... .......... .......... 9.74M\n 52400K .......... .......... .......... .......... .......... 4.31M\n 52450K .......... .......... .......... .......... .......... 4.49M\n 52500K .......... .......... .......... .......... .......... 4.62M\n 52550K .......... .......... .......... .......... .......... 8.72M\n 52600K .......... .......... .......... .......... .......... 4.31M\n 52650K .......... .......... .......... .......... .......... 4.39M\n 52700K .......... .......... .......... .......... .......... 4.59M\n 52750K .......... .......... .......... .......... .......... 8.77M\n 52800K .......... .......... .......... .......... .......... 3.93M\n 52850K .......... .......... .......... .......... .......... 5.13M\n 52900K .......... .......... .......... .......... .......... 4.45M\n 52950K .......... .......... .......... .......... .......... 8.27M\n 53000K .......... .......... .......... .......... .......... 4.56M\n 53050K .......... .......... .......... .......... .......... 4.30M\n 53100K .......... .......... .......... .......... .......... 3.93M\n 53150K .......... .......... .......... .......... .......... 7.78M\n 53200K .......... .......... .......... .......... .......... 4.50M\n 53250K .......... .......... .......... .......... .......... 4.08M\n 53300K .......... .......... .......... .......... .......... 4.33M\n 53350K .......... .......... .......... .......... .......... 8.18M\n 53400K .......... .......... .......... .......... .......... 4.32M\n 53450K .......... .......... .......... .......... .......... 4.57M\n 53500K .......... .......... .......... .......... .......... 4.52M\n 53550K .......... .......... .......... .......... .......... 8.66M\n 53600K .......... .......... .......... .......... .......... 4.32M\n 53650K .......... .......... .......... .......... .......... 4.27M\n 53700K .......... .......... .......... .......... .......... 4.10M\n 53750K .......... .......... .......... .......... .......... 6.79M\n 53800K .......... .......... .......... .......... .......... 4.17M\n 53850K .......... .......... .......... .......... .......... 4.36M\n 53900K .......... .......... .......... .......... .......... 4.47M\n 53950K .......... .......... .......... .......... .......... 4.21M\n 54000K .......... .......... .......... .......... .......... 8.81M\n 54050K .......... .......... .......... .......... .......... 4.36M\n 54100K .......... .......... .......... .......... .......... 4.55M\n 54150K .......... .......... .......... .......... .......... 4.13M\n 54200K .......... .......... .......... .......... .......... 10.0M\n 54250K .......... .......... .......... .......... .......... 4.54M\n 54300K .......... .......... .......... .......... .......... 4.37M\n 54350K .......... .......... .......... .......... .......... 4.53M\n 54400K .......... .......... .......... .......... .......... 8.82M\n 54450K .......... .......... .......... .......... ..........  510K\n 54500K .......... .......... .......... .......... ..........  129M\n 54550K .......... .......... .......... .......... ..........  146M\n 54600K .......... .......... .......... .......... ..........  126M\n 54650K .......... .......... .......... .......... ..........  153M\n 54700K .......... .......... .......... .......... ..........  157M\n 54750K .......... .......... .......... .......... ..........  146M\n 54800K .......... .......... .......... .......... ..........  131M\n 54850K .......... .......... .......... .......... ..........  150M\n 54900K .......... .......... .......... .......... .......... 11.5M\n 54950K .......... .......... .......... .......... .......... 3.03M\n 55000K .......... .......... .......... .......... .......... 8.78M\n 55050K .......... .......... .......... .......... .......... 4.54M\n 55100K .......... .......... .......... .......... .......... 4.08M\n 55150K .......... .......... .......... .......... .......... 4.62M\n 55200K .......... .......... .......... .......... .......... 4.36M\n 55250K .......... .......... .......... .......... .......... 8.64M\n 55300K .......... .......... .......... .......... .......... 4.97M\n 55350K .......... .......... .......... .......... .......... 3.13M\n 55400K .......... .......... .......... .......... .......... 4.49M\n 55450K .......... .......... .......... .......... .......... 7.78M\n 55500K .......... .......... .......... .......... .......... 4.23M\n 55550K .......... .......... .......... .......... .......... 4.20M\n 55600K .......... .......... .......... .......... .......... 5.34M\n 55650K .......... .......... .......... .......... .......... 7.23M\n 55700K .......... .......... .......... .......... .......... 4.75M\n 55750K .......... .......... .......... .......... .......... 5.89M\n 55800K .......... .......... .......... .......... .......... 2.71M\n 55850K .......... .......... .......... .......... .......... 8.82M\n 55900K .......... .......... .......... .......... .......... 4.76M\n 55950K .......... .......... .......... .......... .......... 3.84M\n 56000K .......... .......... .......... .......... .......... 5.59M\n 56050K .......... .......... .......... .......... .......... 4.86M\n 56100K .......... .......... .......... .......... .......... 5.87M\n 56150K .......... .......... .......... .......... .......... 9.24M\n 56200K .......... .......... .......... .......... .......... 2.38M\n 56250K .......... .......... .......... .......... .......... 8.51M\n 56300K .......... .......... .......... .......... .......... 4.50M\n 56350K .......... .......... .......... .......... .......... 10.0M\n 56400K .......... .......... .......... .......... .......... 3.80M\n 56450K .......... .......... .......... .......... .......... 5.94M\n 56500K .......... .......... .......... .......... .......... 4.81M\n 56550K .......... .......... .......... .......... .......... 5.48M\n 56600K .......... .......... .......... .......... .......... 7.05M\n 56650K .......... .......... .......... .......... .......... 3.42M\n 56700K .......... .......... .......... .......... .......... 4.87M\n 56750K .......... .......... .......... .......... .......... 4.62M\n 56800K .......... .......... .......... .......... .......... 4.28M\n 56850K .......... .......... .......... .......... .......... 7.13M\n 56900K .......... .......... .......... .......... .......... 5.17M\n 56950K .......... .......... .......... .......... .......... 5.76M\n 57000K .......... .......... .......... .......... .......... 5.21M\n 57050K .......... .......... .......... .......... .......... 7.04M\n 57100K .......... .......... .......... .......... .......... 3.60M\n 57150K .......... .......... .......... .......... .......... 3.38M\n 57200K .......... .......... .......... .......... .......... 7.34M\n 57250K .......... .......... .......... .......... .......... 9.66M\n 57300K .......... .......... .......... .......... .......... 3.77M\n 57350K .......... .......... .......... .......... .......... 5.01M\n 57400K .......... .......... .......... .......... .......... 5.80M\n 57450K .......... .......... .......... .......... .......... 6.12M\n 57500K .......... .......... .......... .......... .......... 5.71M\n 57550K .......... .......... .......... .......... .......... 2.83M\n 57600K .......... .......... .......... .......... .......... 7.58M\n 57650K .......... .......... .......... .......... .......... 5.99M\n 57700K .......... .......... .......... .......... .......... 5.89M\n 57750K .......... .......... .......... .......... .......... 4.11M\n 57800K .......... .......... .......... .......... .......... 6.27M\n 57850K .......... .......... .......... .......... .......... 4.73M\n 57900K .......... .......... .......... .......... .......... 6.06M\n 57950K .......... .......... .......... .......... .......... 8.11M\n 58000K .......... .......... .......... .......... .......... 5.47M\n 58050K .......... .......... .......... .......... .......... 2.94M\n 58100K .......... .......... .......... .......... .......... 5.14M\n 58150K .......... .......... .......... .......... .......... 6.33M\n 58200K .......... .......... .......... .......... .......... 7.40M\n 58250K .......... .......... .......... .......... .......... 4.72M\n 58300K .......... .......... .......... .......... .......... 6.89M\n 58350K .......... .......... .......... .......... .......... 5.48M\n 58400K .......... .......... .......... .......... .......... 4.35M\n 58450K .......... .......... .......... .......... .......... 7.83M\n 58500K .......... .......... .......... .......... .......... 3.49M\n 58550K .......... .......... .......... .......... .......... 4.47M\n 58600K .......... .......... .......... .......... .......... 8.21M\n 58650K .......... .......... .......... .......... .......... 4.06M\n 58700K .......... .......... .......... .......... .......... 8.63M\n 58750K .......... .......... .......... .......... .......... 4.00M\n 58800K .......... .......... .......... .......... .......... 5.78M\n 58850K .......... .......... .......... .......... .......... 5.96M\n 58900K .......... .......... .......... .......... .......... 6.97M\n 58950K .......... .......... .......... .......... .......... 2.88M\n 59000K .......... .......... .......... .......... .......... 8.94M\n 59050K .......... .......... .......... .......... .......... 4.04M\n 59100K .......... .......... .......... .......... .......... 8.36M\n 59150K .......... .......... .......... .......... .......... 3.55M\n 59200K .......... .......... .......... .......... .......... 3.38M\n 59250K .......... .......... .......... .......... .......... 4.14M\n 59300K .......... .......... .......... .......... .......... 3.56M\n 59350K .......... .......... .......... .......... .......... 6.91M\n 59400K .......... .......... .......... .......... .......... 3.58M\n 59450K .......... .......... .......... .......... .......... 3.55M\n 59500K .......... .......... .......... .......... .......... 3.72M\n 59550K .......... .......... .......... .......... .......... 7.27M\n 59600K .......... .......... .......... .......... .......... 3.90M\n 59650K .......... .......... .......... .......... .......... 3.70M\n 59700K .......... .......... .......... .......... .......... 4.14M\n 59750K .......... .......... .......... .......... .......... 8.45M\n 59800K .......... .......... .......... .......... .......... 4.22M\n 59850K .......... .......... .......... .......... .......... 3.85M\n 59900K .......... .......... .......... .......... .......... 3.59M\n 59950K .......... .......... .......... .......... .......... 8.05M\n 60000K .......... .......... .......... .......... .......... 4.12M\n 60050K .......... .......... .......... .......... .......... 4.63M\n 60100K .......... .......... .......... .......... .......... 4.47M\n 60150K .......... .......... .......... .......... .......... 9.24M\n 60200K .......... .......... .......... .......... .......... 4.59M\n 60250K .......... .......... .......... .......... .......... 4.71M\n 60300K .......... .......... .......... .......... .......... 4.40M\n 60350K .......... .......... .......... .......... .......... 9.64M\n 60400K .......... .......... .......... .......... .......... 4.53M\n 60450K .......... .......... .......... .......... .......... 4.55M\n 60500K .......... .......... .......... .......... .......... 4.64M\n 60550K .......... .......... .......... .......... .......... 6.97M\n 60600K .......... .......... .......... .......... ..........  254K\n 60650K .......... .........                                    121M=20s\n\n2024-07-29 19:07:46 (3.02 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-07-29 19:07:51--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  291K 3s\n   100K .......... .......... .......... .......... .......... 18%  579K 2s\n   150K .......... .......... .......... .......... .......... 24%  581K 2s\n   200K .......... .......... .......... .......... .......... 30% 15.7M 1s\n   250K .......... .......... .......... .......... .......... 36%  585K 1s\n   300K .......... .......... .......... .......... .......... 42%  592K 1s\n   350K .......... .......... .......... .......... .......... 48% 17.5M 1s\n   400K .......... .......... .......... .......... .......... 54%  589K 1s\n   450K .......... .......... .......... .......... .......... 60%  590K 1s\n   500K .......... .......... .......... .......... .......... 66% 35.7M 0s\n   550K .......... .......... .......... .......... .......... 72%  588K 0s\n   600K .......... .......... .......... .......... .......... 78% 62.2M 0s\n   650K .......... .......... .......... .......... .......... 84% 23.5M 0s\n   700K .......... .......... .......... .......... .......... 90%  598K 0s\n   750K .......... .......... .......... .......... .......... 96% 48.6M 0s\n   800K .......... .......... .......                         100% 64.5M=1.1s\n\n2024-07-29 19:07:53 (737 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-07-29 19:07:26--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  192K\n    50K .......... .......... .......... .......... ..........  288K\n   100K .......... .......... .......... .......... ..........  382K\n   150K .......... .......... .......... .......... ..........  385K\n   200K .......... .......... .......... .......... ..........  574K\n   250K .......... .......... .......... .......... ..........  575K\n   300K .......... .......... .......... .......... ..........  575K\n   350K .......... .......... .......... .......... ..........  576K\n   400K .......... .......... .......... .......... .......... 1.10M\n   450K .......... .......... .......... .......... .......... 1.15M\n   500K .......... .......... .......... .......... ..........  577K\n   550K .......... .......... .......... .......... ..........  129M\n   600K .......... .......... .......... .......... ..........  577K\n   650K .......... .......... .......... .......... ..........  129M\n   700K .......... .......... .......... .......... ..........  576K\n   750K .......... .......... .......... .......... .......... 1.11M\n   800K .......... .......... .......... .......... .......... 1.11M\n   850K .......... .......... .......... .......... ..........  137M\n   900K .......... .......... .......... .......... .......... 1.09M\n   950K .......... .......... .......... .......... .......... 1.16M\n  1000K .......... .......... .......... .......... .......... 1.14M\n  1050K .......... .......... .......... .......... .......... 1.11M\n  1100K .......... .......... .......... .......... .......... 97.1M\n  1150K .......... .......... .......... .......... .......... 1.14M\n  1200K .......... .......... .......... .......... .......... 1.12M\n  1250K .......... .......... .......... .......... .......... 76.7M\n  1300K .......... .......... .......... .......... .......... 1.14M\n  1350K .......... .......... .......... .......... .......... 1.12M\n  1400K .......... .......... .......... .......... .......... 92.7M\n  1450K .......... .......... .......... .......... .......... 1.15M\n  1500K .......... .......... .......... .......... .......... 22.8M\n  1550K .......... .......... .......... .......... .......... 1.15M\n  1600K .......... .......... .......... .......... .......... 1.05M\n  1650K .......... .......... .......... .......... ..........  119M\n  1700K .......... .......... .......... .......... .......... 1.24M\n  1750K .......... .......... .......... .......... ..........  119M\n  1800K .......... .......... .......... .......... .......... 1.17M\n  1850K .......... .......... .......... .......... .......... 9.52M\n  1900K .......... .......... .......... .......... .......... 1.24M\n  1950K .......... .......... .......... .......... .......... 54.3M\n  2000K .......... .......... .......... .......... .......... 1.05M\n  2050K .......... .......... .......... .......... ..........  129M\n  2100K .......... .......... .......... .......... .......... 1.24M\n  2150K .......... .......... .......... .......... .......... 68.1M\n  2200K .......... .......... .......... .......... .......... 1.18M\n  2250K .......... .......... .......... .......... .......... 9.37M\n  2300K .......... .......... .......... .......... .......... 1.24M\n  2350K .......... .......... .......... .......... .......... 71.1M\n  2400K .......... .......... .......... .......... .......... 45.4M\n  2450K .......... .......... .......... .......... .......... 1.07M\n  2500K .......... .......... .......... .......... .......... 1.25M\n  2550K .......... .......... .......... .......... ..........  117M\n  2600K .......... .......... .......... .......... .......... 73.4M\n  2650K .......... .......... .......... .......... .......... 1.18M\n  2700K .......... .......... .......... .......... .......... 9.31M\n  2750K .......... .......... .......... .......... .......... 1.24M\n  2800K .......... .......... .......... .......... ..........  116M\n  2850K .......... .......... .......... .......... ..........  143M\n  2900K .......... .......... .......... .......... .......... 1.18M\n  2950K .......... .......... .......... .......... .......... 9.65M\n  3000K .......... .......... .......... .......... .......... 1.22M\n  3050K .......... .......... .......... .......... ..........  131M\n  3100K .......... .......... .......... .......... ..........  125M\n  3150K .......... .......... .......... .......... .......... 1.20M\n  3200K .......... .......... .......... .......... .......... 9.19M\n  3250K .......... .......... .......... .......... ..........  124M\n  3300K .......... .......... .......... .......... .......... 1.23M\n  3350K .......... .......... .......... .......... ..........  146M\n  3400K .......... .......... .......... .......... ..........  127M\n  3450K .......... .......... .......... .......... .......... 1.19M\n  3500K .......... .......... .......... .......... .......... 9.64M\n  3550K .......... .......... .......... .......... .......... 1.22M\n  3600K .......... .......... .......... .......... ..........  119M\n  3650K .......... .......... .......... .......... ..........  142M\n  3700K .......... .......... .......... .......... ..........  108M\n  3750K .......... .......... .......... .......... .......... 1.07M\n  3800K .......... .......... .......... .......... ..........  125M\n  3850K .......... .......... .......... .......... .......... 1.23M\n  3900K .......... .......... .......... .......... ..........  132M\n  3950K .......... .......... .......... .......... ..........  119M\n  4000K .......... .......... .......... .......... .......... 88.4M\n  4050K .......... .......... .......... .......... .......... 1.08M\n  4100K .......... .......... .......... .......... ..........  110M\n  4150K .......... .......... .......... .......... .......... 1.23M\n  4200K .......... .......... .......... .......... .......... 84.8M\n  4250K .......... .......... .......... .......... ..........  142M\n  4300K .......... .......... .......... .......... ..........  140M\n  4350K .......... .......... .......... .......... .......... 1.19M\n  4400K .......... .......... .......... .......... .......... 10.5M\n  4450K .......... .......... .......... .......... ..........  122M\n  4500K .......... .......... .......... .......... .......... 1.21M\n  4550K .......... .......... .......... .......... ..........  144M\n  4600K .......... .......... .......... .......... ..........  120M\n  4650K .......... .......... .......... .......... ..........  134M\n  4700K .......... .......... .......... .......... .......... 1.18M\n  4750K .......... .......... .......... .......... .......... 12.7M\n  4800K .......... .......... .......... .......... .......... 57.4M\n  4850K .......... .......... .......... .......... .......... 1.22M\n  4900K .......... .......... .......... .......... ..........  101M\n  4950K .......... .......... .......... .......... ..........  106M\n  5000K .......... .......... .......... .......... ..........  116M\n  5050K .......... .......... .......... .......... .......... 1.20M\n  5100K .......... .......... .......... .......... .......... 13.1M\n  5150K .......... .......... .......... .......... ..........  101M\n  5200K .......... .......... .......... .......... .......... 1.21M\n  5250K .......... .......... .......... .......... ..........  136M\n  5300K .......... .......... .......... .......... ..........  136M\n  5350K .......... .......... .......... .......... ..........  147M\n  5400K .......... .......... .......... .......... .......... 1.18M\n  5450K .......... .......... .......... .......... .......... 13.0M\n  5500K .......... .......... .......... .......... ..........  152M\n  5550K .......... .......... .......... .......... .......... 1.22M\n  5600K .......... .......... .......... .......... ..........  113M\n  5650K .......... .......... .......... .......... ..........  132M\n  5700K .......... .......... .......... .......... ..........  146M\n  5750K .......... .......... .......... .......... .......... 1.19M\n  5800K .......... .......... .......... .......... .......... 12.3M\n  5850K .......... .......... .......... .......... ..........  137M\n  5900K .......... .......... .......... .......... ..........  151M\n  5950K .......... .......... .......... .......... .......... 1.21M\n  6000K .......... .......... .......... .......... ..........  121M\n  6050K .......... .......... .......... .......... ..........  150M\n  6100K .......... .......... .......... .......... ..........  145M\n  6150K .......... .......... .......... .......... .......... 1.19M\n  6200K .......... .......... .......... .......... .......... 78.5M\n  6250K .......... .......... .......... .......... .......... 14.7M\n  6300K .......... .......... .......... .......... ..........  141M\n  6350K .......... .......... .......... .......... .......... 1.21M\n  6400K .......... .......... .......... .......... ..........  119M\n  6450K .......... .......... .......... .......... ..........  146M\n  6500K .......... .......... .......... .......... ..........  152M\n  6550K .......... .......... .......... .......... ..........  148M\n  6600K .......... .......... .......... .......... .......... 1.18M\n  6650K .......... .......... .......... .......... .......... 14.5M\n  6700K .......... .......... .......... .......... ..........  134M\n  6750K .......... .......... .......... .......... .......... 1.21M\n  6800K .......... .......... .......... .......... .......... 93.9M\n  6850K .......... .......... .......... .......... .......... 82.0M\n  6900K .......... .......... .......... .......... ..........  110M\n  6950K .......... .......... .......... .......... .......... 97.7M\n  7000K .......... .......... .......... .......... .......... 1.21M\n  7050K .......... .......... .......... .......... ..........  125M\n  7100K .......... .......... .......... .......... .......... 14.3M\n  7150K .......... .......... .......... .......... ..........  105M\n  7200K .......... .......... .......... .......... .......... 1.21M\n  7250K .......... .......... .......... .......... ..........  110M\n  7300K .......... .......... .......... .......... ..........  102M\n  7350K .......... .......... .......... .......... ..........  108M\n  7400K .......... .......... .......... .......... ..........  103M\n  7450K .......... .......... .......... .......... .......... 94.4M\n  7500K .......... .......... .......... .......... .......... 1.20M\n  7550K .......... .......... .......... .......... .......... 15.9M\n  7600K .......... .......... .......... .......... ..........  573K\n  7650K .......... .......... .......... .......... ..........  140M\n  7700K .......... .......... .......... .......... ..........  108M\n  7750K .......... .......... .......... .......... ..........  116M\n  7800K .......... .......... .......... .......... ..........  100M\n  7850K .......... .......... .......... .......... ..........  113M\n  7900K .......... .......... .......... .......... .......... 94.4M\n  7950K .......... .......... .......... .......... ..........  116M\n  8000K .......... .......... .......... .......... ..........  104M\n  8050K .......... .......... .......... .......... ..........  114M\n  8100K .......... .......... .......... .......... ..........  119M\n  8150K .......... .......... .......... .......... .......... 1.31M\n  8200K .......... .......... .......... .......... ..........  111M\n  8250K .......... .......... .......... .......... ..........  109M\n  8300K .......... .......... .......... .......... .......... 1.16M\n  8350K .......... .......... .......... .......... .......... 15.6M\n  8400K .......... .......... .......... .......... ..........  137M\n  8450K .......... .......... .......... .......... ..........  148M\n  8500K .......... .......... .......... .......... .......... 1.22M\n  8550K .......... .......... .......... .......... ..........  140M\n  8600K .......... .......... .......... .......... .......... 1.16M\n  8650K .......... .......... .......... .......... ..........  139M\n  8700K .......... .......... .......... .......... .......... 15.2M\n  8750K .......... .......... .......... .......... ..........  141M\n  8800K .......... .......... .......... .......... .......... 1.22M\n  8850K .......... .......... .......... .......... ..........  118M\n  8900K .......... .......... .......... .......... ..........  146M\n  8950K .......... .......... .......... .......... .......... 1.15M\n  9000K .......... .......... .......... .......... .......... 16.2M\n  9050K .......... .......... .......... .......... ..........  141M\n  9100K .......... .......... .......... .......... ..........  127M\n  9150K .......... .......... .......... .......... .......... 1.22M\n  9200K .......... .......... .......... .......... ..........  124M\n  9250K .......... .......... .......... .......... ..........  149M\n  9300K .......... .......... .......... .......... .......... 1.15M\n  9350K .......... .......... .......... .......... .......... 19.4M\n  9400K .......... .......... .......... .......... ..........  109M\n  9450K .......... .......... .......... .......... .......... 99.5M\n  9500K .......... .......... .......... .......... ..........  578K\n  9550K .......... .......... .......... .......... .......... 1.19M\n  9600K .......... .......... .......... .......... .......... 1.13M\n  9650K .......... .......... .......... .......... ..........  110M\n  9700K .......... .......... .......... .......... ..........  127M\n  9750K .......... .......... .......... .......... ..........  146M\n  9800K .......... .......... .......... .......... ..........  107M\n  9850K .......... .......... .......... .......... ..........  124M\n  9900K .......... .......... .......... .......... ..........  114M\n  9950K .......... .......... .......... .......... ..........  112M\n 10000K .......... .......... .......... .......... ..........  396K\n 10050K .......... .......... .......... .......... .......... 61.8M\n 10100K .......... .......... .......... .......... ..........  109M\n 10150K .......... .......... .......... .......... ..........  104M\n 10200K .......... .......... .......... .......... .......... 97.8M\n 10250K .......... .......... .......... .......... .......... 1.12M\n 10300K .......... .......... .......... .......... .......... 45.6M\n 10350K .......... .......... .......... .......... ..........  125M\n 10400K .......... .......... .......... .......... ..........  583K\n 10450K .......... .......... .......... .......... ..........  102M\n 10500K .......... .......... .......... .......... ..........  108M\n 10550K .......... .......... .......... .......... .......... 1.21M\n 10600K .......... .......... .......... .......... .......... 1.06M\n 10650K .......... .......... .......... .......... ..........  122M\n 10700K .......... .......... .......... .......... .......... 1.21M\n 10750K .......... .......... .......... .......... .......... 1.06M\n 10800K .......... .......... .......... .......... ..........  100M\n 10850K .......... .......... .......... .......... ..........  119M\n 10900K .......... .......... .......... .......... .......... 1.16M\n 10950K .......... .......... .......... .......... .......... 1.10M\n 11000K .......... .......... .......... .......... .......... 95.9M\n 11050K .......... .......... .......... .......... .......... 1.22M\n 11100K .......... .......... .......... .......... .......... 1.05M\n 11150K .......... .......... .......... .......... ..........  119M\n 11200K .......... .......... .......... .......... ..........  102M\n 11250K .......... .......... .......... .......... .......... 1.19M\n 11300K .......... .......... .......... .......... .......... 1.08M\n 11350K .......... .......... .......... .......... ..........  135M\n 11400K .......... .......... .......... .......... .......... 1.24M\n 11450K .......... .......... .......... .......... .......... 14.6M\n 11500K .......... .......... .......... .......... .......... 1.11M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 10.6M\n 50150K .......... .......... .......... .......... ..........  119M\n 50200K .......... .......... .......... .......... .......... 27.6M\n 50250K .......... .......... .......... .......... .......... 48.5M\n 50300K .......... .......... .......... .......... .......... 9.57M\n 50350K .......... .......... .......... .......... .......... 4.11M\n 50400K .......... .......... .......... .......... .......... 2.11M\n 50450K .......... .......... .......... .......... .......... 71.3M\n 50500K .......... .......... .......... .......... .......... 10.7M\n 50550K .......... .......... .......... .......... .......... 4.24M\n 50600K .......... .......... .......... .......... .......... 4.37M\n 50650K .......... .......... .......... .......... .......... 3.18M\n 50700K .......... .......... .......... .......... .......... 35.3M\n 50750K .......... .......... .......... .......... .......... 4.13M\n 50800K .......... .......... .......... .......... .......... 4.23M\n 50850K .......... .......... .......... .......... .......... 8.27M\n 50900K .......... .......... .......... .......... .......... 4.19M\n 50950K .......... .......... .......... .......... .......... 4.52M\n 51000K .......... .......... .......... .......... .......... 3.77M\n 51050K .......... .......... .......... .......... .......... 11.1M\n 51100K .......... .......... .......... .......... .......... 4.95M\n 51150K .......... .......... .......... .......... .......... 4.31M\n 51200K .......... .......... .......... .......... .......... 3.50M\n 51250K .......... .......... .......... .......... .......... 5.98M\n 51300K .......... .......... .......... .......... .......... 7.93M\n 51350K .......... .......... .......... .......... .......... 4.02M\n 51400K .......... .......... .......... .......... .......... 3.96M\n 51450K .......... .......... .......... .......... .......... 4.00M\n 51500K .......... .......... .......... .......... .......... 8.15M\n 51550K .......... .......... .......... .......... .......... 4.68M\n 51600K .......... .......... .......... .......... .......... 4.14M\n 51650K .......... .......... .......... .......... .......... 4.54M\n 51700K .......... .......... .......... .......... .......... 4.50M\n 51750K .......... .......... .......... .......... .......... 8.62M\n 51800K .......... .......... .......... .......... .......... 4.43M\n 51850K .......... .......... .......... .......... .......... 4.59M\n 51900K .......... .......... .......... .......... .......... 4.33M\n 51950K .......... .......... .......... .......... .......... 8.39M\n 52000K .......... .......... .......... .......... .......... 4.21M\n 52050K .......... .......... .......... .......... .......... 4.42M\n 52100K .......... .......... .......... .......... .......... 4.32M\n 52150K .......... .......... .......... .......... .......... 8.23M\n 52200K .......... .......... .......... .......... .......... 4.04M\n 52250K .......... .......... .......... .......... .......... 4.31M\n 52300K .......... .......... .......... .......... .......... 4.17M\n 52350K .......... .......... .......... .......... .......... 9.74M\n 52400K .......... .......... .......... .......... .......... 4.31M\n 52450K .......... .......... .......... .......... .......... 4.49M\n 52500K .......... .......... .......... .......... .......... 4.62M\n 52550K .......... .......... .......... .......... .......... 8.72M\n 52600K .......... .......... .......... .......... .......... 4.31M\n 52650K .......... .......... .......... .......... .......... 4.39M\n 52700K .......... .......... .......... .......... .......... 4.59M\n 52750K .......... .......... .......... .......... .......... 8.77M\n 52800K .......... .......... .......... .......... .......... 3.93M\n 52850K .......... .......... .......... .......... .......... 5.13M\n 52900K .......... .......... .......... .......... .......... 4.45M\n 52950K .......... .......... .......... .......... .......... 8.27M\n 53000K .......... .......... .......... .......... .......... 4.56M\n 53050K .......... .......... .......... .......... .......... 4.30M\n 53100K .......... .......... .......... .......... .......... 3.93M\n 53150K .......... .......... .......... .......... .......... 7.78M\n 53200K .......... .......... .......... .......... .......... 4.50M\n 53250K .......... .......... .......... .......... .......... 4.08M\n 53300K .......... .......... .......... .......... .......... 4.33M\n 53350K .......... .......... .......... .......... .......... 8.18M\n 53400K .......... .......... .......... .......... .......... 4.32M\n 53450K .......... .......... .......... .......... .......... 4.57M\n 53500K .......... .......... .......... .......... .......... 4.52M\n 53550K .......... .......... .......... .......... .......... 8.66M\n 53600K .......... .......... .......... .......... .......... 4.32M\n 53650K .......... .......... .......... .......... .......... 4.27M\n 53700K .......... .......... .......... .......... .......... 4.10M\n 53750K .......... .......... .......... .......... .......... 6.79M\n 53800K .......... .......... .......... .......... .......... 4.17M\n 53850K .......... .......... .......... .......... .......... 4.36M\n 53900K .......... .......... .......... .......... .......... 4.47M\n 53950K .......... .......... .......... .......... .......... 4.21M\n 54000K .......... .......... .......... .......... .......... 8.81M\n 54050K .......... .......... .......... .......... .......... 4.36M\n 54100K .......... .......... .......... .......... .......... 4.55M\n 54150K .......... .......... .......... .......... .......... 4.13M\n 54200K .......... .......... .......... .......... .......... 10.0M\n 54250K .......... .......... .......... .......... .......... 4.54M\n 54300K .......... .......... .......... .......... .......... 4.37M\n 54350K .......... .......... .......... .......... .......... 4.53M\n 54400K .......... .......... .......... .......... .......... 8.82M\n 54450K .......... .......... .......... .......... ..........  510K\n 54500K .......... .......... .......... .......... ..........  129M\n 54550K .......... .......... .......... .......... ..........  146M\n 54600K .......... .......... .......... .......... ..........  126M\n 54650K .......... .......... .......... .......... ..........  153M\n 54700K .......... .......... .......... .......... ..........  157M\n 54750K .......... .......... .......... .......... ..........  146M\n 54800K .......... .......... .......... .......... ..........  131M\n 54850K .......... .......... .......... .......... ..........  150M\n 54900K .......... .......... .......... .......... .......... 11.5M\n 54950K .......... .......... .......... .......... .......... 3.03M\n 55000K .......... .......... .......... .......... .......... 8.78M\n 55050K .......... .......... .......... .......... .......... 4.54M\n 55100K .......... .......... .......... .......... .......... 4.08M\n 55150K .......... .......... .......... .......... .......... 4.62M\n 55200K .......... .......... .......... .......... .......... 4.36M\n 55250K .......... .......... .......... .......... .......... 8.64M\n 55300K .......... .......... .......... .......... .......... 4.97M\n 55350K .......... .......... .......... .......... .......... 3.13M\n 55400K .......... .......... .......... .......... .......... 4.49M\n 55450K .......... .......... .......... .......... .......... 7.78M\n 55500K .......... .......... .......... .......... .......... 4.23M\n 55550K .......... .......... .......... .......... .......... 4.20M\n 55600K .......... .......... .......... .......... .......... 5.34M\n 55650K .......... .......... .......... .......... .......... 7.23M\n 55700K .......... .......... .......... .......... .......... 4.75M\n 55750K .......... .......... .......... .......... .......... 5.89M\n 55800K .......... .......... .......... .......... .......... 2.71M\n 55850K .......... .......... .......... .......... .......... 8.82M\n 55900K .......... .......... .......... .......... .......... 4.76M\n 55950K .......... .......... .......... .......... .......... 3.84M\n 56000K .......... .......... .......... .......... .......... 5.59M\n 56050K .......... .......... .......... .......... .......... 4.86M\n 56100K .......... .......... .......... .......... .......... 5.87M\n 56150K .......... .......... .......... .......... .......... 9.24M\n 56200K .......... .......... .......... .......... .......... 2.38M\n 56250K .......... .......... .......... .......... .......... 8.51M\n 56300K .......... .......... .......... .......... .......... 4.50M\n 56350K .......... .......... .......... .......... .......... 10.0M\n 56400K .......... .......... .......... .......... .......... 3.80M\n 56450K .......... .......... .......... .......... .......... 5.94M\n 56500K .......... .......... .......... .......... .......... 4.81M\n 56550K .......... .......... .......... .......... .......... 5.48M\n 56600K .......... .......... .......... .......... .......... 7.05M\n 56650K .......... .......... .......... .......... .......... 3.42M\n 56700K .......... .......... .......... .......... .......... 4.87M\n 56750K .......... .......... .......... .......... .......... 4.62M\n 56800K .......... .......... .......... .......... .......... 4.28M\n 56850K .......... .......... .......... .......... .......... 7.13M\n 56900K .......... .......... .......... .......... .......... 5.17M\n 56950K .......... .......... .......... .......... .......... 5.76M\n 57000K .......... .......... .......... .......... .......... 5.21M\n 57050K .......... .......... .......... .......... .......... 7.04M\n 57100K .......... .......... .......... .......... .......... 3.60M\n 57150K .......... .......... .......... .......... .......... 3.38M\n 57200K .......... .......... .......... .......... .......... 7.34M\n 57250K .......... .......... .......... .......... .......... 9.66M\n 57300K .......... .......... .......... .......... .......... 3.77M\n 57350K .......... .......... .......... .......... .......... 5.01M\n 57400K .......... .......... .......... .......... .......... 5.80M\n 57450K .......... .......... .......... .......... .......... 6.12M\n 57500K .......... .......... .......... .......... .......... 5.71M\n 57550K .......... .......... .......... .......... .......... 2.83M\n 57600K .......... .......... .......... .......... .......... 7.58M\n 57650K .......... .......... .......... .......... .......... 5.99M\n 57700K .......... .......... .......... .......... .......... 5.89M\n 57750K .......... .......... .......... .......... .......... 4.11M\n 57800K .......... .......... .......... .......... .......... 6.27M\n 57850K .......... .......... .......... .......... .......... 4.73M\n 57900K .......... .......... .......... .......... .......... 6.06M\n 57950K .......... .......... .......... .......... .......... 8.11M\n 58000K .......... .......... .......... .......... .......... 5.47M\n 58050K .......... .......... .......... .......... .......... 2.94M\n 58100K .......... .......... .......... .......... .......... 5.14M\n 58150K .......... .......... .......... .......... .......... 6.33M\n 58200K .......... .......... .......... .......... .......... 7.40M\n 58250K .......... .......... .......... .......... .......... 4.72M\n 58300K .......... .......... .......... .......... .......... 6.89M\n 58350K .......... .......... .......... .......... .......... 5.48M\n 58400K .......... .......... .......... .......... .......... 4.35M\n 58450K .......... .......... .......... .......... .......... 7.83M\n 58500K .......... .......... .......... .......... .......... 3.49M\n 58550K .......... .......... .......... .......... .......... 4.47M\n 58600K .......... .......... .......... .......... .......... 8.21M\n 58650K .......... .......... .......... .......... .......... 4.06M\n 58700K .......... .......... .......... .......... .......... 8.63M\n 58750K .......... .......... .......... .......... .......... 4.00M\n 58800K .......... .......... .......... .......... .......... 5.78M\n 58850K .......... .......... .......... .......... .......... 5.96M\n 58900K .......... .......... .......... .......... .......... 6.97M\n 58950K .......... .......... .......... .......... .......... 2.88M\n 59000K .......... .......... .......... .......... .......... 8.94M\n 59050K .......... .......... .......... .......... .......... 4.04M\n 59100K .......... .......... .......... .......... .......... 8.36M\n 59150K .......... .......... .......... .......... .......... 3.55M\n 59200K .......... .......... .......... .......... .......... 3.38M\n 59250K .......... .......... .......... .......... .......... 4.14M\n 59300K .......... .......... .......... .......... .......... 3.56M\n 59350K .......... .......... .......... .......... .......... 6.91M\n 59400K .......... .......... .......... .......... .......... 3.58M\n 59450K .......... .......... .......... .......... .......... 3.55M\n 59500K .......... .......... .......... .......... .......... 3.72M\n 59550K .......... .......... .......... .......... .......... 7.27M\n 59600K .......... .......... .......... .......... .......... 3.90M\n 59650K .......... .......... .......... .......... .......... 3.70M\n 59700K .......... .......... .......... .......... .......... 4.14M\n 59750K .......... .......... .......... .......... .......... 8.45M\n 59800K .......... .......... .......... .......... .......... 4.22M\n 59850K .......... .......... .......... .......... .......... 3.85M\n 59900K .......... .......... .......... .......... .......... 3.59M\n 59950K .......... .......... .......... .......... .......... 8.05M\n 60000K .......... .......... .......... .......... .......... 4.12M\n 60050K .......... .......... .......... .......... .......... 4.63M\n 60100K .......... .......... .......... .......... .......... 4.47M\n 60150K .......... .......... .......... .......... .......... 9.24M\n 60200K .......... .......... .......... .......... .......... 4.59M\n 60250K .......... .......... .......... .......... .......... 4.71M\n 60300K .......... .......... .......... .......... .......... 4.40M\n 60350K .......... .......... .......... .......... .......... 9.64M\n 60400K .......... .......... .......... .......... .......... 4.53M\n 60450K .......... .......... .......... .......... .......... 4.55M\n 60500K .......... .......... .......... .......... .......... 4.64M\n 60550K .......... .......... .......... .......... .......... 6.97M\n 60600K .......... .......... .......... .......... ..........  254K\n 60650K .......... .........                                    121M=20s\n\n2024-07-29 19:07:46 (3.02 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-07-29 19:07:51--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  193K 4s\n    50K .......... .......... .......... .......... .......... 12%  291K 3s\n   100K .......... .......... .......... .......... .......... 18%  579K 2s\n   150K .......... .......... .......... .......... .......... 24%  581K 2s\n   200K .......... .......... .......... .......... .......... 30% 15.7M 1s\n   250K .......... .......... .......... .......... .......... 36%  585K 1s\n   300K .......... .......... .......... .......... .......... 42%  592K 1s\n   350K .......... .......... .......... .......... .......... 48% 17.5M 1s\n   400K .......... .......... .......... .......... .......... 54%  589K 1s\n   450K .......... .......... .......... .......... .......... 60%  590K 1s\n   500K .......... .......... .......... .......... .......... 66% 35.7M 0s\n   550K .......... .......... .......... .......... .......... 72%  588K 0s\n   600K .......... .......... .......... .......... .......... 78% 62.2M 0s\n   650K .......... .......... .......... .......... .......... 84% 23.5M 0s\n   700K .......... .......... .......... .......... .......... 90%  598K 0s\n   750K .......... .......... .......... .......... .......... 96% 48.6M 0s\n   800K .......... .......... .......                         100% 64.5M=1.1s\n\n2024-07-29 19:07:53 (737 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "update_time": "2024-07-29T19:08:09.407430",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 59.83726763725281, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-07-29 19:07:26--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  192K    50K .......... .......... .......... .......... ..........  288K   100K .......... .......... .......... .......... ..........  382K   150K .......... .......... .......... .......... ..........  385K   200K .......... .......... .......... .......... ..........  574K   250K .......... .......... .......... .......... ..........  575K   300K .......... .......... .......... .......... ..........  575K   350K .......... .......... .......... .......... ..........  576K   400K .......... .......... .......... .......... .......... 1.10M   450K .......... .......... .......... .......... .......... 1.15M   500K .......... .......... .......... .......... ..........  577K   550K .......... .......... .......... .......... ..........  129M   600K .......... .......... .......... .......... ..........  577K   650K .......... .......... .......... .......... ..........  129M   700K .......... .......... .......... .......... ..........  576K   750K .......... .......... .......... .......... .......... 1.11M   800K .......... .......... .......... .......... .......... 1.11M   850K .......... .......... .......... .......... ..........  137M   900K .......... .......... .......... .......... .......... 1.09M   950K .......... .......... .......... .......... .......... 1.16M  1000K .......... .......... .......... .......... .......... 1.14M  1050K .......... .......... .......... .......... .......... 1.11M  1100K .......... .......... .......... .......... .......... 97.1M  1150K .......... .......... .......... .......... .......... 1.14M  1200K .......... .......... .......... .......... .......... 1.12M  1250K .......... .......... .......... .......... .......... 76.7M  1300K .......... .......... .......... .......... .......... 1.14M  1350K .......... .......... .......... .......... .......... 1.12M  1400K .......... .......... .......... .......... .......... 92.7M  1450K .......... .......... .......... .......... .......... 1.15M  1500K .......... .......... .......... .......... .......... 22.8M  1550K .......... .......... .......... .......... .......... 1.15M  1600K .......... .......... .......... .......... .......... 1.05M  1650K .......... .......... .......... .......... ..........  119M  1700K .......... .......... .......... .......... .......... 1.24M  1750K .......... .......... .......... .......... ..........  119M  1800K .......... .......... .......... .......... .......... 1.17M  1850K .......... .......... .......... .......... .......... 9.52M  1900K .......... .......... .......... .......... .......... 1.24M  1950K .......... .......... .......... .......... .......... 54.3M  2000K .......... .......... .......... .......... .......... 1.05M  2050K .......... .......... .......... .......... ..........  129M  2100K .......... .......... .......... .......... .......... 1.24M  2150K .......... .......... .......... .......... .......... 68.1M  2200K .......... .......... .......... .......... .......... 1.18M  2250K .......... .......... .......... .......... .......... 9.37M  2300K .......... .......... .......... .......... .......... 1.24M  2350K .......... .......... .......... .......... .......... 71.1M  2400K .......... .......... .......... .......... .......... 45.4M  2450K .......... .......... .......... .......... .......... 1.07M  2500K .......... .......... .......... .......... .......... 1.25M  2550K .......... .......... .......... .......... ..........  117M  2600K .......... .......... .......... .......... .......... 73.4M  2650K .......... .......... .......... .......... .......... 1.18M  2700K .......... .......... .......... .......... .......... 9.31M  2750K .......... .......... .......... .......... .......... 1.24M  2800K .......... .......... .......... .......... ..........  116M  2850K .......... .......... .......... .......... ..........  143M  2900K .......... .......... .......... .......... .......... 1.18M  2950K .......... .......... .......... .......... .......... 9.65M  3000K .......... .......... .......... .......... .......... 1.22M  3050K .......... .......... .......... .......... ..........  131M  3100K .......... .......... .......... .......... ..........  125M  3150K .......... .......... .......... .......... .......... 1.20M  3200K .......... .......... .......... .......... .......... 9.19M  3250K .......... .......... .......... .......... ..........  124M  3300K .......... .......... .......... .......... .......... 1.23M  3350K .......... .......... .......... .......... ..........  146M  3400K .......... .......... .......... .......... ..........  127M  3450K .......... .......... .......... .......... .......... 1.19M  3500K .......... .......... .......... .......... .......... 9.64M  3550K .......... .......... .......... .......... .......... 1.22M  3600K .......... .......... .......... .......... ..........  119M  3650K .......... .......... .......... .......... ..........  142M  3700K .......... .......... .......... .......... ..........  108M  3750K .......... .......... .......... .......... .......... 1.07M  3800K .......... .......... .......... .......... ..........  125M  3850K .......... .......... .......... .......... .......... 1.23M  3900K .......... .......... .......... .......... ..........  132M  3950K .......... .......... .......... .......... ..........  119M  4000K .......... .......... .......... .......... .......... 88.4M  4050K .......... .......... .......... .......... .......... 1.08M  4100K .......... .......... .......... .......... ..........  110M  4150K .......... .......... .......... .......... .......... 1.23M  4200K .......... .......... .......... .......... .......... 84.8M  4250K .......... .......... .......... .......... ..........  142M  4300K .......... .......... .......... .......... ..........  140M  4350K .......... .......... .......... .......... .......... 1.19M  4400K .......... .......... .......... .......... .......... 10.5M  4450K .......... .......... .......... .......... ..........  122M  4500K .......... .......... .......... .......... .......... 1.21M  4550K .......... .......... .......... .......... ..........  144M  4600K .......... .......... .......... .......... ..........  120M  4650K .......... .......... .......... .......... ..........  134M  4700K .......... .......... .......... .......... .......... 1.18M  4750K .......... .......... .......... .......... .......... 12.7M  4800K .......... .......... .......... .......... .......... 57.4M  4850K .......... .......... .......... .......... .......... 1.22M  4900K .......... .......... .......... .......... ..........  101M  4950K .......... .......... .......... .......... ..........  106M  5000K .......... .......... .......... .......... ..........  116M  5050K .......... .......... .......... .......... .......... 1.20M  5100K .......... .......... .......... .......... .......... 13.1M  5150K .......... .......... .......... .......... ..........  101M  5200K .......... .......... .......... .......... .......... 1.21M  5250K .......... .......... .......... .......... ..........  136M  5300K .......... .......... .......... .......... ..........  136M  5350K .......... .......... .......... .......... ..........  147M  5400K .......... .......... .......... .......... .......... 1.18M  5450K .......... .......... .......... .......... .......... 13.0M  5500K .......... .......... .......... .......... ..........  152M  5550K .......... .......... .......... .......... .......... 1.22M  5600K .......... .......... .......... .......... ..........  113M  5650K .......... .......... .......... .......... ..........  132M  5700K .......... .......... .......... .......... ..........  146M  5750K .......... .......... .......... .......... .......... 1.19M  5800K .......... .......... .......... .......... .......... 12.3M  5850K .......... .......... .......... .......... ..........  137M  5900K .......... .......... .......... .......... ..........  151M  5950K .......... .......... .......... .......... .......... 1.21M  6000K .......... .......... .......... .......... ..........  121M  6050K .......... .......... .......... .......... ..........  150M  6100K .......... .......... .......... .......... ..........  145M  6150K .......... .......... .......... .......... .......... 1.19M  6200K .......... .......... .......... .......... .......... 78.5M  6250K .......... .......... .......... .......... .......... 14.7M  6300K .......... .......... .......... .......... ..........  141M  6350K .......... .......... .......... .......... .......... 1.21M  6400K .......... .......... .......... .......... ..........  119M  6450K .......... .......... .......... .......... ..........  146M  6500K .......... .......... .......... .......... ..........  152M  6550K .......... .......... .......... .......... ..........  148M  6600K .......... .......... .......... .......... .......... 1.18M  6650K .......... .......... .......... .......... .......... 14.5M  6700K .......... .......... .......... .......... ..........  134M  6750K .......... .......... .......... .......... .......... 1.21M  6800K .......... .......... .......... .......... .......... 93.9M  6850K .......... .......... .......... .......... .......... 82.0M  6900K .......... .......... .......... .......... ..........  110M  6950K .......... .......... .......... .......... .......... 97.7M  7000K .......... .......... .......... .......... .......... 1.21M  7050K .......... .......... .......... .......... ..........  125M  7100K .......... .......... .......... .......... .......... 14.3M  7150K .......... .......... .......... .......... ..........  105M  7200K .......... .......... .......... .......... .......... 1.21M  7250K .......... .......... .......... .......... ..........  110M  7300K .......... .......... .......... .......... ..........  102M  7350K .......... .......... .......... .......... ..........  108M  7400K .......... .......... .......... .......... ..........  103M  7450K .......... .......... .......... .......... .......... 94.4M  7500K .......... .......... .......... .......... .......... 1.20M  7550K .......... .......... .......... .......... .......... 15.9M  7600K .......... .......... .......... .......... ..........  573K  7650K .......... .......... .......... .......... ..........  140M  7700K .......... .......... .......... .......... ..........  108M  7750K .......... .......... .......... .......... ..........  116M  7800K .......... .......... .......... .......... ..........  100M  7850K .......... .......... .......... .......... ..........  113M  7900K .......... .......... .......... .......... .......... 94.4M  7950K .......... .......... .......... .......... ..........  116M  8000K .......... .......... .......... .......... ..........  104M  8050K .......... .......... .......... .......... ..........  114M  8100K .......... .......... .......... .......... ..........  119M  8150K .......... .......... .......... .......... .......... 1.31M  8200K .......... .......... .......... .......... ..........  111M  8250K .......... .......... .......... .......... ..........  109M  8300K .......... .......... .......... .......... .......... 1.16M  8350K .......... .......... .......... .......... .......... 15.6M  8400K .......... .......... .......... .......... ..........  137M  8450K .......... .......... .......... .......... ..........  148M  8500K .......... .......... .......... .......... .......... 1.22M  8550K .......... .......... .......... .......... ..........  140M  8600K .......... .......... .......... .......... .......... 1.16M  8650K .......... .......... .......... .......... ..........  139M  8700K .......... .......... .......... .......... .......... 15.2M  8750K .......... .......... .......... .......... ..........  141M  8800K .......... .......... .......... .......... .......... 1.22M  8850K .......... .......... .......... .......... ..........  118M  8900K .......... .......... .......... .......... ..........  146M  8950K .......... .......... .......... .......... .......... 1.15M  9000K .......... .......... .......... .......... .......... 16.2M  9050K .......... .......... .......... .......... ..........  141M  9100K .......... .......... .......... .......... ..........  127M  9150K .......... .......... .......... .......... .......... 1.22M  9200K .......... .......... .......... .......... ..........  124M  9250K .......... .......... .......... .......... ..........  149M  9300K .......... .......... .......... .......... .......... 1.15M  9350K .......... .......... .......... .......... .......... 19.4M  9400K .......... .......... .......... .......... ..........  109M  9450K .......... .......... .......... .......... .......... 99.5M  9500K .......... .......... .......... .......... ..........  578K  9550K .......... .......... .......... .......... .......... 1.19M  9600K .......... .......... .......... .......... .......... 1.13M  9650K .......... .......... .......... .......... ..........  110M  9700K .......... .......... .......... .......... ..........  127M  9750K .......... .......... .......... .......... ..........  146M  9800K .......... .......... .......... .......... ..........  107M  9850K .......... .......... .......... .......... ..........  124M  9900K .......... .......... .......... .......... ..........  114M  9950K .......... .......... .......... .......... ..........  112M 10000K .......... .......... .......... .......... ..........  396K 10050K .......... .......... .......... .......... .......... 61.8M 10100K .......... .......... .......... .......... ..........  109M 10150K .......... .......... .......... .......... ..........  104M 10200K .......... .......... .......... .......... .......... 97.8M 10250K .......... .......... .......... .......... .......... 1.12M 10300K .......... .......... .......... .......... .......... 45.6M 10350K .......... .......... .......... .......... ..........  125M 10400K .......... .......... .......... .......... ..........  583K 10450K .......... .......... .......... .......... ..........  102M 10500K .......... .......... .......... .......... ..........  108M 10550K .......... .......... .......... .......... .......... 1.21M 10600K .......... .......... .......... .......... .......... 1.06M 10650K .......... .......... .......... .......... ..........  122M 10700K .......... .......... .......... .......... .......... 1.21M 10750K .......... .......... .......... .......... .......... 1.06M 10800K .......... .......... .......... .......... ..........  100M 10850K .......... .......... .......... .......... ..........  119M 10900K .......... .......... .......... .......... .......... 1.16M 10950K .......... .......... .......... .......... .......... 1.10M 11000K .......... .......... .......... .......... .......... 95.9M 11050K .......... .......... .......... .......... .......... 1.22M 11100K .......... .......... .......... .......... .......... 1.05M 11150K .......... .......... .......... .......... ..........  119M 11200K .......... .......... .......... .......... ..........  102M 11250K .......... .......... .......... .......... .......... 1.19M 11300K .......... .......... .......... .......... .......... 1.08M 11350K .......... .......... .......... .......... ..........  135M 11400K .......... .......... .......... .......... .......... 1.24M 11450K .......... .......... .......... .......... .......... 14.6M 11500K .......... .......... .......... .......... .......... 1.11M 11550K .......... .......... .......... .......... .................. 10.6M 50150K .......... .......... .......... .......... ..........  119M 50200K .......... .......... .......... .......... .......... 27.6M 50250K .......... .......... .......... .......... .......... 48.5M 50300K .......... .......... .......... .......... .......... 9.57M 50350K .......... .......... .......... .......... .......... 4.11M 50400K .......... .......... .......... .......... .......... 2.11M 50450K .......... .......... .......... .......... .......... 71.3M 50500K .......... .......... .......... .......... .......... 10.7M 50550K .......... .......... .......... .......... .......... 4.24M 50600K .......... .......... .......... .......... .......... 4.37M 50650K .......... .......... .......... .......... .......... 3.18M 50700K .......... .......... .......... .......... .......... 35.3M 50750K .......... .......... .......... .......... .......... 4.13M 50800K .......... .......... .......... .......... .......... 4.23M 50850K .......... .......... .......... .......... .......... 8.27M 50900K .......... .......... .......... .......... .......... 4.19M 50950K .......... .......... .......... .......... .......... 4.52M 51000K .......... .......... .......... .......... .......... 3.77M 51050K .......... .......... .......... .......... .......... 11.1M 51100K .......... .......... .......... .......... .......... 4.95M 51150K .......... .......... .......... .......... .......... 4.31M 51200K .......... .......... .......... .......... .......... 3.50M 51250K .......... .......... .......... .......... .......... 5.98M 51300K .......... .......... .......... .......... .......... 7.93M 51350K .......... .......... .......... .......... .......... 4.02M 51400K .......... .......... .......... .......... .......... 3.96M 51450K .......... .......... .......... .......... .......... 4.00M 51500K .......... .......... .......... .......... .......... 8.15M 51550K .......... .......... .......... .......... .......... 4.68M 51600K .......... .......... .......... .......... .......... 4.14M 51650K .......... .......... .......... .......... .......... 4.54M 51700K .......... .......... .......... .......... .......... 4.50M 51750K .......... .......... .......... .......... .......... 8.62M 51800K .......... .......... .......... .......... .......... 4.43M 51850K .......... .......... .......... .......... .......... 4.59M 51900K .......... .......... .......... .......... .......... 4.33M 51950K .......... .......... .......... .......... .......... 8.39M 52000K .......... .......... .......... .......... .......... 4.21M 52050K .......... .......... .......... .......... .......... 4.42M 52100K .......... .......... .......... .......... .......... 4.32M 52150K .......... .......... .......... .......... .......... 8.23M 52200K .......... .......... .......... .......... .......... 4.04M 52250K .......... .......... .......... .......... .......... 4.31M 52300K .......... .......... .......... .......... .......... 4.17M 52350K .......... .......... .......... .......... .......... 9.74M 52400K .......... .......... .......... .......... .......... 4.31M 52450K .......... .......... .......... .......... .......... 4.49M 52500K .......... .......... .......... .......... .......... 4.62M 52550K .......... .......... .......... .......... .......... 8.72M 52600K .......... .......... .......... .......... .......... 4.31M 52650K .......... .......... .......... .......... .......... 4.39M 52700K .......... .......... .......... .......... .......... 4.59M 52750K .......... .......... .......... .......... .......... 8.77M 52800K .......... .......... .......... .......... .......... 3.93M 52850K .......... .......... .......... .......... .......... 5.13M 52900K .......... .......... .......... .......... .......... 4.45M 52950K .......... .......... .......... .......... .......... 8.27M 53000K .......... .......... .......... .......... .......... 4.56M 53050K .......... .......... .......... .......... .......... 4.30M 53100K .......... .......... .......... .......... .......... 3.93M 53150K .......... .......... .......... .......... .......... 7.78M 53200K .......... .......... .......... .......... .......... 4.50M 53250K .......... .......... .......... .......... .......... 4.08M 53300K .......... .......... .......... .......... .......... 4.33M 53350K .......... .......... .......... .......... .......... 8.18M 53400K .......... .......... .......... .......... .......... 4.32M 53450K .......... .......... .......... .......... .......... 4.57M 53500K .......... .......... .......... .......... .......... 4.52M 53550K .......... .......... .......... .......... .......... 8.66M 53600K .......... .......... .......... .......... .......... 4.32M 53650K .......... .......... .......... .......... .......... 4.27M 53700K .......... .......... .......... .......... .......... 4.10M 53750K .......... .......... .......... .......... .......... 6.79M 53800K .......... .......... .......... .......... .......... 4.17M 53850K .......... .......... .......... .......... .......... 4.36M 53900K .......... .......... .......... .......... .......... 4.47M 53950K .......... .......... .......... .......... .......... 4.21M 54000K .......... .......... .......... .......... .......... 8.81M 54050K .......... .......... .......... .......... .......... 4.36M 54100K .......... .......... .......... .......... .......... 4.55M 54150K .......... .......... .......... .......... .......... 4.13M 54200K .......... .......... .......... .......... .......... 10.0M 54250K .......... .......... .......... .......... .......... 4.54M 54300K .......... .......... .......... .......... .......... 4.37M 54350K .......... .......... .......... .......... .......... 4.53M 54400K .......... .......... .......... .......... .......... 8.82M 54450K .......... .......... .......... .......... ..........  510K 54500K .......... .......... .......... .......... ..........  129M 54550K .......... .......... .......... .......... ..........  146M 54600K .......... .......... .......... .......... ..........  126M 54650K .......... .......... .......... .......... ..........  153M 54700K .......... .......... .......... .......... ..........  157M 54750K .......... .......... .......... .......... ..........  146M 54800K .......... .......... .......... .......... ..........  131M 54850K .......... .......... .......... .......... ..........  150M 54900K .......... .......... .......... .......... .......... 11.5M 54950K .......... .......... .......... .......... .......... 3.03M 55000K .......... .......... .......... .......... .......... 8.78M 55050K .......... .......... .......... .......... .......... 4.54M 55100K .......... .......... .......... .......... .......... 4.08M 55150K .......... .......... .......... .......... .......... 4.62M 55200K .......... .......... .......... .......... .......... 4.36M 55250K .......... .......... .......... .......... .......... 8.64M 55300K .......... .......... .......... .......... .......... 4.97M 55350K .......... .......... .......... .......... .......... 3.13M 55400K .......... .......... .......... .......... .......... 4.49M 55450K .......... .......... .......... .......... .......... 7.78M 55500K .......... .......... .......... .......... .......... 4.23M 55550K .......... .......... .......... .......... .......... 4.20M 55600K .......... .......... .......... .......... .......... 5.34M 55650K .......... .......... .......... .......... .......... 7.23M 55700K .......... .......... .......... .......... .......... 4.75M 55750K .......... .......... .......... .......... .......... 5.89M 55800K .......... .......... .......... .......... .......... 2.71M 55850K .......... .......... .......... .......... .......... 8.82M 55900K .......... .......... .......... .......... .......... 4.76M 55950K .......... .......... .......... .......... .......... 3.84M 56000K .......... .......... .......... .......... .......... 5.59M 56050K .......... .......... .......... .......... .......... 4.86M 56100K .......... .......... .......... .......... .......... 5.87M 56150K .......... .......... .......... .......... .......... 9.24M 56200K .......... .......... .......... .......... .......... 2.38M 56250K .......... .......... .......... .......... .......... 8.51M 56300K .......... .......... .......... .......... .......... 4.50M 56350K .......... .......... .......... .......... .......... 10.0M 56400K .......... .......... .......... .......... .......... 3.80M 56450K .......... .......... .......... .......... .......... 5.94M 56500K .......... .......... .......... .......... .......... 4.81M 56550K .......... .......... .......... .......... .......... 5.48M 56600K .......... .......... .......... .......... .......... 7.05M 56650K .......... .......... .......... .......... .......... 3.42M 56700K .......... .......... .......... .......... .......... 4.87M 56750K .......... .......... .......... .......... .......... 4.62M 56800K .......... .......... .......... .......... .......... 4.28M 56850K .......... .......... .......... .......... .......... 7.13M 56900K .......... .......... .......... .......... .......... 5.17M 56950K .......... .......... .......... .......... .......... 5.76M 57000K .......... .......... .......... .......... .......... 5.21M 57050K .......... .......... .......... .......... .......... 7.04M 57100K .......... .......... .......... .......... .......... 3.60M 57150K .......... .......... .......... .......... .......... 3.38M 57200K .......... .......... .......... .......... .......... 7.34M 57250K .......... .......... .......... .......... .......... 9.66M 57300K .......... .......... .......... .......... .......... 3.77M 57350K .......... .......... .......... .......... .......... 5.01M 57400K .......... .......... .......... .......... .......... 5.80M 57450K .......... .......... .......... .......... .......... 6.12M 57500K .......... .......... .......... .......... .......... 5.71M 57550K .......... .......... .......... .......... .......... 2.83M 57600K .......... .......... .......... .......... .......... 7.58M 57650K .......... .......... .......... .......... .......... 5.99M 57700K .......... .......... .......... .......... .......... 5.89M 57750K .......... .......... .......... .......... .......... 4.11M 57800K .......... .......... .......... .......... .......... 6.27M 57850K .......... .......... .......... .......... .......... 4.73M 57900K .......... .......... .......... .......... .......... 6.06M 57950K .......... .......... .......... .......... .......... 8.11M 58000K .......... .......... .......... .......... .......... 5.47M 58050K .......... .......... .......... .......... .......... 2.94M 58100K .......... .......... .......... .......... .......... 5.14M 58150K .......... .......... .......... .......... .......... 6.33M 58200K .......... .......... .......... .......... .......... 7.40M 58250K .......... .......... .......... .......... .......... 4.72M 58300K .......... .......... .......... .......... .......... 6.89M 58350K .......... .......... .......... .......... .......... 5.48M 58400K .......... .......... .......... .......... .......... 4.35M 58450K .......... .......... .......... .......... .......... 7.83M 58500K .......... .......... .......... .......... .......... 3.49M 58550K .......... .......... .......... .......... .......... 4.47M 58600K .......... .......... .......... .......... .......... 8.21M 58650K .......... .......... .......... .......... .......... 4.06M 58700K .......... .......... .......... .......... .......... 8.63M 58750K .......... .......... .......... .......... .......... 4.00M 58800K .......... .......... .......... .......... .......... 5.78M 58850K .......... .......... .......... .......... .......... 5.96M 58900K .......... .......... .......... .......... .......... 6.97M 58950K .......... .......... .......... .......... .......... 2.88M 59000K .......... .......... .......... .......... .......... 8.94M 59050K .......... .......... .......... .......... .......... 4.04M 59100K .......... .......... .......... .......... .......... 8.36M 59150K .......... .......... .......... .......... .......... 3.55M 59200K .......... .......... .......... .......... .......... 3.38M 59250K .......... .......... .......... .......... .......... 4.14M 59300K .......... .......... .......... .......... .......... 3.56M 59350K .......... .......... .......... .......... .......... 6.91M 59400K .......... .......... .......... .......... .......... 3.58M 59450K .......... .......... .......... .......... .......... 3.55M 59500K .......... .......... .......... .......... .......... 3.72M 59550K .......... .......... .......... .......... .......... 7.27M 59600K .......... .......... .......... .......... .......... 3.90M 59650K .......... .......... .......... .......... .......... 3.70M 59700K .......... .......... .......... .......... .......... 4.14M 59750K .......... .......... .......... .......... .......... 8.45M 59800K .......... .......... .......... .......... .......... 4.22M 59850K .......... .......... .......... .......... .......... 3.85M 59900K .......... .......... .......... .......... .......... 3.59M 59950K .......... .......... .......... .......... .......... 8.05M 60000K .......... .......... .......... .......... .......... 4.12M 60050K .......... .......... .......... .......... .......... 4.63M 60100K .......... .......... .......... .......... .......... 4.47M 60150K .......... .......... .......... .......... .......... 9.24M 60200K .......... .......... .......... .......... .......... 4.59M 60250K .......... .......... .......... .......... .......... 4.71M 60300K .......... .......... .......... .......... .......... 4.40M 60350K .......... .......... .......... .......... .......... 9.64M 60400K .......... .......... .......... .......... .......... 4.53M 60450K .......... .......... .......... .......... .......... 4.55M 60500K .......... .......... .......... .......... .......... 4.64M 60550K .......... .......... .......... .......... .......... 6.97M 60600K .......... .......... .......... .......... ..........  254K 60650K .......... .........                                    121M=20s2024-07-29 19:07:46 (3.02 MB/s) - 'exp_quant.zip' saved [62125370]--2024-07-29 19:07:51--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  193K 4s    50K .......... .......... .......... .......... .......... 12%  291K 3s   100K .......... .......... .......... .......... .......... 18%  579K 2s   150K .......... .......... .......... .......... .......... 24%  581K 2s   200K .......... .......... .......... .......... .......... 30% 15.7M 1s   250K .......... .......... .......... .......... .......... 36%  585K 1s   300K .......... .......... .......... .......... .......... 42%  592K 1s   350K .......... .......... .......... .......... .......... 48% 17.5M 1s   400K .......... .......... .......... .......... .......... 54%  589K 1s   450K .......... .......... .......... .......... .......... 60%  590K 1s   500K .......... .......... .......... .......... .......... 66% 35.7M 0s   550K .......... .......... .......... .......... .......... 72%  588K 0s   600K .......... .......... .......... .......... .......... 78% 62.2M 0s   650K .......... .......... .......... .......... .......... 84% 23.5M 0s   700K .......... .......... .......... .......... .......... 90%  598K 0s   750K .......... .......... .......... .......... .......... 96% 48.6M 0s   800K .......... .......... .......                         100% 64.5M=1.1s2024-07-29 19:07:53 (737 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="41.089839935302734">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "quant_type|qtype": "reads",  "quant_type|refTranscriptSource|TranscriptSource": "history",  "quant_type|refTranscriptSource|s_index|fasta": {   "id": "6eea12578d124b72",   "src": "hda"  },  "quant_type|writeMappings": true }, "job": {  "command_line": "mkdir ./index \u0026\u0026 mkdir ./output \u0026\u0026 salmon index -i ./index --kmerLen \u002731\u0027 --gencode --transcripts \u0027/galaxy/server/database/objects/1/4/f/dataset_14f822cc-edf6-46bd-8b4f-f44de1d81928.dat\u0027 \u0026\u0026    ln -s /galaxy/server/database/objects/1/4/f/dataset_14f822cc-edf6-46bd-8b4f-f44de1d81928.dat ./single.fasta \u0026\u0026  salmon quant --index \u0027./index\u0027 --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"     --writeMappings=./output/samout.sam         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/samout.sam",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-29T18:56:45.732068",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-z5cks",  "galaxy_version": "24.1",  "handler": null,  "history_id": "74905bf568c2edc0",  "id": "2972c2fa911116a6",  "inputs": {   "quant_type|input|single_or_paired|input_singles": {    "id": "6eea12578d124b72",    "src": "hda",    "uuid": "14f822cc-edf6-46bd-8b4f-f44de1d81928"   },   "quant_type|refTranscriptSource|s_index|fasta": {    "id": "6eea12578d124b72",    "src": "hda",    "uuid": "14f822cc-edf6-46bd-8b4f-f44de1d81928"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_bam": {    "id": "da8df39dc4b7a853",    "src": "hda",    "uuid": "5e5ffbb3-6d0a-4ea5-a4fc-7f3d2a1eeec1"   },   "output_quant": {    "id": "43ddf24e440d39db",    "src": "hda",    "uuid": "96caf656-5914-4cc7-a03e-c1f895ed72ed"   }  },  "params": {   "__input_ext": "\"fasta\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 141, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 141, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": true}",   "seqBias": "false"  },  "state": "error",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-07-29 18:56:57.200] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-07-29 18:56:57.200] [jLog] [info] building index\nout : ./index\n[2024-07-29 18:56:57.201] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-07-29 18:56:57.228] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-07-29 18:56:57.229] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 625.81 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 442.54 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] # segments = 23\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] total length = 19592\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] positional integer width = 15\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] seqSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] rankSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk size = 9796\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] finished populating pos vector\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] writing index components\n[2024-07-29 18:56:57.359] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-07-29 18:56:57.362] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ writeMappings ] =\u003e { ./output/samout.sam }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-07-29 18:56:58.018] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-07-29 18:56:58.018] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-07-29 18:56:58.018] [jointLog] [info] parsing read library format\n[2024-07-29 18:56:58.018] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 358.9 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 627.26 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 223.24 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 371.32 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 389.16 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 332.59 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 547.83 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 319.64 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 208.89 us\n-----------------------------------------\n[2024-07-29 18:56:58.143] [jointLog] [info] Loading pufferfish index\n[2024-07-29 18:56:58.144] [jointLog] [info] Loading dense pufferfish index.\n[2024-07-29 18:56:58.148] [jointLog] [info] done\n[2024-07-29 18:56:58.148] [jointLog] [info] Index contained 15 targets\n[2024-07-29 18:56:58.148] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-07-29 18:56:58.216] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-07-29 18:56:58.216] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-07-29 18:56:58.218] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-07-29 18:56:58.218] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-07-29 18:56:58.218] [jointLog] [info] Mapping rate = 100%\n\n[2024-07-29 18:56:58.218] [jointLog] [info] finished quantifyLibrary()\n[2024-07-29 18:56:58.222] [jointLog] [info] Starting optimizer\n[2024-07-29 18:56:58.222] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-07-29 18:56:58.222] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-07-29 18:56:58.223] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-07-29 18:56:58.224] [jointLog] [info] Finished optimizer\n[2024-07-29 18:56:58.224] [jointLog] [info] writing output \n\n[2024-07-29 18:56:58.227] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n",  "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-07-29 18:56:57.200] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-07-29 18:56:57.200] [jLog] [info] building index\nout : ./index\n[2024-07-29 18:56:57.201] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-07-29 18:56:57.228] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-07-29 18:56:57.229] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 625.81 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 442.54 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] # segments = 23\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] total length = 19592\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] positional integer width = 15\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] seqSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] rankSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk size = 9796\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] finished populating pos vector\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] writing index components\n[2024-07-29 18:56:57.359] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-07-29 18:56:57.362] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ writeMappings ] =\u003e { ./output/samout.sam }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-07-29 18:56:58.018] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-07-29 18:56:58.018] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-07-29 18:56:58.018] [jointLog] [info] parsing read library format\n[2024-07-29 18:56:58.018] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 358.9 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 627.26 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 223.24 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 371.32 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 389.16 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 332.59 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 547.83 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 319.64 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 208.89 us\n-----------------------------------------\n[2024-07-29 18:56:58.143] [jointLog] [info] Loading pufferfish index\n[2024-07-29 18:56:58.144] [jointLog] [info] Loading dense pufferfish index.\n[2024-07-29 18:56:58.148] [jointLog] [info] done\n[2024-07-29 18:56:58.148] [jointLog] [info] Index contained 15 targets\n[2024-07-29 18:56:58.148] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-07-29 18:56:58.216] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-07-29 18:56:58.216] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-07-29 18:56:58.218] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-07-29 18:56:58.218] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-07-29 18:56:58.218] [jointLog] [info] Mapping rate = 100%\n\n[2024-07-29 18:56:58.218] [jointLog] [info] finished quantifyLibrary()\n[2024-07-29 18:56:58.222] [jointLog] [info] Starting optimizer\n[2024-07-29 18:56:58.222] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-07-29 18:56:58.222] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-07-29 18:56:58.223] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-07-29 18:56:58.224] [jointLog] [info] Finished optimizer\n[2024-07-29 18:56:58.224] [jointLog] [info] writing output \n\n[2024-07-29 18:56:58.227] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n",  "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n",  "update_time": "2024-07-29T18:57:05.225429",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-07-29 18:56:57.200] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-07-29 18:56:57.200] [jLog] [info] building index\nout : ./index\n[2024-07-29 18:56:57.201] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-07-29 18:56:57.228] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-07-29 18:56:57.229] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 625.81 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 442.54 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] # segments = 23\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] total length = 19592\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] positional integer width = 15\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] seqSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] rankSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk size = 9796\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] finished populating pos vector\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] writing index components\n[2024-07-29 18:56:57.359] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-07-29 18:56:57.362] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ writeMappings ] =\u003e { ./output/samout.sam }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-07-29 18:56:58.018] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-07-29 18:56:58.018] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-07-29 18:56:58.018] [jointLog] [info] parsing read library format\n[2024-07-29 18:56:58.018] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 358.9 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 627.26 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 223.24 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 371.32 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 389.16 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 332.59 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 547.83 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 319.64 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 208.89 us\n-----------------------------------------\n[2024-07-29 18:56:58.143] [jointLog] [info] Loading pufferfish index\n[2024-07-29 18:56:58.144] [jointLog] [info] Loading dense pufferfish index.\n[2024-07-29 18:56:58.148] [jointLog] [info] done\n[2024-07-29 18:56:58.148] [jointLog] [info] Index contained 15 targets\n[2024-07-29 18:56:58.148] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-07-29 18:56:58.216] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-07-29 18:56:58.216] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-07-29 18:56:58.218] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-07-29 18:56:58.218] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-07-29 18:56:58.218] [jointLog] [info] Mapping rate = 100%\n\n[2024-07-29 18:56:58.218] [jointLog] [info] finished quantifyLibrary()\n[2024-07-29 18:56:58.222] [jointLog] [info] Starting optimizer\n[2024-07-29 18:56:58.222] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-07-29 18:56:58.222] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-07-29 18:56:58.223] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-07-29 18:56:58.224] [jointLog] [info] Finished optimizer\n[2024-07-29 18:56:58.224] [jointLog] [info] writing output \n\n[2024-07-29 18:56:58.227] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2024-07-29 18:56:57.200] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2024-07-29 18:56:57.200] [jLog] [info] building index\nout : ./index\n[2024-07-29 18:56:57.201] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2024-07-29 18:56:57.228] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2024-07-29 18:56:57.229] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec\u003e1 \u0026 succ\u003e1)=0 | (succ\u003e1 \u0026 isStart)=0 | (prec\u003e1 \u0026 isEnd)=0 | (isStart \u0026 isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 625.81 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 442.54 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] contig count for validation: 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] bits per offset entry 6\n[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] # segments = 23\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] total length = 19592\n[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] Reading the reference files ...\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] positional integer width = 15\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] seqSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] rankSize = 19592\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] edgeVecSize = 0\n[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk size = 9796\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] finished populating pos vector\n[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] writing index components\n[2024-07-29 18:56:57.359] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2024-07-29 18:56:57.362] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] =\u003e salmon \n### [ command ] =\u003e quant \n### [ index ] =\u003e { ./index }\n### [ libType ] =\u003e { U }\n### [ unmatedReads ] =\u003e { ./single.fasta }\n### [ threads ] =\u003e { 6 }\n### [ writeMappings ] =\u003e { ./output/samout.sam }\n### [ incompatPrior ] =\u003e { 0.0 }\n### [ biasSpeedSamp ] =\u003e { 5 }\n### [ fldMax ] =\u003e { 1000 }\n### [ fldMean ] =\u003e { 250 }\n### [ fldSD ] =\u003e { 25 }\n### [ forgettingFactor ] =\u003e { 0.65 }\n### [ maxReadOcc ] =\u003e { 100 }\n### [ numBiasSamples ] =\u003e { 2000000 }\n### [ numAuxModelSamples ] =\u003e { 5000000 }\n### [ numPreAuxModelSamples ] =\u003e { 5000 }\n### [ numGibbsSamples ] =\u003e { 0 }\n### [ numBootstraps ] =\u003e { 0 }\n### [ thinningFactor ] =\u003e { 16 }\n### [ sigDigits ] =\u003e { 3 }\n### [ vbPrior ] =\u003e { 1e-05 }\n### [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-07-29 18:56:58.018] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-07-29 18:56:58.018] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2024-07-29 18:56:58.018] [jointLog] [info] parsing read library format\n[2024-07-29 18:56:58.018] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 358.9 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 627.26 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 223.24 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 371.32 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 389.16 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 332.59 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 547.83 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 319.64 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 208.89 us\n-----------------------------------------\n[2024-07-29 18:56:58.143] [jointLog] [info] Loading pufferfish index\n[2024-07-29 18:56:58.144] [jointLog] [info] Loading dense pufferfish index.\n[2024-07-29 18:56:58.148] [jointLog] [info] done\n[2024-07-29 18:56:58.148] [jointLog] [info] Index contained 15 targets\n[2024-07-29 18:56:58.148] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2024-07-29 18:56:58.216] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2024-07-29 18:56:58.216] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2024-07-29 18:56:58.218] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2024-07-29 18:56:58.218] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-07-29 18:56:58.218] [jointLog] [info] Mapping rate = 100%\n\n[2024-07-29 18:56:58.218] [jointLog] [info] finished quantifyLibrary()\n[2024-07-29 18:56:58.222] [jointLog] [info] Starting optimizer\n[2024-07-29 18:56:58.222] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-07-29 18:56:58.222] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2024-07-29 18:56:58.223] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-07-29 18:56:58.224] [jointLog] [info] Finished optimizer\n[2024-07-29 18:56:58.224] [jointLog] [info] writing output \n\n[2024-07-29 18:56:58.227] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias \u003e 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n." ], "status": "failure", "test_index": 0, "time_seconds": 41.089839935302734, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-29 18:56:57.200] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-29 18:56:57.200] [jLog] [info] building indexout : ./index[2024-07-29 18:56:57.201] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-29 18:56:57.214] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-29 18:56:57.228] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-29 18:56:57.229] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-29 18:56:57.279] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 625.81 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 442.54 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-29 18:56:57.280] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] # segments = 23[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] total length = 19592[2024-07-29 18:56:57.289] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] positional integer width = 15[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] seqSize = 19592[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] rankSize = 19592[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-29 18:56:57.296] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk size = 9796[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-29 18:56:57.349] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] finished populating pos vector[2024-07-29 18:56:57.350] [puff::index::jointLog] [info] writing index components[2024-07-29 18:56:57.359] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-29 18:56:57.362] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-29 18:56:58.018] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-29 18:56:58.018] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-07-29 18:56:58.018] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-29 18:56:58.018] [jointLog] [info] parsing read library format[2024-07-29 18:56:58.018] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 358.9 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 627.26 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 223.24 us----------------------------------------------------------------------------------| Loading mphf table | Time = 371.32 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 389.16 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 332.59 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 547.83 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 319.64 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 208.89 us-----------------------------------------[2024-07-29 18:56:58.143] [jointLog] [info] Loading pufferfish index[2024-07-29 18:56:58.144] [jointLog] [info] Loading dense pufferfish index.[2024-07-29 18:56:58.148] [jointLog] [info] done[2024-07-29 18:56:58.148] [jointLog] [info] Index contained 15 targets[2024-07-29 18:56:58.148] [jointLog] [info] Number of decoys : 0[2024-07-29 18:56:58.216] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-29 18:56:58.216] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-29 18:56:58.218] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-29 18:56:58.218] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-07-29 18:56:58.218] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-29 18:56:58.218] [jointLog] [info] Mapping rate = 100%[2024-07-29 18:56:58.218] [jointLog] [info] finished quantifyLibrary()[2024-07-29 18:56:58.222] [jointLog] [info] Starting optimizer[2024-07-29 18:56:58.222] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-29 18:56:58.222] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-07-29 18:56:58.223] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-29 18:56:58.224] [jointLog] [info] Finished optimizer[2024-07-29 18:56:58.224] [jointLog] [info] writing output [2024-07-29 18:56:58.227] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="36.817232608795166">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-29 18:57:29.181] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-29 18:57:29.181] [jLog] [info] building indexout : ./index[2024-07-29 18:57:29.181] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-29 18:57:29.189] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-29 18:57:29.189] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-29 18:57:29.199] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-29 18:57:29.200] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-29 18:57:29.254] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-29 18:57:29.255] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 588.82 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 702.34 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-29 18:57:29.256] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-29 18:57:29.256] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-29 18:57:29.256] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-29 18:57:29.256] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-29 18:57:29.257] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-29 18:57:29.257] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-29 18:57:29.257] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-29 18:57:29.265] [puff::index::jointLog] [info] # segments = 23[2024-07-29 18:57:29.265] [puff::index::jointLog] [info] total length = 19592[2024-07-29 18:57:29.265] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-29 18:57:29.272] [puff::index::jointLog] [info] positional integer width = 15[2024-07-29 18:57:29.272] [puff::index::jointLog] [info] seqSize = 19592[2024-07-29 18:57:29.272] [puff::index::jointLog] [info] rankSize = 19592[2024-07-29 18:57:29.272] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-29 18:57:29.272] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela.. %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-29 18:57:29.326] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-29 18:57:29.326] [puff::index::jointLog] [info] chunk size = 9796[2024-07-29 18:57:29.326] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-29 18:57:29.326] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-29 18:57:29.327] [puff::index::jointLog] [info] finished populating pos vector[2024-07-29 18:57:29.327] [puff::index::jointLog] [info] writing index components[2024-07-29 18:57:29.337] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-29 18:57:29.341] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-29 18:57:29.433] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-29 18:57:29.433] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-29 18:57:29.433] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-07-29 18:57:29.433] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-29 18:57:29.433] [jointLog] [info] parsing read library format[2024-07-29 18:57:29.433] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 457.37 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 685.8 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 267.36 us----------------------------------------------------------------------------------| Loading mphf table | Time = 375.27 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 381.55 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 340.61 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 613.39 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 348.9 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 229.9 us-----------------------------------------[2024-07-29 18:57:29.545] [jointLog] [info] Loading pufferfish index[2024-07-29 18:57:29.545] [jointLog] [info] Loading dense pufferfish index.[2024-07-29 18:57:29.550] [jointLog] [info] done[2024-07-29 18:57:29.550] [jointLog] [info] Index contained 15 targets[2024-07-29 18:57:29.550] [jointLog] [info] Number of decoys : 0[2024-07-29 18:57:29.618] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-29 18:57:29.618] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-29 18:57:29.620] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-07-29 18:57:29.620] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-29 18:57:29.620] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-29 18:57:29.620] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-07-29 18:57:29.620] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-29 18:57:29.620] [jointLog] [info] Mapping rate = 100%[2024-07-29 18:57:29.620] [jointLog] [info] finished quantifyLibrary()[2024-07-29 18:57:29.623] [jointLog] [info] Starting optimizer[2024-07-29 18:57:29.624] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-29 18:57:29.624] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-07-29 18:57:29.625] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-29 18:57:29.625] [jointLog] [info] Finished optimizer[2024-07-29 18:57:29.625] [jointLog] [info] writing output [2024-07-29 18:57:29.629] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="37.50745439529419">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-29 18:58:05.914] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-29 18:58:05.914] [jLog] [info] building indexout : ./index[2024-07-29 18:58:05.915] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-29 18:58:05.922] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-29 18:58:05.922] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-29 18:58:05.932] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-29 18:58:05.934] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-29 18:58:05.987] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-29 18:58:05.987] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 737.57 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 566.11 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-29 18:58:05.988] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-29 18:58:05.988] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-29 18:58:05.989] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-29 18:58:05.989] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-29 18:58:05.989] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-29 18:58:05.989] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-29 18:58:05.989] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-29 18:58:05.997] [puff::index::jointLog] [info] # segments = 23[2024-07-29 18:58:05.997] [puff::index::jointLog] [info] total length = 19592[2024-07-29 18:58:05.997] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-29 18:58:06.005] [puff::index::jointLog] [info] positional integer width = 15[2024-07-29 18:58:06.005] [puff::index::jointLog] [info] seqSize = 19592[2024-07-29 18:58:06.005] [puff::index::jointLog] [info] rankSize = 19592[2024-07-29 18:58:06.005] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-29 18:58:06.005] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela..%   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-29 18:58:06.077] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-29 18:58:06.077] [puff::index::jointLog] [info] chunk size = 9796[2024-07-29 18:58:06.077] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-29 18:58:06.077] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-29 18:58:06.078] [puff::index::jointLog] [info] finished populating pos vector[2024-07-29 18:58:06.078] [puff::index::jointLog] [info] writing index components[2024-07-29 18:58:06.089] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-29 18:58:06.094] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-29 18:58:06.177] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-29 18:58:06.177] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-29 18:58:06.177] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-07-29 18:58:06.177] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-29 18:58:06.177] [jointLog] [info] parsing read library format[2024-07-29 18:58:06.177] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 396.7 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 608.17 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 288.95 us----------------------------------------------------------------------------------| Loading mphf table | Time = 370.29 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 511.42 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 505.21 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 994.6 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 439.34 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 353.55 us-----------------------------------------[2024-07-29 18:58:06.290] [jointLog] [info] Loading pufferfish index[2024-07-29 18:58:06.291] [jointLog] [info] Loading dense pufferfish index.[2024-07-29 18:58:06.297] [jointLog] [info] done[2024-07-29 18:58:06.297] [jointLog] [info] Index contained 15 targets[2024-07-29 18:58:06.297] [jointLog] [info] Number of decoys : 0[2024-07-29 18:58:06.364] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-29 18:58:06.364] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-29 18:58:06.366] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-07-29 18:58:06.366] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-29 18:58:06.366] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-29 18:58:06.366] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-07-29 18:58:06.366] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-29 18:58:06.366] [jointLog] [info] Mapping rate = 100%[2024-07-29 18:58:06.366] [jointLog] [info] finished quantifyLibrary()[2024-07-29 18:58:06.371] [jointLog] [info] Starting optimizer[2024-07-29 18:58:06.371] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-29 18:58:06.371] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-07-29 18:58:06.372] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-29 18:58:06.372] [jointLog] [info] Finished optimizer[2024-07-29 18:58:06.372] [jointLog] [info] writing output [2024-07-29 18:58:06.376] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="22.23411250114441">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 22.23411250114441, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="36.796438694000244">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 20Hash table size = 34Candidate marks count = 58--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-29 18:59:05.966] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-29 18:59:05.966] [jLog] [info] building indexout : ./index[2024-07-29 18:59:05.966] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-29 18:59:05.973] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-29 18:59:05.973] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-29 18:59:05.983] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-29 18:59:05.985] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-29 18:59:06.040] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-29 18:59:06.040] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 631.79 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 668.86 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-29 18:59:06.041] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-29 18:59:06.041] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-29 18:59:06.042] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-29 18:59:06.042] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-29 18:59:06.042] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-29 18:59:06.042] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-29 18:59:06.042] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-29 18:59:06.051] [puff::index::jointLog] [info] # segments = 23[2024-07-29 18:59:06.051] [puff::index::jointLog] [info] total length = 19592[2024-07-29 18:59:06.051] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-29 18:59:06.060] [puff::index::jointLog] [info] positional integer width = 15[2024-07-29 18:59:06.060] [puff::index::jointLog] [info] seqSize = 19592[2024-07-29 18:59:06.060] [puff::index::jointLog] [info] rankSize = 19592[2024-07-29 18:59:06.060] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-29 18:59:06.060] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela.. sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-29 18:59:06.120] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-29 18:59:06.120] [puff::index::jointLog] [info] chunk size = 9796[2024-07-29 18:59:06.120] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-29 18:59:06.120] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-29 18:59:06.121] [puff::index::jointLog] [info] finished populating pos vector[2024-07-29 18:59:06.121] [puff::index::jointLog] [info] writing index components[2024-07-29 18:59:06.130] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-29 18:59:06.134] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-29 18:59:06.222] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-29 18:59:06.222] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-29 18:59:06.222] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-07-29 18:59:06.222] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-29 18:59:06.222] [jointLog] [info] parsing read library format[2024-07-29 18:59:06.222] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 466.74 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 751.58 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 272.3 us----------------------------------------------------------------------------------| Loading mphf table | Time = 596.46 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 626.97 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 594.25 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 650.59 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 513.2 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 288.32 us-----------------------------------------[2024-07-29 18:59:06.335] [jointLog] [info] Loading pufferfish index[2024-07-29 18:59:06.335] [jointLog] [info] Loading dense pufferfish index.[2024-07-29 18:59:06.341] [jointLog] [info] done[2024-07-29 18:59:06.341] [jointLog] [info] Index contained 15 targets[2024-07-29 18:59:06.341] [jointLog] [info] Number of decoys : 0[2024-07-29 18:59:06.409] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-29 18:59:06.409] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-29 18:59:06.411] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-07-29 18:59:06.411] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-07-29 18:59:06.411] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-29 18:59:06.411] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-29 18:59:06.411] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-29 18:59:06.411] [jointLog] [info] Mapping rate = 100%[2024-07-29 18:59:06.411] [jointLog] [info] finished quantifyLibrary()[2024-07-29 18:59:06.414] [jointLog] [info] Starting optimizer[2024-07-29 18:59:06.415] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-29 18:59:06.415] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-07-29 18:59:06.416] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-29 18:59:06.416] [jointLog] [info] Finished optimizer[2024-07-29 18:59:06.416] [jointLog] [info] writing output [2024-07-29 18:59:06.420] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="36.05965566635132">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-29 18:59:41.772] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-29 18:59:41.772] [jLog] [info] building indexout : ./index[2024-07-29 18:59:41.773] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-29 18:59:41.779] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-29 18:59:41.779] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-29 18:59:41.788] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-29 18:59:41.789] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-29 18:59:41.840] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-29 18:59:41.840] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 652.88 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 543.14 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-29 18:59:41.841] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-29 18:59:41.841] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-29 18:59:41.842] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-29 18:59:41.842] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-29 18:59:41.842] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-29 18:59:41.842] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-29 18:59:41.842] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-29 18:59:41.851] [puff::index::jointLog] [info] # segments = 23[2024-07-29 18:59:41.851] [puff::index::jointLog] [info] total length = 19592[2024-07-29 18:59:41.851] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-29 18:59:41.859] [puff::index::jointLog] [info] positional integer width = 15[2024-07-29 18:59:41.859] [puff::index::jointLog] [info] seqSize = 19592[2024-07-29 18:59:41.859] [puff::index::jointLog] [info] rankSize = 19592[2024-07-29 18:59:41.859] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-29 18:59:41.859] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-29 18:59:41.920] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-29 18:59:41.920] [puff::index::jointLog] [info] chunk size = 9796[2024-07-29 18:59:41.920] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-29 18:59:41.920] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-29 18:59:41.922] [puff::index::jointLog] [info] finished populating pos vector[2024-07-29 18:59:41.922] [puff::index::jointLog] [info] writing index components[2024-07-29 18:59:41.931] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-29 18:59:41.934] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-29 18:59:42.022] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-29 18:59:42.022] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-29 18:59:42.022] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-07-29 18:59:42.022] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-29 18:59:42.022] [jointLog] [info] parsing read library format[2024-07-29 18:59:42.022] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 543.24 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 876.6 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 377.99 us----------------------------------------------------------------------------------| Loading mphf table | Time = 572.54 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 580.11 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 614.73 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 854.26 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 547.79 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 284.39 us-----------------------------------------[2024-07-29 18:59:42.135] [jointLog] [info] Loading pufferfish index[2024-07-29 18:59:42.135] [jointLog] [info] Loading dense pufferfish index.[2024-07-29 18:59:42.142] [jointLog] [info] done[2024-07-29 18:59:42.142] [jointLog] [info] Index contained 15 targets[2024-07-29 18:59:42.143] [jointLog] [info] Number of decoys : 0[2024-07-29 18:59:42.143] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-07-29 18:59:42.213] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-29 18:59:42.213] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-29 18:59:42.214] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-07-29 18:59:42.214] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-29 18:59:42.214] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-29 18:59:42.214] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-07-29 18:59:42.215] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-29 18:59:42.215] [jointLog] [info] Mapping rate = 100%[2024-07-29 18:59:42.215] [jointLog] [info] finished quantifyLibrary()[2024-07-29 18:59:42.218] [jointLog] [info] Starting optimizer[2024-07-29 18:59:42.219] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-29 18:59:42.219] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-07-29 18:59:42.219] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-07-29 18:59:42.223] [jointLog] [info] Computed expected counts (for bias correction)[2024-07-29 18:59:42.224] [jointLog] [info] processed bias for 20.0% of the transcripts[2024-07-29 18:59:42.225] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-07-29 18:59:42.225] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-07-29 18:59:42.225] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-07-29 18:59:42.225] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-07-29 18:59:42.225] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-07-29 18:59:42.226] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-07-29 18:59:42.226] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-07-29 18:59:42.226] [jointLog] [info] processed bias for 73.3% of the transcripts[2024-07-29 18:59:42.227] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-07-29 18:59:42.228] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-29 18:59:42.228] [jointLog] [info] Finished optimizer[2024-07-29 18:59:42.228] [jointLog] [info] writing output [2024-07-29 18:59:42.231] [jointLog] [info] writing equivalence class counts.[2024-07-29 18:59:42.232] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-07-29 18:59:42.232] [jointLog] [info] done.[2024-07-29 18:59:42.234] [jointLog] [info] done writing equivalence class counts.[2024-07-29 18:59:42.235] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="36.36793875694275">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="23.026387214660645">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 23.026387214660645, "tool_id": "samtools_bedcov", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="38.34080386161804">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="42.671332359313965">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="40.90133023262024">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="38.83716654777527">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="79.96066951751709">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="46.268043518066406">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="46.91262221336365">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="45.638060569763184">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="116.66977643966675">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/7/4/0/dataset_74030271-ed62-43b6-9c08-9f336ff1eb27.dat--pe1-2fastq:/galaxy/server/database/objects/1/0/9/dataset_109e847f-5ec7-484d-b544-e13bd4d91e7c.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/4/0/dataset_74030271-ed62-43b6-9c08-9f336ff1eb27.dat']      right reads: ['/galaxy/server/database/objects/1/0/9/dataset_109e847f-5ec7-484d-b544-e13bd4d91e7c.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/4/0/dataset_74030271-ed62-43b6-9c08-9f336ff1eb27.dat  0:00:00.795     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/0/9/dataset_109e847f-5ec7-484d-b544-e13bd4d91e7c.dat  0:00:01.503     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.515    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.772    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.772    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.909    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.930    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.952    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.954    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.956    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.957    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.964    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.964    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.964    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/4/0/dataset_74030271-ed62-43b6-9c08-9f336ff1eb27.dat  0:00:01.986    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/0/9/dataset_109e847f-5ec7-484d-b544-e13bd4d91e7c.dat  0:00:02.007    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.007    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.007    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.014    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.015    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.015    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.023    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.023    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.023    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.023    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/4/0/dataset_74030271-ed62-43b6-9c08-9f336ff1eb27.dat and /galaxy/server/database/objects/1/0/9/dataset_109e847f-5ec7-484d-b544-e13bd4d91e7c.dat  0:00:02.082    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.087    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.091    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.126    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.126    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.126    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:02.129    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.103    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.109     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.273   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.281     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.448   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.524     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.524     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.524     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.525     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.525     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.525     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.525     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.907     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.917    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.917    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.070    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.070    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.147    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.148    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.148    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.149    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.149    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.149    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.890     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.903    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.190    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.190    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.324    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.342    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.360    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.360    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.362    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.362    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing..      : 346)   Closing short gaps  0:00:07.928    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.929    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.929    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.929    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.929    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.929    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.929    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.929    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.929    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.930    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.930    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.930    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.930    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.930    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.930    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.930    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.930    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.930    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.930    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.930    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.930    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.930    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.941    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.941    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.941    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.945    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.945    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.945    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:07.949    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:07.952    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:07.955    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:07.960    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.960    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.960    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.960    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:07.960    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.960    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.089   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.307   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.078   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.078   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.090    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.235   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.239   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.242   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.244   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.244   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.244   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.260   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.265   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.285    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.285    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.285    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.285    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.285    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.285    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.285    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.285    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.285    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.285    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.286    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.286    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.286    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.286    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.286    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.286    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.286    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.286    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.286    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.286    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.286    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.287    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.287    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.287    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.287    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.287    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.287    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.287    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.287    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.287    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.287    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.287    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.287    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.287    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.288    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.292    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.296    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:10.301    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:10.312    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.314    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="49.55648159980774">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/3/7/9/dataset_3791129c-0f56-4d98-917c-9cc7b8fb7765.dat--pe1-2fasta:/galaxy/server/database/objects/2/f/e/dataset_2fefcf85-8669-41d0-848f-5810bac12242.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/7/9/dataset_3791129c-0f56-4d98-917c-9cc7b8fb7765.dat']      right reads: ['/galaxy/server/database/objects/2/f/e/dataset_2fefcf85-8669-41d0-848f-5810bac12242.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.103    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.109     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.285     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.450   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.528     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.528     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.528     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.529     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.529     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.529     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.529     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.918     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.927    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.927    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.082    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.082    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.178    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.178    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.178    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.179    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.179    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.179    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.023     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.037    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.334    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.334    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.467    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.486    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.504    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:02.504    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.505    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.506    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:02.507    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:02.508    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:02.508    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:02.508    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:02.508    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:02.508    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:02.508    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.521    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:02.521    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:02.527    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:02.534    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:02.534    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:02.534    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:02.534    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:02.534    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:02.575    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.680    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.045    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:03.667    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:04.792    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.627    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:06.629    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:06.629    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:06.629    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:06.629    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:06.629    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:06.629    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:06.629    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:06.629    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:06.629    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:06.630    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:06.630    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:06.631    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:06.631    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:06.631    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:07.445     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:07.455    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:07.755    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:07.755    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:07.897    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:07.914    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:07.931    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:07.931    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:07.932    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:07.933    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:07.933    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:07.935    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:07.935    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:07.936    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:07.936    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.937    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:07.937    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:07.937    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:07.937    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:07.937    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:07.937    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:07.937    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.937   ..indices  0:00:09.274    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.274    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.275    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.275    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.275    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.275    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.275    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.275    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.275    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.275    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.275    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:09.275    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.275    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.275    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.286    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.286    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.286    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.289    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.289    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.289    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:09.293    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:09.296    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:09.299    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:09.305    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.305    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.305    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.305    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.305    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.305    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.437   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.655   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.419   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.419   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:11.432    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:11.580   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.584   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.587   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.589   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.589   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.589   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.603   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.608   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.628    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.628    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.628    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.628    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.628    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.628    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.628    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.628    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.628    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.628    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.628    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.628    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.628    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.629    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.629    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.629    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.629    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.629    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.629    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.629    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.629    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.629    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.630    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.630    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.630    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.630    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.630    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.630    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.630    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.630    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.630    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.631    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:11.634    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:11.637    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:11.643    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:11.657    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.659    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="21.85261845588684">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 21.85261845588684, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="58.158122301101685">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/11/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/9/8/a/dataset_98abab7e-5798-42a1-8e4a-1641181beb42.dat--pe1-2fastq:/galaxy/server/database/objects/5/8/4/dataset_584c50ed-a7f4-44bc-92ea-fcbaa5c02bc7.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/11/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/9/8/a/dataset_98abab7e-5798-42a1-8e4a-1641181beb42.dat']      right reads: ['/galaxy/server/database/objects/5/8/4/dataset_584c50ed-a7f4-44bc-92ea-fcbaa5c02bc7.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/11/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/8/a/dataset_98abab7e-5798-42a1-8e4a-1641181beb42.dat  0:00:00.770     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/8/4/dataset_584c50ed-a7f4-44bc-92ea-fcbaa5c02bc7.dat  0:00:01.470     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.483    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.717    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.717    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.860    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.878    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.894    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.896    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.898    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.899    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.908    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.908    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.908    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/8/a/dataset_98abab7e-5798-42a1-8e4a-1641181beb42.dat  0:00:01.928    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/8/4/dataset_584c50ed-a7f4-44bc-92ea-fcbaa5c02bc7.dat  0:00:01.946    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.946    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.946    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.953    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.954    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.954    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.965    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.965    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.965    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.965    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/9/8/a/dataset_98abab7e-5798-42a1-8e4a-1641181beb42.dat and /galaxy/server/database/objects/5/8/4/dataset_584c50ed-a7f4-44bc-92ea-fcbaa5c02bc7.dat  0:00:02.023    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.029    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.034    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.067    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.067    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.067    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml  0:00:02.071    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/11/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/11/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.108    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.114     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.284   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.293     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.462   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.549     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.549     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.549     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.550     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.551     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.551     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.551     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:00.977     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.985    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.985    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.124    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.124    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.194    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.195    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.195    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.196    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.196    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.196    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.965     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:01.978    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.257    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.257    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.405    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.424    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.438    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:02.438    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.440    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.441    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:02.441    32M / 8G    INFO    General                 (construction.cpp          : 253)   Earl.. short gaps  0:00:04.924    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:04.925    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:04.925    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:04.925    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:04.925    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:04.925    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:04.925    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:04.925    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:04.925    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:04.925    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:04.925    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:04.925    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:04.925    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:04.933    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:04.933    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:04.933    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:04.936    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:04.936    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:04.937    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:04.940    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:04.942    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/simplified_contigs.fasta  0:00:04.945    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/intermediate_contigs.fasta  0:00:04.951    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:04.951    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:04.951    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:04.951    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:04.951    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:04.951    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.081   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.307   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.072   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.072   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:07.084    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:07.239   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.243   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.246   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.248   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.248   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.248   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.262   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.266   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.286    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.286    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.286    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.286    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.286    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.286    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.286    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.286    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.286    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.286    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.287    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.287    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.287    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.287    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.287    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.287    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.287    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.287    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.287    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.287    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.287    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.288    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.288    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.288    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.288    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.288    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.288    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.288    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.288    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.288    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.288    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.288    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.288    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.288    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:07.289    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:07.293    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:07.298    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/final_contigs.paths  0:00:07.304    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/scaffolds.paths  0:00:07.315    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.317    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/11/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="45.469194412231445">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/14/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/f/e/1/dataset_fe1437a2-d87e-4c00-8997-f8de4cee3652.dat--pe1-2fastq:/galaxy/server/database/objects/a/5/3/dataset_a531764c-03a8-464d-8f62-fe1e5fb5e7a6.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/14/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/f/e/1/dataset_fe1437a2-d87e-4c00-8997-f8de4cee3652.dat']      right reads: ['/galaxy/server/database/objects/a/5/3/dataset_a531764c-03a8-464d-8f62-fe1e5fb5e7a6.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/14/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/e/1/dataset_fe1437a2-d87e-4c00-8997-f8de4cee3652.dat  0:00:00.776     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/5/3/dataset_a531764c-03a8-464d-8f62-fe1e5fb5e7a6.dat  0:00:01.402     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.415    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.661    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.661    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.804    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.822    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.836    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.838    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.840    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.842    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.848    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.848    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.849    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/e/1/dataset_fe1437a2-d87e-4c00-8997-f8de4cee3652.dat  0:00:01.864    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/5/3/dataset_a531764c-03a8-464d-8f62-fe1e5fb5e7a6.dat  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.880    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.888    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.889    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.889    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.897    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.897    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.897    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.897    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/e/1/dataset_fe1437a2-d87e-4c00-8997-f8de4cee3652.dat and /galaxy/server/database/objects/a/5/3/dataset_a531764c-03a8-464d-8f62-fe1e5fb5e7a6.dat  0:00:01.956    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:01.962    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:01.966    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.000    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.001    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml  0:00:02.005    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/14/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/14/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.278   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.286     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.454   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.538     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.538     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.538     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.539     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.539     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.539     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.539     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:00.943     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.951    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.951    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.087    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.087    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.176    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.177    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.177    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.178    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.178    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.178    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:01.937     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:01.950    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.242    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:02.242    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.400    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.419    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.436    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:02.436    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.438    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.438    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..osing short gaps  0:00:05.456    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.457    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.457    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.457    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.457    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.457    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.457    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.457    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.457    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.458    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.458    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.458    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.458    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.458    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.458    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.458    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.458    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.458    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.458    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:05.458    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.458    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.458    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.468    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.468    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.468    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.471    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.471    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:05.472    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:05.476    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:05.480    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/simplified_contigs.fasta  0:00:05.483    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/intermediate_contigs.fasta  0:00:05.489    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.489    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.489    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.489    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:05.489    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.489    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.622   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.836   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.601   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.601   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:07.614    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:07.760   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.763   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.765   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.767   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.767   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.767   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.781   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.785   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.805    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.805    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.805    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.805    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.805    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.805    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.805    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.805    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.805    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.805    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.806    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.806    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.806    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.806    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.806    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.806    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.806    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.806    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.806    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.806    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.806    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.807    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:07.807    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:07.807    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.807    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.807    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.807    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.807    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.807    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.807    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.807    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.807    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.807    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.807    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:07.808    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:07.812    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:07.816    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/final_contigs.paths  0:00:07.823    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/scaffolds.paths  0:00:07.835    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.837    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/14/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="40.726903200149536">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "careful": false,  "contig_graph_out": true,  "kmer_choice|kmers": "33",  "libraries_0|files_0|file_type|fwd_reads": {   "id": "4f6c44c70fa3d41a",   "src": "hda"  },  "libraries_0|files_0|file_type|rev_reads": {   "id": "d31dca02c8e7bd7c",   "src": "hda"  },  "libraries_0|lib_type": "paired_end",  "sc": false,  "scaffold_graph_out": true }, "job": {  "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi \u0026\u0026  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat --pe1-2 fastq:/galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/17/configs/tmpfqs7qum4\u0027 \u003c contigs.fasta \u003e \u0027/galaxy/server/database/objects/2/e/7/dataset_2e7942e7-0137-4c5b-88b9-f81d62d52e6a.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/17/configs/tmpfqs7qum4\u0027 \u003c scaffolds.fasta \u003e \u0027/galaxy/server/database/objects/6/e/7/dataset_6e71e1d5-7417-4b93-921e-a3dc6b4ddbd9.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-29T18:37:22.917147",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-fk8fz",  "galaxy_version": "24.1",  "handler": null,  "history_id": "74905bf568c2edc0",  "id": "743403ae385468be",  "inputs": {   "libraries_0|files_0|file_type|fwd_reads": {    "id": "4f6c44c70fa3d41a",    "src": "hda",    "uuid": "1323313f-ca02-4639-b03b-60b48f06c8eb"   },   "libraries_0|files_0|file_type|rev_reads": {    "id": "d31dca02c8e7bd7c",    "src": "hda",    "uuid": "e3c8f981-3bc5-44ae-a23f-a428b70fa220"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "contig_graph": {    "id": "45702970e786e19c",    "src": "hda",    "uuid": "5e95e009-95f8-49a0-84d7-44c718ae9e92"   },   "out_contig_stats": {    "id": "9914f7e64a119e22",    "src": "hda",    "uuid": "2e7942e7-0137-4c5b-88b9-f81d62d52e6a"   },   "out_contigs": {    "id": "485e4cd723705444",    "src": "hda",    "uuid": "22d0afbc-5f13-423b-9694-5f80378772d4"   },   "out_log": {    "id": "c9c9e9317979dea0",    "src": "hda",    "uuid": "b5d872a2-33d4-4f3d-921b-efa08d31b919"   },   "out_scaffold_stats": {    "id": "7550a230c2ca1a57",    "src": "hda",    "uuid": "6e71e1d5-7417-4b93-921e-a3dc6b4ddbd9"   },   "out_scaffolds": {    "id": "6d6de7239a7dd256",    "src": "hda",    "uuid": "ec83966d-d75b-457d-b8c1-52ea18ee4bad"   },   "scaffold_graph": {    "id": "bc6b0d6fc6a0c1a5",    "src": "hda",    "uuid": "5e1b1d6e-d305-49eb-a630-73503849366d"   }  },  "params": {   "__input_ext": "\"fastq\"",   "careful": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contig_graph_out": "true",   "cov": "{\"__current_case__\": 0, \"state\": \"off\"}",   "dbkey": "\"?\"",   "iontorrent": "false",   "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}",   "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 31, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 32, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]",   "nanopore_reads": null,   "onlyassembler": "false",   "pacbio_reads": null,   "sanger_reads": null,   "sc": "false",   "scaffold_graph_out": "true",   "trusted_contigs": null,   "untrusted_contigs": null  },  "state": "error",  "stderr": "",  "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/17/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.85+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/17/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set \u0027--sc\u0027 flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: [\u0027/galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\u0027]\n      right reads: [\u0027/galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\u0027]\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\n  0:00:00.759     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\n  0:00:01.418     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.430    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.834    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:01.852    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:01.867    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:01.868    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:01.871    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:01.872    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:01.880    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\n  0:00:01.897    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\n  0:00:01.914    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:01.914    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:01.914    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:01.923    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:01.923    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:01.932    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:01.932    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:01.932    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:01.932    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat and /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\n  0:00:01.991    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:01.996    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.000    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.035    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.035    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.036    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml\n  0:00:02.039    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.284     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.452   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.536     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.538     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.934     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.943    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.943    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.169    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.169    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.169    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.170    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.170    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.170    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.913     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.926    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.351    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.370    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.386    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.386    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.388    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.389    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nsing short gaps\n  0:00:07.812    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.824    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.824    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.824    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.828    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.828    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.828    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:07.831    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:07.834    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta\n  0:00:07.838    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta\n  0:00:07.843    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.843    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.843    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.974   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.191   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.954   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.954   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:09.968    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.115   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.118   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.122   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.138   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.143   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.162    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.162    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.162    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.162    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.163    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.163    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.163    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.163    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.163    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.163    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.163    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.163    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.164    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.164    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.165    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:10.169    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:10.172    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths\n  0:00:10.178    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths\n  0:00:10.189    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.191    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/17/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\nThank you for using SPAdes!\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/17/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-6.1.85+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/17/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set \u0027--sc\u0027 flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: [\u0027/galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\u0027]\n      right reads: [\u0027/galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\u0027]\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\n  0:00:00.759     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\n  0:00:01.418     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.430    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.834    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:01.852    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:01.867    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:01.868    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:01.871    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:01.872    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:01.880    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat\n  0:00:01.897    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\n  0:00:01.914    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:01.914    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:01.914    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:01.923    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:01.923    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:01.932    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:01.932    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:01.932    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:01.932    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat and /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat\n  0:00:01.991    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:01.996    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.000    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.035    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.035    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.036    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml\n  0:00:02.039    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.284     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.452   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.536     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.538     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.934     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.943    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.943    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.169    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.169    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.169    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.170    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.170    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.170    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.913     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.926    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.351    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.370    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.386    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.386    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.388    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.389    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == \n..\nsing short gaps\n  0:00:07.812    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.824    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.824    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.824    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.828    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.828    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.828    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:07.831    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:07.834    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta\n  0:00:07.838    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta\n  0:00:07.843    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.843    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.843    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.974   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.191   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.954   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.954   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:09.968    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:10.115   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:10.118   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.122   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:10.138   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:10.143   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:10.162    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:10.162    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.162    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.162    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:10.163    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.163    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:10.163    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:10.163    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:10.163    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:10.163    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:10.163    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:10.163    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:10.164    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:10.164    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:10.165    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta\n  0:00:10.169    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg\n  0:00:10.172    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths\n  0:00:10.178    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths\n  0:00:10.189    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:10.191    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/17/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log\n\nThank you for using SPAdes!\n",  "update_time": "2024-07-29T18:37:40.156838",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 40.726903200149536, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/17/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat--pe1-2fastq:/galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/17/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat']      right reads: ['/galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat  0:00:00.759     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat  0:00:01.418     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.430    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.681    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.834    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.852    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.867    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.868    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.871    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.872    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.880    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.880    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat  0:00:01.897    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat  0:00:01.914    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.914    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.914    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.922    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.923    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.923    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.932    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.932    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.932    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.932    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/1/3/2/dataset_1323313f-ca02-4639-b03b-60b48f06c8eb.dat and /galaxy/server/database/objects/e/3/c/dataset_e3c8f981-3bc5-44ae-a23f-a428b70fa220.dat  0:00:01.991    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:01.996    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.000    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.035    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.035    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.036    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml  0:00:02.039    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.284     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.452   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.536     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.538     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.934     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.943    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.943    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.097    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.169    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.169    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.169    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.170    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.170    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.170    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.913     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.926    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.351    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.370    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.386    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.386    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.388    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.389    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..sing short gaps  0:00:07.812    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.814    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.814    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.814    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.824    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.824    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.824    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.828    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.828    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.828    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:07.831    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:07.834    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta  0:00:07.838    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta  0:00:07.843    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.843    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.843    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.843    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:07.974   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.191   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:09.954   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:09.954   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:09.968    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.115   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.118   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.122   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.124   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.138   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.143   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.162    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.162    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.162    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.162    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.162    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.163    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.163    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.163    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.163    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.163    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.163    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.163    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.163    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.163    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.164    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.164    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.164    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.164    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.164    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.164    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.165    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:10.169    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:10.172    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths  0:00:10.178    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths  0:00:10.189    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.191    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/17/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="51.37833857536316">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/20/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/6/8/5/dataset_685c999b-c56c-4c24-ae80-d67d438f9556.dat--pe1-2fastq:/galaxy/server/database/objects/7/c/7/dataset_7c7b4e91-89d8-4ad3-858e-0d214de358eb.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/20/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/6/8/5/dataset_685c999b-c56c-4c24-ae80-d67d438f9556.dat']      right reads: ['/galaxy/server/database/objects/7/c/7/dataset_7c7b4e91-89d8-4ad3-858e-0d214de358eb.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/8/5/dataset_685c999b-c56c-4c24-ae80-d67d438f9556.dat  0:00:00.874     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/c/7/dataset_7c7b4e91-89d8-4ad3-858e-0d214de358eb.dat  0:00:01.619     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.632    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.879    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.879    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.016    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.035    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.050    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.052    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.054    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.055    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.062    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.062    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.062    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/8/5/dataset_685c999b-c56c-4c24-ae80-d67d438f9556.dat  0:00:02.081    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/c/7/dataset_7c7b4e91-89d8-4ad3-858e-0d214de358eb.dat  0:00:02.099    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.099    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.099    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.106    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.107    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.107    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.115    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.115    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.115    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.115    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/6/8/5/dataset_685c999b-c56c-4c24-ae80-d67d438f9556.dat and /galaxy/server/database/objects/7/c/7/dataset_7c7b4e91-89d8-4ad3-858e-0d214de358eb.dat  0:00:02.176    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.182    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.185    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.222    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.222    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.223    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml  0:00:02.226    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.113    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.121     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.292   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.301     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.470   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.548     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.549     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.549     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.549     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.550     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.550     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.550     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.951     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.960    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.960    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.101    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.101    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.172    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.173    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.173    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.173    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.174    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.174    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.931     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.944    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.241    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.241    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.402    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.422    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.441    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.441    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.443    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.443    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..sing short gaps  0:00:07.962    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.963    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.963    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.963    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.963    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.963    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.963    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.963    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.963    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.963    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.963    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.963    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.963    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.973    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.973    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.973    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.977    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.977    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.977    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:07.981    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:07.984    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta  0:00:07.987    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta  0:00:07.992    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.992    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.992    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.992    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:07.992    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.992    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.122   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.340   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.106   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.106   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.119    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.265   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.268   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.271   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.273   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.273   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.273   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.287   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.293   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.314    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.314    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.314    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.314    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.314    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.314    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.314    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.314    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.314    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.314    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.314    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.314    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.314    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.315    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.315    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.315    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.315    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.315    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.315    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.315    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.316    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.316    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.316    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.316    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.316    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.316    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.316    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.317    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:10.320    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:10.324    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths  0:00:10.330    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths  0:00:10.340    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.342    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="51.2810173034668">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/23/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/a/5/2/dataset_a52500a1-01e4-4439-86c7-a674f2d3e348.dat--pe1-2fastq.gz:/galaxy/server/database/objects/0/f/1/dataset_0f16bfb9-28a0-4565-adc6-40a112a61372.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/23/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/a/5/2/dataset_a52500a1-01e4-4439-86c7-a674f2d3e348.dat']      right reads: ['/galaxy/server/database/objects/0/f/1/dataset_0f16bfb9-28a0-4565-adc6-40a112a61372.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/5/2/dataset_a52500a1-01e4-4439-86c7-a674f2d3e348.dat  0:00:00.746     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/f/1/dataset_0f16bfb9-28a0-4565-adc6-40a112a61372.dat  0:00:01.414     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.427    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.671    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.671    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.798    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.817    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.832    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.833    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.836    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.837    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.845    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.845    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.845    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/5/2/dataset_a52500a1-01e4-4439-86c7-a674f2d3e348.dat  0:00:01.860    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/f/1/dataset_0f16bfb9-28a0-4565-adc6-40a112a61372.dat  0:00:01.877    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.877    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.877    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.885    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.886    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.886    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.900    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.900    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.900    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.900    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/a/5/2/dataset_a52500a1-01e4-4439-86c7-a674f2d3e348.dat and /galaxy/server/database/objects/0/f/1/dataset_0f16bfb9-28a0-4565-adc6-40a112a61372.dat  0:00:01.963    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:01.969    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:01.972    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.007    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.007    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.007    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml  0:00:02.011    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.277   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.286     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.452   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.529     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.529     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.529     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.530     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.531     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.531     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.531     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.907     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.916    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.917    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.053    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.053    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.141    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.142    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.142    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.143    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.143    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.143    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.920     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.932    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.227    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.227    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.380    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.398    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.415    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.415    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.417    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.417    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDU..sing short gaps  0:00:08.161    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.162    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.163    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.163    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.163    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.163    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.163    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.163    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.163    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.163    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.163    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.163    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.163    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.173    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.174    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.174    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.177    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.177    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.178    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:08.181    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:08.185    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/simplified_contigs.fasta  0:00:08.189    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/intermediate_contigs.fasta  0:00:08.195    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.195    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.195    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.195    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.195    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.195    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.330   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.549   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.315   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.315   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.328    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.476   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.480   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.484   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.486   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.486   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.486   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.501   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.506   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.527    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.527    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.527    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.527    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.527    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.527    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.527    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.527    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.527    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.527    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.528    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.528    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.528    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.528    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.528    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.528    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.528    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.528    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.528    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.528    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.528    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.529    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.529    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.529    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.529    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.529    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.529    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.529    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.529    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.529    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.529    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.529    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.529    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.529    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.530    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:10.534    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:10.537    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/final_contigs.paths  0:00:10.543    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/scaffolds.paths  0:00:10.556    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.558    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="39.609062910079956">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "f4402652e573a6bc",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/a/3/6/dataset_a367233e-7a9c-4549-bf0e-13e88bd4bd7e.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/2/1/8/dataset_218e24ec-a1a4-46de-9707-971291ffea51.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-29T18:46:13.610554",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-rj9q8",  "galaxy_version": "24.1",  "handler": null,  "history_id": "74905bf568c2edc0",  "id": "70f49f39a7718cdc",  "inputs": {   "readtype|fastq_in": {    "id": "f4402652e573a6bc",    "src": "hda",    "uuid": "a367233e-7a9c-4549-bf0e-13e88bd4bd7e"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "5ceefd6bc021fa54",    "src": "hda",    "uuid": "88037c5e-0b5b-4675-b547-15bedbb7f5a2"   },   "fastq_out": {    "id": "c9d38db0ec59cc17",    "src": "hda",    "uuid": "218e24ec-a1a4-46de-9707-971291ffea51"   },   "log_file": {    "id": "727e9cfc3d646f2a",    "src": "hda",    "uuid": "74beb615-e5ac-4882-ac1f-800c1307f0e2"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 77, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "error",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "update_time": "2024-07-29T18:46:31.595758",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 39.609062910079956, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="35.60563778877258">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="35.39666223526001">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="28.569710731506348">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "illuminaclip|adapter_type|adapter_fasta": "TruSeq2-PE.fa",  "illuminaclip|do_illuminaclip": true,  "operations_0|operation|name": "SLIDINGWINDOW",  "readtype|fastq_r1_in": {   "id": "8a8e94b44c25b3cf",   "src": "hda"  },  "readtype|fastq_r2_in": {   "id": "4dd76d9807c31ec1",   "src": "hda"  },  "readtype|single_or_paired": "pair_of_files" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/7/8/9/dataset_789efc2f-64e3-40a2-ae5d-828149068cd3.dat\u0027 fastq_r1.\u0027fastqsanger\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/c/f/b/dataset_cfb90237-c336-48ce-bfdf-3402bba80d6b.dat\u0027 fastq_r2.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.\u0027fastqsanger\u0027 fastq_r2.\u0027fastqsanger\u0027 fastq_out_r1_paired.\u0027fastqsanger\u0027 fastq_out_r1_unpaired.\u0027fastqsanger\u0027 fastq_out_r2_paired.\u0027fastqsanger\u0027 fastq_out_r2_unpaired.\u0027fastqsanger\u0027 ILLUMINACLIP:$TRIMMOMATIC_ADAPTERS_PATH/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out_r1_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/f/9/d/dataset_f9d450a3-5542-42a7-aa25-02efb8bb6b03.dat\u0027 \u0026\u0026 mv fastq_out_r1_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/c/5/7/dataset_c57fd837-49b0-4450-875d-58c043335b9a.dat\u0027 \u0026\u0026 mv fastq_out_r2_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/f/e/d/dataset_fed25063-5e84-44aa-b536-28d8e6778cf3.dat\u0027 \u0026\u0026 mv fastq_out_r2_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/9/d/7/dataset_9d78d5a8-2ee1-4a55-a5cb-b609f5bee329.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-29T18:53:04.912506",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-cdrsp",  "galaxy_version": "24.1",  "handler": null,  "history_id": "74905bf568c2edc0",  "id": "9bceb2d8ffa3474f",  "inputs": {   "readtype|fastq_r1_in": {    "id": "8a8e94b44c25b3cf",    "src": "hda",    "uuid": "789efc2f-64e3-40a2-ae5d-828149068cd3"   },   "readtype|fastq_r2_in": {    "id": "4dd76d9807c31ec1",    "src": "hda",    "uuid": "cfb90237-c336-48ce-bfdf-3402bba80d6b"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out_r1_paired": {    "id": "a2724031af399ff2",    "src": "hda",    "uuid": "f9d450a3-5542-42a7-aa25-02efb8bb6b03"   },   "fastq_out_r1_unpaired": {    "id": "3ec8a42ddab575a8",    "src": "hda",    "uuid": "c57fd837-49b0-4450-875d-58c043335b9a"   },   "fastq_out_r2_paired": {    "id": "1a4eef255b4fd9ed",    "src": "hda",    "uuid": "fed25063-5e84-44aa-b536-28d8e6778cf3"   },   "fastq_out_r2_unpaired": {    "id": "900ecc45c9d1455d",    "src": "hda",    "uuid": "9d78d5a8-2ee1-4a55-a5cb-b609f5bee329"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 0, \"adapter_type\": {\"__current_case__\": 0, \"adapter_fasta\": \"TruSeq2-PE.fa\", \"standard_or_custom\": \"standard\"}, \"do_illuminaclip\": true, \"keep_both_reads\": true, \"min_adapter_len\": \"8\", \"palindrome_clip_threshold\": \"30\", \"seed_mismatches\": \"2\", \"simple_clip_threshold\": \"10\"}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "false",   "output_logs": "false",   "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 125, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 126, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"  },  "state": "error",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20\nUsing PrefixPair: \u0027AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\u0027 and \u0027CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\u0027\nUsing Long Clipping Sequence: \u0027AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT\u0027\nUsing Long Clipping Sequence: \u0027AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG\u0027\nUsing Long Clipping Sequence: \u0027TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC\u0027\nUsing Long Clipping Sequence: \u0027TTTTTTTTTTCAAGCAGAAGACGGCATACGA\u0027\nUsing Long Clipping Sequence: \u0027CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\u0027\nUsing Long Clipping Sequence: \u0027AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\u0027\nILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20\nUsing PrefixPair: \u0027AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\u0027 and \u0027CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\u0027\nUsing Long Clipping Sequence: \u0027AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT\u0027\nUsing Long Clipping Sequence: \u0027AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG\u0027\nUsing Long Clipping Sequence: \u0027TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC\u0027\nUsing Long Clipping Sequence: \u0027TTTTTTTTTTCAAGCAGAAGACGGCATACGA\u0027\nUsing Long Clipping Sequence: \u0027CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\u0027\nUsing Long Clipping Sequence: \u0027AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\u0027\nILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n",  "update_time": "2024-07-29T18:53:09.585678",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 11, "time_seconds": 28.569710731506348, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="21.851447582244873">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 21.851447582244873, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="38.896013498306274">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="38.50791883468628">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="37.5906286239624">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="38.29334235191345">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="35.270625829696655">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="37.11811280250549">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="37.378913164138794">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="34.74754023551941">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="12.206196784973145">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 12.206196784973145, "tool_id": "vcfcombine", "tool_version": "1.0.0_rc3+galaxy0"}
            ]]></error>
        
    </testcase>
    
</testsuite>