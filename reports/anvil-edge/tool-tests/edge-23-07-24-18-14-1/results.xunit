<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="8"
           failures="5"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="37.35642623901367">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="30.29090189933777">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="31.505815267562866">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="30.62246823310852">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="28.596498012542725">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="30.293919801712036">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="31.22962498664856">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="31.056052207946777">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="29.465811491012573">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="11.420727729797363">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.420727729797363, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="38.50220084190369">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="40.44135546684265">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="40.403282165527344">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="25.626434564590454">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 25.626434564590454, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="73.19875836372375">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="35.51795983314514">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.3038957118988037">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.3038957118988037, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="36.93232250213623">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="30.139722108840942">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="30.6263644695282">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="30.627553939819336">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="30.13535237312317">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="30.530439138412476">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="31.348742723464966">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="32.264230251312256">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="29.288843870162964">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="9.86623215675354">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 9.86623215675354, "tool_id": "filter_tabular", "tool_version": "3.1.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="38.440266370773315">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="29.89864706993103">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="65.37694096565247">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="67.76325678825378">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="35.332677602767944">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="54.34040451049805">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/3/e/e/dataset_3ee33b89-c50a-4a16-8508-f9c748c847b7.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/c/8/6/dataset_c86122b2-9cbc-4614-b262-0406e88c182a.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/f/1/b/dataset_f1bcde37-0f4f-4541-91ac-cc5fb132f106.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "create_time": "2023-07-24T19:03:20.819058",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4kp8s",  "galaxy_version": "23.0",  "history_id": "29e9bceb3a5fc732",  "id": "456a9c16744d154f",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "21.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "21 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690225426.0000000",    "title": "Job End Time",    "value": "2023-07-24 19:03:46"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690225405.0000000",    "title": "Job Start Time",    "value": "2023-07-24 19:03:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "0055f52758074796",    "src": "hda",    "uuid": "f1bcde37-0f4f-4541-91ac-cc5fb132f106"   },   "design_tsv": {    "id": "3656450fb586e7d8",    "src": "hda",    "uuid": "db8fd8a1-b97c-45fa-a49d-32a91b1fe1ce"   },   "genes_tsv": {    "id": "aef402d1378b48c7",    "src": "hda",    "uuid": "c86122b2-9cbc-4614-b262-0406e88c182a"   },   "matrix_mtx": {    "id": "18ebd83b0ef890ca",    "src": "hda",    "uuid": "3ee33b89-c50a-4a16-8508-f9c748c847b7"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-07-24 19:03:25--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  265K\n    50K .......... .......... .......... .......... ..........  272K\n   100K .......... .......... .......... .......... ..........  542K\n   150K .......... .......... .......... .......... ..........  545K\n   200K .......... .......... .......... .......... ..........  545K\n   250K .......... .......... .......... .......... ..........  544K\n   300K .......... .......... .......... .......... .......... 1.02M\n   350K .......... .......... .......... .......... ..........  774K\n   400K .......... .......... .......... .......... ..........  705K\n   450K .......... .......... .......... .......... .......... 2.30M\n   500K .......... .......... .......... .......... ..........  753K\n   550K .......... .......... .......... .......... .......... 1.92M\n   600K .......... .......... .......... .......... ..........  799K\n   650K .......... .......... .......... .......... .......... 1.03M\n   700K .......... .......... .......... .......... .......... 2.28M\n   750K .......... .......... .......... .......... ..........  714K\n   800K .......... .......... .......... .......... .......... 3.45M\n   850K .......... .......... .......... .......... .......... 1.56M\n   900K .......... .......... .......... .......... .......... 1.08M\n   950K .......... .......... .......... .......... .......... 3.26M\n  1000K .......... .......... .......... .......... .......... 5.43M\n  1050K .......... .......... .......... .......... ..........  738K\n  1100K .......... .......... .......... .......... .......... 3.41M\n  1150K .......... .......... .......... .......... .......... 5.34M\n  1200K .......... .......... .......... .......... ..........  790K\n  1250K .......... .......... .......... .......... .......... 7.26M\n  1300K .......... .......... .......... .......... .......... 3.83M\n  1350K .......... .......... .......... .......... .......... 5.40M\n  1400K .......... .......... .......... .......... ..........  789K\n  1450K .......... .......... .......... .......... .......... 6.86M\n  1500K .......... .......... .......... .......... .......... 3.76M\n  1550K .......... .......... .......... .......... .......... 5.78M\n  1600K .......... .......... .......... .......... .......... 1.29M\n  1650K .......... .......... .......... .......... .......... 1.51M\n  1700K .......... .......... .......... .......... .......... 3.81M\n  1750K .......... .......... .......... .......... .......... 26.4M\n  1800K .......... .......... .......... .......... .......... 6.53M\n  1850K .......... .......... .......... .......... .......... 1.29M\n  1900K .......... .......... .......... .......... .......... 1.50M\n  1950K .......... .......... .......... .......... .......... 4.00M\n  2000K .......... .......... .......... .......... .......... 5.84M\n  2050K .......... .......... .......... .......... .......... 33.9M\n  2100K .......... .......... .......... .......... ..........  793K\n  2150K .......... .......... .......... .......... .......... 7.35M\n  2200K .......... .......... .......... .......... .......... 46.7M\n  2250K .......... .......... .......... .......... .......... 3.94M\n  2300K .......... .......... .......... .......... .......... 5.88M\n  2350K .......... .......... .......... .......... .......... 2.07M\n  2400K .......... .......... .......... .......... .......... 1.21M\n  2450K .......... .......... .......... .......... .......... 7.36M\n  2500K .......... .......... .......... .......... .......... 3.94M\n  2550K .......... .......... .......... .......... .......... 34.0M\n  2600K .......... .......... .......... .......... .......... 5.90M\n  2650K .......... .......... .......... .......... .......... 2.16M\n  2700K .......... .......... .......... .......... .......... 1.21M\n  2750K .......... .......... .......... .......... .......... 7.55M\n  2800K .......... .......... .......... .......... .......... 3.94M\n  2850K .......... .......... .......... .......... .......... 32.5M\n  2900K .......... .......... .......... .......... .......... 5.91M\n  2950K .......... .......... .......... .......... .......... 2.14M\n  3000K .......... .......... .......... .......... .......... 3.15M\n  3050K .......... .......... .......... .......... .......... 1.58M\n  3100K .......... .......... .......... .......... .......... 42.1M\n  3150K .......... .......... .......... .......... .......... 4.08M\n  3200K .......... .......... .......... .......... .......... 26.4M\n  3250K .......... .......... .......... .......... .......... 6.42M\n  3300K .......... .......... .......... .......... .......... 2.12M\n  3350K .......... .......... .......... .......... .......... 70.1M\n  3400K .......... .......... .......... .......... .......... 1.24M\n  3450K .......... .......... .......... .......... .......... 7.46M\n  3500K .......... .......... .......... .......... .......... 46.7M\n  3550K .......... .......... .......... .......... .......... 4.00M\n  3600K .......... .......... .......... .......... .......... 32.2M\n  3650K .......... .......... .......... .......... .......... 6.13M\n  3700K .......... .......... .......... .......... .......... 2.18M\n  3750K .......... .......... .......... .......... .......... 48.7M\n  3800K .......... .......... .......... .......... .......... 1.25M\n  3850K .......... .......... .......... .......... .......... 7.42M\n  3900K .......... .......... .......... .......... .......... 52.4M\n  3950K .......... .......... .......... .......... .......... 4.09M\n  4000K .......... .......... .......... .......... .......... 50.8M\n  4050K .......... .......... .......... .......... .......... 5.87M\n  4100K .......... .......... .......... .......... .......... 83.4M\n  4150K .......... .......... .......... .......... .......... 2.14M\n  4200K .......... .......... .......... .......... .......... 3.25M\n  4250K .......... .......... .......... .......... .......... 1.94M\n  4300K .......... .......... .......... .......... .......... 7.22M\n  4350K .......... .......... .......... .......... .......... 5.95M\n  4400K .......... .......... .......... .......... .......... 12.4M\n  4450K .......... .......... .......... .......... .......... 41.4M\n  4500K .......... .......... .......... .......... .......... 6.72M\n  4550K .......... .......... .......... .......... .......... 44.7M\n  4600K .......... .......... .......... .......... .......... 2.13M\n  4650K .......... .......... .......... .......... .......... 39.5M\n  4700K .......... .......... .......... .......... .......... 1.24M\n  4750K .......... .......... .......... .......... .......... 7.35M\n  4800K .......... .......... .......... .......... .......... 91.0M\n  4850K .......... .......... .......... .......... .......... 6.05M\n  4900K .......... .......... .......... .......... .......... 12.4M\n  4950K .......... .......... .......... .......... .......... 45.7M\n  5000K .......... .......... .......... .......... .......... 6.54M\n  5050K .......... .......... .......... .......... .......... 61.2M\n  5100K .......... .......... .......... .......... .......... 2.13M\n  5150K .......... .......... .......... .......... .......... 39.7M\n  5200K .......... .......... .......... .......... .......... 1.24M\n  5250K .......... .......... .......... .......... .......... 7.71M\n  5300K .......... .......... .......... .......... .......... 90.7M\n  5350K .......... .......... .......... .......... .......... 61.5M\n  5400K .......... .......... .......... .......... .......... 4.34M\n  5450K .......... .......... .......... .......... .......... 51.3M\n  5500K .......... .......... .......... .......... ..........  146M\n  5550K .......... .......... .......... .......... .......... 6.11M\n  5600K .......... .......... .......... .......... ..........  133M\n  5650K .......... .......... .......... .......... .......... 2.10M\n  5700K .......... .......... .......... .......... .......... 44.4M\n  5750K .......... .......... .......... .......... .......... 1.26M\n  5800K .......... .......... .......... .......... .......... 97.8M\n  5850K .......... .......... .......... .......... .......... 7.89M\n  5900K .......... .......... .......... .......... .......... 39.0M\n  5950K .......... .......... .......... .......... .......... 4.43M\n  6000K .......... .......... .......... .......... .......... 83.2M\n  6050K .......... .......... .......... .......... ..........  104M\n  6100K .......... .......... .......... .......... .......... 6.90M\n  6150K .......... .......... .......... .......... .......... 31.2M\n  6200K .......... .......... .......... .......... .......... 25.5M\n  6250K .......... .......... .......... .......... .......... 2.22M\n  6300K .......... .......... .......... .......... .......... 13.0M\n  6350K .......... .......... .......... .......... .......... 1.38M\n  6400K .......... .......... .......... .......... .......... 7.09M\n  6450K .......... .......... .......... .......... .......... 74.9M\n  6500K .......... .......... .......... .......... ..........  117M\n  6550K .......... .......... .......... .......... .......... 4.67M\n  6600K .......... .......... .......... .......... .......... 23.8M\n  6650K .......... .......... .......... .......... ..........  123M\n  6700K .......... .......... .......... .......... ..........  119M\n  6750K .......... .......... .......... .......... .......... 6.78M\n  6800K .......... .......... .......... .......... .......... 6.26M\n  6850K .......... .......... .......... .......... .......... 3.04M\n  6900K .......... .......... .......... .......... .......... 36.9M\n  6950K .......... .......... .......... .......... .......... 3.30M\n  7000K .......... .......... .......... .......... .......... 1.98M\n  7050K .......... .......... .......... .......... .......... 8.65M\n  7100K .......... .......... .......... .......... .......... 1.92M\n  7150K .......... .......... .......... .......... .......... 24.1M\n  7200K .......... .......... .......... .......... .......... 10.5M\n  7250K .......... .......... .......... .......... ..........  114M\n  7300K .......... .......... .......... .......... .......... 9.28M\n  7350K .......... .......... .......... .......... .......... 5.30M\n  7400K .......... .......... .......... .......... .......... 4.26M\n  7450K .......... .......... .......... .......... .......... 8.03M\n  7500K .......... .......... .......... .......... .......... 4.06M\n  7550K .......... .......... .......... .......... .......... 3.73M\n  7600K .......... .......... .......... .......... .......... 4.66M\n  7650K .......... .......... .......... .......... .......... 4.39M\n  7700K .......... .......... .......... .......... .......... 5.89M\n  7750K .......... .......... .......... .......... .......... 4.68M\n  7800K .......... .......... .......... .......... .......... 4.08M\n  7850K .......... .......... .......... .......... .......... 4.38M\n  7900K .......... .......... .......... .......... .......... 5.75M\n  7950K .......... .......... .......... .......... .......... 4.99M\n  8000K .......... .......... .......... .......... .......... 3.74M\n  8050K .......... .......... .......... .......... .......... 8.42M\n  8100K .......... .......... .......... .......... .......... 3.76M\n  8150K .......... .......... .......... .......... .......... 4.75M\n  8200K .......... .......... .......... .......... .......... 3.95M\n  8250K .......... .......... .......... .......... .......... 2.93M\n  8300K .......... .......... .......... .......... .......... 4.62M\n  8350K .......... .......... .......... .......... .......... 2.58M\n  8400K .......... .......... .......... .......... .......... 6.65M\n  8450K .......... .......... .......... .......... .......... 4.36M\n  8500K .......... .......... .......... .......... .......... 4.22M\n  8550K .......... .......... .......... .......... .......... 18.9M\n  8600K .......... .......... .......... .......... .......... 16.8M\n  8650K .......... .......... .......... .......... .......... 5.02M\n  8700K .......... .......... .......... .......... .......... 4.01M\n  8750K .......... .......... .......... .......... .......... 6.49M\n  8800K .......... .......... .......... .......... .......... 4.21M\n  8850K .......... .......... .......... .......... .......... 8.31M\n  8900K .......... .......... .......... .......... .......... 4.09M\n  8950K .......... .......... .......... .......... .......... 1.72M\n  9000K .......... .......... .......... .......... .......... 18.0M\n  9050K .......... .......... .......... .......... .......... 10.6M\n  9100K .......... .......... .......... .......... .......... 4.17M\n  9150K .......... .......... .......... .......... .......... 9.44M\n  9200K .......... .......... .......... .......... .......... 4.19M\n  9250K .......... .......... .......... .......... .......... 7.94M\n  9300K .......... .......... .......... .......... .......... 4.17M\n  9350K .......... .......... .......... .......... .......... 1.26M\n  9400K .......... .......... .......... .......... .......... 1.47M\n  9450K .......... .......... .......... .......... .......... 16.0M\n  9500K .......... .......... .......... .......... .......... 23.8M\n  9550K .......... .......... .......... .......... .......... 6.02M\n  9600K .......... .......... .......... .......... .......... 7.03M\n  9650K .......... .......... .......... .......... .......... 17.9M\n  9700K .......... .......... .......... .......... .......... 2.08M\n  9750K .......... .......... .......... .......... .......... 11.0M\n  9800K .......... .......... .......... .......... .......... 7.36M\n  9850K .......... .......... .......... .......... .......... 3.78M\n  9900K .......... .......... .......... .......... .......... 7.19M\n  9950K .......... .......... .......... .......... .......... 5.68M\n 10000K .......... .......... .......... .......... .......... 4.04M\n 10050K .......... .......... .......... .......... .......... 3.69M\n 10100K .......... .......... .......... .......... .......... 6.10M\n 10150K .......... .......... .......... .......... .......... 3.99M\n 10200K .......... .......... .......... .......... .......... 27.4M\n 10250K .......... .......... .......... .......... .......... 11.6M\n 10300K .......... .......... .......... .......... .......... 4.20M\n 10350K .......... .......... .......... .......... .......... 5.49M\n 10400K .......... .......... .......... .......... .......... 5.13M\n 10450K .......... .......... .......... .......... .......... 4.11M\n 10500K .......... .......... .......... .......... .......... 3.94M\n 10550K .......... .......... .......... .......... .......... 7.98M\n 10600K .......... .......... .......... .......... .......... 1.58M\n 10650K .......... .......... .......... .......... .......... 22.6M\n 10700K .......... .......... .......... .......... .......... 5.64M\n 10750K .......... .......... .......... .......... .......... 3.32M\n 10800K .......... .......... .......... .......... .......... 2.62M\n 10850K .......... .......... .......... .......... ..........  805K\n 10900K .......... .......... .......... .......... ..........  534K\n 10950K .......... .......... .......... .......... .......... 3.68M\n 11000K .......... .......... .......... .......... .......... 17.9M\n 11050K .......... .......... .......... .......... ..........  103M\n 11100K .......... .......... .......... .......... ..........  147M\n 11150K .......... .......... .......... .......... ..........  119M\n 11200K .......... .......... .......... .......... .......... 98.3M\n 11250K .......... .......... .......... .......... .......... 4.21M\n 11300K .......... .......... .......... .......... .......... 12.4M\n 11350K .......... .......... .......... .......... .......... 25.4M\n 11400K .......... .......... .......... .......... .......... 4.15M\n 11450K .......... .......... .......... .......... .......... 8.96M\n 11500K .......... .......... .......... .......... .......... 3.81M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.48M\n 50150K .......... .......... .......... .......... .......... 3.93M\n 50200K .......... .......... .......... .......... .......... 5.19M\n 50250K .......... .......... .......... .......... .......... 8.83M\n 50300K .......... .......... .......... .......... .......... 2.00M\n 50350K .......... .......... .......... .......... .......... 82.4M\n 50400K .......... .......... .......... .......... .......... 3.66M\n 50450K .......... .......... .......... .......... .......... 54.4M\n 50500K .......... .......... .......... .......... .......... 2.47M\n 50550K .......... .......... .......... .......... .......... 19.0M\n 50600K .......... .......... .......... .......... .......... 4.36M\n 50650K .......... .......... .......... .......... .......... 9.92M\n 50700K .......... .......... .......... .......... .......... 4.29M\n 50750K .......... .......... .......... .......... .......... 3.16M\n 50800K .......... .......... .......... .......... .......... 8.25M\n 50850K .......... .......... .......... .......... .......... 6.58M\n 50900K .......... .......... .......... .......... .......... 5.18M\n 50950K .......... .......... .......... .......... .......... 4.86M\n 51000K .......... .......... .......... .......... .......... 4.46M\n 51050K .......... .......... .......... .......... .......... 5.16M\n 51100K .......... .......... .......... .......... .......... 7.04M\n 51150K .......... .......... .......... .......... .......... 3.23M\n 51200K .......... .......... .......... .......... .......... 7.67M\n 51250K .......... .......... .......... .......... .......... 3.61M\n 51300K .......... .......... .......... .......... .......... 6.48M\n 51350K .......... .......... .......... .......... .......... 7.34M\n 51400K .......... .......... .......... .......... .......... 3.06M\n 51450K .......... .......... .......... .......... .......... 2.61M\n 51500K .......... .......... .......... .......... .......... 7.21M\n 51550K .......... .......... .......... .......... ..........  130M\n 51600K .......... .......... .......... .......... .......... 7.11M\n 51650K .......... .......... .......... .......... .......... 4.61M\n 51700K .......... .......... .......... .......... .......... 4.53M\n 51750K .......... .......... .......... .......... .......... 8.87M\n 51800K .......... .......... .......... .......... .......... 2.38M\n 51850K .......... .......... .......... .......... .......... 8.19M\n 51900K .......... .......... .......... .......... .......... 5.41M\n 51950K .......... .......... .......... .......... .......... 16.7M\n 52000K .......... .......... .......... .......... .......... 4.42M\n 52050K .......... .......... .......... .......... .......... 4.09M\n 52100K .......... .......... .......... .......... .......... 4.71M\n 52150K .......... .......... .......... .......... .......... 12.3M\n 52200K .......... .......... .......... .......... .......... 4.31M\n 52250K .......... .......... .......... .......... .......... 1.85M\n 52300K .......... .......... .......... .......... ..........  117M\n 52350K .......... .......... .......... .......... .......... 4.67M\n 52400K .......... .......... .......... .......... .......... 14.4M\n 52450K .......... .......... .......... .......... .......... 3.89M\n 52500K .......... .......... .......... .......... .......... 4.23M\n 52550K .......... .......... .......... .......... .......... 15.1M\n 52600K .......... .......... .......... .......... .......... 4.32M\n 52650K .......... .......... .......... .......... .......... 4.56M\n 52700K .......... .......... .......... .......... .......... 3.97M\n 52750K .......... .......... .......... .......... .......... 5.17M\n 52800K .......... .......... .......... .......... .......... 8.24M\n 52850K .......... .......... .......... .......... .......... 4.61M\n 52900K .......... .......... .......... .......... .......... 4.11M\n 52950K .......... .......... .......... .......... .......... 9.34M\n 53000K .......... .......... .......... .......... .......... 4.43M\n 53050K .......... .......... .......... .......... .......... 4.64M\n 53100K .......... .......... .......... .......... .......... 4.41M\n 53150K .......... .......... .......... .......... .......... 7.61M\n 53200K .......... .......... .......... .......... .......... 4.83M\n 53250K .......... .......... .......... .......... .......... 4.13M\n 53300K .......... .......... .......... .......... .......... 5.04M\n 53350K .......... .......... .......... .......... .......... 8.57M\n 53400K .......... .......... .......... .......... .......... 4.50M\n 53450K .......... .......... .......... .......... .......... 4.30M\n 53500K .......... .......... .......... .......... .......... 4.57M\n 53550K .......... .......... .......... .......... .......... 8.73M\n 53600K .......... .......... .......... .......... .......... 2.40M\n 53650K .......... .......... .......... .......... .......... 1.05M\n 53700K .......... .......... .......... .......... .......... 2.64M\n 53750K .......... .......... .......... .......... .......... 41.7M\n 53800K .......... .......... .......... .......... ..........  101M\n 53850K .......... .......... .......... .......... ..........  104M\n 53900K .......... .......... .......... .......... ..........  135M\n 53950K .......... .......... .......... .......... ..........  154M\n 54000K .......... .......... .......... .......... .......... 15.1M\n 54050K .......... .......... .......... .......... .......... 2.03M\n 54100K .......... .......... .......... .......... .......... 66.6M\n 54150K .......... .......... .......... .......... .......... 2.73M\n 54200K .......... .......... .......... .......... .......... 36.4M\n 54250K .......... .......... .......... .......... .......... 4.02M\n 54300K .......... .......... .......... .......... .......... 12.7M\n 54350K .......... .......... .......... .......... .......... 5.24M\n 54400K .......... .......... .......... .......... .......... 7.83M\n 54450K .......... .......... .......... .......... .......... 3.79M\n 54500K .......... .......... .......... .......... .......... 4.33M\n 54550K .......... .......... .......... .......... .......... 5.72M\n 54600K .......... .......... .......... .......... .......... 7.75M\n 54650K .......... .......... .......... .......... .......... 3.07M\n 54700K .......... .......... .......... .......... .......... 3.23M\n 54750K .......... .......... .......... .......... .......... 22.0M\n 54800K .......... .......... .......... .......... .......... 3.14M\n 54850K .......... .......... .......... .......... .......... 48.3M\n 54900K .......... .......... .......... .......... .......... 3.84M\n 54950K .......... .......... .......... .......... .......... 5.08M\n 55000K .......... .......... .......... .......... .......... 8.84M\n 55050K .......... .......... .......... .......... .......... 5.15M\n 55100K .......... .......... .......... .......... .......... 4.02M\n 55150K .......... .......... .......... .......... .......... 4.47M\n 55200K .......... .......... .......... .......... .......... 4.36M\n 55250K .......... .......... .......... .......... .......... 5.60M\n 55300K .......... .......... .......... .......... .......... 6.71M\n 55350K .......... .......... .......... .......... .......... 3.28M\n 55400K .......... .......... .......... .......... .......... 5.07M\n 55450K .......... .......... .......... .......... .......... 5.33M\n 55500K .......... .......... .......... .......... .......... 6.87M\n 55550K .......... .......... .......... .......... .......... 5.86M\n 55600K .......... .......... .......... .......... .......... 3.73M\n 55650K .......... .......... .......... .......... .......... 1.52M\n 55700K .......... .......... .......... .......... .......... 1.77M\n 55750K .......... .......... .......... .......... .......... 1.73M\n 55800K .......... .......... .......... .......... .......... 21.0M\n 55850K .......... .......... .......... .......... ..........  102M\n 55900K .......... .......... .......... .......... .......... 46.6M\n 55950K .......... .......... .......... .......... ..........  111M\n 56000K .......... .......... .......... .......... ..........  106M\n 56050K .......... .......... .......... .......... .......... 3.16M\n 56100K .......... .......... .......... .......... .......... 59.8M\n 56150K .......... .......... .......... .......... ..........  117M\n 56200K .......... .......... .......... .......... .......... 2.05M\n 56250K .......... .......... .......... .......... .......... 1.29M\n 56300K .......... .......... .......... .......... .......... 1.63M\n 56350K .......... .......... .......... .......... .......... 1.49M\n 56400K .......... .......... .......... .......... .......... 52.1M\n 56450K .......... .......... .......... .......... .......... 59.8M\n 56500K .......... .......... .......... .......... .......... 85.2M\n 56550K .......... .......... .......... .......... ..........  114M\n 56600K .......... .......... .......... .......... .......... 95.7M\n 56650K .......... .......... .......... .......... ..........  116M\n 56700K .......... .......... .......... .......... ..........  120M\n 56750K .......... .......... .......... .......... ..........  110M\n 56800K .......... .......... .......... .......... ..........  111M\n 56850K .......... .......... .......... .......... .......... 2.08M\n 56900K .......... .......... .......... .......... .......... 43.3M\n 56950K .......... .......... .......... .......... ..........  128M\n 57000K .......... .......... .......... .......... .......... 4.28M\n 57050K .......... .......... .......... .......... .......... 4.68M\n 57100K .......... .......... .......... .......... .......... 5.54M\n 57150K .......... .......... .......... .......... .......... 1.56M\n 57200K .......... .......... .......... .......... .......... 52.6M\n 57250K .......... .......... .......... .......... ..........  173M\n 57300K .......... .......... .......... .......... .......... 3.52M\n 57350K .......... .......... .......... .......... ..........  570K\n 57400K .......... .......... .......... .......... .......... 2.47M\n 57450K .......... .......... .......... .......... .......... 77.9M\n 57500K .......... .......... .......... .......... .......... 7.63M\n 57550K .......... .......... .......... .......... .......... 28.4M\n 57600K .......... .......... .......... .......... .......... 65.2M\n 57650K .......... .......... .......... .......... ..........  109M\n 57700K .......... .......... .......... .......... ..........  107M\n 57750K .......... .......... .......... .......... .......... 95.7M\n 57800K .......... .......... .......... .......... .......... 2.26M\n 57850K .......... .......... .......... .......... .......... 62.8M\n 57900K .......... .......... .......... .......... ..........  122M\n 57950K .......... .......... .......... .......... .......... 6.34M\n 58000K .......... .......... .......... .......... .......... 3.61M\n 58050K .......... .......... .......... .......... .......... 5.01M\n 58100K .......... .......... .......... .......... .......... 6.65M\n 58150K .......... .......... .......... .......... .......... 8.82M\n 58200K .......... .......... .......... .......... .......... 3.61M\n 58250K .......... .......... .......... .......... .......... 2.91M\n 58300K .......... .......... .......... .......... .......... 40.5M\n 58350K .......... .......... .......... .......... .......... 4.08M\n 58400K .......... .......... .......... .......... .......... 9.22M\n 58450K .......... .......... .......... .......... .......... 4.38M\n 58500K .......... .......... .......... .......... .......... 8.68M\n 58550K .......... .......... .......... .......... .......... 4.74M\n 58600K .......... .......... .......... .......... .......... 4.31M\n 58650K .......... .......... .......... .......... .......... 8.64M\n 58700K .......... .......... .......... .......... .......... 4.50M\n 58750K .......... .......... .......... .......... .......... 3.92M\n 58800K .......... .......... .......... .......... .......... 4.64M\n 58850K .......... .......... .......... .......... .......... 6.60M\n 58900K .......... .......... .......... .......... .......... 5.14M\n 58950K .......... .......... .......... .......... .......... 3.49M\n 59000K .......... .......... .......... .......... .......... 6.14M\n 59050K .......... .......... .......... .......... .......... 4.46M\n 59100K .......... .......... .......... .......... .......... 8.83M\n 59150K .......... .......... .......... .......... .......... 4.28M\n 59200K .......... .......... .......... .......... .......... 3.88M\n 59250K .......... .......... .......... .......... .......... 4.81M\n 59300K .......... .......... .......... .......... .......... 4.05M\n 59350K .......... .......... .......... .......... .......... 6.18M\n 59400K .......... .......... .......... .......... .......... 7.18M\n 59450K .......... .......... .......... .......... .......... 3.11M\n 59500K .......... .......... .......... .......... ..........  998K\n 59550K .......... .......... .......... .......... .......... 32.3M\n 59600K .......... .......... .......... .......... ..........  107M\n 59650K .......... .......... .......... .......... ..........  156M\n 59700K .......... .......... .......... .......... .......... 1.97M\n 59750K .......... .......... .......... .......... .......... 16.8M\n 59800K .......... .......... .......... .......... .......... 68.0M\n 59850K .......... .......... .......... .......... ..........  125M\n 59900K .......... .......... .......... .......... .......... 3.64M\n 59950K .......... .......... .......... .......... .......... 19.8M\n 60000K .......... .......... .......... .......... .......... 5.57M\n 60050K .......... .......... .......... .......... .......... 1.65M\n 60100K .......... .......... .......... .......... .......... 52.4M\n 60150K .......... .......... .......... .......... .......... 82.0M\n 60200K .......... .......... .......... .......... .......... 11.5M\n 60250K .......... .......... .......... .......... .......... 4.91M\n 60300K .......... .......... .......... .......... .......... 4.59M\n 60350K .......... .......... .......... .......... .......... 8.40M\n 60400K .......... .......... .......... .......... .......... 4.55M\n 60450K .......... .......... .......... .......... .......... 4.58M\n 60500K .......... .......... .......... .......... .......... 3.35M\n 60550K .......... .......... .......... .......... .......... 39.0M\n 60600K .......... .......... .......... .......... ..........  444K\n 60650K .......... .........                                   55.2M=14s\n\n2023-07-24 19:03:40 (4.14 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-07-24 19:03:44--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  269K 3s\n    50K .......... .......... .......... .......... .......... 12%  273K 3s\n   100K .......... .......... .......... .......... .......... 18%  328K 2s\n   150K .......... .......... .......... .......... .......... 24%  416K 2s\n   200K .......... .......... .......... .......... .......... 30%  541K 2s\n   250K .......... .......... .......... .......... .......... 36%  545K 1s\n   300K .......... .......... .......... .......... .......... 42%  547K 1s\n   350K .......... .......... .......... .......... .......... 48%  781K 1s\n   400K .......... .......... .......... .......... .......... 54%  545K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.63M 1s\n   500K .......... .......... .......... .......... .......... 66%  558K 1s\n   550K .......... .......... .......... .......... .......... 72%  782K 0s\n   600K .......... .......... .......... .......... .......... 78% 1.65M 0s\n   650K .......... .......... .......... .......... .......... 84%  558K 0s\n   700K .......... .......... .......... .......... .......... 90%  770K 0s\n   750K .......... .......... .......... .......... .......... 96% 1.81M 0s\n   800K .......... .......... .......                         100% 12.0M=1.5s\n\n2023-07-24 19:03:46 (563 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-07-24 19:03:25--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  265K\n    50K .......... .......... .......... .......... ..........  272K\n   100K .......... .......... .......... .......... ..........  542K\n   150K .......... .......... .......... .......... ..........  545K\n   200K .......... .......... .......... .......... ..........  545K\n   250K .......... .......... .......... .......... ..........  544K\n   300K .......... .......... .......... .......... .......... 1.02M\n   350K .......... .......... .......... .......... ..........  774K\n   400K .......... .......... .......... .......... ..........  705K\n   450K .......... .......... .......... .......... .......... 2.30M\n   500K .......... .......... .......... .......... ..........  753K\n   550K .......... .......... .......... .......... .......... 1.92M\n   600K .......... .......... .......... .......... ..........  799K\n   650K .......... .......... .......... .......... .......... 1.03M\n   700K .......... .......... .......... .......... .......... 2.28M\n   750K .......... .......... .......... .......... ..........  714K\n   800K .......... .......... .......... .......... .......... 3.45M\n   850K .......... .......... .......... .......... .......... 1.56M\n   900K .......... .......... .......... .......... .......... 1.08M\n   950K .......... .......... .......... .......... .......... 3.26M\n  1000K .......... .......... .......... .......... .......... 5.43M\n  1050K .......... .......... .......... .......... ..........  738K\n  1100K .......... .......... .......... .......... .......... 3.41M\n  1150K .......... .......... .......... .......... .......... 5.34M\n  1200K .......... .......... .......... .......... ..........  790K\n  1250K .......... .......... .......... .......... .......... 7.26M\n  1300K .......... .......... .......... .......... .......... 3.83M\n  1350K .......... .......... .......... .......... .......... 5.40M\n  1400K .......... .......... .......... .......... ..........  789K\n  1450K .......... .......... .......... .......... .......... 6.86M\n  1500K .......... .......... .......... .......... .......... 3.76M\n  1550K .......... .......... .......... .......... .......... 5.78M\n  1600K .......... .......... .......... .......... .......... 1.29M\n  1650K .......... .......... .......... .......... .......... 1.51M\n  1700K .......... .......... .......... .......... .......... 3.81M\n  1750K .......... .......... .......... .......... .......... 26.4M\n  1800K .......... .......... .......... .......... .......... 6.53M\n  1850K .......... .......... .......... .......... .......... 1.29M\n  1900K .......... .......... .......... .......... .......... 1.50M\n  1950K .......... .......... .......... .......... .......... 4.00M\n  2000K .......... .......... .......... .......... .......... 5.84M\n  2050K .......... .......... .......... .......... .......... 33.9M\n  2100K .......... .......... .......... .......... ..........  793K\n  2150K .......... .......... .......... .......... .......... 7.35M\n  2200K .......... .......... .......... .......... .......... 46.7M\n  2250K .......... .......... .......... .......... .......... 3.94M\n  2300K .......... .......... .......... .......... .......... 5.88M\n  2350K .......... .......... .......... .......... .......... 2.07M\n  2400K .......... .......... .......... .......... .......... 1.21M\n  2450K .......... .......... .......... .......... .......... 7.36M\n  2500K .......... .......... .......... .......... .......... 3.94M\n  2550K .......... .......... .......... .......... .......... 34.0M\n  2600K .......... .......... .......... .......... .......... 5.90M\n  2650K .......... .......... .......... .......... .......... 2.16M\n  2700K .......... .......... .......... .......... .......... 1.21M\n  2750K .......... .......... .......... .......... .......... 7.55M\n  2800K .......... .......... .......... .......... .......... 3.94M\n  2850K .......... .......... .......... .......... .......... 32.5M\n  2900K .......... .......... .......... .......... .......... 5.91M\n  2950K .......... .......... .......... .......... .......... 2.14M\n  3000K .......... .......... .......... .......... .......... 3.15M\n  3050K .......... .......... .......... .......... .......... 1.58M\n  3100K .......... .......... .......... .......... .......... 42.1M\n  3150K .......... .......... .......... .......... .......... 4.08M\n  3200K .......... .......... .......... .......... .......... 26.4M\n  3250K .......... .......... .......... .......... .......... 6.42M\n  3300K .......... .......... .......... .......... .......... 2.12M\n  3350K .......... .......... .......... .......... .......... 70.1M\n  3400K .......... .......... .......... .......... .......... 1.24M\n  3450K .......... .......... .......... .......... .......... 7.46M\n  3500K .......... .......... .......... .......... .......... 46.7M\n  3550K .......... .......... .......... .......... .......... 4.00M\n  3600K .......... .......... .......... .......... .......... 32.2M\n  3650K .......... .......... .......... .......... .......... 6.13M\n  3700K .......... .......... .......... .......... .......... 2.18M\n  3750K .......... .......... .......... .......... .......... 48.7M\n  3800K .......... .......... .......... .......... .......... 1.25M\n  3850K .......... .......... .......... .......... .......... 7.42M\n  3900K .......... .......... .......... .......... .......... 52.4M\n  3950K .......... .......... .......... .......... .......... 4.09M\n  4000K .......... .......... .......... .......... .......... 50.8M\n  4050K .......... .......... .......... .......... .......... 5.87M\n  4100K .......... .......... .......... .......... .......... 83.4M\n  4150K .......... .......... .......... .......... .......... 2.14M\n  4200K .......... .......... .......... .......... .......... 3.25M\n  4250K .......... .......... .......... .......... .......... 1.94M\n  4300K .......... .......... .......... .......... .......... 7.22M\n  4350K .......... .......... .......... .......... .......... 5.95M\n  4400K .......... .......... .......... .......... .......... 12.4M\n  4450K .......... .......... .......... .......... .......... 41.4M\n  4500K .......... .......... .......... .......... .......... 6.72M\n  4550K .......... .......... .......... .......... .......... 44.7M\n  4600K .......... .......... .......... .......... .......... 2.13M\n  4650K .......... .......... .......... .......... .......... 39.5M\n  4700K .......... .......... .......... .......... .......... 1.24M\n  4750K .......... .......... .......... .......... .......... 7.35M\n  4800K .......... .......... .......... .......... .......... 91.0M\n  4850K .......... .......... .......... .......... .......... 6.05M\n  4900K .......... .......... .......... .......... .......... 12.4M\n  4950K .......... .......... .......... .......... .......... 45.7M\n  5000K .......... .......... .......... .......... .......... 6.54M\n  5050K .......... .......... .......... .......... .......... 61.2M\n  5100K .......... .......... .......... .......... .......... 2.13M\n  5150K .......... .......... .......... .......... .......... 39.7M\n  5200K .......... .......... .......... .......... .......... 1.24M\n  5250K .......... .......... .......... .......... .......... 7.71M\n  5300K .......... .......... .......... .......... .......... 90.7M\n  5350K .......... .......... .......... .......... .......... 61.5M\n  5400K .......... .......... .......... .......... .......... 4.34M\n  5450K .......... .......... .......... .......... .......... 51.3M\n  5500K .......... .......... .......... .......... ..........  146M\n  5550K .......... .......... .......... .......... .......... 6.11M\n  5600K .......... .......... .......... .......... ..........  133M\n  5650K .......... .......... .......... .......... .......... 2.10M\n  5700K .......... .......... .......... .......... .......... 44.4M\n  5750K .......... .......... .......... .......... .......... 1.26M\n  5800K .......... .......... .......... .......... .......... 97.8M\n  5850K .......... .......... .......... .......... .......... 7.89M\n  5900K .......... .......... .......... .......... .......... 39.0M\n  5950K .......... .......... .......... .......... .......... 4.43M\n  6000K .......... .......... .......... .......... .......... 83.2M\n  6050K .......... .......... .......... .......... ..........  104M\n  6100K .......... .......... .......... .......... .......... 6.90M\n  6150K .......... .......... .......... .......... .......... 31.2M\n  6200K .......... .......... .......... .......... .......... 25.5M\n  6250K .......... .......... .......... .......... .......... 2.22M\n  6300K .......... .......... .......... .......... .......... 13.0M\n  6350K .......... .......... .......... .......... .......... 1.38M\n  6400K .......... .......... .......... .......... .......... 7.09M\n  6450K .......... .......... .......... .......... .......... 74.9M\n  6500K .......... .......... .......... .......... ..........  117M\n  6550K .......... .......... .......... .......... .......... 4.67M\n  6600K .......... .......... .......... .......... .......... 23.8M\n  6650K .......... .......... .......... .......... ..........  123M\n  6700K .......... .......... .......... .......... ..........  119M\n  6750K .......... .......... .......... .......... .......... 6.78M\n  6800K .......... .......... .......... .......... .......... 6.26M\n  6850K .......... .......... .......... .......... .......... 3.04M\n  6900K .......... .......... .......... .......... .......... 36.9M\n  6950K .......... .......... .......... .......... .......... 3.30M\n  7000K .......... .......... .......... .......... .......... 1.98M\n  7050K .......... .......... .......... .......... .......... 8.65M\n  7100K .......... .......... .......... .......... .......... 1.92M\n  7150K .......... .......... .......... .......... .......... 24.1M\n  7200K .......... .......... .......... .......... .......... 10.5M\n  7250K .......... .......... .......... .......... ..........  114M\n  7300K .......... .......... .......... .......... .......... 9.28M\n  7350K .......... .......... .......... .......... .......... 5.30M\n  7400K .......... .......... .......... .......... .......... 4.26M\n  7450K .......... .......... .......... .......... .......... 8.03M\n  7500K .......... .......... .......... .......... .......... 4.06M\n  7550K .......... .......... .......... .......... .......... 3.73M\n  7600K .......... .......... .......... .......... .......... 4.66M\n  7650K .......... .......... .......... .......... .......... 4.39M\n  7700K .......... .......... .......... .......... .......... 5.89M\n  7750K .......... .......... .......... .......... .......... 4.68M\n  7800K .......... .......... .......... .......... .......... 4.08M\n  7850K .......... .......... .......... .......... .......... 4.38M\n  7900K .......... .......... .......... .......... .......... 5.75M\n  7950K .......... .......... .......... .......... .......... 4.99M\n  8000K .......... .......... .......... .......... .......... 3.74M\n  8050K .......... .......... .......... .......... .......... 8.42M\n  8100K .......... .......... .......... .......... .......... 3.76M\n  8150K .......... .......... .......... .......... .......... 4.75M\n  8200K .......... .......... .......... .......... .......... 3.95M\n  8250K .......... .......... .......... .......... .......... 2.93M\n  8300K .......... .......... .......... .......... .......... 4.62M\n  8350K .......... .......... .......... .......... .......... 2.58M\n  8400K .......... .......... .......... .......... .......... 6.65M\n  8450K .......... .......... .......... .......... .......... 4.36M\n  8500K .......... .......... .......... .......... .......... 4.22M\n  8550K .......... .......... .......... .......... .......... 18.9M\n  8600K .......... .......... .......... .......... .......... 16.8M\n  8650K .......... .......... .......... .......... .......... 5.02M\n  8700K .......... .......... .......... .......... .......... 4.01M\n  8750K .......... .......... .......... .......... .......... 6.49M\n  8800K .......... .......... .......... .......... .......... 4.21M\n  8850K .......... .......... .......... .......... .......... 8.31M\n  8900K .......... .......... .......... .......... .......... 4.09M\n  8950K .......... .......... .......... .......... .......... 1.72M\n  9000K .......... .......... .......... .......... .......... 18.0M\n  9050K .......... .......... .......... .......... .......... 10.6M\n  9100K .......... .......... .......... .......... .......... 4.17M\n  9150K .......... .......... .......... .......... .......... 9.44M\n  9200K .......... .......... .......... .......... .......... 4.19M\n  9250K .......... .......... .......... .......... .......... 7.94M\n  9300K .......... .......... .......... .......... .......... 4.17M\n  9350K .......... .......... .......... .......... .......... 1.26M\n  9400K .......... .......... .......... .......... .......... 1.47M\n  9450K .......... .......... .......... .......... .......... 16.0M\n  9500K .......... .......... .......... .......... .......... 23.8M\n  9550K .......... .......... .......... .......... .......... 6.02M\n  9600K .......... .......... .......... .......... .......... 7.03M\n  9650K .......... .......... .......... .......... .......... 17.9M\n  9700K .......... .......... .......... .......... .......... 2.08M\n  9750K .......... .......... .......... .......... .......... 11.0M\n  9800K .......... .......... .......... .......... .......... 7.36M\n  9850K .......... .......... .......... .......... .......... 3.78M\n  9900K .......... .......... .......... .......... .......... 7.19M\n  9950K .......... .......... .......... .......... .......... 5.68M\n 10000K .......... .......... .......... .......... .......... 4.04M\n 10050K .......... .......... .......... .......... .......... 3.69M\n 10100K .......... .......... .......... .......... .......... 6.10M\n 10150K .......... .......... .......... .......... .......... 3.99M\n 10200K .......... .......... .......... .......... .......... 27.4M\n 10250K .......... .......... .......... .......... .......... 11.6M\n 10300K .......... .......... .......... .......... .......... 4.20M\n 10350K .......... .......... .......... .......... .......... 5.49M\n 10400K .......... .......... .......... .......... .......... 5.13M\n 10450K .......... .......... .......... .......... .......... 4.11M\n 10500K .......... .......... .......... .......... .......... 3.94M\n 10550K .......... .......... .......... .......... .......... 7.98M\n 10600K .......... .......... .......... .......... .......... 1.58M\n 10650K .......... .......... .......... .......... .......... 22.6M\n 10700K .......... .......... .......... .......... .......... 5.64M\n 10750K .......... .......... .......... .......... .......... 3.32M\n 10800K .......... .......... .......... .......... .......... 2.62M\n 10850K .......... .......... .......... .......... ..........  805K\n 10900K .......... .......... .......... .......... ..........  534K\n 10950K .......... .......... .......... .......... .......... 3.68M\n 11000K .......... .......... .......... .......... .......... 17.9M\n 11050K .......... .......... .......... .......... ..........  103M\n 11100K .......... .......... .......... .......... ..........  147M\n 11150K .......... .......... .......... .......... ..........  119M\n 11200K .......... .......... .......... .......... .......... 98.3M\n 11250K .......... .......... .......... .......... .......... 4.21M\n 11300K .......... .......... .......... .......... .......... 12.4M\n 11350K .......... .......... .......... .......... .......... 25.4M\n 11400K .......... .......... .......... .......... .......... 4.15M\n 11450K .......... .......... .......... .......... .......... 8.96M\n 11500K .......... .......... .......... .......... .......... 3.81M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.48M\n 50150K .......... .......... .......... .......... .......... 3.93M\n 50200K .......... .......... .......... .......... .......... 5.19M\n 50250K .......... .......... .......... .......... .......... 8.83M\n 50300K .......... .......... .......... .......... .......... 2.00M\n 50350K .......... .......... .......... .......... .......... 82.4M\n 50400K .......... .......... .......... .......... .......... 3.66M\n 50450K .......... .......... .......... .......... .......... 54.4M\n 50500K .......... .......... .......... .......... .......... 2.47M\n 50550K .......... .......... .......... .......... .......... 19.0M\n 50600K .......... .......... .......... .......... .......... 4.36M\n 50650K .......... .......... .......... .......... .......... 9.92M\n 50700K .......... .......... .......... .......... .......... 4.29M\n 50750K .......... .......... .......... .......... .......... 3.16M\n 50800K .......... .......... .......... .......... .......... 8.25M\n 50850K .......... .......... .......... .......... .......... 6.58M\n 50900K .......... .......... .......... .......... .......... 5.18M\n 50950K .......... .......... .......... .......... .......... 4.86M\n 51000K .......... .......... .......... .......... .......... 4.46M\n 51050K .......... .......... .......... .......... .......... 5.16M\n 51100K .......... .......... .......... .......... .......... 7.04M\n 51150K .......... .......... .......... .......... .......... 3.23M\n 51200K .......... .......... .......... .......... .......... 7.67M\n 51250K .......... .......... .......... .......... .......... 3.61M\n 51300K .......... .......... .......... .......... .......... 6.48M\n 51350K .......... .......... .......... .......... .......... 7.34M\n 51400K .......... .......... .......... .......... .......... 3.06M\n 51450K .......... .......... .......... .......... .......... 2.61M\n 51500K .......... .......... .......... .......... .......... 7.21M\n 51550K .......... .......... .......... .......... ..........  130M\n 51600K .......... .......... .......... .......... .......... 7.11M\n 51650K .......... .......... .......... .......... .......... 4.61M\n 51700K .......... .......... .......... .......... .......... 4.53M\n 51750K .......... .......... .......... .......... .......... 8.87M\n 51800K .......... .......... .......... .......... .......... 2.38M\n 51850K .......... .......... .......... .......... .......... 8.19M\n 51900K .......... .......... .......... .......... .......... 5.41M\n 51950K .......... .......... .......... .......... .......... 16.7M\n 52000K .......... .......... .......... .......... .......... 4.42M\n 52050K .......... .......... .......... .......... .......... 4.09M\n 52100K .......... .......... .......... .......... .......... 4.71M\n 52150K .......... .......... .......... .......... .......... 12.3M\n 52200K .......... .......... .......... .......... .......... 4.31M\n 52250K .......... .......... .......... .......... .......... 1.85M\n 52300K .......... .......... .......... .......... ..........  117M\n 52350K .......... .......... .......... .......... .......... 4.67M\n 52400K .......... .......... .......... .......... .......... 14.4M\n 52450K .......... .......... .......... .......... .......... 3.89M\n 52500K .......... .......... .......... .......... .......... 4.23M\n 52550K .......... .......... .......... .......... .......... 15.1M\n 52600K .......... .......... .......... .......... .......... 4.32M\n 52650K .......... .......... .......... .......... .......... 4.56M\n 52700K .......... .......... .......... .......... .......... 3.97M\n 52750K .......... .......... .......... .......... .......... 5.17M\n 52800K .......... .......... .......... .......... .......... 8.24M\n 52850K .......... .......... .......... .......... .......... 4.61M\n 52900K .......... .......... .......... .......... .......... 4.11M\n 52950K .......... .......... .......... .......... .......... 9.34M\n 53000K .......... .......... .......... .......... .......... 4.43M\n 53050K .......... .......... .......... .......... .......... 4.64M\n 53100K .......... .......... .......... .......... .......... 4.41M\n 53150K .......... .......... .......... .......... .......... 7.61M\n 53200K .......... .......... .......... .......... .......... 4.83M\n 53250K .......... .......... .......... .......... .......... 4.13M\n 53300K .......... .......... .......... .......... .......... 5.04M\n 53350K .......... .......... .......... .......... .......... 8.57M\n 53400K .......... .......... .......... .......... .......... 4.50M\n 53450K .......... .......... .......... .......... .......... 4.30M\n 53500K .......... .......... .......... .......... .......... 4.57M\n 53550K .......... .......... .......... .......... .......... 8.73M\n 53600K .......... .......... .......... .......... .......... 2.40M\n 53650K .......... .......... .......... .......... .......... 1.05M\n 53700K .......... .......... .......... .......... .......... 2.64M\n 53750K .......... .......... .......... .......... .......... 41.7M\n 53800K .......... .......... .......... .......... ..........  101M\n 53850K .......... .......... .......... .......... ..........  104M\n 53900K .......... .......... .......... .......... ..........  135M\n 53950K .......... .......... .......... .......... ..........  154M\n 54000K .......... .......... .......... .......... .......... 15.1M\n 54050K .......... .......... .......... .......... .......... 2.03M\n 54100K .......... .......... .......... .......... .......... 66.6M\n 54150K .......... .......... .......... .......... .......... 2.73M\n 54200K .......... .......... .......... .......... .......... 36.4M\n 54250K .......... .......... .......... .......... .......... 4.02M\n 54300K .......... .......... .......... .......... .......... 12.7M\n 54350K .......... .......... .......... .......... .......... 5.24M\n 54400K .......... .......... .......... .......... .......... 7.83M\n 54450K .......... .......... .......... .......... .......... 3.79M\n 54500K .......... .......... .......... .......... .......... 4.33M\n 54550K .......... .......... .......... .......... .......... 5.72M\n 54600K .......... .......... .......... .......... .......... 7.75M\n 54650K .......... .......... .......... .......... .......... 3.07M\n 54700K .......... .......... .......... .......... .......... 3.23M\n 54750K .......... .......... .......... .......... .......... 22.0M\n 54800K .......... .......... .......... .......... .......... 3.14M\n 54850K .......... .......... .......... .......... .......... 48.3M\n 54900K .......... .......... .......... .......... .......... 3.84M\n 54950K .......... .......... .......... .......... .......... 5.08M\n 55000K .......... .......... .......... .......... .......... 8.84M\n 55050K .......... .......... .......... .......... .......... 5.15M\n 55100K .......... .......... .......... .......... .......... 4.02M\n 55150K .......... .......... .......... .......... .......... 4.47M\n 55200K .......... .......... .......... .......... .......... 4.36M\n 55250K .......... .......... .......... .......... .......... 5.60M\n 55300K .......... .......... .......... .......... .......... 6.71M\n 55350K .......... .......... .......... .......... .......... 3.28M\n 55400K .......... .......... .......... .......... .......... 5.07M\n 55450K .......... .......... .......... .......... .......... 5.33M\n 55500K .......... .......... .......... .......... .......... 6.87M\n 55550K .......... .......... .......... .......... .......... 5.86M\n 55600K .......... .......... .......... .......... .......... 3.73M\n 55650K .......... .......... .......... .......... .......... 1.52M\n 55700K .......... .......... .......... .......... .......... 1.77M\n 55750K .......... .......... .......... .......... .......... 1.73M\n 55800K .......... .......... .......... .......... .......... 21.0M\n 55850K .......... .......... .......... .......... ..........  102M\n 55900K .......... .......... .......... .......... .......... 46.6M\n 55950K .......... .......... .......... .......... ..........  111M\n 56000K .......... .......... .......... .......... ..........  106M\n 56050K .......... .......... .......... .......... .......... 3.16M\n 56100K .......... .......... .......... .......... .......... 59.8M\n 56150K .......... .......... .......... .......... ..........  117M\n 56200K .......... .......... .......... .......... .......... 2.05M\n 56250K .......... .......... .......... .......... .......... 1.29M\n 56300K .......... .......... .......... .......... .......... 1.63M\n 56350K .......... .......... .......... .......... .......... 1.49M\n 56400K .......... .......... .......... .......... .......... 52.1M\n 56450K .......... .......... .......... .......... .......... 59.8M\n 56500K .......... .......... .......... .......... .......... 85.2M\n 56550K .......... .......... .......... .......... ..........  114M\n 56600K .......... .......... .......... .......... .......... 95.7M\n 56650K .......... .......... .......... .......... ..........  116M\n 56700K .......... .......... .......... .......... ..........  120M\n 56750K .......... .......... .......... .......... ..........  110M\n 56800K .......... .......... .......... .......... ..........  111M\n 56850K .......... .......... .......... .......... .......... 2.08M\n 56900K .......... .......... .......... .......... .......... 43.3M\n 56950K .......... .......... .......... .......... ..........  128M\n 57000K .......... .......... .......... .......... .......... 4.28M\n 57050K .......... .......... .......... .......... .......... 4.68M\n 57100K .......... .......... .......... .......... .......... 5.54M\n 57150K .......... .......... .......... .......... .......... 1.56M\n 57200K .......... .......... .......... .......... .......... 52.6M\n 57250K .......... .......... .......... .......... ..........  173M\n 57300K .......... .......... .......... .......... .......... 3.52M\n 57350K .......... .......... .......... .......... ..........  570K\n 57400K .......... .......... .......... .......... .......... 2.47M\n 57450K .......... .......... .......... .......... .......... 77.9M\n 57500K .......... .......... .......... .......... .......... 7.63M\n 57550K .......... .......... .......... .......... .......... 28.4M\n 57600K .......... .......... .......... .......... .......... 65.2M\n 57650K .......... .......... .......... .......... ..........  109M\n 57700K .......... .......... .......... .......... ..........  107M\n 57750K .......... .......... .......... .......... .......... 95.7M\n 57800K .......... .......... .......... .......... .......... 2.26M\n 57850K .......... .......... .......... .......... .......... 62.8M\n 57900K .......... .......... .......... .......... ..........  122M\n 57950K .......... .......... .......... .......... .......... 6.34M\n 58000K .......... .......... .......... .......... .......... 3.61M\n 58050K .......... .......... .......... .......... .......... 5.01M\n 58100K .......... .......... .......... .......... .......... 6.65M\n 58150K .......... .......... .......... .......... .......... 8.82M\n 58200K .......... .......... .......... .......... .......... 3.61M\n 58250K .......... .......... .......... .......... .......... 2.91M\n 58300K .......... .......... .......... .......... .......... 40.5M\n 58350K .......... .......... .......... .......... .......... 4.08M\n 58400K .......... .......... .......... .......... .......... 9.22M\n 58450K .......... .......... .......... .......... .......... 4.38M\n 58500K .......... .......... .......... .......... .......... 8.68M\n 58550K .......... .......... .......... .......... .......... 4.74M\n 58600K .......... .......... .......... .......... .......... 4.31M\n 58650K .......... .......... .......... .......... .......... 8.64M\n 58700K .......... .......... .......... .......... .......... 4.50M\n 58750K .......... .......... .......... .......... .......... 3.92M\n 58800K .......... .......... .......... .......... .......... 4.64M\n 58850K .......... .......... .......... .......... .......... 6.60M\n 58900K .......... .......... .......... .......... .......... 5.14M\n 58950K .......... .......... .......... .......... .......... 3.49M\n 59000K .......... .......... .......... .......... .......... 6.14M\n 59050K .......... .......... .......... .......... .......... 4.46M\n 59100K .......... .......... .......... .......... .......... 8.83M\n 59150K .......... .......... .......... .......... .......... 4.28M\n 59200K .......... .......... .......... .......... .......... 3.88M\n 59250K .......... .......... .......... .......... .......... 4.81M\n 59300K .......... .......... .......... .......... .......... 4.05M\n 59350K .......... .......... .......... .......... .......... 6.18M\n 59400K .......... .......... .......... .......... .......... 7.18M\n 59450K .......... .......... .......... .......... .......... 3.11M\n 59500K .......... .......... .......... .......... ..........  998K\n 59550K .......... .......... .......... .......... .......... 32.3M\n 59600K .......... .......... .......... .......... ..........  107M\n 59650K .......... .......... .......... .......... ..........  156M\n 59700K .......... .......... .......... .......... .......... 1.97M\n 59750K .......... .......... .......... .......... .......... 16.8M\n 59800K .......... .......... .......... .......... .......... 68.0M\n 59850K .......... .......... .......... .......... ..........  125M\n 59900K .......... .......... .......... .......... .......... 3.64M\n 59950K .......... .......... .......... .......... .......... 19.8M\n 60000K .......... .......... .......... .......... .......... 5.57M\n 60050K .......... .......... .......... .......... .......... 1.65M\n 60100K .......... .......... .......... .......... .......... 52.4M\n 60150K .......... .......... .......... .......... .......... 82.0M\n 60200K .......... .......... .......... .......... .......... 11.5M\n 60250K .......... .......... .......... .......... .......... 4.91M\n 60300K .......... .......... .......... .......... .......... 4.59M\n 60350K .......... .......... .......... .......... .......... 8.40M\n 60400K .......... .......... .......... .......... .......... 4.55M\n 60450K .......... .......... .......... .......... .......... 4.58M\n 60500K .......... .......... .......... .......... .......... 3.35M\n 60550K .......... .......... .......... .......... .......... 39.0M\n 60600K .......... .......... .......... .......... ..........  444K\n 60650K .......... .........                                   55.2M=14s\n\n2023-07-24 19:03:40 (4.14 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-07-24 19:03:44--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  269K 3s\n    50K .......... .......... .......... .......... .......... 12%  273K 3s\n   100K .......... .......... .......... .......... .......... 18%  328K 2s\n   150K .......... .......... .......... .......... .......... 24%  416K 2s\n   200K .......... .......... .......... .......... .......... 30%  541K 2s\n   250K .......... .......... .......... .......... .......... 36%  545K 1s\n   300K .......... .......... .......... .......... .......... 42%  547K 1s\n   350K .......... .......... .......... .......... .......... 48%  781K 1s\n   400K .......... .......... .......... .......... .......... 54%  545K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.63M 1s\n   500K .......... .......... .......... .......... .......... 66%  558K 1s\n   550K .......... .......... .......... .......... .......... 72%  782K 0s\n   600K .......... .......... .......... .......... .......... 78% 1.65M 0s\n   650K .......... .......... .......... .......... .......... 84%  558K 0s\n   700K .......... .......... .......... .......... .......... 90%  770K 0s\n   750K .......... .......... .......... .......... .......... 96% 1.81M 0s\n   800K .......... .......... .......                         100% 12.0M=1.5s\n\n2023-07-24 19:03:46 (563 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-07-24T19:04:00.820215",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 54.34040451049805, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-07-24 19:03:25--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  265K    50K .......... .......... .......... .......... ..........  272K   100K .......... .......... .......... .......... ..........  542K   150K .......... .......... .......... .......... ..........  545K   200K .......... .......... .......... .......... ..........  545K   250K .......... .......... .......... .......... ..........  544K   300K .......... .......... .......... .......... .......... 1.02M   350K .......... .......... .......... .......... ..........  774K   400K .......... .......... .......... .......... ..........  705K   450K .......... .......... .......... .......... .......... 2.30M   500K .......... .......... .......... .......... ..........  753K   550K .......... .......... .......... .......... .......... 1.92M   600K .......... .......... .......... .......... ..........  799K   650K .......... .......... .......... .......... .......... 1.03M   700K .......... .......... .......... .......... .......... 2.28M   750K .......... .......... .......... .......... ..........  714K   800K .......... .......... .......... .......... .......... 3.45M   850K .......... .......... .......... .......... .......... 1.56M   900K .......... .......... .......... .......... .......... 1.08M   950K .......... .......... .......... .......... .......... 3.26M  1000K .......... .......... .......... .......... .......... 5.43M  1050K .......... .......... .......... .......... ..........  738K  1100K .......... .......... .......... .......... .......... 3.41M  1150K .......... .......... .......... .......... .......... 5.34M  1200K .......... .......... .......... .......... ..........  790K  1250K .......... .......... .......... .......... .......... 7.26M  1300K .......... .......... .......... .......... .......... 3.83M  1350K .......... .......... .......... .......... .......... 5.40M  1400K .......... .......... .......... .......... ..........  789K  1450K .......... .......... .......... .......... .......... 6.86M  1500K .......... .......... .......... .......... .......... 3.76M  1550K .......... .......... .......... .......... .......... 5.78M  1600K .......... .......... .......... .......... .......... 1.29M  1650K .......... .......... .......... .......... .......... 1.51M  1700K .......... .......... .......... .......... .......... 3.81M  1750K .......... .......... .......... .......... .......... 26.4M  1800K .......... .......... .......... .......... .......... 6.53M  1850K .......... .......... .......... .......... .......... 1.29M  1900K .......... .......... .......... .......... .......... 1.50M  1950K .......... .......... .......... .......... .......... 4.00M  2000K .......... .......... .......... .......... .......... 5.84M  2050K .......... .......... .......... .......... .......... 33.9M  2100K .......... .......... .......... .......... ..........  793K  2150K .......... .......... .......... .......... .......... 7.35M  2200K .......... .......... .......... .......... .......... 46.7M  2250K .......... .......... .......... .......... .......... 3.94M  2300K .......... .......... .......... .......... .......... 5.88M  2350K .......... .......... .......... .......... .......... 2.07M  2400K .......... .......... .......... .......... .......... 1.21M  2450K .......... .......... .......... .......... .......... 7.36M  2500K .......... .......... .......... .......... .......... 3.94M  2550K .......... .......... .......... .......... .......... 34.0M  2600K .......... .......... .......... .......... .......... 5.90M  2650K .......... .......... .......... .......... .......... 2.16M  2700K .......... .......... .......... .......... .......... 1.21M  2750K .......... .......... .......... .......... .......... 7.55M  2800K .......... .......... .......... .......... .......... 3.94M  2850K .......... .......... .......... .......... .......... 32.5M  2900K .......... .......... .......... .......... .......... 5.91M  2950K .......... .......... .......... .......... .......... 2.14M  3000K .......... .......... .......... .......... .......... 3.15M  3050K .......... .......... .......... .......... .......... 1.58M  3100K .......... .......... .......... .......... .......... 42.1M  3150K .......... .......... .......... .......... .......... 4.08M  3200K .......... .......... .......... .......... .......... 26.4M  3250K .......... .......... .......... .......... .......... 6.42M  3300K .......... .......... .......... .......... .......... 2.12M  3350K .......... .......... .......... .......... .......... 70.1M  3400K .......... .......... .......... .......... .......... 1.24M  3450K .......... .......... .......... .......... .......... 7.46M  3500K .......... .......... .......... .......... .......... 46.7M  3550K .......... .......... .......... .......... .......... 4.00M  3600K .......... .......... .......... .......... .......... 32.2M  3650K .......... .......... .......... .......... .......... 6.13M  3700K .......... .......... .......... .......... .......... 2.18M  3750K .......... .......... .......... .......... .......... 48.7M  3800K .......... .......... .......... .......... .......... 1.25M  3850K .......... .......... .......... .......... .......... 7.42M  3900K .......... .......... .......... .......... .......... 52.4M  3950K .......... .......... .......... .......... .......... 4.09M  4000K .......... .......... .......... .......... .......... 50.8M  4050K .......... .......... .......... .......... .......... 5.87M  4100K .......... .......... .......... .......... .......... 83.4M  4150K .......... .......... .......... .......... .......... 2.14M  4200K .......... .......... .......... .......... .......... 3.25M  4250K .......... .......... .......... .......... .......... 1.94M  4300K .......... .......... .......... .......... .......... 7.22M  4350K .......... .......... .......... .......... .......... 5.95M  4400K .......... .......... .......... .......... .......... 12.4M  4450K .......... .......... .......... .......... .......... 41.4M  4500K .......... .......... .......... .......... .......... 6.72M  4550K .......... .......... .......... .......... .......... 44.7M  4600K .......... .......... .......... .......... .......... 2.13M  4650K .......... .......... .......... .......... .......... 39.5M  4700K .......... .......... .......... .......... .......... 1.24M  4750K .......... .......... .......... .......... .......... 7.35M  4800K .......... .......... .......... .......... .......... 91.0M  4850K .......... .......... .......... .......... .......... 6.05M  4900K .......... .......... .......... .......... .......... 12.4M  4950K .......... .......... .......... .......... .......... 45.7M  5000K .......... .......... .......... .......... .......... 6.54M  5050K .......... .......... .......... .......... .......... 61.2M  5100K .......... .......... .......... .......... .......... 2.13M  5150K .......... .......... .......... .......... .......... 39.7M  5200K .......... .......... .......... .......... .......... 1.24M  5250K .......... .......... .......... .......... .......... 7.71M  5300K .......... .......... .......... .......... .......... 90.7M  5350K .......... .......... .......... .......... .......... 61.5M  5400K .......... .......... .......... .......... .......... 4.34M  5450K .......... .......... .......... .......... .......... 51.3M  5500K .......... .......... .......... .......... ..........  146M  5550K .......... .......... .......... .......... .......... 6.11M  5600K .......... .......... .......... .......... ..........  133M  5650K .......... .......... .......... .......... .......... 2.10M  5700K .......... .......... .......... .......... .......... 44.4M  5750K .......... .......... .......... .......... .......... 1.26M  5800K .......... .......... .......... .......... .......... 97.8M  5850K .......... .......... .......... .......... .......... 7.89M  5900K .......... .......... .......... .......... .......... 39.0M  5950K .......... .......... .......... .......... .......... 4.43M  6000K .......... .......... .......... .......... .......... 83.2M  6050K .......... .......... .......... .......... ..........  104M  6100K .......... .......... .......... .......... .......... 6.90M  6150K .......... .......... .......... .......... .......... 31.2M  6200K .......... .......... .......... .......... .......... 25.5M  6250K .......... .......... .......... .......... .......... 2.22M  6300K .......... .......... .......... .......... .......... 13.0M  6350K .......... .......... .......... .......... .......... 1.38M  6400K .......... .......... .......... .......... .......... 7.09M  6450K .......... .......... .......... .......... .......... 74.9M  6500K .......... .......... .......... .......... ..........  117M  6550K .......... .......... .......... .......... .......... 4.67M  6600K .......... .......... .......... .......... .......... 23.8M  6650K .......... .......... .......... .......... ..........  123M  6700K .......... .......... .......... .......... ..........  119M  6750K .......... .......... .......... .......... .......... 6.78M  6800K .......... .......... .......... .......... .......... 6.26M  6850K .......... .......... .......... .......... .......... 3.04M  6900K .......... .......... .......... .......... .......... 36.9M  6950K .......... .......... .......... .......... .......... 3.30M  7000K .......... .......... .......... .......... .......... 1.98M  7050K .......... .......... .......... .......... .......... 8.65M  7100K .......... .......... .......... .......... .......... 1.92M  7150K .......... .......... .......... .......... .......... 24.1M  7200K .......... .......... .......... .......... .......... 10.5M  7250K .......... .......... .......... .......... ..........  114M  7300K .......... .......... .......... .......... .......... 9.28M  7350K .......... .......... .......... .......... .......... 5.30M  7400K .......... .......... .......... .......... .......... 4.26M  7450K .......... .......... .......... .......... .......... 8.03M  7500K .......... .......... .......... .......... .......... 4.06M  7550K .......... .......... .......... .......... .......... 3.73M  7600K .......... .......... .......... .......... .......... 4.66M  7650K .......... .......... .......... .......... .......... 4.39M  7700K .......... .......... .......... .......... .......... 5.89M  7750K .......... .......... .......... .......... .......... 4.68M  7800K .......... .......... .......... .......... .......... 4.08M  7850K .......... .......... .......... .......... .......... 4.38M  7900K .......... .......... .......... .......... .......... 5.75M  7950K .......... .......... .......... .......... .......... 4.99M  8000K .......... .......... .......... .......... .......... 3.74M  8050K .......... .......... .......... .......... .......... 8.42M  8100K .......... .......... .......... .......... .......... 3.76M  8150K .......... .......... .......... .......... .......... 4.75M  8200K .......... .......... .......... .......... .......... 3.95M  8250K .......... .......... .......... .......... .......... 2.93M  8300K .......... .......... .......... .......... .......... 4.62M  8350K .......... .......... .......... .......... .......... 2.58M  8400K .......... .......... .......... .......... .......... 6.65M  8450K .......... .......... .......... .......... .......... 4.36M  8500K .......... .......... .......... .......... .......... 4.22M  8550K .......... .......... .......... .......... .......... 18.9M  8600K .......... .......... .......... .......... .......... 16.8M  8650K .......... .......... .......... .......... .......... 5.02M  8700K .......... .......... .......... .......... .......... 4.01M  8750K .......... .......... .......... .......... .......... 6.49M  8800K .......... .......... .......... .......... .......... 4.21M  8850K .......... .......... .......... .......... .......... 8.31M  8900K .......... .......... .......... .......... .......... 4.09M  8950K .......... .......... .......... .......... .......... 1.72M  9000K .......... .......... .......... .......... .......... 18.0M  9050K .......... .......... .......... .......... .......... 10.6M  9100K .......... .......... .......... .......... .......... 4.17M  9150K .......... .......... .......... .......... .......... 9.44M  9200K .......... .......... .......... .......... .......... 4.19M  9250K .......... .......... .......... .......... .......... 7.94M  9300K .......... .......... .......... .......... .......... 4.17M  9350K .......... .......... .......... .......... .......... 1.26M  9400K .......... .......... .......... .......... .......... 1.47M  9450K .......... .......... .......... .......... .......... 16.0M  9500K .......... .......... .......... .......... .......... 23.8M  9550K .......... .......... .......... .......... .......... 6.02M  9600K .......... .......... .......... .......... .......... 7.03M  9650K .......... .......... .......... .......... .......... 17.9M  9700K .......... .......... .......... .......... .......... 2.08M  9750K .......... .......... .......... .......... .......... 11.0M  9800K .......... .......... .......... .......... .......... 7.36M  9850K .......... .......... .......... .......... .......... 3.78M  9900K .......... .......... .......... .......... .......... 7.19M  9950K .......... .......... .......... .......... .......... 5.68M 10000K .......... .......... .......... .......... .......... 4.04M 10050K .......... .......... .......... .......... .......... 3.69M 10100K .......... .......... .......... .......... .......... 6.10M 10150K .......... .......... .......... .......... .......... 3.99M 10200K .......... .......... .......... .......... .......... 27.4M 10250K .......... .......... .......... .......... .......... 11.6M 10300K .......... .......... .......... .......... .......... 4.20M 10350K .......... .......... .......... .......... .......... 5.49M 10400K .......... .......... .......... .......... .......... 5.13M 10450K .......... .......... .......... .......... .......... 4.11M 10500K .......... .......... .......... .......... .......... 3.94M 10550K .......... .......... .......... .......... .......... 7.98M 10600K .......... .......... .......... .......... .......... 1.58M 10650K .......... .......... .......... .......... .......... 22.6M 10700K .......... .......... .......... .......... .......... 5.64M 10750K .......... .......... .......... .......... .......... 3.32M 10800K .......... .......... .......... .......... .......... 2.62M 10850K .......... .......... .......... .......... ..........  805K 10900K .......... .......... .......... .......... ..........  534K 10950K .......... .......... .......... .......... .......... 3.68M 11000K .......... .......... .......... .......... .......... 17.9M 11050K .......... .......... .......... .......... ..........  103M 11100K .......... .......... .......... .......... ..........  147M 11150K .......... .......... .......... .......... ..........  119M 11200K .......... .......... .......... .......... .......... 98.3M 11250K .......... .......... .......... .......... .......... 4.21M 11300K .......... .......... .......... .......... .......... 12.4M 11350K .......... .......... .......... .......... .......... 25.4M 11400K .......... .......... .......... .......... .......... 4.15M 11450K .......... .......... .......... .......... .......... 8.96M 11500K .......... .......... .......... .......... .......... 3.81M 11550K .......... .......... .......... .......... .................. 4.48M 50150K .......... .......... .......... .......... .......... 3.93M 50200K .......... .......... .......... .......... .......... 5.19M 50250K .......... .......... .......... .......... .......... 8.83M 50300K .......... .......... .......... .......... .......... 2.00M 50350K .......... .......... .......... .......... .......... 82.4M 50400K .......... .......... .......... .......... .......... 3.66M 50450K .......... .......... .......... .......... .......... 54.4M 50500K .......... .......... .......... .......... .......... 2.47M 50550K .......... .......... .......... .......... .......... 19.0M 50600K .......... .......... .......... .......... .......... 4.36M 50650K .......... .......... .......... .......... .......... 9.92M 50700K .......... .......... .......... .......... .......... 4.29M 50750K .......... .......... .......... .......... .......... 3.16M 50800K .......... .......... .......... .......... .......... 8.25M 50850K .......... .......... .......... .......... .......... 6.58M 50900K .......... .......... .......... .......... .......... 5.18M 50950K .......... .......... .......... .......... .......... 4.86M 51000K .......... .......... .......... .......... .......... 4.46M 51050K .......... .......... .......... .......... .......... 5.16M 51100K .......... .......... .......... .......... .......... 7.04M 51150K .......... .......... .......... .......... .......... 3.23M 51200K .......... .......... .......... .......... .......... 7.67M 51250K .......... .......... .......... .......... .......... 3.61M 51300K .......... .......... .......... .......... .......... 6.48M 51350K .......... .......... .......... .......... .......... 7.34M 51400K .......... .......... .......... .......... .......... 3.06M 51450K .......... .......... .......... .......... .......... 2.61M 51500K .......... .......... .......... .......... .......... 7.21M 51550K .......... .......... .......... .......... ..........  130M 51600K .......... .......... .......... .......... .......... 7.11M 51650K .......... .......... .......... .......... .......... 4.61M 51700K .......... .......... .......... .......... .......... 4.53M 51750K .......... .......... .......... .......... .......... 8.87M 51800K .......... .......... .......... .......... .......... 2.38M 51850K .......... .......... .......... .......... .......... 8.19M 51900K .......... .......... .......... .......... .......... 5.41M 51950K .......... .......... .......... .......... .......... 16.7M 52000K .......... .......... .......... .......... .......... 4.42M 52050K .......... .......... .......... .......... .......... 4.09M 52100K .......... .......... .......... .......... .......... 4.71M 52150K .......... .......... .......... .......... .......... 12.3M 52200K .......... .......... .......... .......... .......... 4.31M 52250K .......... .......... .......... .......... .......... 1.85M 52300K .......... .......... .......... .......... ..........  117M 52350K .......... .......... .......... .......... .......... 4.67M 52400K .......... .......... .......... .......... .......... 14.4M 52450K .......... .......... .......... .......... .......... 3.89M 52500K .......... .......... .......... .......... .......... 4.23M 52550K .......... .......... .......... .......... .......... 15.1M 52600K .......... .......... .......... .......... .......... 4.32M 52650K .......... .......... .......... .......... .......... 4.56M 52700K .......... .......... .......... .......... .......... 3.97M 52750K .......... .......... .......... .......... .......... 5.17M 52800K .......... .......... .......... .......... .......... 8.24M 52850K .......... .......... .......... .......... .......... 4.61M 52900K .......... .......... .......... .......... .......... 4.11M 52950K .......... .......... .......... .......... .......... 9.34M 53000K .......... .......... .......... .......... .......... 4.43M 53050K .......... .......... .......... .......... .......... 4.64M 53100K .......... .......... .......... .......... .......... 4.41M 53150K .......... .......... .......... .......... .......... 7.61M 53200K .......... .......... .......... .......... .......... 4.83M 53250K .......... .......... .......... .......... .......... 4.13M 53300K .......... .......... .......... .......... .......... 5.04M 53350K .......... .......... .......... .......... .......... 8.57M 53400K .......... .......... .......... .......... .......... 4.50M 53450K .......... .......... .......... .......... .......... 4.30M 53500K .......... .......... .......... .......... .......... 4.57M 53550K .......... .......... .......... .......... .......... 8.73M 53600K .......... .......... .......... .......... .......... 2.40M 53650K .......... .......... .......... .......... .......... 1.05M 53700K .......... .......... .......... .......... .......... 2.64M 53750K .......... .......... .......... .......... .......... 41.7M 53800K .......... .......... .......... .......... ..........  101M 53850K .......... .......... .......... .......... ..........  104M 53900K .......... .......... .......... .......... ..........  135M 53950K .......... .......... .......... .......... ..........  154M 54000K .......... .......... .......... .......... .......... 15.1M 54050K .......... .......... .......... .......... .......... 2.03M 54100K .......... .......... .......... .......... .......... 66.6M 54150K .......... .......... .......... .......... .......... 2.73M 54200K .......... .......... .......... .......... .......... 36.4M 54250K .......... .......... .......... .......... .......... 4.02M 54300K .......... .......... .......... .......... .......... 12.7M 54350K .......... .......... .......... .......... .......... 5.24M 54400K .......... .......... .......... .......... .......... 7.83M 54450K .......... .......... .......... .......... .......... 3.79M 54500K .......... .......... .......... .......... .......... 4.33M 54550K .......... .......... .......... .......... .......... 5.72M 54600K .......... .......... .......... .......... .......... 7.75M 54650K .......... .......... .......... .......... .......... 3.07M 54700K .......... .......... .......... .......... .......... 3.23M 54750K .......... .......... .......... .......... .......... 22.0M 54800K .......... .......... .......... .......... .......... 3.14M 54850K .......... .......... .......... .......... .......... 48.3M 54900K .......... .......... .......... .......... .......... 3.84M 54950K .......... .......... .......... .......... .......... 5.08M 55000K .......... .......... .......... .......... .......... 8.84M 55050K .......... .......... .......... .......... .......... 5.15M 55100K .......... .......... .......... .......... .......... 4.02M 55150K .......... .......... .......... .......... .......... 4.47M 55200K .......... .......... .......... .......... .......... 4.36M 55250K .......... .......... .......... .......... .......... 5.60M 55300K .......... .......... .......... .......... .......... 6.71M 55350K .......... .......... .......... .......... .......... 3.28M 55400K .......... .......... .......... .......... .......... 5.07M 55450K .......... .......... .......... .......... .......... 5.33M 55500K .......... .......... .......... .......... .......... 6.87M 55550K .......... .......... .......... .......... .......... 5.86M 55600K .......... .......... .......... .......... .......... 3.73M 55650K .......... .......... .......... .......... .......... 1.52M 55700K .......... .......... .......... .......... .......... 1.77M 55750K .......... .......... .......... .......... .......... 1.73M 55800K .......... .......... .......... .......... .......... 21.0M 55850K .......... .......... .......... .......... ..........  102M 55900K .......... .......... .......... .......... .......... 46.6M 55950K .......... .......... .......... .......... ..........  111M 56000K .......... .......... .......... .......... ..........  106M 56050K .......... .......... .......... .......... .......... 3.16M 56100K .......... .......... .......... .......... .......... 59.8M 56150K .......... .......... .......... .......... ..........  117M 56200K .......... .......... .......... .......... .......... 2.05M 56250K .......... .......... .......... .......... .......... 1.29M 56300K .......... .......... .......... .......... .......... 1.63M 56350K .......... .......... .......... .......... .......... 1.49M 56400K .......... .......... .......... .......... .......... 52.1M 56450K .......... .......... .......... .......... .......... 59.8M 56500K .......... .......... .......... .......... .......... 85.2M 56550K .......... .......... .......... .......... ..........  114M 56600K .......... .......... .......... .......... .......... 95.7M 56650K .......... .......... .......... .......... ..........  116M 56700K .......... .......... .......... .......... ..........  120M 56750K .......... .......... .......... .......... ..........  110M 56800K .......... .......... .......... .......... ..........  111M 56850K .......... .......... .......... .......... .......... 2.08M 56900K .......... .......... .......... .......... .......... 43.3M 56950K .......... .......... .......... .......... ..........  128M 57000K .......... .......... .......... .......... .......... 4.28M 57050K .......... .......... .......... .......... .......... 4.68M 57100K .......... .......... .......... .......... .......... 5.54M 57150K .......... .......... .......... .......... .......... 1.56M 57200K .......... .......... .......... .......... .......... 52.6M 57250K .......... .......... .......... .......... ..........  173M 57300K .......... .......... .......... .......... .......... 3.52M 57350K .......... .......... .......... .......... ..........  570K 57400K .......... .......... .......... .......... .......... 2.47M 57450K .......... .......... .......... .......... .......... 77.9M 57500K .......... .......... .......... .......... .......... 7.63M 57550K .......... .......... .......... .......... .......... 28.4M 57600K .......... .......... .......... .......... .......... 65.2M 57650K .......... .......... .......... .......... ..........  109M 57700K .......... .......... .......... .......... ..........  107M 57750K .......... .......... .......... .......... .......... 95.7M 57800K .......... .......... .......... .......... .......... 2.26M 57850K .......... .......... .......... .......... .......... 62.8M 57900K .......... .......... .......... .......... ..........  122M 57950K .......... .......... .......... .......... .......... 6.34M 58000K .......... .......... .......... .......... .......... 3.61M 58050K .......... .......... .......... .......... .......... 5.01M 58100K .......... .......... .......... .......... .......... 6.65M 58150K .......... .......... .......... .......... .......... 8.82M 58200K .......... .......... .......... .......... .......... 3.61M 58250K .......... .......... .......... .......... .......... 2.91M 58300K .......... .......... .......... .......... .......... 40.5M 58350K .......... .......... .......... .......... .......... 4.08M 58400K .......... .......... .......... .......... .......... 9.22M 58450K .......... .......... .......... .......... .......... 4.38M 58500K .......... .......... .......... .......... .......... 8.68M 58550K .......... .......... .......... .......... .......... 4.74M 58600K .......... .......... .......... .......... .......... 4.31M 58650K .......... .......... .......... .......... .......... 8.64M 58700K .......... .......... .......... .......... .......... 4.50M 58750K .......... .......... .......... .......... .......... 3.92M 58800K .......... .......... .......... .......... .......... 4.64M 58850K .......... .......... .......... .......... .......... 6.60M 58900K .......... .......... .......... .......... .......... 5.14M 58950K .......... .......... .......... .......... .......... 3.49M 59000K .......... .......... .......... .......... .......... 6.14M 59050K .......... .......... .......... .......... .......... 4.46M 59100K .......... .......... .......... .......... .......... 8.83M 59150K .......... .......... .......... .......... .......... 4.28M 59200K .......... .......... .......... .......... .......... 3.88M 59250K .......... .......... .......... .......... .......... 4.81M 59300K .......... .......... .......... .......... .......... 4.05M 59350K .......... .......... .......... .......... .......... 6.18M 59400K .......... .......... .......... .......... .......... 7.18M 59450K .......... .......... .......... .......... .......... 3.11M 59500K .......... .......... .......... .......... ..........  998K 59550K .......... .......... .......... .......... .......... 32.3M 59600K .......... .......... .......... .......... ..........  107M 59650K .......... .......... .......... .......... ..........  156M 59700K .......... .......... .......... .......... .......... 1.97M 59750K .......... .......... .......... .......... .......... 16.8M 59800K .......... .......... .......... .......... .......... 68.0M 59850K .......... .......... .......... .......... ..........  125M 59900K .......... .......... .......... .......... .......... 3.64M 59950K .......... .......... .......... .......... .......... 19.8M 60000K .......... .......... .......... .......... .......... 5.57M 60050K .......... .......... .......... .......... .......... 1.65M 60100K .......... .......... .......... .......... .......... 52.4M 60150K .......... .......... .......... .......... .......... 82.0M 60200K .......... .......... .......... .......... .......... 11.5M 60250K .......... .......... .......... .......... .......... 4.91M 60300K .......... .......... .......... .......... .......... 4.59M 60350K .......... .......... .......... .......... .......... 8.40M 60400K .......... .......... .......... .......... .......... 4.55M 60450K .......... .......... .......... .......... .......... 4.58M 60500K .......... .......... .......... .......... .......... 3.35M 60550K .......... .......... .......... .......... .......... 39.0M 60600K .......... .......... .......... .......... ..........  444K 60650K .......... .........                                   55.2M=14s2023-07-24 19:03:40 (4.14 MB/s) - 'exp_quant.zip' saved [62125370]--2023-07-24 19:03:44--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  269K 3s    50K .......... .......... .......... .......... .......... 12%  273K 3s   100K .......... .......... .......... .......... .......... 18%  328K 2s   150K .......... .......... .......... .......... .......... 24%  416K 2s   200K .......... .......... .......... .......... .......... 30%  541K 2s   250K .......... .......... .......... .......... .......... 36%  545K 1s   300K .......... .......... .......... .......... .......... 42%  547K 1s   350K .......... .......... .......... .......... .......... 48%  781K 1s   400K .......... .......... .......... .......... .......... 54%  545K 1s   450K .......... .......... .......... .......... .......... 60% 1.63M 1s   500K .......... .......... .......... .......... .......... 66%  558K 1s   550K .......... .......... .......... .......... .......... 72%  782K 0s   600K .......... .......... .......... .......... .......... 78% 1.65M 0s   650K .......... .......... .......... .......... .......... 84%  558K 0s   700K .......... .......... .......... .......... .......... 90%  770K 0s   750K .......... .......... .......... .......... .......... 96% 1.81M 0s   800K .......... .......... .......                         100% 12.0M=1.5s2023-07-24 19:03:46 (563 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="47.45784544944763">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-07-24 18:53:36.064] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-07-24 18:53:36.064] [jLog] [info] building indexout : ./index[2023-07-24 18:53:36.065] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-07-24 18:53:36.072] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-07-24 18:53:36.072] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-07-24 18:53:36.082] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-07-24 18:53:36.084] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-07-24 18:53:36.143] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-07-24 18:53:36.143] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 1.024 ms-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 959.45 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-07-24 18:53:36.145] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-07-24 18:53:36.145] [puff::index::jointLog] [info] contig count for validation: 23[2023-07-24 18:53:36.146] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-07-24 18:53:36.146] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-07-24 18:53:36.146] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-07-24 18:53:36.146] [puff::index::jointLog] [info] bits per offset entry 6[2023-07-24 18:53:36.146] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-07-24 18:53:36.155] [puff::index::jointLog] [info] # segments = 23[2023-07-24 18:53:36.155] [puff::index::jointLog] [info] total length = 19592[2023-07-24 18:53:36.155] [puff::index::jointLog] [info] Reading the reference files ...[2023-07-24 18:53:36.164] [puff::index::jointLog] [info] positional integer width = 15[2023-07-24 18:53:36.164] [puff::index::jointLog] [info] seqSize = 19592[2023-07-24 18:53:36.164] [puff::index::jointLog] [info] rankSize = 19592[2023-07-24 18:53:36.164] [puff::index::jointLog] [info] edgeVecSize = 0[2023-07-24 18:53:36.164] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elap..n 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-07-24 18:53:36.231] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-07-24 18:53:36.231] [puff::index::jointLog] [info] chunk size = 9796[2023-07-24 18:53:36.231] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-07-24 18:53:36.231] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-07-24 18:53:36.233] [puff::index::jointLog] [info] finished populating pos vector[2023-07-24 18:53:36.233] [puff::index::jointLog] [info] writing index components[2023-07-24 18:53:36.245] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-07-24 18:53:36.251] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-07-24 18:53:36.929] [jointLog] [info] setting maxHashResizeThreads to 6[2023-07-24 18:53:36.929] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-07-24 18:53:36.929] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-07-24 18:53:36.929] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-07-24 18:53:36.929] [jointLog] [info] parsing read library format[2023-07-24 18:53:36.929] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 472.66 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.07 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 405.4 us----------------------------------------------------------------------------------| Loading mphf table | Time = 636.01 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 686.76 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 706.48 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.1331 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 828.81 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 414.7 us-----------------------------------------[2023-07-24 18:53:37.053] [jointLog] [info] Loading pufferfish index[2023-07-24 18:53:37.054] [jointLog] [info] Loading dense pufferfish index.[2023-07-24 18:53:37.063] [jointLog] [info] done[2023-07-24 18:53:37.063] [jointLog] [info] Index contained 15 targets[2023-07-24 18:53:37.063] [jointLog] [info] Number of decoys : 0[2023-07-24 18:53:37.132] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-07-24 18:53:37.132] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-07-24 18:53:37.133] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-07-24 18:53:37.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-07-24 18:53:37.133] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-07-24 18:53:37.133] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-07-24 18:53:37.134] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-07-24 18:53:37.134] [jointLog] [info] Mapping rate = 100%[2023-07-24 18:53:37.134] [jointLog] [info] finished quantifyLibrary()[2023-07-24 18:53:37.138] [jointLog] [info] Starting optimizer[2023-07-24 18:53:37.139] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-07-24 18:53:37.139] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-07-24 18:53:37.140] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-07-24 18:53:37.140] [jointLog] [info] Finished optimizer[2023-07-24 18:53:37.140] [jointLog] [info] writing output [2023-07-24 18:53:37.143] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="31.898961067199707">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-07-24 18:54:12.453] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-07-24 18:54:12.453] [jLog] [info] building indexout : ./index[2023-07-24 18:54:12.453] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-07-24 18:54:12.460] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-07-24 18:54:12.461] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-07-24 18:54:12.472] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-07-24 18:54:12.474] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-07-24 18:54:12.530] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-07-24 18:54:12.530] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 775.27 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 666.09 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-07-24 18:54:12.531] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-07-24 18:54:12.531] [puff::index::jointLog] [info] contig count for validation: 23[2023-07-24 18:54:12.532] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-07-24 18:54:12.532] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-07-24 18:54:12.532] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-07-24 18:54:12.532] [puff::index::jointLog] [info] bits per offset entry 6[2023-07-24 18:54:12.532] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-07-24 18:54:12.542] [puff::index::jointLog] [info] # segments = 23[2023-07-24 18:54:12.542] [puff::index::jointLog] [info] total length = 19592[2023-07-24 18:54:12.542] [puff::index::jointLog] [info] Reading the reference files ...[2023-07-24 18:54:12.551] [puff::index::jointLog] [info] positional integer width = 15[2023-07-24 18:54:12.551] [puff::index::jointLog] [info] seqSize = 19592[2023-07-24 18:54:12.551] [puff::index::jointLog] [info] rankSize = 19592[2023-07-24 18:54:12.551] [puff::index::jointLog] [info] edgeVecSize = 0[2023-07-24 18:54:12.551] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela..%   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-07-24 18:54:12.621] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-07-24 18:54:12.621] [puff::index::jointLog] [info] chunk size = 9796[2023-07-24 18:54:12.621] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-07-24 18:54:12.621] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-07-24 18:54:12.623] [puff::index::jointLog] [info] finished populating pos vector[2023-07-24 18:54:12.623] [puff::index::jointLog] [info] writing index components[2023-07-24 18:54:12.636] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-07-24 18:54:12.640] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-07-24 18:54:12.741] [jointLog] [info] setting maxHashResizeThreads to 6[2023-07-24 18:54:12.741] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-07-24 18:54:12.741] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-07-24 18:54:12.741] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-07-24 18:54:12.741] [jointLog] [info] parsing read library format[2023-07-24 18:54:12.741] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 620.63 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 980.6 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 336.59 us----------------------------------------------------------------------------------| Loading mphf table | Time = 723.3 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 677.48 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 668.64 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 902.94 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 593.35 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 325.38 us-----------------------------------------[2023-07-24 18:54:12.845] [jointLog] [info] Loading pufferfish index[2023-07-24 18:54:12.846] [jointLog] [info] Loading dense pufferfish index.[2023-07-24 18:54:12.853] [jointLog] [info] done[2023-07-24 18:54:12.853] [jointLog] [info] Index contained 15 targets[2023-07-24 18:54:12.853] [jointLog] [info] Number of decoys : 0[2023-07-24 18:54:12.921] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-07-24 18:54:12.921] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-07-24 18:54:12.923] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-07-24 18:54:12.923] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-07-24 18:54:12.923] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-07-24 18:54:12.923] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-07-24 18:54:12.923] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-07-24 18:54:12.923] [jointLog] [info] Mapping rate = 100%[2023-07-24 18:54:12.923] [jointLog] [info] finished quantifyLibrary()[2023-07-24 18:54:12.927] [jointLog] [info] Starting optimizer[2023-07-24 18:54:12.928] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-07-24 18:54:12.928] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-07-24 18:54:12.929] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-07-24 18:54:12.929] [jointLog] [info] Finished optimizer[2023-07-24 18:54:12.929] [jointLog] [info] writing output [2023-07-24 18:54:12.933] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="31.413403749465942">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 19Hash table size = 33Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-07-24 18:54:43.337] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-07-24 18:54:43.337] [jLog] [info] building indexout : ./index[2023-07-24 18:54:43.338] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-07-24 18:54:43.345] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-07-24 18:54:43.345] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-07-24 18:54:43.356] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-07-24 18:54:43.357] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-07-24 18:54:43.415] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-07-24 18:54:43.415] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 754.46 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 800.97 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-07-24 18:54:43.417] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-07-24 18:54:43.417] [puff::index::jointLog] [info] contig count for validation: 23[2023-07-24 18:54:43.417] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-07-24 18:54:43.417] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-07-24 18:54:43.418] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-07-24 18:54:43.418] [puff::index::jointLog] [info] bits per offset entry 6[2023-07-24 18:54:43.418] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-07-24 18:54:43.428] [puff::index::jointLog] [info] # segments = 23[2023-07-24 18:54:43.428] [puff::index::jointLog] [info] total length = 19592[2023-07-24 18:54:43.428] [puff::index::jointLog] [info] Reading the reference files ...[2023-07-24 18:54:43.437] [puff::index::jointLog] [info] positional integer width = 15[2023-07-24 18:54:43.437] [puff::index::jointLog] [info] seqSize = 19592[2023-07-24 18:54:43.437] [puff::index::jointLog] [info] rankSize = 19592[2023-07-24 18:54:43.437] [puff::index::jointLog] [info] edgeVecSize = 0[2023-07-24 18:54:43.437] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-07-24 18:54:43.508] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-07-24 18:54:43.508] [puff::index::jointLog] [info] chunk size = 9796[2023-07-24 18:54:43.508] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-07-24 18:54:43.508] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-07-24 18:54:43.509] [puff::index::jointLog] [info] finished populating pos vector[2023-07-24 18:54:43.510] [puff::index::jointLog] [info] writing index components[2023-07-24 18:54:43.522] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-07-24 18:54:43.527] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-07-24 18:54:43.625] [jointLog] [info] setting maxHashResizeThreads to 6[2023-07-24 18:54:43.625] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-07-24 18:54:43.625] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-07-24 18:54:43.625] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-07-24 18:54:43.625] [jointLog] [info] parsing read library format[2023-07-24 18:54:43.625] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 257.08 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 874.75 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 350.04 us----------------------------------------------------------------------------------| Loading mphf table | Time = 510.88 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 666.13 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 639.75 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 865.85 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 479.51 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 264.24 us-----------------------------------------[2023-07-24 18:54:43.729] [jointLog] [info] Loading pufferfish index[2023-07-24 18:54:43.730] [jointLog] [info] Loading dense pufferfish index.[2023-07-24 18:54:43.736] [jointLog] [info] done[2023-07-24 18:54:43.736] [jointLog] [info] Index contained 15 targets[2023-07-24 18:54:43.736] [jointLog] [info] Number of decoys : 0[2023-07-24 18:54:43.805] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-07-24 18:54:43.805] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-07-24 18:54:43.807] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-07-24 18:54:43.807] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-07-24 18:54:43.807] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-07-24 18:54:43.807] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-07-24 18:54:43.807] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-07-24 18:54:43.807] [jointLog] [info] Mapping rate = 100%[2023-07-24 18:54:43.807] [jointLog] [info] finished quantifyLibrary()[2023-07-24 18:54:43.811] [jointLog] [info] Starting optimizer[2023-07-24 18:54:43.812] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-07-24 18:54:43.812] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-07-24 18:54:43.813] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-07-24 18:54:43.813] [jointLog] [info] Finished optimizer[2023-07-24 18:54:43.813] [jointLog] [info] writing output [2023-07-24 18:54:43.818] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="36.146037578582764">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "640cc5965ed49e40",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "d11bab79c59eb895",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/0/3/9/dataset_039408bb-c6bf-42a9-a61c-352c82514119.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "create_time": "2023-07-24T18:55:16.687787",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9654r",  "galaxy_version": "23.0",  "history_id": "29e9bceb3a5fc732",  "id": "ad7f310316449c12",  "inputs": {   "afile": {    "id": "640cc5965ed49e40",    "src": "hda",    "uuid": "09b10f0e-e16a-4393-83db-6429821b17ed"   },   "transcript": {    "id": "d11bab79c59eb895",    "src": "hda",    "uuid": "039408bb-c6bf-42a9-a61c-352c82514119"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690224920.0000000",    "title": "Job End Time",    "value": "2023-07-24 18:55:20"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690224918.0000000",    "title": "Job Start Time",    "value": "2023-07-24 18:55:18"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "8af1bf94125e1fdb",    "src": "hda",    "uuid": "47bf87d8-b5d2-412f-b4a8-80b2ac46af33"   },   "postSample": {    "id": "98afeba5469a761c",    "src": "hda",    "uuid": "da6957c3-106b-4cc9-97a8-a5c59fa5b503"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 148, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/3/9/dataset_039408bb-c6bf-42a9-a61c-352c82514119.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-07-24 18:55:18.777] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-07-24 18:55:18.777] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-07-24 18:55:18.777] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat\", fasta = \"/galaxy/server/database/objects/0/3/9/dataset_039408bb-c6bf-42a9-a61c-352c82514119.dat\" . . .done\n[2023-07-24 18:55:19.309] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2023-07-24 18:55:19.545] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-07-24 18:55:19.553] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-07-24 18:55:19.553] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-07-24 18:55:19.554] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-07-24 18:55:19.554] [jointLog] [info] starting optimizer\n[2023-07-24 18:55:19.555] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-07-24 18:55:19.555] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-07-24 18:55:19.556] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-07-24 18:55:19.556] [jointLog] [info] finished optimizer\n[2023-07-24 18:55:19.556] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\n[2023-07-24 18:55:19.560] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/3/9/dataset_039408bb-c6bf-42a9-a61c-352c82514119.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-07-24 18:55:18.777] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-07-24 18:55:18.777] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-07-24 18:55:18.777] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat\", fasta = \"/galaxy/server/database/objects/0/3/9/dataset_039408bb-c6bf-42a9-a61c-352c82514119.dat\" . . .done\n[2023-07-24 18:55:19.309] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2023-07-24 18:55:19.545] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-07-24 18:55:19.553] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-07-24 18:55:19.553] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-07-24 18:55:19.554] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-07-24 18:55:19.554] [jointLog] [info] starting optimizer\n[2023-07-24 18:55:19.555] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-07-24 18:55:19.555] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-07-24 18:55:19.556] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-07-24 18:55:19.556] [jointLog] [info] finished optimizer\n[2023-07-24 18:55:19.556] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\n[2023-07-24 18:55:19.560] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-24T18:55:31.400352",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_xvcf_d7f.sam v. /tmp/history_bam_converted_to_sam_k4_d2knv.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -5014,8 +5015,8 @@\n 1043:NM_174914:1249:169\t419\tNM_174914\t1250\t1\t50M\t=\t1369\t169\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6249:NR_031764:1249:146\t355\tNM_174914\t1250\t1\t50M\t=\t1346\t146\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 1366:NM_174914:1104:195\t339\tNM_174914\t1250\t1\t50M\t=\t1105\t-195\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n+6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 2822:NR_031764:1132:169\t403\tNM_174914\t1252\t1\t50M\t=\t1133\t-169\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n-6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 6516:NM_174914:1111:191\t403\tNM_174914\t1253\t1\t50M\t=\t1112\t-191\tGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 7029:NM_174914:1253:199\t419\tNM_174914\t1254\t1\t50M\t=\t1403\t199\tAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6563:NM_174914:1254:180\t419\tNM_174914\t1255\t1\t50M\t=\t1385\t180\tACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTGT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n@@ -13014,8 +13015,8 @@\n 6453:NM_014620:1998:186\t99\tNM_014620\t1999\t1\t50M\t=\t2135\t186\tGTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAG\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 428:NM_153633:1236:178\t83\tNM_014620\t1999\t1\t50M\t=\t1871\t-178\tGTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAG\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 4517:NM_014620:1999:178\t163\tNM_014620\t2000\t1\t50M\t=\t2128\t178\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n+8069:NM_014620:1862:187\t147\tNM_014620\t2000\t1\t50M\t=\t1863\t-187\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 6736:NM_014620:1871:178\t147\tNM_014620\t2000\t1\t50M\t=\t1872\t-178\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n********\n*SNIP *\n********\n 1308:NM_022658:1290:176\t83\tNM_022658\t1417\t1\t50M\t=\t1291\t-176\tGGAAGACAAATGTAAAGAAATAAGGAAAAAAGCAAGGAATATCCCCTCCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4323:NM_022658:1285:181\t147\tNM_022658\t1417\t1\t50M\t=\t1286\t-181\tGGAAGACAAATGTAAAGAAATAAGGAAAAAAGCAAGGAATATCCCCTCCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4925:NM_022658:1267:199\t147\tNM_022658\t1417\t1\t50M\t=\t1268\t-199\tGGAAGACAAATGTAAAGAAATAAGGAAAAAAGCAAGGAATATCCCCTCCC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -22012,10 +22013,10 @@\n 6874:NM_022658:1707:180\t147\tNM_022658\t1838\t1\t50M\t=\t1708\t-180\tAGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4482:NM_022658:1838:177\t99\tNM_022658\t1839\t1\t50M\t=\t1966\t177\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8901:NM_022658:1838:169\t99\tNM_022658\t1839\t1\t50M\t=\t1958\t169\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+9927:NM_022658:1720:168\t147\tNM_022658\t1839\t1\t50M\t=\t1721\t-168\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5538:NM_022658:1715:173\t147\tNM_022658\t1839\t1\t50M\t=\t1716\t-173\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6384:NM_022658:1685:203\t147\tNM_022658\t1839\t1\t50M\t=\t1686\t-203\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8172:NM_022658:1682:206\t83\tNM_022658\t1839\t1\t50M\t=\t1683\t-206\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-9927:NM_022658:1720:168\t147\tNM_022658\t1839\t1\t50M\t=\t1721\t-168\tGGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 772:NM_022658:1839:175\t99\tNM_022658\t1840\t1\t50M\t=\t1965\t175\tGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5740:NM_022658:1839:166\t163\tNM_022658\t1840\t1\t50M\t=\t1956\t166\tGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7033:NM_022658:1839:174\t99\tNM_022658\t1840\t1\t50M\t=\t1964\t174\tGAGAAAAAAAGAGAAAAAAATAAAAATCAAAAAAAAAAAAAAGAAAGAAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -27014,8 +27015,8 @@\n 3076:NM_173860:414:198\t99\tNM_173860\t415\t1\t50M\t=\t563\t198\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3326:NM_173860:414:135\t163\tNM_173860\t415\t1\t50M\t=\t500\t135\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8790:NM_173860:286:178\t147\tNM_173860\t415\t1\t50M\t=\t287\t-178\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7340:NM_173860:415:212\t99\tNM_173860\t416\t1\t50M\t=\t578\t212\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 614:NM_173860:277:188\t83\tNM_173860\t416\t1\t50M\t=\t278\t-188\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9840:NM_173860:284:181\t147\tNM_173860\t416\t1\t50M\t=\t285\t-181\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3019:NM_173860:416:157\t163\tNM_173860\t417\t1\t50M\t=\t524\t157\tCGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 36.146037578582764, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/0/3/9/dataset_039408bb-c6bf-42a9-a61c-352c82514119.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2023-07-24 18:55:18.777] [jointLog] [info] setting maxHashResizeThreads to 6[2023-07-24 18:55:18.777] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2023-07-24 18:55:18.777] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat", fasta = "/galaxy/server/database/objects/0/3/9/dataset_039408bb-c6bf-42a9-a61c-352c82514119.dat" . . .done[2023-07-24 18:55:19.309] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2023-07-24 18:55:19.545] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2023-07-24 18:55:19.553] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2023-07-24 18:55:19.553] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2023-07-24 18:55:19.554] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-07-24 18:55:19.554] [jointLog] [info] starting optimizer[2023-07-24 18:55:19.555] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-07-24 18:55:19.555] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2023-07-24 18:55:19.556] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-07-24 18:55:19.556] [jointLog] [info] finished optimizer[2023-07-24 18:55:19.556] [jointLog] [info] writing outputResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output thread[2023-07-24 18:55:19.560] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamdoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/0/9/b/dataset_09b10f0e-e16a-4393-83db-6429821b17ed.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="32.68622326850891">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-07-24 18:55:53.058] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-07-24 18:55:53.058] [jLog] [info] building indexout : ./index[2023-07-24 18:55:53.058] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-07-24 18:55:53.066] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-07-24 18:55:53.066] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-07-24 18:55:53.077] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-07-24 18:55:53.079] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-07-24 18:55:53.136] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-07-24 18:55:53.136] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 929.32 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 724.94 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-07-24 18:55:53.138] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-07-24 18:55:53.138] [puff::index::jointLog] [info] contig count for validation: 23[2023-07-24 18:55:53.138] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-07-24 18:55:53.138] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-07-24 18:55:53.139] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-07-24 18:55:53.139] [puff::index::jointLog] [info] bits per offset entry 6[2023-07-24 18:55:53.139] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-07-24 18:55:53.151] [puff::index::jointLog] [info] # segments = 23[2023-07-24 18:55:53.151] [puff::index::jointLog] [info] total length = 19592[2023-07-24 18:55:53.151] [puff::index::jointLog] [info] Reading the reference files ...[2023-07-24 18:55:53.162] [puff::index::jointLog] [info] positional integer width = 15[2023-07-24 18:55:53.162] [puff::index::jointLog] [info] seqSize = 19592[2023-07-24 18:55:53.162] [puff::index::jointLog] [info] rankSize = 19592[2023-07-24 18:55:53.162] [puff::index::jointLog] [info] edgeVecSize = 0[2023-07-24 18:55:53.162] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..ec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-07-24 18:55:53.233] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-07-24 18:55:53.233] [puff::index::jointLog] [info] chunk size = 9796[2023-07-24 18:55:53.233] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-07-24 18:55:53.233] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-07-24 18:55:53.234] [puff::index::jointLog] [info] finished populating pos vector[2023-07-24 18:55:53.234] [puff::index::jointLog] [info] writing index components[2023-07-24 18:55:53.248] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-07-24 18:55:53.252] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-07-24 18:55:53.346] [jointLog] [info] setting maxHashResizeThreads to 6[2023-07-24 18:55:53.347] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-07-24 18:55:53.347] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2023-07-24 18:55:53.347] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-07-24 18:55:53.347] [jointLog] [info] parsing read library format[2023-07-24 18:55:53.347] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 612.11 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.3918 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 466.45 us----------------------------------------------------------------------------------| Loading mphf table | Time = 429.94 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 984.96 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 881.33 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.2732 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 835.68 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 363.71 us-----------------------------------------[2023-07-24 18:55:53.453] [jointLog] [info] Loading pufferfish index[2023-07-24 18:55:53.453] [jointLog] [info] Loading dense pufferfish index.[2023-07-24 18:55:53.463] [jointLog] [info] done[2023-07-24 18:55:53.463] [jointLog] [info] Index contained 15 targets[2023-07-24 18:55:53.463] [jointLog] [info] Number of decoys : 0[2023-07-24 18:55:53.530] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-07-24 18:55:53.530] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-07-24 18:55:53.532] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2023-07-24 18:55:53.532] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2023-07-24 18:55:53.532] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-07-24 18:55:53.532] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-07-24 18:55:53.533] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-07-24 18:55:53.533] [jointLog] [info] Mapping rate = 100%[2023-07-24 18:55:53.533] [jointLog] [info] finished quantifyLibrary()[2023-07-24 18:55:53.537] [jointLog] [info] Starting optimizer[2023-07-24 18:55:53.538] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-07-24 18:55:53.538] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-07-24 18:55:53.538] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-07-24 18:55:53.539] [jointLog] [info] Finished optimizer[2023-07-24 18:55:53.539] [jointLog] [info] writing output [2023-07-24 18:55:53.543] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="33.105217933654785">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-07-24 18:56:25.787] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-07-24 18:56:25.787] [jLog] [info] building indexout : ./index[2023-07-24 18:56:25.788] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-07-24 18:56:25.795] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-07-24 18:56:25.795] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-07-24 18:56:25.806] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-07-24 18:56:25.808] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-07-24 18:56:25.867] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-07-24 18:56:25.867] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 779.25 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 703.59 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-07-24 18:56:25.869] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-07-24 18:56:25.869] [puff::index::jointLog] [info] contig count for validation: 23[2023-07-24 18:56:25.869] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-07-24 18:56:25.869] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-07-24 18:56:25.870] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-07-24 18:56:25.870] [puff::index::jointLog] [info] bits per offset entry 6[2023-07-24 18:56:25.870] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-07-24 18:56:25.879] [puff::index::jointLog] [info] # segments = 23[2023-07-24 18:56:25.879] [puff::index::jointLog] [info] total length = 19592[2023-07-24 18:56:25.879] [puff::index::jointLog] [info] Reading the reference files ...[2023-07-24 18:56:25.889] [puff::index::jointLog] [info] positional integer width = 15[2023-07-24 18:56:25.889] [puff::index::jointLog] [info] seqSize = 19592[2023-07-24 18:56:25.889] [puff::index::jointLog] [info] rankSize = 19592[2023-07-24 18:56:25.889] [puff::index::jointLog] [info] edgeVecSize = 0[2023-07-24 18:56:25.889] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..ing BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-07-24 18:56:25.965] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-07-24 18:56:25.965] [puff::index::jointLog] [info] chunk size = 9796[2023-07-24 18:56:25.965] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-07-24 18:56:25.965] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-07-24 18:56:25.966] [puff::index::jointLog] [info] finished populating pos vector[2023-07-24 18:56:25.966] [puff::index::jointLog] [info] writing index components[2023-07-24 18:56:25.979] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-07-24 18:56:25.984] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-07-24 18:56:26.084] [jointLog] [info] setting maxHashResizeThreads to 6[2023-07-24 18:56:26.084] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-07-24 18:56:26.084] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-07-24 18:56:26.084] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-07-24 18:56:26.084] [jointLog] [info] parsing read library format[2023-07-24 18:56:26.084] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 451 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0724 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 377.64 us----------------------------------------------------------------------------------| Loading mphf table | Time = 534.73 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 627.76 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 766.72 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 988.88 us-----------------------------------------size = 28562[2023-07-24 18:56:26.197] [jointLog] [info] Loading pufferfish index[2023-07-24 18:56:26.198] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading reference sequence | Time = 546.73 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 423.68 us-----------------------------------------[2023-07-24 18:56:26.206] [jointLog] [info] done[2023-07-24 18:56:26.206] [jointLog] [info] Index contained 15 targets[2023-07-24 18:56:26.206] [jointLog] [info] Number of decoys : 0[2023-07-24 18:56:26.206] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2023-07-24 18:56:26.274] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-07-24 18:56:26.274] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-07-24 18:56:26.276] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-07-24 18:56:26.276] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-07-24 18:56:26.276] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-07-24 18:56:26.276] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-07-24 18:56:26.276] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-07-24 18:56:26.276] [jointLog] [info] Mapping rate = 100%[2023-07-24 18:56:26.276] [jointLog] [info] finished quantifyLibrary()[2023-07-24 18:56:26.281] [jointLog] [info] Starting optimizer[2023-07-24 18:56:26.282] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-07-24 18:56:26.282] [jointLog] [info] iteration = 0 | max rel diff. = 49[2023-07-24 18:56:26.282] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2023-07-24 18:56:26.286] [jointLog] [info] Computed expected counts (for bias correction)[2023-07-24 18:56:26.287] [jointLog] [info] processed bias for 6.7% of the transcripts[2023-07-24 18:56:26.288] [jointLog] [info] processed bias for 33.3% of the transcripts[2023-07-24 18:56:26.288] [jointLog] [info] processed bias for 46.7% of the transcripts[2023-07-24 18:56:26.288] [jointLog] [info] processed bias for 46.7% of the transcripts[2023-07-24 18:56:26.288] [jointLog] [info] processed bias for 46.7% of the transcripts[2023-07-24 18:56:26.288] [jointLog] [info] processed bias for 46.7% of the transcripts[2023-07-24 18:56:26.289] [jointLog] [info] processed bias for 73.3% of the transcripts[2023-07-24 18:56:26.289] [jointLog] [info] processed bias for 73.3% of the transcripts[2023-07-24 18:56:26.290] [jointLog] [info] processed bias for 100.0% of the transcripts[2023-07-24 18:56:26.291] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-07-24 18:56:26.291] [jointLog] [info] Finished optimizer[2023-07-24 18:56:26.291] [jointLog] [info] writing output [2023-07-24 18:56:26.295] [jointLog] [info] writing equivalence class counts.[2023-07-24 18:56:26.296] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2023-07-24 18:56:26.296] [jointLog] [info] done.[2023-07-24 18:56:26.299] [jointLog] [info] done writing equivalence class counts.[2023-07-24 18:56:26.299] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="10.242710590362549">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.242710590362549, "tool_id": "samtools_bedcov", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="36.94686937332153">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="32.599944829940796">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="38.767571449279785">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="37.24382305145264">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="34.980199575424194">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="78.14612412452698">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="40.81764459609985">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="40.563451290130615">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="40.588462829589844">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="122.18210434913635">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/b/2/b/dataset_b2beb069-a9e7-4970-8d76-85c3752ee906.dat--pe1-2fastq:/galaxy/server/database/objects/d/8/2/dataset_d8258bd7-db43-4e14-9158-25ac13d53e84.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/b/2/b/dataset_b2beb069-a9e7-4970-8d76-85c3752ee906.dat']      right reads: ['/galaxy/server/database/objects/d/8/2/dataset_d8258bd7-db43-4e14-9158-25ac13d53e84.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/2/b/dataset_b2beb069-a9e7-4970-8d76-85c3752ee906.dat  0:00:00.898     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/8/2/dataset_d8258bd7-db43-4e14-9158-25ac13d53e84.dat  0:00:01.697     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.709    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.998    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.998    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.145    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.167    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.182    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.184    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.186    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.188    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.195    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.196    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.196    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/2/b/dataset_b2beb069-a9e7-4970-8d76-85c3752ee906.dat  0:00:02.215    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/8/2/dataset_d8258bd7-db43-4e14-9158-25ac13d53e84.dat  0:00:02.238    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.238    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.238    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.253    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.255    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.255    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.263    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.264    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.264    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.264    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/2/b/dataset_b2beb069-a9e7-4970-8d76-85c3752ee906.dat and /galaxy/server/database/objects/d/8/2/dataset_d8258bd7-db43-4e14-9158-25ac13d53e84.dat  0:00:02.330    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.334    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.338    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.375    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.376    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.376    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:02.380    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.283   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.289     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.448   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.536     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.538     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.988     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.996    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.997    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.172    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.172    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.244    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.244    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.245    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.245    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.245    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.245    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.044     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.057    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.417    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.417    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.579    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.602    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.619    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.619    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.626    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.627    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensi..      : 346)   Closing short gaps  0:00:08.531    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.533    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.533    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.533    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.533    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.533    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.533    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.533    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.533    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.533    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.533    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.533    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.533    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.543    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.544    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.544    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.547    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.547    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.547    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:08.551    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:08.555    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:08.559    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:08.566    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.566    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.566    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.566    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.566    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.566    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.690   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.905   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.673   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.674   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.683    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.826   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.829   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.832   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.836   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.836   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.836   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.855   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.860   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.878    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.879    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.879    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.882    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.882    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.882    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.882    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.882    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.882    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.882    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.886    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.886    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.886    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.886    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.886    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.886    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.886    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.886    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.886    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.887    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.887    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.887    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.887    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.887    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.887    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.887    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.888    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.888    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.888    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.888    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.888    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.888    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.888    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.888    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.889    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.894    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.899    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:10.907    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:10.921    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.923    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="17.688682794570923">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 17.688682794570923, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="46.54872512817383">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/8/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/c/0/0/dataset_c00796fa-c7ff-4eb8-a06b-13cd26bcb7ff.dat--pe1-2fastq.gz:/galaxy/server/database/objects/9/e/6/dataset_9e67c381-7995-4a4f-9daf-ed0e86581fe1.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/8/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/0/0/dataset_c00796fa-c7ff-4eb8-a06b-13cd26bcb7ff.dat']      right reads: ['/galaxy/server/database/objects/9/e/6/dataset_9e67c381-7995-4a4f-9daf-ed0e86581fe1.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/8/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/8/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/8/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/8/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/0/0/dataset_c00796fa-c7ff-4eb8-a06b-13cd26bcb7ff.dat  0:00:00.905     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/e/6/dataset_9e67c381-7995-4a4f-9daf-ed0e86581fe1.dat  0:00:01.777     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.789    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.095    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.095    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.243    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.263    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.279    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.281    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.285    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.286    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.295    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.295    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.295    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/0/0/dataset_c00796fa-c7ff-4eb8-a06b-13cd26bcb7ff.dat  0:00:02.311    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/e/6/dataset_9e67c381-7995-4a4f-9daf-ed0e86581fe1.dat  0:00:02.326    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.326    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.326    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.341    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.341    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.341    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.341    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.342    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.342    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.342    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.342    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.342    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.343    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.343    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.365    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.365    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.365    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.365    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/0/0/dataset_c00796fa-c7ff-4eb8-a06b-13cd26bcb7ff.dat and /galaxy/server/database/objects/9/e/6/dataset_9e67c381-7995-4a4f-9daf-ed0e86581fe1.dat  0:00:02.427    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.433    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.436    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.478    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.478    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.478    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/8/working/corrected/corrected.yaml  0:00:02.482    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/8/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/8/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/8/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.110     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.272   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.279     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.441   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.529     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.529     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.529     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.530     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.530     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.530     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.530     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.973     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.982    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.982    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.157    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.157    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.232    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.233    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.233    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.234    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.234    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.234    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.087     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.099    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.464    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.464    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.621    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.643    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.661    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.661    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.665    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.666    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Co..      : 346)   Closing short gaps  0:00:08.649    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.651    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.651    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.651    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.651    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.651    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.651    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.651    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.651    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.651    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.651    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.651    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.651    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.662    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.663    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.663    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.666    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.666    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.667    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/before_rr.fasta  0:00:08.671    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph.fastg  0:00:08.674    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/simplified_contigs.fasta  0:00:08.678    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/intermediate_contigs.fasta  0:00:08.685    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.685    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.685    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.685    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.811   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.036   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.808   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.808   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.818    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.954   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.959   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.964   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.969   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.969   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.969   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.984   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.990   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.010    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.010    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.010    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.010    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.014    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.014    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.014    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.015    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.015    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.015    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.015    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.015    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.015    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.015    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.015    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.015    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.015    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.015    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.015    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.015    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.015    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.016    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.016    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.016    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.016    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.016    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.016    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.016    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.018    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/before_rr.fasta  0:00:11.022    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph.fastg  0:00:11.027    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working//K33/final_contigs.paths  0:00:11.035    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working//K33/scaffolds.paths  0:00:11.048    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.050    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/8/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/8/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/8/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/8/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/8/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/8/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="56.29484963417053">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/11/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/f/1/5/dataset_f15fb35b-27d0-491f-b66c-3eccd1f98266.dat--pe1-2fastq:/galaxy/server/database/objects/4/3/1/dataset_4311dc43-d18a-4491-bfc9-ac5223b3d14c.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/11/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/f/1/5/dataset_f15fb35b-27d0-491f-b66c-3eccd1f98266.dat']      right reads: ['/galaxy/server/database/objects/4/3/1/dataset_4311dc43-d18a-4491-bfc9-ac5223b3d14c.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/11/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/1/5/dataset_f15fb35b-27d0-491f-b66c-3eccd1f98266.dat  0:00:00.837     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/3/1/dataset_4311dc43-d18a-4491-bfc9-ac5223b3d14c.dat  0:00:01.671     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.682    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.969    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.969    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.126    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.147    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.167    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.168    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.171    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.173    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.180    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.180    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.180    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/1/5/dataset_f15fb35b-27d0-491f-b66c-3eccd1f98266.dat  0:00:02.198    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/3/1/dataset_4311dc43-d18a-4491-bfc9-ac5223b3d14c.dat  0:00:02.216    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.216    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.216    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.228    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.228    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.228    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.228    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.229    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.229    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.229    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.229    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.229    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.230    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.230    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.242    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.242    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.242    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.242    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/1/5/dataset_f15fb35b-27d0-491f-b66c-3eccd1f98266.dat and /galaxy/server/database/objects/4/3/1/dataset_4311dc43-d18a-4491-bfc9-ac5223b3d14c.dat  0:00:02.297    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.304    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.309    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.344    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.344    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.344    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml  0:00:02.348    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/11/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/11/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.273   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.279     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.440   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.516     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.516     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.516     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.516     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.517     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.517     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.517     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:00.920     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.928    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.928    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.106    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.106    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.193    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.193    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.193    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.194    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.194    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.194    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.116     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.128    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.475    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.475    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.625    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.645    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.662    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:02.663    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.667    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.668    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:02.668    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea.. short gaps  0:00:05.738    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.740    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.740    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.740    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.740    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.740    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.740    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.740    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.740    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.740    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.740    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.741    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.741    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.741    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.741    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.741    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.741    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.741    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.741    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:05.741    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.741    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.741    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.753    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.754    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.754    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.760    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.760    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:05.761    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:05.764    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:05.768    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/simplified_contigs.fasta  0:00:05.773    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/intermediate_contigs.fasta  0:00:05.779    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.780    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.780    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:05.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.907   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:06.127   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.896   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.896   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:07.906    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:08.041   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:08.044   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.047   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.052   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:08.052   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:08.052   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:08.067   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.072   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.089    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:08.090    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:08.090    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:08.090    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:08.092    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.092    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.092    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.092    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:08.092    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:08.092    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:08.096    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.096    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.096    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:08.096    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:08.096    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.097    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.097    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.097    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:08.097    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:08.097    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:08.097    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:08.098    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:08.098    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:08.098    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:08.098    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:08.098    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:08.098    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:08.098    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:08.098    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.098    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.099    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.099    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.099    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.099    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.099    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.099    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:08.099    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.099    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:08.100    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:08.105    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:08.109    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/final_contigs.paths  0:00:08.116    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/scaffolds.paths  0:00:08.130    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:08.132    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/11/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="11.101810216903687">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.101810216903687, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="49.051029682159424">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/16/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/b/4/0/dataset_b40f70df-ba81-437e-bfb1-983d8a228660.dat--pe1-2fastq:/galaxy/server/database/objects/3/9/8/dataset_39873f12-23ac-46a0-b716-a52c18c828bf.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/16/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/b/4/0/dataset_b40f70df-ba81-437e-bfb1-983d8a228660.dat']      right reads: ['/galaxy/server/database/objects/3/9/8/dataset_39873f12-23ac-46a0-b716-a52c18c828bf.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/16/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/16/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/16/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/16/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/4/0/dataset_b40f70df-ba81-437e-bfb1-983d8a228660.dat  0:00:00.844     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/9/8/dataset_39873f12-23ac-46a0-b716-a52c18c828bf.dat  0:00:01.662     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.675    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.965    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.965    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.110    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.132    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.149    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.151    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.153    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.155    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.164    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.164    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.164    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/4/0/dataset_b40f70df-ba81-437e-bfb1-983d8a228660.dat  0:00:02.185    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/9/8/dataset_39873f12-23ac-46a0-b716-a52c18c828bf.dat  0:00:02.203    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.203    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.204    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.222    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.224    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.224    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.236    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.237    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.237    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.237    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/4/0/dataset_b40f70df-ba81-437e-bfb1-983d8a228660.dat and /galaxy/server/database/objects/3/9/8/dataset_39873f12-23ac-46a0-b716-a52c18c828bf.dat  0:00:02.293    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.299    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.304    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.342    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.342    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.342    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/16/working/corrected/corrected.yaml  0:00:02.346    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/16/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/16/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/16/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.278   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.284     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.443   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.522     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.522     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.523     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.523     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.524     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.524     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.524     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.926     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.935    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.935    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.118    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.118    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.198    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.199    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.199    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.200    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.200    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.200    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.065     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.077    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.440    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.441    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.590    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.610    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.630    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.630    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.637    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.638    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:08.600    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.602    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.602    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.602    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.602    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.602    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.602    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.602    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.602    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.602    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.602    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.602    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.602    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.611    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.611    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.611    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.614    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.614    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/16/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.615    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/16/working//K33/before_rr.fasta  0:00:08.619    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/16/working//K33/assembly_graph.fastg  0:00:08.623    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/16/working//K33/simplified_contigs.fasta  0:00:08.627    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/16/working//K33/intermediate_contigs.fasta  0:00:08.635    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.636    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.636    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.636    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.636    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.636    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.762   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.979   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.743   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.743   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.753    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.890   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.894   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.897   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.900   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.900   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.900   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.914   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.920   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.939    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.939    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.939    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.939    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.939    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.939    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.940    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.940    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.940    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.940    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.940    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.941    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.941    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.941    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.941    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.941    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.941    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.941    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.941    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.941    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.941    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.943    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.943    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.943    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.943    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.943    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.943    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.943    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.943    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.943    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.943    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.943    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.943    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.943    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/16/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.946    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/16/working//K33/before_rr.fasta  0:00:10.950    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/16/working//K33/assembly_graph.fastg  0:00:10.954    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/16/working//K33/final_contigs.paths  0:00:10.962    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/16/working//K33/scaffolds.paths  0:00:10.974    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.976    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/16/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/16/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/16/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/16/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/16/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/16/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/16/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="47.41750407218933">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/19/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/9/3/5/dataset_93529036-4579-477f-bed3-89bbecab2c2d.dat--pe1-2fastq:/galaxy/server/database/objects/f/5/8/dataset_f588dd90-60fe-4dad-a44c-067b554388ea.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/19/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/9/3/5/dataset_93529036-4579-477f-bed3-89bbecab2c2d.dat']      right reads: ['/galaxy/server/database/objects/f/5/8/dataset_f588dd90-60fe-4dad-a44c-067b554388ea.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/19/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/19/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/19/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/3/5/dataset_93529036-4579-477f-bed3-89bbecab2c2d.dat  0:00:00.826     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/5/8/dataset_f588dd90-60fe-4dad-a44c-067b554388ea.dat  0:00:01.614     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.625    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.896    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.896    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.046    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.068    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.086    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.088    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.091    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.093    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.101    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.101    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.101    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/3/5/dataset_93529036-4579-477f-bed3-89bbecab2c2d.dat  0:00:02.120    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/5/8/dataset_f588dd90-60fe-4dad-a44c-067b554388ea.dat  0:00:02.139    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.139    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.139    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.154    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.155    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.156    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.156    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.165    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.165    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.165    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.165    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/9/3/5/dataset_93529036-4579-477f-bed3-89bbecab2c2d.dat and /galaxy/server/database/objects/f/5/8/dataset_f588dd90-60fe-4dad-a44c-067b554388ea.dat  0:00:02.221    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.227    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.230    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.264    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.264    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.264    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/19/working/corrected/corrected.yaml  0:00:02.268    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/19/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/19/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/19/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.109    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.114     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.283     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.443   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.523     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.523     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.523     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.524     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.525     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.525     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.525     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.941     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.950    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.950    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.123    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.123    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.199    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.200    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.200    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.201    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.201    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.201    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.018     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.032    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.390    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.390    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.539    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.557    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.576    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.576    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.582    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.583    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:08.693    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.696    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.696    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.696    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.696    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.696    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.696    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.696    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.696    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.696    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.696    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.696    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.696    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.707    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.707    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.707    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.713    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.713    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.714    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta  0:00:08.718    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg  0:00:08.722    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/simplified_contigs.fasta  0:00:08.726    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/intermediate_contigs.fasta  0:00:08.734    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.734    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.735    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.735    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.735    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.735    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.871   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.089   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.854   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.854   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.864    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.000   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.004   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.008   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.011   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.011   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.011   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.025   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.030   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.049    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.049    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.049    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.049    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.049    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.049    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.049    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.050    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.050    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.050    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.050    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.050    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.050    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.050    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.051    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.051    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.051    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.051    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.051    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.051    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.051    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.052    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.052    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.052    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.052    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.052    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.052    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.052    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.052    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.052    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.052    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.052    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.052    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.052    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.053    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/19/working//K33/before_rr.fasta  0:00:11.059    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/19/working//K33/assembly_graph.fastg  0:00:11.063    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/final_contigs.paths  0:00:11.071    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working//K33/scaffolds.paths  0:00:11.085    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.089    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/19/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/19/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/19/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="47.89920139312744">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/22/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/b/3/9/dataset_b3960b38-194f-4068-87bf-ec46ec32364b.dat--pe1-2fastq.gz:/galaxy/server/database/objects/4/b/2/dataset_4b2af8e6-b752-46e4-8384-b4289897e5a6.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.10.176+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/22/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/b/3/9/dataset_b3960b38-194f-4068-87bf-ec46ec32364b.dat']      right reads: ['/galaxy/server/database/objects/4/b/2/dataset_4b2af8e6-b752-46e4-8384-b4289897e5a6.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/22/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/22/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/22/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/22/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/3/9/dataset_b3960b38-194f-4068-87bf-ec46ec32364b.dat  0:00:00.905     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/b/2/dataset_4b2af8e6-b752-46e4-8384-b4289897e5a6.dat  0:00:01.754     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.763    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.046    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.046    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.214    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.234    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.251    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.252    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.255    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.256    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.266    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.266    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.266    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/3/9/dataset_b3960b38-194f-4068-87bf-ec46ec32364b.dat  0:00:02.284    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/b/2/dataset_4b2af8e6-b752-46e4-8384-b4289897e5a6.dat  0:00:02.302    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.302    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.302    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.317    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.318    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.318    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.332    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.332    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.333    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.333    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/3/9/dataset_b3960b38-194f-4068-87bf-ec46ec32364b.dat and /galaxy/server/database/objects/4/b/2/dataset_4b2af8e6-b752-46e4-8384-b4289897e5a6.dat  0:00:02.394    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.400    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.403    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.441    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.441    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.441    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/22/working/corrected/corrected.yaml  0:00:02.445    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/22/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/22/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/22/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.283     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.443   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.531     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.531     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.531     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.532     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.533     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.533     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.533     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.975     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.983    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.983    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.153    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.153    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.236    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.236    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.236    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.237    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.237    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.237    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.097     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.108    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.463    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.463    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.617    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.641    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.658    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.658    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.661    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.662    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE..sing short gaps  0:00:08.666    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.667    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.667    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.667    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.667    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.667    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.667    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.667    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.667    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.667    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.667    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.667    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.667    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.678    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.678    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.678    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.683    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.683    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/22/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.683    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working//K33/before_rr.fasta  0:00:08.689    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/22/working//K33/assembly_graph.fastg  0:00:08.693    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working//K33/simplified_contigs.fasta  0:00:08.698    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working//K33/intermediate_contigs.fasta  0:00:08.704    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.704    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.705    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.705    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.705    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.705    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.828   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.047   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.812   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.812   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.822    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.958   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.962   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.964   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.971   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.971   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.971   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.986   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.991   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.011    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.012    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.012    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.012    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.012    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.012    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.012    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.012    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.012    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.012    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.013    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.014    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.014    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.014    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.014    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.014    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.014    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.014    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.014    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.014    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.014    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.015    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.015    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.015    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.015    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.016    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.016    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.016    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.016    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.016    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.016    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.016    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/22/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.018    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/22/working//K33/before_rr.fasta  0:00:11.026    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/22/working//K33/assembly_graph.fastg  0:00:11.031    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working//K33/final_contigs.paths  0:00:11.039    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/22/working//K33/scaffolds.paths  0:00:11.054    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.056    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/22/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/22/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/22/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/22/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/22/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/22/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/22/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="48.205766677856445">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "ab7df60e4ab39be2",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/f/4/c/dataset_f4c69802-c2f7-465c-85fd-3193a588e2bf.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/4/6/c/dataset_46c56c74-54ef-48d3-9d0b-cbafd60d2b6b.dat\u0027",  "command_version": "",  "create_time": "2023-07-24T18:43:30.854922",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-h4l6m",  "galaxy_version": "23.0",  "history_id": "29e9bceb3a5fc732",  "id": "bf5fcc18e868d7a3",  "inputs": {   "fastq_in": {    "id": "ab7df60e4ab39be2",    "src": "hda",    "uuid": "f4c69802-c2f7-465c-85fd-3193a588e2bf"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690224225.0000000",    "title": "Job End Time",    "value": "2023-07-24 18:43:45"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690224225.0000000",    "title": "Job Start Time",    "value": "2023-07-24 18:43:45"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "ca17fc0a776c956a",    "src": "hda",    "uuid": "26121822-3070-4d36-8930-1d61eb476feb"   },   "fastq_out": {    "id": "109b7251daa3678c",    "src": "hda",    "uuid": "46c56c74-54ef-48d3-9d0b-cbafd60d2b6b"   },   "log_file": {    "id": "a6153c642f403714",    "src": "hda",    "uuid": "f817248f-4fad-4c31-969c-d2df3c333ba7"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 76, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2023-07-24T18:43:59.061204",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpw874vkw3trimmomatic_se_out1.err v. /tmp/tmp_mfgt02ntrimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 48.205766677856445, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="24.61086893081665">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "readtype|fastq_in": {   "id": "facf800df5e63d68",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/8/b/8/dataset_8b88e22f-5ee2-4f79-b203-d8488bb30f4d.dat\u0027 fastq_in.\u0027fastqsanger.gz\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger.gz\u0027 fastq_out.\u0027fastqsanger.gz\u0027 SLIDINGWINDOW:4:20 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger.gz\u0027 \u0027/galaxy/server/database/objects/b/b/2/dataset_bb29c0a4-5005-4a16-8b59-23be4f0f283a.dat\u0027",  "command_version": null,  "create_time": "2023-07-24T18:44:18.577844",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-9577n",  "galaxy_version": "23.0",  "history_id": "29e9bceb3a5fc732",  "id": "6809f560d6f3c67c",  "inputs": {   "fastq_in": {    "id": "facf800df5e63d68",    "src": "hda",    "uuid": "8b88e22f-5ee2-4f79-b203-d8488bb30f4d"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out": {    "id": "dc16db2c3bf0a567",    "src": "hda",    "uuid": "bb29c0a4-5005-4a16-8b59-23be4f0f283a"   }  },  "params": {   "__input_ext": "\"fastqsanger.gz\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "false",   "output_logs": "false",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 80, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-24T18:44:25.366564",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 24.61086893081665, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="31.217227458953857">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="18.78863215446472">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 18.78863215446472, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="34.79345369338989">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/77/configs/tmpo_s0px5w:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="34.428017139434814">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="25.60827660560608">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "readtype|fastq_r1_in": {   "id": "073b907487039f31",   "src": "hda"  },  "readtype|fastq_r2_in": {   "id": "fc5eab0a55e22e7c",   "src": "hda"  },  "readtype|single_or_paired": "pair_of_files" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/0/b/dataset_e0b682c9-af6a-4d53-9ac4-4dc58944056b.dat\u0027 fastq_r1.\u0027fastqsanger\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/c/f/0/dataset_cf07f65c-ddaf-4288-8bc4-697efb495bd3.dat\u0027 fastq_r2.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.\u0027fastqsanger\u0027 fastq_r2.\u0027fastqsanger\u0027 fastq_out_r1_paired.\u0027fastqsanger\u0027 fastq_out_r1_unpaired.\u0027fastqsanger\u0027 fastq_out_r2_paired.\u0027fastqsanger\u0027 fastq_out_r2_unpaired.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out_r1_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/1/e/4/dataset_1e4d0a06-703f-44a1-82f9-47999334e5f4.dat\u0027 \u0026\u0026 mv fastq_out_r1_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/6/e/1/dataset_6e1a26c6-1413-43cf-9d80-eab25eb0c668.dat\u0027 \u0026\u0026 mv fastq_out_r2_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/7/1/f/dataset_71faeae7-16a1-4ea7-85e1-166c4b089f3c.dat\u0027 \u0026\u0026 mv fastq_out_r2_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/3/8/c/dataset_38ca7170-3215-468f-a86d-fb3877314785.dat\u0027",  "command_version": null,  "create_time": "2023-07-24T18:45:18.927215",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-twdzd",  "galaxy_version": "23.0",  "history_id": "29e9bceb3a5fc732",  "id": "96d41d6397a31ece",  "inputs": {   "fastq_r1_in": {    "id": "073b907487039f31",    "src": "hda",    "uuid": "e0b682c9-af6a-4d53-9ac4-4dc58944056b"   },   "fastq_r2_in": {    "id": "fc5eab0a55e22e7c",    "src": "hda",    "uuid": "cf07f65c-ddaf-4288-8bc4-697efb495bd3"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out_r1_paired": {    "id": "64caac0f656ca7cd",    "src": "hda",    "uuid": "1e4d0a06-703f-44a1-82f9-47999334e5f4"   },   "fastq_out_r1_unpaired": {    "id": "969857e11c84df45",    "src": "hda",    "uuid": "6e1a26c6-1413-43cf-9d80-eab25eb0c668"   },   "fastq_out_r2_paired": {    "id": "6325857608d76b39",    "src": "hda",    "uuid": "71faeae7-16a1-4ea7-85e1-166c4b089f3c"   },   "fastq_out_r2_unpaired": {    "id": "ad7f310316449c12",    "src": "hda",    "uuid": "38ca7170-3215-468f-a86d-fb3877314785"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "false",   "output_logs": "false",   "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 88, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 89, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-24T18:45:24.634924",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 25.60827660560608, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="35.246697187423706">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="34.72712063789368">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="30.415390014648438">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="34.78690958023071">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="34.4467568397522">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="30.83268141746521">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="36.13913893699646">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>