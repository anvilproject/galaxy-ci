{
    "model_class": "Job",
    "id": "768f37b5368a4b17",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-01-05T07:26:25.897296",
    "create_time": "2024-01-05T07:25:30.120077",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "43b96a0819d122b4",
    "external_id": "gxy-nxxg9",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/b/0/2/dataset_b028abad-e950-4f43-bb62-e0c8a83edb0b.dat' && cp '/galaxy/server/database/objects/7/3/4/dataset_73444f80-9318-405a-a187-4aab5331d751.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/b/7/4/dataset_b74da5e4-7674-4341-a9eb-3a528fb1d499.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/4/a/3/dataset_4a3a5395-f901-4e8b-9114-d7c3bf1f8ecf.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 1: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 315, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 316, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 314, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "759af94a9f600f0d",
            "src": "hda",
            "uuid": "b028abad-e950-4f43-bb62-e0c8a83edb0b"
        },
        "pairstraight|file1": {
            "id": "c64b4bb3441ddae3",
            "src": "hda",
            "uuid": "73444f80-9318-405a-a187-4aab5331d751"
        },
        "pairstraight|file2": {
            "id": "0eb870015af442e2",
            "src": "hda",
            "uuid": "b74da5e4-7674-4341-a9eb-3a528fb1d499"
        },
        "tgmap": {
            "id": "406ab8bfc9134925",
            "src": "hda",
            "uuid": "4a3a5395-f901-4e8b-9114-d7c3bf1f8ecf"
        }
    },
    "outputs": {
        "whitelist_txt": {
            "id": "906de46826403580",
            "src": "hda",
            "uuid": "cc140747-a841-48e7-bbf3-a459896cde0f"
        },
        "quants_mat_rows_txt": {
            "id": "58226ae9d185b386",
            "src": "hda",
            "uuid": "6d1a2273-3e26-4a1b-89f8-9cfb40db7993"
        },
        "raw_cb_frequency_txt": {
            "id": "6eba97f081765880",
            "src": "hda",
            "uuid": "44c48a04-317a-4fed-944d-ed2964637151"
        },
        "featureDump_txt": {
            "id": "79393fc3d31eded6",
            "src": "hda",
            "uuid": "2523698d-e180-4c82-97a5-dd9b5c2cb226"
        },
        "quants_mat_cols_txt": {
            "id": "8a002940da9d8017",
            "src": "hda",
            "uuid": "8380826f-eea9-439d-89d8-744497896923"
        },
        "observed_bias_3p": {
            "id": "fad07bfd66462e4b",
            "src": "hda",
            "uuid": "2f2a255c-d817-4cb0-ac35-6de86afccde5"
        },
        "flenDist_txt": {
            "id": "f95a421f0564aa89",
            "src": "hda",
            "uuid": "ba28aafd-16fd-4833-a708-1f36f840b7b7"
        },
        "observed_bias": {
            "id": "07ba2b35dde99f5f",
            "src": "hda",
            "uuid": "0b1c6992-d790-48d7-b5cc-68a9305e64f8"
        },
        "quants_mat_mtx": {
            "id": "ee9b8a3a641b3c2a",
            "src": "hda",
            "uuid": "6dd940f0-f690-4a22-b5df-49c4de960712"
        },
        "expected_bias": {
            "id": "14a7adbeec89bd80",
            "src": "hda",
            "uuid": "9640ec05-60da-4fce-ab41-d51532f85432"
        },
        "quants_tier_mat": {
            "id": "1766d6e25ed025ab",
            "src": "hda",
            "uuid": "62bfe0ce-9842-4cdb-906e-715de9393e5d"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
