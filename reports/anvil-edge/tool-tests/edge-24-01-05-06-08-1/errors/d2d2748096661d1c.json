{
    "model_class": "Job",
    "id": "d2d2748096661d1c",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-01-05T07:28:06.878884",
    "create_time": "2024-01-05T07:27:48.213784",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "43b96a0819d122b4",
    "external_id": "gxy-tcthx",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/c/2/a/dataset_c2a2d4c3-b912-4401-bcf0-d2fe80907266.dat' && cp '/galaxy/server/database/objects/0/3/0/dataset_030be135-dcca-425d-916d-e8d52fc3a9b4.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/5/9/e/dataset_59e87bb5-f3ca-4e9b-aaf0-5fced2326312.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/9/2/8/dataset_928a66e8-6c8e-435f-9a21-1a0760ebbedd.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 83: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 348, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 349, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 347, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "02c3eefdbb59425e",
            "src": "hda",
            "uuid": "c2a2d4c3-b912-4401-bcf0-d2fe80907266"
        },
        "pairstraight|file1": {
            "id": "3f7f901d33d8e510",
            "src": "hda",
            "uuid": "030be135-dcca-425d-916d-e8d52fc3a9b4"
        },
        "pairstraight|file2": {
            "id": "33ccedc955bd3a0a",
            "src": "hda",
            "uuid": "59e87bb5-f3ca-4e9b-aaf0-5fced2326312"
        },
        "tgmap": {
            "id": "705269a570976f85",
            "src": "hda",
            "uuid": "928a66e8-6c8e-435f-9a21-1a0760ebbedd"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "f26ebaebc429244f",
            "src": "hda",
            "uuid": "13e09fc2-13ae-41d9-b85e-e4f6e2ae9279"
        },
        "whitelist_txt": {
            "id": "1dfa8b4017ca157b",
            "src": "hda",
            "uuid": "bf326319-138b-4221-88d4-d456efbc5638"
        },
        "featureDump_txt": {
            "id": "ef4b5c8cc43e2c63",
            "src": "hda",
            "uuid": "f6537b20-bb41-49f8-9913-bc3888a8f2c1"
        },
        "quants_tier_mat": {
            "id": "7b66048caba723b0",
            "src": "hda",
            "uuid": "30e182af-db3c-4c92-b367-addf98ba3490"
        },
        "quants_mat_rows_txt": {
            "id": "042bc146e00b1e14",
            "src": "hda",
            "uuid": "beccf772-d237-4d8b-afb5-5615213de52d"
        },
        "quants_mat_cols_txt": {
            "id": "e550b88d38cf3b55",
            "src": "hda",
            "uuid": "738677e6-ac9b-40ad-bf2b-97f133c86e79"
        },
        "raw_cb_frequency_txt": {
            "id": "d6e27a319ed1e075",
            "src": "hda",
            "uuid": "0b95b5fa-aa53-418b-a3ca-3479425db5b8"
        },
        "quants_mat_mtx": {
            "id": "e239c63113c3158b",
            "src": "hda",
            "uuid": "fa55c644-b6c4-49bc-930f-4e2704c0c9bb"
        },
        "observed_bias": {
            "id": "0aa5c4e64bf169c8",
            "src": "hda",
            "uuid": "2a17a174-899b-4c34-90e5-f3a41750e2fc"
        },
        "observed_bias_3p": {
            "id": "d70e0f430ce766f5",
            "src": "hda",
            "uuid": "393aa5a7-caa5-4d2b-b397-028956248860"
        },
        "expected_bias": {
            "id": "6154722669797dd9",
            "src": "hda",
            "uuid": "085be5f1-40a7-4cc7-87ee-6b970e10e55c"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
