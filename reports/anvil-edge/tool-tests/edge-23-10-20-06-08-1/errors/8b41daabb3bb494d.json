{
    "model_class": "Job",
    "id": "8b41daabb3bb494d",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-10-20T07:12:19.648809",
    "create_time": "2023-10-20T07:11:47.619345",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "9a1fac41d269ee7a",
    "external_id": "gxy-fm5nv",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/7/e/6/dataset_7e606ced-a0de-4e48-8f78-2b2653f3f848.dat' && cp '/galaxy/server/database/objects/c/d/3/dataset_cd30d98a-fd51-49cd-a334-c3093e181020.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/e/c/e/dataset_eceb8970-c99f-4c38-a184-ea6b92df5aa3.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/6/7/9/dataset_679124b6-370b-4a25-8956-cec2814ab9a7.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1964, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1781, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 300, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 301, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 299, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "6a2cbb4f215859cc",
            "src": "hda",
            "uuid": "679124b6-370b-4a25-8956-cec2814ab9a7"
        },
        "pairstraight|file2": {
            "id": "7476f657de3eeb1d",
            "src": "hda",
            "uuid": "eceb8970-c99f-4c38-a184-ea6b92df5aa3"
        },
        "pairstraight|file1": {
            "id": "6a951dd047523335",
            "src": "hda",
            "uuid": "cd30d98a-fd51-49cd-a334-c3093e181020"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "34cf344b127efc7a",
            "src": "hda",
            "uuid": "7e606ced-a0de-4e48-8f78-2b2653f3f848"
        }
    },
    "outputs": {
        "observed_bias": {
            "id": "3ab1a274f4a5b9ff",
            "src": "hda",
            "uuid": "449f5e66-e88b-4857-908d-1876b5e5f685"
        },
        "quants_mat_cols_txt": {
            "id": "8330e902d491c871",
            "src": "hda",
            "uuid": "6cbe8749-81df-4db5-b8d0-70aa0926abec"
        },
        "quants_mat_rows_txt": {
            "id": "dadb3e9e19d01b49",
            "src": "hda",
            "uuid": "1c3ca582-68ab-4196-babd-6fecd0dd4f26"
        },
        "quants_tier_mat": {
            "id": "85b9e20c9898bd9c",
            "src": "hda",
            "uuid": "0d5e350e-25fd-485f-ae36-51453687c84b"
        },
        "quants_mat_mtx": {
            "id": "a4e7249a5da5d55f",
            "src": "hda",
            "uuid": "1ad227b9-5319-4594-8190-bf720c67366e"
        },
        "raw_cb_frequency_txt": {
            "id": "7d99057046cc337b",
            "src": "hda",
            "uuid": "2284d291-61b3-4dde-a22f-77c1829ac5ae"
        },
        "featureDump_txt": {
            "id": "e1cbb48e9535b057",
            "src": "hda",
            "uuid": "a05d378f-a557-4828-9887-68485dd73477"
        },
        "whitelist_txt": {
            "id": "d797ee9f6768fbe6",
            "src": "hda",
            "uuid": "57cae64f-8e09-45ab-a844-c5c08732cf37"
        },
        "expected_bias": {
            "id": "77724c863e2e6feb",
            "src": "hda",
            "uuid": "a34c59e4-7549-4bd7-88a0-c215ef33d6a0"
        },
        "observed_bias_3p": {
            "id": "1074f115dc853572",
            "src": "hda",
            "uuid": "6c7fb0ae-37ef-4349-94bd-556a66deaec7"
        },
        "flenDist_txt": {
            "id": "867b172bde37a9d1",
            "src": "hda",
            "uuid": "69371cf9-1e71-48cc-a68d-6ca57c1d6139"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
