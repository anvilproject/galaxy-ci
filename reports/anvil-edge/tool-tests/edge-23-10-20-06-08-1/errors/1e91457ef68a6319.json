{
    "model_class": "Job",
    "id": "1e91457ef68a6319",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-10-20T07:13:40.303128",
    "create_time": "2023-10-20T07:13:23.911423",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "9a1fac41d269ee7a",
    "external_id": "gxy-4lzg5",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/1/1/3/dataset_113e5234-0e31-4251-b1c5-a111c566e993.dat' && cp '/galaxy/server/database/objects/c/3/a/dataset_c3abc8c8-4403-4d53-a207-2a2c98eebf36.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/8/5/b/dataset_85b5dd56-5dcd-4e57-93cf-24d89f7f32d6.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/c/e/4/dataset_ce444e52-8022-4584-9d00-4f3f6a5e6320.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1964, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1781, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 55: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 333, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 334, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 332, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "81036edfd7010e5c",
            "src": "hda",
            "uuid": "ce444e52-8022-4584-9d00-4f3f6a5e6320"
        },
        "pairstraight|file2": {
            "id": "ec36349dc66973a7",
            "src": "hda",
            "uuid": "85b5dd56-5dcd-4e57-93cf-24d89f7f32d6"
        },
        "pairstraight|file1": {
            "id": "b3b17943ad6aaae3",
            "src": "hda",
            "uuid": "c3abc8c8-4403-4d53-a207-2a2c98eebf36"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "29536243abc95746",
            "src": "hda",
            "uuid": "113e5234-0e31-4251-b1c5-a111c566e993"
        }
    },
    "outputs": {
        "quants_mat_mtx": {
            "id": "42ff9301b8e71016",
            "src": "hda",
            "uuid": "a001043b-5a74-4c72-bc7a-847e6f1e899f"
        },
        "raw_cb_frequency_txt": {
            "id": "49f4fed07ec4c059",
            "src": "hda",
            "uuid": "2fa6e0d7-85a4-4d30-8aa2-fa233e62ef40"
        },
        "quants_mat_cols_txt": {
            "id": "288c31b58762d8f8",
            "src": "hda",
            "uuid": "acbcc8ed-88b2-4a7e-85c4-1fc3d6519432"
        },
        "quants_mat_rows_txt": {
            "id": "989f70a1631828c0",
            "src": "hda",
            "uuid": "4124fcaa-5a7d-42f2-a932-1a5c9144b3ff"
        },
        "quants_tier_mat": {
            "id": "4ad21e857997614c",
            "src": "hda",
            "uuid": "82300575-9fe7-4d57-a45a-b20f31d8244e"
        },
        "featureDump_txt": {
            "id": "2606a162ff0b4dfa",
            "src": "hda",
            "uuid": "eb799dcc-cc33-41cf-b697-73bb5bad9278"
        },
        "whitelist_txt": {
            "id": "ebad4d6d3569b40e",
            "src": "hda",
            "uuid": "be03b929-eff6-489e-924f-3c7228619e4e"
        },
        "expected_bias": {
            "id": "ab549fa411d67e07",
            "src": "hda",
            "uuid": "15b41504-6ef3-410b-bbb6-20c058727d53"
        },
        "observed_bias": {
            "id": "879dc381b0af29b2",
            "src": "hda",
            "uuid": "28bcd269-c922-4c7f-904a-8b8807986532"
        },
        "observed_bias_3p": {
            "id": "908a02b984ff1548",
            "src": "hda",
            "uuid": "383edf2e-4be2-4ec2-9dd2-243a0ef2747f"
        },
        "flenDist_txt": {
            "id": "8996d18231c859b8",
            "src": "hda",
            "uuid": "61399054-3489-4750-a712-cfb0e119326f"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
