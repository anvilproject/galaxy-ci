{
    "model_class": "Job",
    "id": "1825d1c9338f8dc0",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-05-03T07:09:17.025642",
    "create_time": "2024-05-03T07:09:03.433226",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "0b2ee65567013387",
    "external_id": "gxy-hwk92",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/1/c/9/dataset_1c980378-67c2-43a0-8359-62424ceb90d6.dat' && cp '/galaxy/server/database/objects/0/9/0/dataset_090ddfcb-9501-46d6-b526-923f01dd5112.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/0/a/0/dataset_0a09ed51-dbbe-4292-b812-441f22d2a072.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/d/1/f/dataset_d1ffbe5a-6c44-48f7-bf6c-5821e1ebf3e9.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 46: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 344, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 342, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "5503591ba693b4ad",
            "src": "hda",
            "uuid": "d1ffbe5a-6c44-48f7-bf6c-5821e1ebf3e9"
        },
        "pairstraight|file2": {
            "id": "f57cec8a99188ee2",
            "src": "hda",
            "uuid": "0a09ed51-dbbe-4292-b812-441f22d2a072"
        },
        "pairstraight|file1": {
            "id": "970cc5d7afefe7e2",
            "src": "hda",
            "uuid": "090ddfcb-9501-46d6-b526-923f01dd5112"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "736432952b6001f7",
            "src": "hda",
            "uuid": "1c980378-67c2-43a0-8359-62424ceb90d6"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "6aea0829db056662",
            "src": "hda",
            "uuid": "e7d2d208-a140-4ee3-a6fd-081919aa1969"
        },
        "observed_bias_3p": {
            "id": "13b22c0f9353f51b",
            "src": "hda",
            "uuid": "0fb570e0-16e4-478c-928e-2b2f82ec7f50"
        },
        "observed_bias": {
            "id": "4e5f3b2e242b4eaf",
            "src": "hda",
            "uuid": "ee35964a-57ec-4011-9f20-21ccfff92439"
        },
        "expected_bias": {
            "id": "7676c13a91c67ce6",
            "src": "hda",
            "uuid": "71b80ce0-f3cd-453a-9821-6baffb981ae2"
        },
        "whitelist_txt": {
            "id": "a2d3770864e02b67",
            "src": "hda",
            "uuid": "4a2b6aab-b204-48e1-ac6e-0d5f34f6d9ec"
        },
        "featureDump_txt": {
            "id": "e811df085b3f904a",
            "src": "hda",
            "uuid": "2e724482-8176-4dd3-a1d6-052dd451e485"
        },
        "quants_tier_mat": {
            "id": "285e191eae457efc",
            "src": "hda",
            "uuid": "57c4011d-2228-4442-9802-a2febbcb5324"
        },
        "quants_mat_rows_txt": {
            "id": "747d521e5c97ae43",
            "src": "hda",
            "uuid": "47c0a51c-49be-4c39-9f49-dcb40d412fb9"
        },
        "quants_mat_cols_txt": {
            "id": "ada808ffb0391d07",
            "src": "hda",
            "uuid": "f08f1b8f-c39c-4150-a11b-b4e094a823bc"
        },
        "raw_cb_frequency_txt": {
            "id": "ff519a09d8763689",
            "src": "hda",
            "uuid": "8fdc3ad7-74d4-4a5a-b116-10856ef72ede"
        },
        "quants_mat_mtx": {
            "id": "e1f16689ac5da68e",
            "src": "hda",
            "uuid": "36dcf5a9-d78b-4dfb-9d03-0fd99c5f1fe4"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
