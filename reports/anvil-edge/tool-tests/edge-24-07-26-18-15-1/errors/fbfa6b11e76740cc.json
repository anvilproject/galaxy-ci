{
    "model_class": "Job",
    "id": "fbfa6b11e76740cc",
    "history_id": "7a8e9f98c76704e4",
    "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_manipulate/anndata_manipulate/0.7.5+galaxy1",
    "state": "error",
    "exit_code": null,
    "create_time": "2024-07-26T19:13:02.945760",
    "update_time": "2024-07-26T19:13:08.370795",
    "galaxy_version": "24.1",
    "external_id": "gxy-nhvwh",
    "handler": null,
    "job_runner_name": null,
    "command_line": "cat '/galaxy/server/database/jobs_directory/000/174/configs/tmp2fj6vhb6' && python '/galaxy/server/database/jobs_directory/000/174/configs/tmp2fj6vhb6'",
    "user_email": "tests@fake.org",
    "command_version": null,
    "params": {
        "__input_ext": "\"h5ad\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "manipulate": "{\"__current_case__\": 6, \"function\": \"add_annotation\", \"new_annot\": {\"values\": [{\"id\": 198, \"src\": \"hda\"}]}, \"var_obs\": \"obs\"}"
    },
    "inputs": {
        "input": {
            "id": "03ba657a528ef787",
            "src": "hda",
            "uuid": "5c59f491-9ae3-45e1-9949-32b0f3a7e78e"
        },
        "manipulate|new_annot": {
            "id": "5788b423a5dfd3d2",
            "src": "hda",
            "uuid": "771b08cc-c827-4832-a73f-0505edbd890e"
        }
    },
    "outputs": {
        "anndata": {
            "id": "63ea300a4c2644f3",
            "src": "hda",
            "uuid": "a5b93889-8104-4b30-a3d8-a6116a31dd2e"
        }
    },
    "copied_from_job_id": null,
    "output_collections": {},
    "tool_stdout": "\n\nimport anndata as ad\n    \n    \n\nadata = ad.read('/galaxy/server/database/objects/5/c/5/dataset_5c59f491-9ae3-45e1-9949-32b0f3a7e78e.dat')\n\nimport pandas as pd\nextra_annot_t = pd.read_csv('/galaxy/server/database/objects/7/7/1/dataset_771b08cc-c827-4832-a73f-0505edbd890e.dat', sep='\\t').reset_index(drop=True)\nobs_index = adata.obs.index\nobs = pd.concat([adata.obs.reset_index(drop=True), extra_annot_t], axis=1)\nobs.index = obs_index\nadata.obs = obs\n\n\nadata.write('anndata.h5ad')\n",
    "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing 'annot2' as categorical\n",
    "job_stdout": null,
    "job_stderr": null,
    "stdout": "\n\nimport anndata as ad\n    \n    \n\nadata = ad.read('/galaxy/server/database/objects/5/c/5/dataset_5c59f491-9ae3-45e1-9949-32b0f3a7e78e.dat')\n\nimport pandas as pd\nextra_annot_t = pd.read_csv('/galaxy/server/database/objects/7/7/1/dataset_771b08cc-c827-4832-a73f-0505edbd890e.dat', sep='\\t').reset_index(drop=True)\nobs_index = adata.obs.index\nobs = pd.concat([adata.obs.reset_index(drop=True), extra_annot_t], axis=1)\nobs.index = obs_index\nadata.obs = obs\n\n\nadata.write('anndata.h5ad')\n",
    "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing 'annot2' as categorical\n",
    "job_messages": null,
    "dependencies": [],
    "job_metrics": []
}
