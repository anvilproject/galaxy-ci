{
    "model_class": "Job",
    "id": "17935454c48d0288",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-11-03T07:11:00.292358",
    "create_time": "2023-11-03T07:10:44.097741",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "68c6f9a63b6354a9",
    "external_id": "gxy-vhqq4",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/6/b/7/dataset_6b7dfefb-c1d0-42d0-a08e-ed0fb1aaff36.dat' && cp '/galaxy/server/database/objects/0/c/2/dataset_0c23e66a-fc47-49b7-aa5b-1a4d4c92eb87.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/1/7/f/dataset_17fd378d-3a9f-4ae3-8a81-dc3bef53fb1a.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/1/2/5/dataset_12590dff-89a5-435d-8a19-d0135e923067.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1964, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1781, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 330, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 331, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 329, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "bc13f7ce0d0b5f7f",
            "src": "hda",
            "uuid": "12590dff-89a5-435d-8a19-d0135e923067"
        },
        "pairstraight|file2": {
            "id": "9f625cea4f9f9720",
            "src": "hda",
            "uuid": "17fd378d-3a9f-4ae3-8a81-dc3bef53fb1a"
        },
        "pairstraight|file1": {
            "id": "860e6c848da9f621",
            "src": "hda",
            "uuid": "0c23e66a-fc47-49b7-aa5b-1a4d4c92eb87"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "00854d2e222b3e1e",
            "src": "hda",
            "uuid": "6b7dfefb-c1d0-42d0-a08e-ed0fb1aaff36"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "66f0d5fdbd0ff751",
            "src": "hda",
            "uuid": "b7867b1f-e788-44d4-a262-d28395e8525c"
        },
        "observed_bias_3p": {
            "id": "91226a81695a908e",
            "src": "hda",
            "uuid": "0aa979fd-48cf-4fff-b435-6a6ba923bc1e"
        },
        "observed_bias": {
            "id": "be527ae01664eff9",
            "src": "hda",
            "uuid": "f27d028e-9788-4893-bb82-8d1e1c92eba3"
        },
        "expected_bias": {
            "id": "ff3c60df83967ba0",
            "src": "hda",
            "uuid": "25d2271b-3c8a-460d-a34e-918351bd1b2a"
        },
        "whitelist_txt": {
            "id": "12240943a90b4e5f",
            "src": "hda",
            "uuid": "271a0b4b-4147-4c60-bf69-e2daa7318332"
        },
        "featureDump_txt": {
            "id": "b8d461f5256e6b9b",
            "src": "hda",
            "uuid": "3f41556f-4a87-4a6f-bb11-bd09a65546aa"
        },
        "quants_tier_mat": {
            "id": "60da6ed6568d9ffa",
            "src": "hda",
            "uuid": "2c6c379d-b863-4cb0-9afb-ffae81c219f7"
        },
        "quants_mat_rows_txt": {
            "id": "aef205eab264e648",
            "src": "hda",
            "uuid": "c41eace9-003a-48db-ac05-2c2853f66c98"
        },
        "quants_mat_cols_txt": {
            "id": "c008d368fc02074c",
            "src": "hda",
            "uuid": "1cac0d76-d811-408e-8575-cdf48f28b291"
        },
        "raw_cb_frequency_txt": {
            "id": "be514cc7499f7304",
            "src": "hda",
            "uuid": "41463636-289a-4339-b352-f5106c4c12f4"
        },
        "quants_mat_mtx": {
            "id": "871b511991e982a0",
            "src": "hda",
            "uuid": "8a3f2cb1-7bde-4c52-b824-807e4ea98f8c"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
