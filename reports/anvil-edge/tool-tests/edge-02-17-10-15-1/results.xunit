<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="110"
           errors="7"
           failures="14"
           skip="0">
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.08481192588806152">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.08481192588806152, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "0.0.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.08101534843444824">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.08101534843444824, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "1.6.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/gtf2gene_list/_ensembl_gtf2gene_list (Test #1)" name="0" time="56.038174867630005">
        
            
            <system-out><![CDATA[
            [1] "Reading input.gtf elements of type gene"[1] "Found 10 features"[1] "Storing output to annotation.txt"
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa (Test #1)" name="0" time="193.36699557304382">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/c/9/d/dataset_c9d7e6c8-428e-426c-84a4-150cafdd961d.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/4/0/7/dataset_4071274a-bb8d-4055-9597-00be57f22d26.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/6/5/8/dataset_658bb83d-1b9b-405b-9bcd-abf0f660a877.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "create_time": "2023-02-17T11:05:42.936291",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6wvz6",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "036c97ad1e685e52",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "162.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 minutes"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676632113.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:08:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631951.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:05:51"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "f31d12489a43dafb",    "src": "hda",    "uuid": "658bb83d-1b9b-405b-9bcd-abf0f660a877"   },   "design_tsv": {    "id": "42097f8123fe7af7",    "src": "hda",    "uuid": "8a8164d4-6dc8-47fe-9e4b-5d7a002853c5"   },   "genes_tsv": {    "id": "853a8524fa13a5bd",    "src": "hda",    "uuid": "4071274a-bb8d-4055-9597-00be57f22d26"   },   "matrix_mtx": {    "id": "009eaeec038a0830",    "src": "hda",    "uuid": "c9d7e6c8-428e-426c-84a4-150cafdd961d"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-02-17 11:05:51--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  272K\n    50K .......... .......... .......... .......... ..........  272K\n   100K .......... .......... .......... .......... ..........  182K\n   150K .......... .......... .......... .......... ..........  548K\n   200K .......... .......... .......... .......... ..........  271K\n   250K .......... .......... .......... .......... ..........  247K\n   300K .......... .......... .......... .......... ..........  193K\n   350K .......... .......... .......... .......... ..........  130K\n   400K .......... .......... .......... .......... ..........  142K\n   450K .......... .......... .......... .......... ..........  136K\n   500K .......... .......... .......... .......... .......... 89.9K\n   550K .......... .......... .......... .......... .......... 89.8K\n   600K .......... .......... .......... .......... .......... 77.6K\n   650K .......... .......... .......... .......... .......... 90.2K\n   700K .......... .......... .......... .......... .......... 30.9K\n   750K .......... .......... .......... .......... .......... 60.4K\n   800K .......... .......... .......... .......... .......... 98.6K\n   850K .......... .......... .......... .......... ..........  119K\n   900K .......... .......... .......... .......... ..........  155K\n   950K .......... .......... .......... .......... ..........  154K\n  1000K .......... .......... .......... .......... ..........  181K\n  1050K .......... .......... .......... .......... ..........  270K\n  1100K .......... .......... .......... .......... ..........  216K\n  1150K .......... .......... .......... .......... ..........  218K\n  1200K .......... .......... .......... .......... ..........  271K\n  1250K .......... .......... .......... .......... ..........  269K\n  1300K .......... .......... .......... .......... ..........  536K\n  1350K .......... .......... .......... .......... ..........  338K\n  1400K .......... .......... .......... .......... ..........  391K\n  1450K .......... .......... .......... .......... ..........  545K\n  1500K .......... .......... .......... .......... ..........  272K\n  1550K .......... .......... .......... .......... ..........  531K\n  1600K .......... .......... .......... .......... ..........  545K\n  1650K .......... .......... .......... .......... ..........  512K\n  1700K .......... .......... .......... .......... ..........  544K\n  1750K .......... .......... .......... .......... ..........  574K\n  1800K .......... .......... .......... .......... ..........  540K\n  1850K .......... .......... .......... .......... ..........  545K\n  1900K .......... .......... .......... .......... ..........  538K\n  1950K .......... .......... .......... .......... ..........  538K\n  2000K .......... .......... .......... .......... .......... 4.78M\n  2050K .......... .......... .......... .......... ..........  601K\n  2100K .......... .......... .......... .......... ..........  546K\n  2150K .......... .......... .......... .......... .......... 1.14M\n  2200K .......... .......... .......... .......... ..........  831K\n  2250K .......... .......... .......... .......... ..........  618K\n  2300K .......... .......... .......... .......... .......... 4.57M\n  2350K .......... .......... .......... .......... ..........  548K\n  2400K .......... .......... .......... .......... ..........  595K\n  2450K .......... .......... .......... .......... .......... 5.53M\n  2500K .......... .......... .......... .......... ..........  598K\n  2550K .......... .......... .......... .......... .......... 1.14M\n  2600K .......... .......... .......... .......... ..........  869K\n  2650K .......... .......... .......... .......... ..........  593K\n  2700K .......... .......... .......... .......... .......... 5.93M\n  2750K .......... .......... .......... .......... ..........  596K\n  2800K .......... .......... .......... .......... .......... 1.16M\n  2850K .......... .......... .......... .......... ..........  997K\n  2900K .......... .......... .......... .......... .......... 1.18M\n  2950K .......... .......... .......... .......... ..........  990K\n  3000K .......... .......... .......... .......... .......... 1.19M\n  3050K .......... .......... .......... .......... ..........  972K\n  3100K .......... .......... .......... .......... .......... 1.21M\n  3150K .......... .......... .......... .......... ..........  955K\n  3200K .......... .......... .......... .......... .......... 1.24M\n  3250K .......... .......... .......... .......... ..........  955K\n  3300K .......... .......... .......... .......... .......... 4.48M\n  3350K .......... .......... .......... .......... ..........  614K\n  3400K .......... .......... .......... .......... .......... 5.21M\n  3450K .......... .......... .......... .......... ..........  604K\n  3500K .......... .......... .......... .......... .......... 5.29M\n  3550K .......... .......... .......... .......... ..........  605K\n  3600K .......... .......... .......... .......... .......... 5.55M\n  3650K .......... .......... .......... .......... .......... 1.56M\n  3700K .......... .......... .......... .......... ..........  947K\n  3750K .......... .......... .......... .......... .......... 6.38M\n  3800K .......... .......... .......... .......... ..........  597K\n  3850K .......... .......... .......... .......... .......... 6.90M\n  3900K .......... .......... .......... .......... .......... 1.50M\n  3950K .......... .......... .......... .......... ..........  953K\n  4000K .......... .......... .......... .......... .......... 6.37M\n  4050K .......... .......... .......... .......... ..........  601K\n  4100K .......... .......... .......... .......... .......... 6.70M\n  4150K .......... .......... .......... .......... .......... 1.49M\n  4200K .......... .......... .......... .......... ..........  969K\n  4250K .......... .......... .......... .......... .......... 5.75M\n  4300K .......... .......... .......... .......... .......... 1.52M\n  4350K .......... .......... .......... .......... ..........  971K\n  4400K .......... .......... .......... .......... .......... 5.46M\n  4450K .......... .......... .......... .......... ..........  608K\n  4500K .......... .......... .......... .......... .......... 66.3M\n  4550K .......... .......... .......... .......... .......... 5.30M\n  4600K .......... .......... .......... .......... ..........  607K\n  4650K .......... .......... .......... .......... .......... 77.3M\n  4700K .......... .......... .......... .......... .......... 6.29M\n  4750K .......... .......... .......... .......... ..........  601K\n  4800K .......... .......... .......... .......... .......... 51.8M\n  4850K .......... .......... .......... .......... .......... 4.23M\n  4900K .......... .......... .......... .......... .......... 1.69M\n  4950K .......... .......... .......... .......... ..........  983K\n  5000K .......... .......... .......... .......... .......... 6.12M\n  5050K .......... .......... .......... .......... .......... 9.52M\n  5100K .......... .......... .......... .......... ..........  640K\n  5150K .......... .......... .......... .......... ..........  539K\n  5200K .......... .......... .......... .......... ..........  380M\n  5250K .......... .......... .......... .......... ..........  343M\n  5300K .......... .......... .......... .......... ..........  246M\n  5350K .......... .......... .......... .......... .......... 1.11M\n  5400K .......... .......... .......... .......... .......... 1.02M\n  5450K .......... .......... .......... .......... .......... 4.41M\n  5500K .......... .......... .......... .......... ..........  621K\n  5550K .......... .......... .......... .......... .......... 7.08M\n  5600K .......... .......... .......... .......... ..........  590K\n  5650K .......... .......... .......... .......... ..........  102M\n  5700K .......... .......... .......... .......... .......... 3.71M\n  5750K .......... .......... .......... .......... ..........  643K\n  5800K .......... .......... .......... .......... .......... 26.4M\n  5850K .......... .......... .......... .......... .......... 1.02M\n  5900K .......... .......... .......... .......... .......... 1.15M\n  5950K .......... .......... .......... .......... .......... 3.66M\n  6000K .......... .......... .......... .......... ..........  642K\n  6050K .......... .......... .......... .......... ..........  111M\n  6100K .......... .......... .......... .......... .......... 3.19M\n  6150K .......... .......... .......... .......... ..........  658K\n  6200K .......... .......... .......... .......... .......... 67.4M\n  6250K .......... .......... .......... .......... .......... 1002K\n  6300K .......... .......... .......... .......... .......... 1.18M\n  6350K .......... .......... .......... .......... .......... 4.76M\n  6400K .......... .......... .......... .......... .......... 1.22M\n  6450K .......... .......... .......... .......... .......... 1.19M\n  6500K .......... .......... .......... .......... .......... 2.96M\n  6550K .......... .......... .......... .......... .......... 1.40M\n  6600K .......... .......... .......... .......... .......... 1.22M\n  6650K .......... .......... .......... .......... .......... 4.02M\n  6700K .......... .......... .......... .......... ..........  632K\n  6750K .......... .......... .......... .......... .......... 25.9M\n  6800K .......... .......... .......... .......... .......... 3.24M\n  6850K .......... .......... .......... .......... ..........  669K\n  6900K .......... .......... .......... .......... .......... 24.2M\n  6950K .......... .......... .......... .......... .......... 3.19M\n  7000K .......... .......... .......... .......... ..........  673K\n  7050K .......... .......... .......... .......... .......... 50.0M\n  7100K .......... .......... .......... .......... .......... 2.87M\n  7150K .......... .......... .......... .......... ..........  667K\n  7200K .......... .......... .......... .......... .......... 22.2M\n  7250K .......... .......... .......... .......... .......... 3.44M\n  7300K .......... .......... .......... .......... ..........  665K\n  7350K .......... .......... .......... .......... .......... 53.5M\n  7400K .......... .......... .......... .......... .......... 3.02M\n  7450K .......... .......... .......... .......... .......... 1.15M\n  7500K .......... .......... .......... .......... .......... 1.41M\n  7550K .......... .......... .......... .......... .......... 3.39M\n  7600K .......... .......... .......... .......... ..........  664K\n  7650K .......... .......... .......... .......... .......... 56.5M\n  7700K .......... .......... .......... .......... .......... 4.65M\n  7750K .......... .......... .......... .......... .......... 1.02M\n  7800K .......... .......... .......... .......... .......... 1.45M\n  7850K .......... .......... .......... .......... .......... 4.88M\n  7900K .......... .......... .......... .......... ..........  984K\n  7950K .......... .......... .......... .......... .......... 1.56M\n  8000K .......... .......... .......... .......... .......... 3.65M\n  8050K .......... .......... .......... .......... .......... 1.06M\n  8100K .......... .......... .......... .......... .......... 1.53M\n  8150K .......... .......... .......... .......... .......... 14.8M\n  8200K .......... .......... .......... .......... .......... 3.49M\n  8250K .......... .......... .......... .......... ..........  672K\n  8300K .......... .......... .......... .......... .......... 7.16M\n  8350K .......... .......... .......... .......... .......... 4.50M\n  8400K .......... .......... .......... .......... ..........  675K\n  8450K .......... .......... .......... .......... .......... 79.5M\n  8500K .......... .......... .......... .......... .......... 2.92M\n  8550K .......... .......... .......... .......... .......... 1.08M\n  8600K .......... .......... .......... .......... .......... 1.63M\n  8650K .......... .......... .......... .......... .......... 2.93M\n  8700K .......... .......... .......... .......... .......... 1.05M\n  8750K .......... .......... .......... .......... .......... 1.66M\n  8800K .......... .......... .......... .......... .......... 6.92M\n  8850K .......... .......... .......... .......... .......... 4.77M\n  8900K .......... .......... .......... .......... ..........  667K\n  8950K .......... .......... .......... .......... .......... 17.1M\n  9000K .......... .......... .......... .......... .......... 3.64M\n  9050K .......... .......... .......... .......... .......... 1.05M\n  9100K .......... .......... .......... .......... .......... 1.70M\n  9150K .......... .......... .......... .......... .......... 3.05M\n  9200K .......... .......... .......... .......... .......... 1.04M\n  9250K .......... .......... .......... .......... .......... 1.71M\n  9300K .......... .......... .......... .......... .......... 6.99M\n  9350K .......... .......... .......... .......... .......... 4.95M\n  9400K .......... .......... .......... .......... ..........  669K\n  9450K .......... .......... .......... .......... ..........  310M\n  9500K .......... .......... .......... .......... ..........  462K\n  9550K .......... .......... .......... .......... .......... 88.0M\n  9600K .......... .......... .......... .......... ..........  185M\n  9650K .......... .......... .......... .......... ..........  184M\n  9700K .......... .......... .......... .......... ..........  660K\n  9750K .......... .......... .......... .......... .......... 6.83M\n  9800K .......... .......... .......... .......... ..........  923K\n  9850K .......... .......... .......... .......... .......... 1.41M\n  9900K .......... .......... .......... .......... .......... 4.15M\n  9950K .......... .......... .......... .......... ..........  625K\n 10000K .......... .......... .......... .......... .......... 5.01M\n 10050K .......... .......... .......... .......... ..........  769K\n 10100K .......... .......... .......... .......... .......... 2.86M\n 10150K .......... .......... .......... .......... .......... 3.89M\n 10200K .......... .......... .......... .......... ..........  624K\n 10250K .......... .......... .......... .......... .......... 5.14M\n 10300K .......... .......... .......... .......... .......... 1.02M\n 10350K .......... .......... .......... .......... .......... 1.30M\n 10400K .......... .......... .......... .......... .......... 5.95M\n 10450K .......... .......... .......... .......... ..........  620K\n 10500K .......... .......... .......... .......... .......... 4.91M\n 10550K .......... .......... .......... .......... .......... 1.05M\n 10600K .......... .......... .......... .......... .......... 1.36M\n 10650K .......... .......... .......... .......... .......... 4.01M\n 10700K .......... .......... .......... .......... ..........  626K\n 10750K .......... .......... .......... .......... .......... 23.4M\n 10800K .......... .......... .......... .......... ..........  930K\n 10850K .......... .......... .......... .......... .......... 1.34M\n 10900K .......... .......... .......... .......... .......... 4.94M\n 10950K .......... .......... .......... .......... .......... 1.04M\n 11000K .......... .......... .......... .......... .......... 1.38M\n 11050K .......... .......... .......... .......... .......... 4.81M\n 11100K .......... .......... .......... .......... ..........  617K\n 11150K .......... .......... .......... .......... .......... 34.1M\n 11200K .......... .......... .......... .......... ..........  923K\n 11250K .......... .......... .......... .......... .......... 1.34M\n 11300K .......... .......... .......... .......... .......... 5.02M\n 11350K .......... .......... .......... .......... .......... 1.06M\n 11400K .......... .......... .......... .......... .......... 1.32M\n 11450K .......... .......... .......... .......... .......... 5.83M\n 11500K .......... .......... .......... .......... ..........  604K\n 11550K .......... .......... .......... .......... ..........\n..\n....... .......... .......... ..........  528K\n 49900K .......... .......... .......... .......... ..........  524K\n 49950K .......... .......... .......... .......... ..........  541K\n 50000K .......... .......... .......... .......... ..........  534K\n 50050K .......... .......... .......... .......... ..........  540K\n 50100K .......... .......... .......... .......... ..........  546K\n 50150K .......... .......... .......... .......... ..........  534K\n 50200K .......... .......... .......... .......... .......... 1.36M\n 50250K .......... .......... .......... .......... ..........  542K\n 50300K .......... .......... .......... .......... ..........  866K\n 50350K .......... .......... .......... .......... ..........  541K\n 50400K .......... .......... .......... .......... ..........  400K\n 50450K .......... .......... .......... .......... ..........  543K\n 50500K .......... .......... .......... .......... ..........  845K\n 50550K .......... .......... .......... .......... ..........  519K\n 50600K .......... .......... .......... .......... ..........  546K\n 50650K .......... .......... .......... .......... ..........  542K\n 50700K .......... .......... .......... .......... ..........  542K\n 50750K .......... .......... .......... .......... ..........  543K\n 50800K .......... .......... .......... .......... ..........  544K\n 50850K .......... .......... .......... .......... ..........  539K\n 50900K .......... .......... .......... .......... ..........  535K\n 50950K .......... .......... .......... .......... ..........  541K\n 51000K .......... .......... .......... .......... ..........  540K\n 51050K .......... .......... .......... .......... ..........  549K\n 51100K .......... .......... .......... .......... ..........  543K\n 51150K .......... .......... .......... .......... ..........  544K\n 51200K .......... .......... .......... .......... ..........  542K\n 51250K .......... .......... .......... .......... ..........  537K\n 51300K .......... .......... .......... .......... ..........  543K\n 51350K .......... .......... .......... .......... ..........  540K\n 51400K .......... .......... .......... .......... .......... 1.30M\n 51450K .......... .......... .......... .......... ..........  890K\n 51500K .......... .......... .......... .......... ..........  547K\n 51550K .......... .......... .......... .......... ..........  540K\n 51600K .......... .......... .......... .......... ..........  547K\n 51650K .......... .......... .......... .......... ..........  534K\n 51700K .......... .......... .......... .......... ..........  548K\n 51750K .......... .......... .......... .......... ..........  548K\n 51800K .......... .......... .......... .......... .......... 1.04M\n 51850K .......... .......... .......... .......... .......... 1.07M\n 51900K .......... .......... .......... .......... ..........  545K\n 51950K .......... .......... .......... .......... ..........  543K\n 52000K .......... .......... .......... .......... ..........  545K\n 52050K .......... .......... .......... .......... ..........  545K\n 52100K .......... .......... .......... .......... .......... 56.4M\n 52150K .......... .......... .......... .......... ..........  545K\n 52200K .......... .......... .......... .......... ..........  547K\n 52250K .......... .......... .......... .......... ..........  970K\n 52300K .......... .......... .......... .......... .......... 1.19M\n 52350K .......... .......... .......... .......... ..........  542K\n 52400K .......... .......... .......... .......... ..........  546K\n 52450K .......... .......... .......... .......... ..........  928K\n 52500K .......... .......... .......... .......... .......... 1.27M\n 52550K .......... .......... .......... .......... ..........  543K\n 52600K .......... .......... .......... .......... .......... 33.2M\n 52650K .......... .......... .......... .......... ..........  555K\n 52700K .......... .......... .......... .......... ..........  549K\n 52750K .......... .......... .......... .......... .......... 1000K\n 52800K .......... .......... .......... .......... .......... 1.13M\n 52850K .......... .......... .......... .......... ..........  545K\n 52900K .......... .......... .......... .......... .......... 41.1M\n 52950K .......... .......... .......... .......... ..........  548K\n 53000K .......... .......... .......... .......... .......... 76.7M\n 53050K .......... .......... .......... .......... ..........  546K\n 53100K .......... .......... .......... .......... ..........  124M\n 53150K .......... .......... .......... .......... ..........  546K\n 53200K .......... .......... .......... .......... ..........  880K\n 53250K .......... .......... .......... .......... .......... 1.39M\n 53300K .......... .......... .......... .......... ..........  334K\n 53350K .......... .......... .......... .......... .......... 33.5K\n 53400K .......... .......... .......... .......... .......... 77.7K\n 53450K .......... .......... .......... .......... ..........  135K\n 53500K .......... .......... .......... .......... ..........  180K\n 53550K .......... .......... .......... .......... ..........  272K\n 53600K .......... .......... .......... .......... ..........  387K\n 53650K .......... .......... .......... .......... ..........  328K\n 53700K .......... .......... .......... .......... ..........  541K\n 53750K .......... .......... .......... .......... ..........  544K\n 53800K .......... .......... .......... .......... ..........  539K\n 53850K .......... .......... .......... .......... ..........  541K\n 53900K .......... .......... .......... .......... ..........  544K\n 53950K .......... .......... .......... .......... ..........  534K\n 54000K .......... .......... .......... .......... ..........  541K\n 54050K .......... .......... .......... .......... ..........  544K\n 54100K .......... .......... .......... .......... ..........  544K\n 54150K .......... .......... .......... .......... .......... 1.62M\n 54200K .......... .......... .......... .......... ..........  801K\n 54250K .......... .......... .......... .......... ..........  542K\n 54300K .......... .......... .......... .......... ..........  275K\n 54350K .......... .......... .......... .......... .......... 93.8M\n 54400K .......... .......... .......... .......... ..........  130K\n 54450K .......... .......... .......... .......... ..........  135M\n 54500K .......... .......... .......... .......... ..........  553K\n 54550K .......... .......... .......... .......... ..........  266K\n 54600K .......... .......... .......... .......... ..........  180K\n 54650K .......... .......... .......... .......... ..........  182K\n 54700K .......... .......... .......... .......... ..........  181K\n 54750K .......... .......... .......... .......... ..........  108K\n 54800K .......... .......... .......... .......... ..........  108K\n 54850K .......... .......... .......... .......... ..........  135K\n 54900K .......... .......... .......... .......... .......... 90.8K\n 54950K .......... .......... .......... .......... ..........  136K\n 55000K .......... .......... .......... .......... .......... 59.2K\n 55050K .......... .......... .......... .......... .......... 26.4K\n 55100K .......... .......... .......... .......... .......... 67.4K\n 55150K .......... .......... .......... .......... .......... 77.1K\n 55200K .......... .......... .......... .......... ..........  121K\n 55250K .......... .......... .......... .......... ..........  181K\n 55300K .......... .......... .......... .......... ..........  177K\n 55350K .......... .......... .......... .......... ..........  184K\n 55400K .......... .......... .......... .......... ..........  209K\n 55450K .......... .......... .......... .......... ..........  223K\n 55500K .......... .......... .......... .......... ..........  206K\n 55550K .......... .......... .......... .......... ..........  181K\n 55600K .......... .......... .......... .......... ..........  179K\n 55650K .......... .......... .......... .......... ..........  158K\n 55700K .......... .......... .......... .......... ..........  180K\n 55750K .......... .......... .......... .......... ..........  136K\n 55800K .......... .......... .......... .......... ..........  179K\n 55850K .......... .......... .......... .......... ..........  136K\n 55900K .......... .......... .......... .......... .......... 89.5K\n 55950K .......... .......... .......... .......... .......... 38.9K\n 56000K .......... .......... .......... .......... .......... 49.2K\n 56050K .......... .......... .......... .......... .......... 59.9K\n 56100K .......... .......... .......... .......... .......... 49.4K\n 56150K .......... .......... .......... .......... .......... 59.7K\n 56200K .......... .......... .......... .......... .......... 60.6K\n 56250K .......... .......... .......... .......... .......... 77.6K\n 56300K .......... .......... .......... .......... .......... 89.1K\n 56350K .......... .......... .......... .......... .......... 61.9K\n 56400K .......... .......... .......... .......... .......... 86.8K\n 56450K .......... .......... .......... .......... .......... 90.5K\n 56500K .......... .......... .......... .......... .......... 67.2K\n 56550K .......... .......... .......... .......... ..........  107K\n 56600K .......... .......... .......... .......... .......... 67.4K\n 56650K .......... .......... .......... .......... .......... 72.9K\n 56700K .......... .......... .......... .......... .......... 71.3K\n 56750K .......... .......... .......... .......... .......... 43.3K\n 56800K .......... .......... .......... .......... .......... 92.0K\n 56850K .......... .......... .......... .......... .......... 67.1K\n 56900K .......... .......... .......... .......... .......... 88.1K\n 56950K .......... .......... .......... .......... .......... 89.8K\n 57000K .......... .......... .......... .......... .......... 59.7K\n 57050K .......... .......... .......... .......... .......... 53.9K\n 57100K .......... .......... .......... .......... .......... 38.0K\n 57150K .......... .......... .......... .......... .......... 44.7K\n 57200K .......... .......... .......... .......... .......... 67.0K\n 57250K .......... .......... .......... .......... ..........  108K\n 57300K .......... .......... .......... .......... ..........  133K\n 57350K .......... .......... .......... .......... ..........  178K\n 57400K .......... .......... .......... .......... .......... 42.3K\n 57450K .......... .......... .......... .......... ..........  176K\n 57500K .......... .......... .......... .......... ..........  136K\n 57550K .......... .......... .......... .......... ..........  180K\n 57600K .......... .......... .......... .......... ..........  181K\n 57650K .......... .......... .......... .......... ..........  181K\n 57700K .......... .......... .......... .......... ..........  271K\n 57750K .......... .......... .......... .......... ..........  269K\n 57800K .......... .......... .......... .......... ..........  269K\n 57850K .......... .......... .......... .......... ..........  269K\n 57900K .......... .......... .......... .......... ..........  520K\n 57950K .......... .......... .......... .......... ..........  267K\n 58000K .......... .......... .......... .......... ..........  271K\n 58050K .......... .......... .......... .......... ..........  367K\n 58100K .......... .......... .......... .......... ..........  348K\n 58150K .......... .......... .......... .......... ..........  531K\n 58200K .......... .......... .......... .......... ..........  541K\n 58250K .......... .......... .......... .......... ..........  271K\n 58300K .......... .......... .......... .......... ..........  534K\n 58350K .......... .......... .......... .......... ..........  535K\n 58400K .......... .......... .......... .......... ..........  537K\n 58450K .......... .......... .......... .......... ..........  534K\n 58500K .......... .......... .......... .......... ..........  542K\n 58550K .......... .......... .......... .......... ..........  537K\n 58600K .......... .......... .......... .......... ..........  537K\n 58650K .......... .......... .......... .......... ..........  543K\n 58700K .......... .......... .......... .......... ..........  508K\n 58750K .......... .......... .......... .......... ..........  561K\n 58800K .......... .......... .......... .......... ..........  542K\n 58850K .......... .......... .......... .......... ..........  542K\n 58900K .......... .......... .......... .......... ..........  545K\n 58950K .......... .......... .......... .......... .......... 18.9M\n 59000K .......... .......... .......... .......... ..........  550K\n 59050K .......... .......... .......... .......... ..........  543K\n 59100K .......... .......... .......... .......... ..........  543K\n 59150K .......... .......... .......... .......... ..........  544K\n 59200K .......... .......... .......... .......... .......... 26.4M\n 59250K .......... .......... .......... .......... ..........  550K\n 59300K .......... .......... .......... .......... ..........  544K\n 59350K .......... .......... .......... .......... ..........  910K\n 59400K .......... .......... .......... .......... .......... 1.26M\n 59450K .......... .......... .......... .......... ..........  547K\n 59500K .......... .......... .......... .......... ..........  921K\n 59550K .......... .......... .......... .......... .......... 1.27M\n 59600K .......... .......... .......... .......... ..........  545K\n 59650K .......... .......... .......... .......... .......... 43.5M\n 59700K .......... .......... .......... .......... ..........  548K\n 59750K .......... .......... .......... .......... ..........  853K\n 59800K .......... .......... .......... .......... .......... 1.44M\n 59850K .......... .......... .......... .......... ..........  854K\n 59900K .......... .......... .......... .......... .......... 1.45M\n 59950K .......... .......... .......... .......... ..........  543K\n 60000K .......... .......... .......... .......... .......... 89.8M\n 60050K .......... .......... .......... .......... ..........  545K\n 60100K .......... .......... .......... .......... ..........  164M\n 60150K .......... .......... .......... .......... ..........  538K\n 60200K .......... .......... .......... .......... .......... 95.3M\n 60250K .......... .......... .......... .......... ..........  546K\n 60300K .......... .......... .......... .......... .......... 5.93M\n 60350K .......... .......... .......... .......... ..........  599K\n 60400K .......... .......... .......... .......... .......... 32.5M\n 60450K .......... .......... .......... .......... ..........  551K\n 60500K .......... .......... .......... .......... ..........  116M\n 60550K .......... .......... .......... .......... ..........  719K\n 60600K .......... .......... .......... .......... .......... 2.17M\n 60650K .......... .........                                   56.5M=2m36s\n\n2023-02-17 11:08:28 (390 KB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-02-17 11:08:31--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 567421 (554K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  9%  226K 2s\n    50K .......... .......... .......... .......... .......... 18%  273K 2s\n   100K .......... .......... .......... .......... .......... 27%  544K 1s\n   150K .......... .......... .......... .......... .......... 36%  336K 1s\n   200K .......... .......... .......... .......... .......... 45%  399K 1s\n   250K .......... .......... .......... .......... .......... 54%  848K 1s\n   300K .......... .......... .......... .......... .......... 63% 1.05M 1s\n   350K .......... .......... .......... .......... .......... 72%  631K 0s\n   400K .......... .......... .......... .......... .......... 81%  478K 0s\n   450K .......... .......... .......... .......... .......... 90%  635K 0s\n   500K .......... .......... .......... .......... .......... 99%  551K 0s\n   550K ....                                                  100% 18.9M=1.2s\n\n2023-02-17 11:08:33 (451 KB/s) - \u0027exp_design.tsv\u0027 saved [567421/567421]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-02-17 11:05:51--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  272K\n    50K .......... .......... .......... .......... ..........  272K\n   100K .......... .......... .......... .......... ..........  182K\n   150K .......... .......... .......... .......... ..........  548K\n   200K .......... .......... .......... .......... ..........  271K\n   250K .......... .......... .......... .......... ..........  247K\n   300K .......... .......... .......... .......... ..........  193K\n   350K .......... .......... .......... .......... ..........  130K\n   400K .......... .......... .......... .......... ..........  142K\n   450K .......... .......... .......... .......... ..........  136K\n   500K .......... .......... .......... .......... .......... 89.9K\n   550K .......... .......... .......... .......... .......... 89.8K\n   600K .......... .......... .......... .......... .......... 77.6K\n   650K .......... .......... .......... .......... .......... 90.2K\n   700K .......... .......... .......... .......... .......... 30.9K\n   750K .......... .......... .......... .......... .......... 60.4K\n   800K .......... .......... .......... .......... .......... 98.6K\n   850K .......... .......... .......... .......... ..........  119K\n   900K .......... .......... .......... .......... ..........  155K\n   950K .......... .......... .......... .......... ..........  154K\n  1000K .......... .......... .......... .......... ..........  181K\n  1050K .......... .......... .......... .......... ..........  270K\n  1100K .......... .......... .......... .......... ..........  216K\n  1150K .......... .......... .......... .......... ..........  218K\n  1200K .......... .......... .......... .......... ..........  271K\n  1250K .......... .......... .......... .......... ..........  269K\n  1300K .......... .......... .......... .......... ..........  536K\n  1350K .......... .......... .......... .......... ..........  338K\n  1400K .......... .......... .......... .......... ..........  391K\n  1450K .......... .......... .......... .......... ..........  545K\n  1500K .......... .......... .......... .......... ..........  272K\n  1550K .......... .......... .......... .......... ..........  531K\n  1600K .......... .......... .......... .......... ..........  545K\n  1650K .......... .......... .......... .......... ..........  512K\n  1700K .......... .......... .......... .......... ..........  544K\n  1750K .......... .......... .......... .......... ..........  574K\n  1800K .......... .......... .......... .......... ..........  540K\n  1850K .......... .......... .......... .......... ..........  545K\n  1900K .......... .......... .......... .......... ..........  538K\n  1950K .......... .......... .......... .......... ..........  538K\n  2000K .......... .......... .......... .......... .......... 4.78M\n  2050K .......... .......... .......... .......... ..........  601K\n  2100K .......... .......... .......... .......... ..........  546K\n  2150K .......... .......... .......... .......... .......... 1.14M\n  2200K .......... .......... .......... .......... ..........  831K\n  2250K .......... .......... .......... .......... ..........  618K\n  2300K .......... .......... .......... .......... .......... 4.57M\n  2350K .......... .......... .......... .......... ..........  548K\n  2400K .......... .......... .......... .......... ..........  595K\n  2450K .......... .......... .......... .......... .......... 5.53M\n  2500K .......... .......... .......... .......... ..........  598K\n  2550K .......... .......... .......... .......... .......... 1.14M\n  2600K .......... .......... .......... .......... ..........  869K\n  2650K .......... .......... .......... .......... ..........  593K\n  2700K .......... .......... .......... .......... .......... 5.93M\n  2750K .......... .......... .......... .......... ..........  596K\n  2800K .......... .......... .......... .......... .......... 1.16M\n  2850K .......... .......... .......... .......... ..........  997K\n  2900K .......... .......... .......... .......... .......... 1.18M\n  2950K .......... .......... .......... .......... ..........  990K\n  3000K .......... .......... .......... .......... .......... 1.19M\n  3050K .......... .......... .......... .......... ..........  972K\n  3100K .......... .......... .......... .......... .......... 1.21M\n  3150K .......... .......... .......... .......... ..........  955K\n  3200K .......... .......... .......... .......... .......... 1.24M\n  3250K .......... .......... .......... .......... ..........  955K\n  3300K .......... .......... .......... .......... .......... 4.48M\n  3350K .......... .......... .......... .......... ..........  614K\n  3400K .......... .......... .......... .......... .......... 5.21M\n  3450K .......... .......... .......... .......... ..........  604K\n  3500K .......... .......... .......... .......... .......... 5.29M\n  3550K .......... .......... .......... .......... ..........  605K\n  3600K .......... .......... .......... .......... .......... 5.55M\n  3650K .......... .......... .......... .......... .......... 1.56M\n  3700K .......... .......... .......... .......... ..........  947K\n  3750K .......... .......... .......... .......... .......... 6.38M\n  3800K .......... .......... .......... .......... ..........  597K\n  3850K .......... .......... .......... .......... .......... 6.90M\n  3900K .......... .......... .......... .......... .......... 1.50M\n  3950K .......... .......... .......... .......... ..........  953K\n  4000K .......... .......... .......... .......... .......... 6.37M\n  4050K .......... .......... .......... .......... ..........  601K\n  4100K .......... .......... .......... .......... .......... 6.70M\n  4150K .......... .......... .......... .......... .......... 1.49M\n  4200K .......... .......... .......... .......... ..........  969K\n  4250K .......... .......... .......... .......... .......... 5.75M\n  4300K .......... .......... .......... .......... .......... 1.52M\n  4350K .......... .......... .......... .......... ..........  971K\n  4400K .......... .......... .......... .......... .......... 5.46M\n  4450K .......... .......... .......... .......... ..........  608K\n  4500K .......... .......... .......... .......... .......... 66.3M\n  4550K .......... .......... .......... .......... .......... 5.30M\n  4600K .......... .......... .......... .......... ..........  607K\n  4650K .......... .......... .......... .......... .......... 77.3M\n  4700K .......... .......... .......... .......... .......... 6.29M\n  4750K .......... .......... .......... .......... ..........  601K\n  4800K .......... .......... .......... .......... .......... 51.8M\n  4850K .......... .......... .......... .......... .......... 4.23M\n  4900K .......... .......... .......... .......... .......... 1.69M\n  4950K .......... .......... .......... .......... ..........  983K\n  5000K .......... .......... .......... .......... .......... 6.12M\n  5050K .......... .......... .......... .......... .......... 9.52M\n  5100K .......... .......... .......... .......... ..........  640K\n  5150K .......... .......... .......... .......... ..........  539K\n  5200K .......... .......... .......... .......... ..........  380M\n  5250K .......... .......... .......... .......... ..........  343M\n  5300K .......... .......... .......... .......... ..........  246M\n  5350K .......... .......... .......... .......... .......... 1.11M\n  5400K .......... .......... .......... .......... .......... 1.02M\n  5450K .......... .......... .......... .......... .......... 4.41M\n  5500K .......... .......... .......... .......... ..........  621K\n  5550K .......... .......... .......... .......... .......... 7.08M\n  5600K .......... .......... .......... .......... ..........  590K\n  5650K .......... .......... .......... .......... ..........  102M\n  5700K .......... .......... .......... .......... .......... 3.71M\n  5750K .......... .......... .......... .......... ..........  643K\n  5800K .......... .......... .......... .......... .......... 26.4M\n  5850K .......... .......... .......... .......... .......... 1.02M\n  5900K .......... .......... .......... .......... .......... 1.15M\n  5950K .......... .......... .......... .......... .......... 3.66M\n  6000K .......... .......... .......... .......... ..........  642K\n  6050K .......... .......... .......... .......... ..........  111M\n  6100K .......... .......... .......... .......... .......... 3.19M\n  6150K .......... .......... .......... .......... ..........  658K\n  6200K .......... .......... .......... .......... .......... 67.4M\n  6250K .......... .......... .......... .......... .......... 1002K\n  6300K .......... .......... .......... .......... .......... 1.18M\n  6350K .......... .......... .......... .......... .......... 4.76M\n  6400K .......... .......... .......... .......... .......... 1.22M\n  6450K .......... .......... .......... .......... .......... 1.19M\n  6500K .......... .......... .......... .......... .......... 2.96M\n  6550K .......... .......... .......... .......... .......... 1.40M\n  6600K .......... .......... .......... .......... .......... 1.22M\n  6650K .......... .......... .......... .......... .......... 4.02M\n  6700K .......... .......... .......... .......... ..........  632K\n  6750K .......... .......... .......... .......... .......... 25.9M\n  6800K .......... .......... .......... .......... .......... 3.24M\n  6850K .......... .......... .......... .......... ..........  669K\n  6900K .......... .......... .......... .......... .......... 24.2M\n  6950K .......... .......... .......... .......... .......... 3.19M\n  7000K .......... .......... .......... .......... ..........  673K\n  7050K .......... .......... .......... .......... .......... 50.0M\n  7100K .......... .......... .......... .......... .......... 2.87M\n  7150K .......... .......... .......... .......... ..........  667K\n  7200K .......... .......... .......... .......... .......... 22.2M\n  7250K .......... .......... .......... .......... .......... 3.44M\n  7300K .......... .......... .......... .......... ..........  665K\n  7350K .......... .......... .......... .......... .......... 53.5M\n  7400K .......... .......... .......... .......... .......... 3.02M\n  7450K .......... .......... .......... .......... .......... 1.15M\n  7500K .......... .......... .......... .......... .......... 1.41M\n  7550K .......... .......... .......... .......... .......... 3.39M\n  7600K .......... .......... .......... .......... ..........  664K\n  7650K .......... .......... .......... .......... .......... 56.5M\n  7700K .......... .......... .......... .......... .......... 4.65M\n  7750K .......... .......... .......... .......... .......... 1.02M\n  7800K .......... .......... .......... .......... .......... 1.45M\n  7850K .......... .......... .......... .......... .......... 4.88M\n  7900K .......... .......... .......... .......... ..........  984K\n  7950K .......... .......... .......... .......... .......... 1.56M\n  8000K .......... .......... .......... .......... .......... 3.65M\n  8050K .......... .......... .......... .......... .......... 1.06M\n  8100K .......... .......... .......... .......... .......... 1.53M\n  8150K .......... .......... .......... .......... .......... 14.8M\n  8200K .......... .......... .......... .......... .......... 3.49M\n  8250K .......... .......... .......... .......... ..........  672K\n  8300K .......... .......... .......... .......... .......... 7.16M\n  8350K .......... .......... .......... .......... .......... 4.50M\n  8400K .......... .......... .......... .......... ..........  675K\n  8450K .......... .......... .......... .......... .......... 79.5M\n  8500K .......... .......... .......... .......... .......... 2.92M\n  8550K .......... .......... .......... .......... .......... 1.08M\n  8600K .......... .......... .......... .......... .......... 1.63M\n  8650K .......... .......... .......... .......... .......... 2.93M\n  8700K .......... .......... .......... .......... .......... 1.05M\n  8750K .......... .......... .......... .......... .......... 1.66M\n  8800K .......... .......... .......... .......... .......... 6.92M\n  8850K .......... .......... .......... .......... .......... 4.77M\n  8900K .......... .......... .......... .......... ..........  667K\n  8950K .......... .......... .......... .......... .......... 17.1M\n  9000K .......... .......... .......... .......... .......... 3.64M\n  9050K .......... .......... .......... .......... .......... 1.05M\n  9100K .......... .......... .......... .......... .......... 1.70M\n  9150K .......... .......... .......... .......... .......... 3.05M\n  9200K .......... .......... .......... .......... .......... 1.04M\n  9250K .......... .......... .......... .......... .......... 1.71M\n  9300K .......... .......... .......... .......... .......... 6.99M\n  9350K .......... .......... .......... .......... .......... 4.95M\n  9400K .......... .......... .......... .......... ..........  669K\n  9450K .......... .......... .......... .......... ..........  310M\n  9500K .......... .......... .......... .......... ..........  462K\n  9550K .......... .......... .......... .......... .......... 88.0M\n  9600K .......... .......... .......... .......... ..........  185M\n  9650K .......... .......... .......... .......... ..........  184M\n  9700K .......... .......... .......... .......... ..........  660K\n  9750K .......... .......... .......... .......... .......... 6.83M\n  9800K .......... .......... .......... .......... ..........  923K\n  9850K .......... .......... .......... .......... .......... 1.41M\n  9900K .......... .......... .......... .......... .......... 4.15M\n  9950K .......... .......... .......... .......... ..........  625K\n 10000K .......... .......... .......... .......... .......... 5.01M\n 10050K .......... .......... .......... .......... ..........  769K\n 10100K .......... .......... .......... .......... .......... 2.86M\n 10150K .......... .......... .......... .......... .......... 3.89M\n 10200K .......... .......... .......... .......... ..........  624K\n 10250K .......... .......... .......... .......... .......... 5.14M\n 10300K .......... .......... .......... .......... .......... 1.02M\n 10350K .......... .......... .......... .......... .......... 1.30M\n 10400K .......... .......... .......... .......... .......... 5.95M\n 10450K .......... .......... .......... .......... ..........  620K\n 10500K .......... .......... .......... .......... .......... 4.91M\n 10550K .......... .......... .......... .......... .......... 1.05M\n 10600K .......... .......... .......... .......... .......... 1.36M\n 10650K .......... .......... .......... .......... .......... 4.01M\n 10700K .......... .......... .......... .......... ..........  626K\n 10750K .......... .......... .......... .......... .......... 23.4M\n 10800K .......... .......... .......... .......... ..........  930K\n 10850K .......... .......... .......... .......... .......... 1.34M\n 10900K .......... .......... .......... .......... .......... 4.94M\n 10950K .......... .......... .......... .......... .......... 1.04M\n 11000K .......... .......... .......... .......... .......... 1.38M\n 11050K .......... .......... .......... .......... .......... 4.81M\n 11100K .......... .......... .......... .......... ..........  617K\n 11150K .......... .......... .......... .......... .......... 34.1M\n 11200K .......... .......... .......... .......... ..........  923K\n 11250K .......... .......... .......... .......... .......... 1.34M\n 11300K .......... .......... .......... .......... .......... 5.02M\n 11350K .......... .......... .......... .......... .......... 1.06M\n 11400K .......... .......... .......... .......... .......... 1.32M\n 11450K .......... .......... .......... .......... .......... 5.83M\n 11500K .......... .......... .......... .......... ..........  604K\n 11550K .......... .......... .......... .......... ..........\n..\n....... .......... .......... ..........  528K\n 49900K .......... .......... .......... .......... ..........  524K\n 49950K .......... .......... .......... .......... ..........  541K\n 50000K .......... .......... .......... .......... ..........  534K\n 50050K .......... .......... .......... .......... ..........  540K\n 50100K .......... .......... .......... .......... ..........  546K\n 50150K .......... .......... .......... .......... ..........  534K\n 50200K .......... .......... .......... .......... .......... 1.36M\n 50250K .......... .......... .......... .......... ..........  542K\n 50300K .......... .......... .......... .......... ..........  866K\n 50350K .......... .......... .......... .......... ..........  541K\n 50400K .......... .......... .......... .......... ..........  400K\n 50450K .......... .......... .......... .......... ..........  543K\n 50500K .......... .......... .......... .......... ..........  845K\n 50550K .......... .......... .......... .......... ..........  519K\n 50600K .......... .......... .......... .......... ..........  546K\n 50650K .......... .......... .......... .......... ..........  542K\n 50700K .......... .......... .......... .......... ..........  542K\n 50750K .......... .......... .......... .......... ..........  543K\n 50800K .......... .......... .......... .......... ..........  544K\n 50850K .......... .......... .......... .......... ..........  539K\n 50900K .......... .......... .......... .......... ..........  535K\n 50950K .......... .......... .......... .......... ..........  541K\n 51000K .......... .......... .......... .......... ..........  540K\n 51050K .......... .......... .......... .......... ..........  549K\n 51100K .......... .......... .......... .......... ..........  543K\n 51150K .......... .......... .......... .......... ..........  544K\n 51200K .......... .......... .......... .......... ..........  542K\n 51250K .......... .......... .......... .......... ..........  537K\n 51300K .......... .......... .......... .......... ..........  543K\n 51350K .......... .......... .......... .......... ..........  540K\n 51400K .......... .......... .......... .......... .......... 1.30M\n 51450K .......... .......... .......... .......... ..........  890K\n 51500K .......... .......... .......... .......... ..........  547K\n 51550K .......... .......... .......... .......... ..........  540K\n 51600K .......... .......... .......... .......... ..........  547K\n 51650K .......... .......... .......... .......... ..........  534K\n 51700K .......... .......... .......... .......... ..........  548K\n 51750K .......... .......... .......... .......... ..........  548K\n 51800K .......... .......... .......... .......... .......... 1.04M\n 51850K .......... .......... .......... .......... .......... 1.07M\n 51900K .......... .......... .......... .......... ..........  545K\n 51950K .......... .......... .......... .......... ..........  543K\n 52000K .......... .......... .......... .......... ..........  545K\n 52050K .......... .......... .......... .......... ..........  545K\n 52100K .......... .......... .......... .......... .......... 56.4M\n 52150K .......... .......... .......... .......... ..........  545K\n 52200K .......... .......... .......... .......... ..........  547K\n 52250K .......... .......... .......... .......... ..........  970K\n 52300K .......... .......... .......... .......... .......... 1.19M\n 52350K .......... .......... .......... .......... ..........  542K\n 52400K .......... .......... .......... .......... ..........  546K\n 52450K .......... .......... .......... .......... ..........  928K\n 52500K .......... .......... .......... .......... .......... 1.27M\n 52550K .......... .......... .......... .......... ..........  543K\n 52600K .......... .......... .......... .......... .......... 33.2M\n 52650K .......... .......... .......... .......... ..........  555K\n 52700K .......... .......... .......... .......... ..........  549K\n 52750K .......... .......... .......... .......... .......... 1000K\n 52800K .......... .......... .......... .......... .......... 1.13M\n 52850K .......... .......... .......... .......... ..........  545K\n 52900K .......... .......... .......... .......... .......... 41.1M\n 52950K .......... .......... .......... .......... ..........  548K\n 53000K .......... .......... .......... .......... .......... 76.7M\n 53050K .......... .......... .......... .......... ..........  546K\n 53100K .......... .......... .......... .......... ..........  124M\n 53150K .......... .......... .......... .......... ..........  546K\n 53200K .......... .......... .......... .......... ..........  880K\n 53250K .......... .......... .......... .......... .......... 1.39M\n 53300K .......... .......... .......... .......... ..........  334K\n 53350K .......... .......... .......... .......... .......... 33.5K\n 53400K .......... .......... .......... .......... .......... 77.7K\n 53450K .......... .......... .......... .......... ..........  135K\n 53500K .......... .......... .......... .......... ..........  180K\n 53550K .......... .......... .......... .......... ..........  272K\n 53600K .......... .......... .......... .......... ..........  387K\n 53650K .......... .......... .......... .......... ..........  328K\n 53700K .......... .......... .......... .......... ..........  541K\n 53750K .......... .......... .......... .......... ..........  544K\n 53800K .......... .......... .......... .......... ..........  539K\n 53850K .......... .......... .......... .......... ..........  541K\n 53900K .......... .......... .......... .......... ..........  544K\n 53950K .......... .......... .......... .......... ..........  534K\n 54000K .......... .......... .......... .......... ..........  541K\n 54050K .......... .......... .......... .......... ..........  544K\n 54100K .......... .......... .......... .......... ..........  544K\n 54150K .......... .......... .......... .......... .......... 1.62M\n 54200K .......... .......... .......... .......... ..........  801K\n 54250K .......... .......... .......... .......... ..........  542K\n 54300K .......... .......... .......... .......... ..........  275K\n 54350K .......... .......... .......... .......... .......... 93.8M\n 54400K .......... .......... .......... .......... ..........  130K\n 54450K .......... .......... .......... .......... ..........  135M\n 54500K .......... .......... .......... .......... ..........  553K\n 54550K .......... .......... .......... .......... ..........  266K\n 54600K .......... .......... .......... .......... ..........  180K\n 54650K .......... .......... .......... .......... ..........  182K\n 54700K .......... .......... .......... .......... ..........  181K\n 54750K .......... .......... .......... .......... ..........  108K\n 54800K .......... .......... .......... .......... ..........  108K\n 54850K .......... .......... .......... .......... ..........  135K\n 54900K .......... .......... .......... .......... .......... 90.8K\n 54950K .......... .......... .......... .......... ..........  136K\n 55000K .......... .......... .......... .......... .......... 59.2K\n 55050K .......... .......... .......... .......... .......... 26.4K\n 55100K .......... .......... .......... .......... .......... 67.4K\n 55150K .......... .......... .......... .......... .......... 77.1K\n 55200K .......... .......... .......... .......... ..........  121K\n 55250K .......... .......... .......... .......... ..........  181K\n 55300K .......... .......... .......... .......... ..........  177K\n 55350K .......... .......... .......... .......... ..........  184K\n 55400K .......... .......... .......... .......... ..........  209K\n 55450K .......... .......... .......... .......... ..........  223K\n 55500K .......... .......... .......... .......... ..........  206K\n 55550K .......... .......... .......... .......... ..........  181K\n 55600K .......... .......... .......... .......... ..........  179K\n 55650K .......... .......... .......... .......... ..........  158K\n 55700K .......... .......... .......... .......... ..........  180K\n 55750K .......... .......... .......... .......... ..........  136K\n 55800K .......... .......... .......... .......... ..........  179K\n 55850K .......... .......... .......... .......... ..........  136K\n 55900K .......... .......... .......... .......... .......... 89.5K\n 55950K .......... .......... .......... .......... .......... 38.9K\n 56000K .......... .......... .......... .......... .......... 49.2K\n 56050K .......... .......... .......... .......... .......... 59.9K\n 56100K .......... .......... .......... .......... .......... 49.4K\n 56150K .......... .......... .......... .......... .......... 59.7K\n 56200K .......... .......... .......... .......... .......... 60.6K\n 56250K .......... .......... .......... .......... .......... 77.6K\n 56300K .......... .......... .......... .......... .......... 89.1K\n 56350K .......... .......... .......... .......... .......... 61.9K\n 56400K .......... .......... .......... .......... .......... 86.8K\n 56450K .......... .......... .......... .......... .......... 90.5K\n 56500K .......... .......... .......... .......... .......... 67.2K\n 56550K .......... .......... .......... .......... ..........  107K\n 56600K .......... .......... .......... .......... .......... 67.4K\n 56650K .......... .......... .......... .......... .......... 72.9K\n 56700K .......... .......... .......... .......... .......... 71.3K\n 56750K .......... .......... .......... .......... .......... 43.3K\n 56800K .......... .......... .......... .......... .......... 92.0K\n 56850K .......... .......... .......... .......... .......... 67.1K\n 56900K .......... .......... .......... .......... .......... 88.1K\n 56950K .......... .......... .......... .......... .......... 89.8K\n 57000K .......... .......... .......... .......... .......... 59.7K\n 57050K .......... .......... .......... .......... .......... 53.9K\n 57100K .......... .......... .......... .......... .......... 38.0K\n 57150K .......... .......... .......... .......... .......... 44.7K\n 57200K .......... .......... .......... .......... .......... 67.0K\n 57250K .......... .......... .......... .......... ..........  108K\n 57300K .......... .......... .......... .......... ..........  133K\n 57350K .......... .......... .......... .......... ..........  178K\n 57400K .......... .......... .......... .......... .......... 42.3K\n 57450K .......... .......... .......... .......... ..........  176K\n 57500K .......... .......... .......... .......... ..........  136K\n 57550K .......... .......... .......... .......... ..........  180K\n 57600K .......... .......... .......... .......... ..........  181K\n 57650K .......... .......... .......... .......... ..........  181K\n 57700K .......... .......... .......... .......... ..........  271K\n 57750K .......... .......... .......... .......... ..........  269K\n 57800K .......... .......... .......... .......... ..........  269K\n 57850K .......... .......... .......... .......... ..........  269K\n 57900K .......... .......... .......... .......... ..........  520K\n 57950K .......... .......... .......... .......... ..........  267K\n 58000K .......... .......... .......... .......... ..........  271K\n 58050K .......... .......... .......... .......... ..........  367K\n 58100K .......... .......... .......... .......... ..........  348K\n 58150K .......... .......... .......... .......... ..........  531K\n 58200K .......... .......... .......... .......... ..........  541K\n 58250K .......... .......... .......... .......... ..........  271K\n 58300K .......... .......... .......... .......... ..........  534K\n 58350K .......... .......... .......... .......... ..........  535K\n 58400K .......... .......... .......... .......... ..........  537K\n 58450K .......... .......... .......... .......... ..........  534K\n 58500K .......... .......... .......... .......... ..........  542K\n 58550K .......... .......... .......... .......... ..........  537K\n 58600K .......... .......... .......... .......... ..........  537K\n 58650K .......... .......... .......... .......... ..........  543K\n 58700K .......... .......... .......... .......... ..........  508K\n 58750K .......... .......... .......... .......... ..........  561K\n 58800K .......... .......... .......... .......... ..........  542K\n 58850K .......... .......... .......... .......... ..........  542K\n 58900K .......... .......... .......... .......... ..........  545K\n 58950K .......... .......... .......... .......... .......... 18.9M\n 59000K .......... .......... .......... .......... ..........  550K\n 59050K .......... .......... .......... .......... ..........  543K\n 59100K .......... .......... .......... .......... ..........  543K\n 59150K .......... .......... .......... .......... ..........  544K\n 59200K .......... .......... .......... .......... .......... 26.4M\n 59250K .......... .......... .......... .......... ..........  550K\n 59300K .......... .......... .......... .......... ..........  544K\n 59350K .......... .......... .......... .......... ..........  910K\n 59400K .......... .......... .......... .......... .......... 1.26M\n 59450K .......... .......... .......... .......... ..........  547K\n 59500K .......... .......... .......... .......... ..........  921K\n 59550K .......... .......... .......... .......... .......... 1.27M\n 59600K .......... .......... .......... .......... ..........  545K\n 59650K .......... .......... .......... .......... .......... 43.5M\n 59700K .......... .......... .......... .......... ..........  548K\n 59750K .......... .......... .......... .......... ..........  853K\n 59800K .......... .......... .......... .......... .......... 1.44M\n 59850K .......... .......... .......... .......... ..........  854K\n 59900K .......... .......... .......... .......... .......... 1.45M\n 59950K .......... .......... .......... .......... ..........  543K\n 60000K .......... .......... .......... .......... .......... 89.8M\n 60050K .......... .......... .......... .......... ..........  545K\n 60100K .......... .......... .......... .......... ..........  164M\n 60150K .......... .......... .......... .......... ..........  538K\n 60200K .......... .......... .......... .......... .......... 95.3M\n 60250K .......... .......... .......... .......... ..........  546K\n 60300K .......... .......... .......... .......... .......... 5.93M\n 60350K .......... .......... .......... .......... ..........  599K\n 60400K .......... .......... .......... .......... .......... 32.5M\n 60450K .......... .......... .......... .......... ..........  551K\n 60500K .......... .......... .......... .......... ..........  116M\n 60550K .......... .......... .......... .......... ..........  719K\n 60600K .......... .......... .......... .......... .......... 2.17M\n 60650K .......... .........                                   56.5M=2m36s\n\n2023-02-17 11:08:28 (390 KB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-02-17 11:08:31--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 567421 (554K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  9%  226K 2s\n    50K .......... .......... .......... .......... .......... 18%  273K 2s\n   100K .......... .......... .......... .......... .......... 27%  544K 1s\n   150K .......... .......... .......... .......... .......... 36%  336K 1s\n   200K .......... .......... .......... .......... .......... 45%  399K 1s\n   250K .......... .......... .......... .......... .......... 54%  848K 1s\n   300K .......... .......... .......... .......... .......... 63% 1.05M 1s\n   350K .......... .......... .......... .......... .......... 72%  631K 0s\n   400K .......... .......... .......... .......... .......... 81%  478K 0s\n   450K .......... .......... .......... .......... .......... 90%  635K 0s\n   500K .......... .......... .......... .......... .......... 99%  551K 0s\n   550K ....                                                  100% 18.9M=1.2s\n\n2023-02-17 11:08:33 (451 KB/s) - \u0027exp_design.tsv\u0027 saved [567421/567421]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-02-17T11:08:45.348389",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 193.36699557304382, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-02-17 11:05:51--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  272K    50K .......... .......... .......... .......... ..........  272K   100K .......... .......... .......... .......... ..........  182K   150K .......... .......... .......... .......... ..........  548K   200K .......... .......... .......... .......... ..........  271K   250K .......... .......... .......... .......... ..........  247K   300K .......... .......... .......... .......... ..........  193K   350K .......... .......... .......... .......... ..........  130K   400K .......... .......... .......... .......... ..........  142K   450K .......... .......... .......... .......... ..........  136K   500K .......... .......... .......... .......... .......... 89.9K   550K .......... .......... .......... .......... .......... 89.8K   600K .......... .......... .......... .......... .......... 77.6K   650K .......... .......... .......... .......... .......... 90.2K   700K .......... .......... .......... .......... .......... 30.9K   750K .......... .......... .......... .......... .......... 60.4K   800K .......... .......... .......... .......... .......... 98.6K   850K .......... .......... .......... .......... ..........  119K   900K .......... .......... .......... .......... ..........  155K   950K .......... .......... .......... .......... ..........  154K  1000K .......... .......... .......... .......... ..........  181K  1050K .......... .......... .......... .......... ..........  270K  1100K .......... .......... .......... .......... ..........  216K  1150K .......... .......... .......... .......... ..........  218K  1200K .......... .......... .......... .......... ..........  271K  1250K .......... .......... .......... .......... ..........  269K  1300K .......... .......... .......... .......... ..........  536K  1350K .......... .......... .......... .......... ..........  338K  1400K .......... .......... .......... .......... ..........  391K  1450K .......... .......... .......... .......... ..........  545K  1500K .......... .......... .......... .......... ..........  272K  1550K .......... .......... .......... .......... ..........  531K  1600K .......... .......... .......... .......... ..........  545K  1650K .......... .......... .......... .......... ..........  512K  1700K .......... .......... .......... .......... ..........  544K  1750K .......... .......... .......... .......... ..........  574K  1800K .......... .......... .......... .......... ..........  540K  1850K .......... .......... .......... .......... ..........  545K  1900K .......... .......... .......... .......... ..........  538K  1950K .......... .......... .......... .......... ..........  538K  2000K .......... .......... .......... .......... .......... 4.78M  2050K .......... .......... .......... .......... ..........  601K  2100K .......... .......... .......... .......... ..........  546K  2150K .......... .......... .......... .......... .......... 1.14M  2200K .......... .......... .......... .......... ..........  831K  2250K .......... .......... .......... .......... ..........  618K  2300K .......... .......... .......... .......... .......... 4.57M  2350K .......... .......... .......... .......... ..........  548K  2400K .......... .......... .......... .......... ..........  595K  2450K .......... .......... .......... .......... .......... 5.53M  2500K .......... .......... .......... .......... ..........  598K  2550K .......... .......... .......... .......... .......... 1.14M  2600K .......... .......... .......... .......... ..........  869K  2650K .......... .......... .......... .......... ..........  593K  2700K .......... .......... .......... .......... .......... 5.93M  2750K .......... .......... .......... .......... ..........  596K  2800K .......... .......... .......... .......... .......... 1.16M  2850K .......... .......... .......... .......... ..........  997K  2900K .......... .......... .......... .......... .......... 1.18M  2950K .......... .......... .......... .......... ..........  990K  3000K .......... .......... .......... .......... .......... 1.19M  3050K .......... .......... .......... .......... ..........  972K  3100K .......... .......... .......... .......... .......... 1.21M  3150K .......... .......... .......... .......... ..........  955K  3200K .......... .......... .......... .......... .......... 1.24M  3250K .......... .......... .......... .......... ..........  955K  3300K .......... .......... .......... .......... .......... 4.48M  3350K .......... .......... .......... .......... ..........  614K  3400K .......... .......... .......... .......... .......... 5.21M  3450K .......... .......... .......... .......... ..........  604K  3500K .......... .......... .......... .......... .......... 5.29M  3550K .......... .......... .......... .......... ..........  605K  3600K .......... .......... .......... .......... .......... 5.55M  3650K .......... .......... .......... .......... .......... 1.56M  3700K .......... .......... .......... .......... ..........  947K  3750K .......... .......... .......... .......... .......... 6.38M  3800K .......... .......... .......... .......... ..........  597K  3850K .......... .......... .......... .......... .......... 6.90M  3900K .......... .......... .......... .......... .......... 1.50M  3950K .......... .......... .......... .......... ..........  953K  4000K .......... .......... .......... .......... .......... 6.37M  4050K .......... .......... .......... .......... ..........  601K  4100K .......... .......... .......... .......... .......... 6.70M  4150K .......... .......... .......... .......... .......... 1.49M  4200K .......... .......... .......... .......... ..........  969K  4250K .......... .......... .......... .......... .......... 5.75M  4300K .......... .......... .......... .......... .......... 1.52M  4350K .......... .......... .......... .......... ..........  971K  4400K .......... .......... .......... .......... .......... 5.46M  4450K .......... .......... .......... .......... ..........  608K  4500K .......... .......... .......... .......... .......... 66.3M  4550K .......... .......... .......... .......... .......... 5.30M  4600K .......... .......... .......... .......... ..........  607K  4650K .......... .......... .......... .......... .......... 77.3M  4700K .......... .......... .......... .......... .......... 6.29M  4750K .......... .......... .......... .......... ..........  601K  4800K .......... .......... .......... .......... .......... 51.8M  4850K .......... .......... .......... .......... .......... 4.23M  4900K .......... .......... .......... .......... .......... 1.69M  4950K .......... .......... .......... .......... ..........  983K  5000K .......... .......... .......... .......... .......... 6.12M  5050K .......... .......... .......... .......... .......... 9.52M  5100K .......... .......... .......... .......... ..........  640K  5150K .......... .......... .......... .......... ..........  539K  5200K .......... .......... .......... .......... ..........  380M  5250K .......... .......... .......... .......... ..........  343M  5300K .......... .......... .......... .......... ..........  246M  5350K .......... .......... .......... .......... .......... 1.11M  5400K .......... .......... .......... .......... .......... 1.02M  5450K .......... .......... .......... .......... .......... 4.41M  5500K .......... .......... .......... .......... ..........  621K  5550K .......... .......... .......... .......... .......... 7.08M  5600K .......... .......... .......... .......... ..........  590K  5650K .......... .......... .......... .......... ..........  102M  5700K .......... .......... .......... .......... .......... 3.71M  5750K .......... .......... .......... .......... ..........  643K  5800K .......... .......... .......... .......... .......... 26.4M  5850K .......... .......... .......... .......... .......... 1.02M  5900K .......... .......... .......... .......... .......... 1.15M  5950K .......... .......... .......... .......... .......... 3.66M  6000K .......... .......... .......... .......... ..........  642K  6050K .......... .......... .......... .......... ..........  111M  6100K .......... .......... .......... .......... .......... 3.19M  6150K .......... .......... .......... .......... ..........  658K  6200K .......... .......... .......... .......... .......... 67.4M  6250K .......... .......... .......... .......... .......... 1002K  6300K .......... .......... .......... .......... .......... 1.18M  6350K .......... .......... .......... .......... .......... 4.76M  6400K .......... .......... .......... .......... .......... 1.22M  6450K .......... .......... .......... .......... .......... 1.19M  6500K .......... .......... .......... .......... .......... 2.96M  6550K .......... .......... .......... .......... .......... 1.40M  6600K .......... .......... .......... .......... .......... 1.22M  6650K .......... .......... .......... .......... .......... 4.02M  6700K .......... .......... .......... .......... ..........  632K  6750K .......... .......... .......... .......... .......... 25.9M  6800K .......... .......... .......... .......... .......... 3.24M  6850K .......... .......... .......... .......... ..........  669K  6900K .......... .......... .......... .......... .......... 24.2M  6950K .......... .......... .......... .......... .......... 3.19M  7000K .......... .......... .......... .......... ..........  673K  7050K .......... .......... .......... .......... .......... 50.0M  7100K .......... .......... .......... .......... .......... 2.87M  7150K .......... .......... .......... .......... ..........  667K  7200K .......... .......... .......... .......... .......... 22.2M  7250K .......... .......... .......... .......... .......... 3.44M  7300K .......... .......... .......... .......... ..........  665K  7350K .......... .......... .......... .......... .......... 53.5M  7400K .......... .......... .......... .......... .......... 3.02M  7450K .......... .......... .......... .......... .......... 1.15M  7500K .......... .......... .......... .......... .......... 1.41M  7550K .......... .......... .......... .......... .......... 3.39M  7600K .......... .......... .......... .......... ..........  664K  7650K .......... .......... .......... .......... .......... 56.5M  7700K .......... .......... .......... .......... .......... 4.65M  7750K .......... .......... .......... .......... .......... 1.02M  7800K .......... .......... .......... .......... .......... 1.45M  7850K .......... .......... .......... .......... .......... 4.88M  7900K .......... .......... .......... .......... ..........  984K  7950K .......... .......... .......... .......... .......... 1.56M  8000K .......... .......... .......... .......... .......... 3.65M  8050K .......... .......... .......... .......... .......... 1.06M  8100K .......... .......... .......... .......... .......... 1.53M  8150K .......... .......... .......... .......... .......... 14.8M  8200K .......... .......... .......... .......... .......... 3.49M  8250K .......... .......... .......... .......... ..........  672K  8300K .......... .......... .......... .......... .......... 7.16M  8350K .......... .......... .......... .......... .......... 4.50M  8400K .......... .......... .......... .......... ..........  675K  8450K .......... .......... .......... .......... .......... 79.5M  8500K .......... .......... .......... .......... .......... 2.92M  8550K .......... .......... .......... .......... .......... 1.08M  8600K .......... .......... .......... .......... .......... 1.63M  8650K .......... .......... .......... .......... .......... 2.93M  8700K .......... .......... .......... .......... .......... 1.05M  8750K .......... .......... .......... .......... .......... 1.66M  8800K .......... .......... .......... .......... .......... 6.92M  8850K .......... .......... .......... .......... .......... 4.77M  8900K .......... .......... .......... .......... ..........  667K  8950K .......... .......... .......... .......... .......... 17.1M  9000K .......... .......... .......... .......... .......... 3.64M  9050K .......... .......... .......... .......... .......... 1.05M  9100K .......... .......... .......... .......... .......... 1.70M  9150K .......... .......... .......... .......... .......... 3.05M  9200K .......... .......... .......... .......... .......... 1.04M  9250K .......... .......... .......... .......... .......... 1.71M  9300K .......... .......... .......... .......... .......... 6.99M  9350K .......... .......... .......... .......... .......... 4.95M  9400K .......... .......... .......... .......... ..........  669K  9450K .......... .......... .......... .......... ..........  310M  9500K .......... .......... .......... .......... ..........  462K  9550K .......... .......... .......... .......... .......... 88.0M  9600K .......... .......... .......... .......... ..........  185M  9650K .......... .......... .......... .......... ..........  184M  9700K .......... .......... .......... .......... ..........  660K  9750K .......... .......... .......... .......... .......... 6.83M  9800K .......... .......... .......... .......... ..........  923K  9850K .......... .......... .......... .......... .......... 1.41M  9900K .......... .......... .......... .......... .......... 4.15M  9950K .......... .......... .......... .......... ..........  625K 10000K .......... .......... .......... .......... .......... 5.01M 10050K .......... .......... .......... .......... ..........  769K 10100K .......... .......... .......... .......... .......... 2.86M 10150K .......... .......... .......... .......... .......... 3.89M 10200K .......... .......... .......... .......... ..........  624K 10250K .......... .......... .......... .......... .......... 5.14M 10300K .......... .......... .......... .......... .......... 1.02M 10350K .......... .......... .......... .......... .......... 1.30M 10400K .......... .......... .......... .......... .......... 5.95M 10450K .......... .......... .......... .......... ..........  620K 10500K .......... .......... .......... .......... .......... 4.91M 10550K .......... .......... .......... .......... .......... 1.05M 10600K .......... .......... .......... .......... .......... 1.36M 10650K .......... .......... .......... .......... .......... 4.01M 10700K .......... .......... .......... .......... ..........  626K 10750K .......... .......... .......... .......... .......... 23.4M 10800K .......... .......... .......... .......... ..........  930K 10850K .......... .......... .......... .......... .......... 1.34M 10900K .......... .......... .......... .......... .......... 4.94M 10950K .......... .......... .......... .......... .......... 1.04M 11000K .......... .......... .......... .......... .......... 1.38M 11050K .......... .......... .......... .......... .......... 4.81M 11100K .......... .......... .......... .......... ..........  617K 11150K .......... .......... .......... .......... .......... 34.1M 11200K .......... .......... .......... .......... ..........  923K 11250K .......... .......... .......... .......... .......... 1.34M 11300K .......... .......... .......... .......... .......... 5.02M 11350K .......... .......... .......... .......... .......... 1.06M 11400K .......... .......... .......... .......... .......... 1.32M 11450K .......... .......... .......... .......... .......... 5.83M 11500K .......... .......... .......... .......... ..........  604K 11550K .......... .......... .......... .......... ................... .......... .......... ..........  528K 49900K .......... .......... .......... .......... ..........  524K 49950K .......... .......... .......... .......... ..........  541K 50000K .......... .......... .......... .......... ..........  534K 50050K .......... .......... .......... .......... ..........  540K 50100K .......... .......... .......... .......... ..........  546K 50150K .......... .......... .......... .......... ..........  534K 50200K .......... .......... .......... .......... .......... 1.36M 50250K .......... .......... .......... .......... ..........  542K 50300K .......... .......... .......... .......... ..........  866K 50350K .......... .......... .......... .......... ..........  541K 50400K .......... .......... .......... .......... ..........  400K 50450K .......... .......... .......... .......... ..........  543K 50500K .......... .......... .......... .......... ..........  845K 50550K .......... .......... .......... .......... ..........  519K 50600K .......... .......... .......... .......... ..........  546K 50650K .......... .......... .......... .......... ..........  542K 50700K .......... .......... .......... .......... ..........  542K 50750K .......... .......... .......... .......... ..........  543K 50800K .......... .......... .......... .......... ..........  544K 50850K .......... .......... .......... .......... ..........  539K 50900K .......... .......... .......... .......... ..........  535K 50950K .......... .......... .......... .......... ..........  541K 51000K .......... .......... .......... .......... ..........  540K 51050K .......... .......... .......... .......... ..........  549K 51100K .......... .......... .......... .......... ..........  543K 51150K .......... .......... .......... .......... ..........  544K 51200K .......... .......... .......... .......... ..........  542K 51250K .......... .......... .......... .......... ..........  537K 51300K .......... .......... .......... .......... ..........  543K 51350K .......... .......... .......... .......... ..........  540K 51400K .......... .......... .......... .......... .......... 1.30M 51450K .......... .......... .......... .......... ..........  890K 51500K .......... .......... .......... .......... ..........  547K 51550K .......... .......... .......... .......... ..........  540K 51600K .......... .......... .......... .......... ..........  547K 51650K .......... .......... .......... .......... ..........  534K 51700K .......... .......... .......... .......... ..........  548K 51750K .......... .......... .......... .......... ..........  548K 51800K .......... .......... .......... .......... .......... 1.04M 51850K .......... .......... .......... .......... .......... 1.07M 51900K .......... .......... .......... .......... ..........  545K 51950K .......... .......... .......... .......... ..........  543K 52000K .......... .......... .......... .......... ..........  545K 52050K .......... .......... .......... .......... ..........  545K 52100K .......... .......... .......... .......... .......... 56.4M 52150K .......... .......... .......... .......... ..........  545K 52200K .......... .......... .......... .......... ..........  547K 52250K .......... .......... .......... .......... ..........  970K 52300K .......... .......... .......... .......... .......... 1.19M 52350K .......... .......... .......... .......... ..........  542K 52400K .......... .......... .......... .......... ..........  546K 52450K .......... .......... .......... .......... ..........  928K 52500K .......... .......... .......... .......... .......... 1.27M 52550K .......... .......... .......... .......... ..........  543K 52600K .......... .......... .......... .......... .......... 33.2M 52650K .......... .......... .......... .......... ..........  555K 52700K .......... .......... .......... .......... ..........  549K 52750K .......... .......... .......... .......... .......... 1000K 52800K .......... .......... .......... .......... .......... 1.13M 52850K .......... .......... .......... .......... ..........  545K 52900K .......... .......... .......... .......... .......... 41.1M 52950K .......... .......... .......... .......... ..........  548K 53000K .......... .......... .......... .......... .......... 76.7M 53050K .......... .......... .......... .......... ..........  546K 53100K .......... .......... .......... .......... ..........  124M 53150K .......... .......... .......... .......... ..........  546K 53200K .......... .......... .......... .......... ..........  880K 53250K .......... .......... .......... .......... .......... 1.39M 53300K .......... .......... .......... .......... ..........  334K 53350K .......... .......... .......... .......... .......... 33.5K 53400K .......... .......... .......... .......... .......... 77.7K 53450K .......... .......... .......... .......... ..........  135K 53500K .......... .......... .......... .......... ..........  180K 53550K .......... .......... .......... .......... ..........  272K 53600K .......... .......... .......... .......... ..........  387K 53650K .......... .......... .......... .......... ..........  328K 53700K .......... .......... .......... .......... ..........  541K 53750K .......... .......... .......... .......... ..........  544K 53800K .......... .......... .......... .......... ..........  539K 53850K .......... .......... .......... .......... ..........  541K 53900K .......... .......... .......... .......... ..........  544K 53950K .......... .......... .......... .......... ..........  534K 54000K .......... .......... .......... .......... ..........  541K 54050K .......... .......... .......... .......... ..........  544K 54100K .......... .......... .......... .......... ..........  544K 54150K .......... .......... .......... .......... .......... 1.62M 54200K .......... .......... .......... .......... ..........  801K 54250K .......... .......... .......... .......... ..........  542K 54300K .......... .......... .......... .......... ..........  275K 54350K .......... .......... .......... .......... .......... 93.8M 54400K .......... .......... .......... .......... ..........  130K 54450K .......... .......... .......... .......... ..........  135M 54500K .......... .......... .......... .......... ..........  553K 54550K .......... .......... .......... .......... ..........  266K 54600K .......... .......... .......... .......... ..........  180K 54650K .......... .......... .......... .......... ..........  182K 54700K .......... .......... .......... .......... ..........  181K 54750K .......... .......... .......... .......... ..........  108K 54800K .......... .......... .......... .......... ..........  108K 54850K .......... .......... .......... .......... ..........  135K 54900K .......... .......... .......... .......... .......... 90.8K 54950K .......... .......... .......... .......... ..........  136K 55000K .......... .......... .......... .......... .......... 59.2K 55050K .......... .......... .......... .......... .......... 26.4K 55100K .......... .......... .......... .......... .......... 67.4K 55150K .......... .......... .......... .......... .......... 77.1K 55200K .......... .......... .......... .......... ..........  121K 55250K .......... .......... .......... .......... ..........  181K 55300K .......... .......... .......... .......... ..........  177K 55350K .......... .......... .......... .......... ..........  184K 55400K .......... .......... .......... .......... ..........  209K 55450K .......... .......... .......... .......... ..........  223K 55500K .......... .......... .......... .......... ..........  206K 55550K .......... .......... .......... .......... ..........  181K 55600K .......... .......... .......... .......... ..........  179K 55650K .......... .......... .......... .......... ..........  158K 55700K .......... .......... .......... .......... ..........  180K 55750K .......... .......... .......... .......... ..........  136K 55800K .......... .......... .......... .......... ..........  179K 55850K .......... .......... .......... .......... ..........  136K 55900K .......... .......... .......... .......... .......... 89.5K 55950K .......... .......... .......... .......... .......... 38.9K 56000K .......... .......... .......... .......... .......... 49.2K 56050K .......... .......... .......... .......... .......... 59.9K 56100K .......... .......... .......... .......... .......... 49.4K 56150K .......... .......... .......... .......... .......... 59.7K 56200K .......... .......... .......... .......... .......... 60.6K 56250K .......... .......... .......... .......... .......... 77.6K 56300K .......... .......... .......... .......... .......... 89.1K 56350K .......... .......... .......... .......... .......... 61.9K 56400K .......... .......... .......... .......... .......... 86.8K 56450K .......... .......... .......... .......... .......... 90.5K 56500K .......... .......... .......... .......... .......... 67.2K 56550K .......... .......... .......... .......... ..........  107K 56600K .......... .......... .......... .......... .......... 67.4K 56650K .......... .......... .......... .......... .......... 72.9K 56700K .......... .......... .......... .......... .......... 71.3K 56750K .......... .......... .......... .......... .......... 43.3K 56800K .......... .......... .......... .......... .......... 92.0K 56850K .......... .......... .......... .......... .......... 67.1K 56900K .......... .......... .......... .......... .......... 88.1K 56950K .......... .......... .......... .......... .......... 89.8K 57000K .......... .......... .......... .......... .......... 59.7K 57050K .......... .......... .......... .......... .......... 53.9K 57100K .......... .......... .......... .......... .......... 38.0K 57150K .......... .......... .......... .......... .......... 44.7K 57200K .......... .......... .......... .......... .......... 67.0K 57250K .......... .......... .......... .......... ..........  108K 57300K .......... .......... .......... .......... ..........  133K 57350K .......... .......... .......... .......... ..........  178K 57400K .......... .......... .......... .......... .......... 42.3K 57450K .......... .......... .......... .......... ..........  176K 57500K .......... .......... .......... .......... ..........  136K 57550K .......... .......... .......... .......... ..........  180K 57600K .......... .......... .......... .......... ..........  181K 57650K .......... .......... .......... .......... ..........  181K 57700K .......... .......... .......... .......... ..........  271K 57750K .......... .......... .......... .......... ..........  269K 57800K .......... .......... .......... .......... ..........  269K 57850K .......... .......... .......... .......... ..........  269K 57900K .......... .......... .......... .......... ..........  520K 57950K .......... .......... .......... .......... ..........  267K 58000K .......... .......... .......... .......... ..........  271K 58050K .......... .......... .......... .......... ..........  367K 58100K .......... .......... .......... .......... ..........  348K 58150K .......... .......... .......... .......... ..........  531K 58200K .......... .......... .......... .......... ..........  541K 58250K .......... .......... .......... .......... ..........  271K 58300K .......... .......... .......... .......... ..........  534K 58350K .......... .......... .......... .......... ..........  535K 58400K .......... .......... .......... .......... ..........  537K 58450K .......... .......... .......... .......... ..........  534K 58500K .......... .......... .......... .......... ..........  542K 58550K .......... .......... .......... .......... ..........  537K 58600K .......... .......... .......... .......... ..........  537K 58650K .......... .......... .......... .......... ..........  543K 58700K .......... .......... .......... .......... ..........  508K 58750K .......... .......... .......... .......... ..........  561K 58800K .......... .......... .......... .......... ..........  542K 58850K .......... .......... .......... .......... ..........  542K 58900K .......... .......... .......... .......... ..........  545K 58950K .......... .......... .......... .......... .......... 18.9M 59000K .......... .......... .......... .......... ..........  550K 59050K .......... .......... .......... .......... ..........  543K 59100K .......... .......... .......... .......... ..........  543K 59150K .......... .......... .......... .......... ..........  544K 59200K .......... .......... .......... .......... .......... 26.4M 59250K .......... .......... .......... .......... ..........  550K 59300K .......... .......... .......... .......... ..........  544K 59350K .......... .......... .......... .......... ..........  910K 59400K .......... .......... .......... .......... .......... 1.26M 59450K .......... .......... .......... .......... ..........  547K 59500K .......... .......... .......... .......... ..........  921K 59550K .......... .......... .......... .......... .......... 1.27M 59600K .......... .......... .......... .......... ..........  545K 59650K .......... .......... .......... .......... .......... 43.5M 59700K .......... .......... .......... .......... ..........  548K 59750K .......... .......... .......... .......... ..........  853K 59800K .......... .......... .......... .......... .......... 1.44M 59850K .......... .......... .......... .......... ..........  854K 59900K .......... .......... .......... .......... .......... 1.45M 59950K .......... .......... .......... .......... ..........  543K 60000K .......... .......... .......... .......... .......... 89.8M 60050K .......... .......... .......... .......... ..........  545K 60100K .......... .......... .......... .......... ..........  164M 60150K .......... .......... .......... .......... ..........  538K 60200K .......... .......... .......... .......... .......... 95.3M 60250K .......... .......... .......... .......... ..........  546K 60300K .......... .......... .......... .......... .......... 5.93M 60350K .......... .......... .......... .......... ..........  599K 60400K .......... .......... .......... .......... .......... 32.5M 60450K .......... .......... .......... .......... ..........  551K 60500K .......... .......... .......... .......... ..........  116M 60550K .......... .......... .......... .......... ..........  719K 60600K .......... .......... .......... .......... .......... 2.17M 60650K .......... .........                                   56.5M=2m36s2023-02-17 11:08:28 (390 KB/s) - 'exp_quant.zip' saved [62125370]--2023-02-17 11:08:31--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 567421 (554K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  9%  226K 2s    50K .......... .......... .......... .......... .......... 18%  273K 2s   100K .......... .......... .......... .......... .......... 27%  544K 1s   150K .......... .......... .......... .......... .......... 36%  336K 1s   200K .......... .......... .......... .......... .......... 45%  399K 1s   250K .......... .......... .......... .......... .......... 54%  848K 1s   300K .......... .......... .......... .......... .......... 63% 1.05M 1s   350K .......... .......... .......... .......... .......... 72%  631K 0s   400K .......... .......... .......... .......... .......... 81%  478K 0s   450K .......... .......... .......... .......... .......... 90%  635K 0s   500K .......... .......... .......... .......... .......... 99%  551K 0s   550K ....                                                  100% 18.9M=1.2s2023-02-17 11:08:33 (451 KB/s) - 'exp_design.tsv' saved [567421/567421]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator (Test #1)" name="0" time="38.138083696365356">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_type|input_values": "1, 5, 10",  "input_type|parameter_values": "list_comma_separated_values",  "parameter_name": "perplexity" }, "job": {  "command_line": "mkdir outputs; for param in $(echo \u00271, 5, 10\u0027 | sed \u0027s/,/ /g\u0027); do echo $param \u003e outputs/\u0027perplexity\u0027_$param\\.txt; done",  "command_version": null,  "create_time": "2023-02-17T11:06:11.133829",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vg9qm",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "9f88e8371a73d085",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631994.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:06:34"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631994.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:06:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "parameter_iteration": {    "id": "d6cd5fa7e561974b",    "src": "hdca"   }  },  "outputs": {   "__new_primary_file_parameter_iteration|perplexity_10__": {    "id": "c6f636392d7072dd",    "src": "hda",    "uuid": "c143ca3b-b926-4b95-b38f-05f0d9c95b41"   },   "__new_primary_file_parameter_iteration|perplexity_1__": {    "id": "c39ffd462d6dc15d",    "src": "hda",    "uuid": "f2592f9b-2d78-4b57-b737-269b46c72b63"   },   "__new_primary_file_parameter_iteration|perplexity_5__": {    "id": "9cd6bbdb655d0465",    "src": "hda",    "uuid": "c9621444-f27d-427f-856f-9e8464fe02a7"   }  },  "params": {   "__input_ext": "\"data\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input_type": "{\"__current_case__\": 0, \"input_values\": \"1, 5, 10\", \"parameter_values\": \"list_comma_separated_values\"}",   "parameter_name": "\"perplexity\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator/0.0.1+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-17T11:06:48.626284",  "user_email": "tests@fake.org" }, "output_problems": [  "Collection element perplexity_1 of collection parameter_iteration: Test output file (perplexity_1.txt) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 38.138083696365356, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator", "tool_version": "0.0.1+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.0795888900756836">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.0795888900756836, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.4.3+galaxy10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.09265637397766113">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.09265637397766113, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.6.0+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert (Test #1)" name="0" time="0.08894133567810059">
        
            <error type="error" message="Input staging problem: Test input file (input.loom) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (input.loom) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.08894133567810059, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert", "tool_version": "0.0.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #1)" name="0" time="55.49412727355957">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    louvain[uns]-    iroot-    neighbors-    louvain[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #2)" name="1" time="30.240623712539673">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    leiden[uns]-    iroot-    neighbors-    leiden[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #3)" name="2" time="29.65385866165161">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #4)" name="3" time="27.95446753501892">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #5)" name="4" time="28.899892330169678">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    diffmap_evals[obsm]-    X_pca-    X_diffmap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #6)" name="5" time="30.74189567565918">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_tsne
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: Consider installing the package MulticoreTSNE (https://github.com/DmitryUlyanov/Multicore-TSNE). Even for n_jobs=1 this speeds up the computation considerably and might yield better converged results.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #7)" name="6" time="39.099172592163086">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    umap[obsm]-    X_pca-    X_umap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #8)" name="7" time="29.162572383880615">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    draw_graph[obsm]-    X_pca-    X_draw_graph_fr[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Package 'fa2' is not installed, falling back to layout 'fr'.To use the faster and better ForceAtlas2 layout, install package 'fa2' (`pip install fa2`).
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #9)" name="8" time="29.991222620010376">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    paga-    paul15_clusters_sizes[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #10)" name="9" time="29.413718938827515">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    dpt_groups-    dpt_order-    dpt_order_indices[uns]-    diffmap_evals-    iroot-    neighbors-    dpt_changepoints-    dpt_grouptips[obsm]-    X_diffmap-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #1)" name="0" time="8.407464265823364">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 8.407464265823364, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter", "tool_version": "1.7.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #2)" name="1" time="57.23329472541809">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_genes[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #3)" name="2" time="50.54129648208618">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #4)" name="3" time="29.95194935798645">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs[var]-    highly_variable-    means-    dispersions-    dispersions_norm[uns]-    hvg
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'blobs' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #5)" name="4" time="28.87615132331848">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    highly_variable-    means-    dispersions-    dispersions_norm[uns]-    cell_type_colors-    highlights-    iroot-    hvg
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #6)" name="5" time="30.5588436126709">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    320 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #7)" name="6" time="30.556476831436157">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    10 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #8)" name="7" time="65.63069868087769">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1000
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #1)" name="0" time="40.23674726486206">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1000[obs]-    n_genes_by_counts-    log1p_n_genes_by_counts-    total_counts-    log1p_total_counts-    pct_counts_in_top_50_genes-    pct_counts_in_top_100_genes-    pct_counts_in_top_200_genes-    pct_counts_in_top_500_genes-    total_counts_mito-    log1p_total_counts_mito-    pct_counts_mito-    total_counts_negative-    log1p_total_counts_negative-    pct_counts_negative[var]-    mito-    negative-    n_cells_by_counts-    mean_counts-    log1p_mean_counts-    pct_dropout_by_counts-    total_counts-    log1p_total_counts
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #2)" name="1" time="43.10325598716736">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #11)" name="10" time="31.62120246887207">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    mean-    std[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #12)" name="11" time="31.83101797103882">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #3)" name="2" time="47.875309228897095">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #4)" name="3" time="33.19761395454407">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    score[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #5)" name="4" time="34.168277978897095">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    S_score-    G2M_score-    phase[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'phase' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #6)" name="5" time="32.94906949996948">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    rank_genes_groups
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #7)" name="6" time="65.23865127563477">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #8)" name="7" time="32.19150424003601">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #9)" name="8" time="30.7086923122406">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #10)" name="9" time="31.568487405776978">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    mean-    std[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #1)" name="0" time="32.256070137023926">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #2)" name="1" time="31.82034158706665">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #3)" name="2" time="33.40467286109924">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #4)" name="3" time="32.332295179367065">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some cells have total count of genes equal to zero
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="66.5780303478241">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        basis='umap',    color=['HES4'],    use_raw=True,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='inferno',    palette='inferno',    frameon=True,                    size=1.0,        )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="62.41893291473389">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        x='EKLF',    y='Cebpa',    use_raw=False,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='',    palette='bwr',    frameon=False,        title='A title',                size=1.0,        )anndata.h5adscatter.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file scatter.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="29.321664333343506">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca(        adata,    save='.pdf',    show=False,            color=['CD3D', 'CD79A'],        use_raw=False,    sort_order=True,                components=['1,2', '1,3'],                projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=2,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adpca.pdf
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="29.701884984970093">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_loadings(        adata,    save='.png',    show=False,        components=[1, 2, 3])anndata.h5adpca_loadings.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="32.69852113723755">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_variance_ratio(        adata,    save='.png',    show=False,        n_pcs=5,    log=False)anndata.h5adpca_variance_ratio.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="31.998337745666504">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_overview(        adata,    save='.png',    show=False,                use_raw=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adpca.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="29.84700584411621">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.tsne(        adata,    save='.png',    show=False,                use_raw=False,        edges=False,            arrows=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adtsne.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file tsne.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="33.043561935424805">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.umap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,        edges=True,    edges_width=0.1,    edges_color='AliceBlue',            arrows=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="30.93096685409546">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.diffmap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addiffmap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="31.399857759475708">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.draw_graph(        adata,    save='.png',    show=False,                use_raw=False,    edges=True,    edges_width=0.1,    edges_color='Crimson',    arrows=False,    sort_order=False,                            projection='2d',    legend_loc='right margin',                legend_fontweight='normal',                palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addraw_graph_fr.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="41.389100074768066">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dpt_timeseries(        adata,    save='.png',    show=False,        color_map='viridis',    as_heatmap=True)anndata.h5addpt_timeseries.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="31.16099739074707">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "a1d483909eb37c4f",   "src": "hda"  },  "format": "png",  "method|fontsize": "8",  "method|method": "pl.rank_genes_groups",  "method|n_genes": "10",  "method|ncols": "4",  "method|sharey": true }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/c/4/f/dataset_c4fad1a3-3a8c-444b-b576-bb555cccb38c.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/188/configs/tmpcg9rj89k\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/188/configs/tmpcg9rj89k\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T11:03:20.340184",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-ndkqt",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "b469320ebf0719e4",  "inputs": {   "adata": {    "id": "a1d483909eb37c4f",    "src": "hda",    "uuid": "c4fad1a3-3a8c-444b-b576-bb555cccb38c"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631806.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:03:26"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631802.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:03:22"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "3b1756f736c917c6",    "src": "hda",    "uuid": "03b1c215-477b-43ed-b7c2-bd16d8d844cc"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 22, \"fontsize\": \"8\", \"gene_symbols\": \"\", \"groups\": \"\", \"method\": \"pl.rank_genes_groups\", \"n_genes\": \"10\", \"ncols\": \"4\", \"sharey\": \"true\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/188/configs/tmpcg9rj89k\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    fontsize=8,\n    ncols=4,\n    sharey=True)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/188/configs/tmpcg9rj89k\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    fontsize=8,\n    ncols=4,\n    sharey=True)\n\n",  "traceback": null,  "update_time": "2023-02-17T11:03:36.583766",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/188/configs/tmpcg9rj89k\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/188/configs/tmpcg9rj89k\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 19, "time_seconds": 31.16099739074707, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups(        adata,    save='.png',    show=False,                n_genes=10,    fontsize=8,    ncols=4,    sharey=True)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/188/configs/tmpcg9rj89k", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="32.2190637588501">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.heatmap(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    figsize=(10, 3),            swap_axes=True,    show_gene_labels=False,    cmap='YlGnBu',    origin='upper'        )anndata.h5adheatmap.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="33.91283082962036">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "13c4aea7d6d31bf4",   "src": "hda"  },  "format": "png",  "method|genes|n_genes": "10",  "method|genes|select": "n_genes",  "method|method": "pl.rank_genes_groups_violin",  "method|split": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/a/a/dataset_2aab9588-8fdb-46a9-a25e-32c2b2a08177.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/191/configs/tmpx27655mo\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/191/configs/tmpx27655mo\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-02-17T11:03:51.228854",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-m2sgs",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "98fbbb557508fec2",  "inputs": {   "adata": {    "id": "13c4aea7d6d31bf4",    "src": "hda",    "uuid": "2aab9588-8fdb-46a9-a25e-32c2b2a08177"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631842.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:04:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631838.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:03:58"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "collection_png": {    "id": "d14a0e9ddca4b123",    "src": "hdca"   }  },  "outputs": {},  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 23, \"gene_symbols\": \"\", \"genes\": {\"__current_case__\": 0, \"n_genes\": \"10\", \"select\": \"n_genes\"}, \"groups\": \"\", \"method\": \"pl.rank_genes_groups_violin\", \"split\": \"true\", \"use_raw\": \"false\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/191/configs/tmpx27655mo\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    use_raw=False,\n    split=True,\n    strip=True,\n    jitter=True,\n    size=1.0,\n    scale=\u0027width\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/191/configs/tmpx27655mo\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    use_raw=False,\n    split=True,\n    strip=True,\n    jitter=True,\n    size=1.0,\n    scale=\u0027width\u0027)\n\n",  "traceback": null,  "update_time": "2023-02-17T11:04:10.544527",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/191/configs/tmpx27655mo\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Output collection \u0027collection_png\u0027: failed to find identifier \u0027cell_type_Ery\u0027 in the tool generated elements []" ], "status": "failure", "test_index": 20, "time_seconds": 33.91283082962036, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_violin(        adata,    save='.png',    show=False,                n_genes=10,    use_raw=False,    split=True,    strip=True,    jitter=True,    size=1.0,    scale='width')
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/191/configs/tmpx27655mo", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="30.09907555580139">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "13c4aea7d6d31bf4",   "src": "hda"  },  "format": "png",  "method|color_map": "viridis",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_scatter|edgecolors": "face",  "method|matplotlib_pyplot_scatter|linewidths": "0",  "method|method": "pl.rank_genes_groups_dotplot",  "method|n_genes": "10",  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/a/a/dataset_2aab9588-8fdb-46a9-a25e-32c2b2a08177.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/192/configs/tmpdu6ut75d\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/192/configs/tmpdu6ut75d\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T11:03:56.544323",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-vthfw",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "7a333a9d4ac3fdb3",  "inputs": {   "adata": {    "id": "13c4aea7d6d31bf4",    "src": "hda",    "uuid": "2aab9588-8fdb-46a9-a25e-32c2b2a08177"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631843.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:04:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631839.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:03:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "d390e16cdb2049f0",    "src": "hda",    "uuid": "f53d18ef-e8a5-466f-bd75-26a01b0aea53"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 24, \"color_map\": \"viridis\", \"dendrogram\": \"false\", \"dot_max\": \"\", \"dot_min\": \"\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_dotplot\", \"n_genes\": \"10\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/192/configs/tmpdu6ut75d\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/192/configs/tmpdu6ut75d\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-17T11:04:12.440326",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/192/configs/tmpdu6ut75d\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/192/configs/tmpdu6ut75d\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 21, "time_seconds": 30.09907555580139, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_dotplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            color_map='viridis',        linewidths=0.0,    edgecolors='face'            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/192/configs/tmpdu6ut75d", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="30.833946228027344">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "81cecba60f58c867",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_imshow|cmap": "viridis",  "method|matplotlib_pyplot_imshow|interpolation": "None",  "method|matplotlib_pyplot_imshow|origin": "upper",  "method|method": "pl.rank_genes_groups_heatmap",  "method|n_genes": "10",  "method|show_gene_labels": false,  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/6/4/dataset_6646607e-26ba-4acb-b616-a7a10be6d377.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/195/configs/tmpa69q5440\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/195/configs/tmpa69q5440\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T11:04:25.606731",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-bwnwx",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "375b701bfa85a4d6",  "inputs": {   "adata": {    "id": "81cecba60f58c867",    "src": "hda",    "uuid": "6646607e-26ba-4acb-b616-a7a10be6d377"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631873.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:04:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631869.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:04:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "06bafd5705ded7e3",    "src": "hda",    "uuid": "d829df97-bd2c-43df-a735-67a262cfb221"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 25, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_imshow\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"interpolation\": \"None\", \"origin\": \"upper\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_heatmap\", \"n_genes\": \"10\", \"show_gene_labels\": \"false\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpa69q5440\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_heatmap(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    show_gene_labels=False,\n    cmap=\u0027viridis\u0027,\n    origin=\u0027upper\u0027\n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpa69q5440\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_heatmap(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    show_gene_labels=False,\n    cmap=\u0027viridis\u0027,\n    origin=\u0027upper\u0027\n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-17T11:04:41.571856",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpa69q5440\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpa69q5440\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 22, "time_seconds": 30.833946228027344, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_heatmap(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            swap_axes=False,    show_gene_labels=False,    cmap='viridis',    origin='upper'        )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/195/configs/tmpa69q5440", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="31.152640342712402">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "81cecba60f58c867",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_pcolor|cmap": "viridis",  "method|matplotlib_pyplot_pcolor|edgecolors": "face",  "method|matplotlib_pyplot_pcolor|snap": false,  "method|method": "pl.rank_genes_groups_matrixplot",  "method|n_genes": "10",  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/6/4/dataset_6646607e-26ba-4acb-b616-a7a10be6d377.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/196/configs/tmpmavu9pan\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/196/configs/tmpmavu9pan\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T11:04:27.451365",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-b4pdp",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "a0bf8b4e624dde6b",  "inputs": {   "adata": {    "id": "81cecba60f58c867",    "src": "hda",    "uuid": "6646607e-26ba-4acb-b616-a7a10be6d377"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631873.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:04:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631870.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:04:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "350d6c09905ff175",    "src": "hda",    "uuid": "79c2db1d-f578-4e78-9679-19dab65e9995"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 26, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_pcolor\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"edgecolors\": \"face\", \"snap\": \"false\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_matrixplot\", \"n_genes\": \"10\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/196/configs/tmpmavu9pan\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/196/configs/tmpmavu9pan\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-17T11:04:43.629073",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/196/configs/tmpmavu9pan\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/196/configs/tmpmavu9pan\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 23, "time_seconds": 31.152640342712402, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_matrixplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            swap_axes=False,    cmap='viridis',    edgecolors='face',    snap=False        )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/196/configs/tmpmavu9pan", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="31.572196006774902">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "cda7d2acde28026c",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|log": false,  "method|method": "pl.rank_genes_groups_stacked_violin",  "method|n_genes": "10",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/f/f/6/dataset_ff6ea9c1-b208-4857-9be1-f225ee0abb9c.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/199/configs/tmpil46m08m\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/199/configs/tmpil46m08m\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T11:04:57.871147",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-4bp87",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "e4fb0d31563c8fbe",  "inputs": {   "adata": {    "id": "cda7d2acde28026c",    "src": "hda",    "uuid": "ff6ea9c1-b208-4857-9be1-f225ee0abb9c"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631903.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:05:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631899.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:04:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "4396485342fc140f",    "src": "hda",    "uuid": "ca09f567-a31a-4a2f-9e0f-eaaf27f072bf"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 27, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.rank_genes_groups_stacked_violin\", \"n_genes\": \"10\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/199/configs/tmpil46m08m\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/199/configs/tmpil46m08m\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-17T11:05:13.104795",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/199/configs/tmpil46m08m\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/199/configs/tmpil46m08m\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 24, "time_seconds": 31.572196006774902, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_stacked_violin(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,        stripplot=True,    jitter=True,    size=1.0,        scale='width',    row_palette='muted',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/199/configs/tmpil46m08m", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="33.66849231719971">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dotplot(        adata,    save='.png',    show=False,            var_names=['CD79A', 'MS4A1', 'CD8A', 'CD8B', 'LYZ', 'GNLY', 'NKG7', 'RP3-467N11.1', 'FCGR3A', 'FCER1A', 'CST3', 'POU2AF1', 'LINC00402'],    groupby='louvain',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    var_group_positions=[(0, 1), (11, 12)],    var_group_labels=['B cells', 'dendritic'],            color_map='hot',    dot_max=0.7,    dot_min=0.1,        linewidths=0.0,    edgecolors='face'            )anndata.h5addotplot.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="30.466874599456787">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "7d0242b198c6db82",   "src": "hda"  },  "format": "png",  "method|key_variables|keys": "n_genes, percent_mito, n_counts",  "method|key_variables|type": "custom",  "method|log": false,  "method|method": "pl.violin",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|use_raw": false,  "method|violin_plot|multi_panel|height": "20",  "method|violin_plot|multi_panel|multi_panel": "True",  "method|violin_plot|multi_panel|width": "20",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/0/c/f/dataset_0cff0f5b-f9e8-4330-a7e9-efe35fb8e3ec.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmp7h8ypp_c\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/159/configs/tmp7h8ypp_c\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T10:59:39.163572",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6jptz",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "ec2af57a8bcf2236",  "inputs": {   "adata": {    "id": "7d0242b198c6db82",    "src": "hda",    "uuid": "0cff0f5b-f9e8-4330-a7e9-efe35fb8e3ec"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631585.0000000",    "title": "Job End Time",    "value": "2023-02-17 10:59:45"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631580.0000000",    "title": "Job Start Time",    "value": "2023-02-17 10:59:40"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "d11719f1a1dcab7c",    "src": "hda",    "uuid": "39f227e6-d82e-471d-b324-799e955e148d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 3, \"groupby\": \"\", \"key_variables\": {\"__current_case__\": 2, \"keys\": \"n_genes, percent_mito, n_counts\", \"type\": \"custom\"}, \"log\": \"false\", \"method\": \"pl.violin\", \"rotation\": \"\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"use_raw\": \"false\", \"violin_plot\": {\"multi_panel\": {\"__current_case__\": 0, \"height\": \"20\", \"multi_panel\": \"True\", \"width\": \"20\"}, \"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}, \"xlabel\": \"\"}"  },  "state": "ok",  "stderr": "WARNING: saving figure to file violin.png\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    keys=[\u0027n_genes\u0027, \u0027percent_mito\u0027, \u0027n_counts\u0027],\n    log=False,\n    use_raw=False,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    multi_panel=True, \n    figsize=(20, 20),\n    scale=\u0027width\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    )\n\nanndata.h5ad\nviolin.png\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "WARNING: saving figure to file violin.png\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    keys=[\u0027n_genes\u0027, \u0027percent_mito\u0027, \u0027n_counts\u0027],\n    log=False,\n    use_raw=False,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    multi_panel=True, \n    figsize=(20, 20),\n    scale=\u0027width\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    )\n\nanndata.h5ad\nviolin.png\n",  "traceback": null,  "update_time": "2023-02-17T10:59:55.406352",  "user_email": "tests@fake.org" }, "output_problems": [  "Output out_png:  different than expected, difference (using sim_size):\n( /tmp/tmpcah5shjlpl.violin.pbmc68k_reduced_custom.png v. /tmp/tmp0vyd7u7mpl.violin.pbmc68k_reduced_custom.png )\nFiles /tmp/tmpcah5shjlpl.violin.pbmc68k_reduced_custom.png=90967b but /tmp/tmp0vyd7u7mpl.violin.pbmc68k_reduced_custom.png=54320b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 4, "time_seconds": 30.466874599456787, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.violin(        adata,    save='.png',    show=False,        keys=['n_genes', 'percent_mito', 'n_counts'],    log=False,    use_raw=False,        stripplot=True,    jitter=True,    size=1.0,        multi_panel=True,     figsize=(20, 20),    scale='width',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,    )anndata.h5adviolin.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="28.16737651824951">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "c09695e70462c8ae",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|figsize|test": "no",  "method|groupby": "cell_type",  "method|log": false,  "method|method": "pl.stacked_violin",  "method|num_categories": "7",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|var_names|type": "all",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/3/5/dataset_63528ecd-74f6-4e8d-a59d-723accf1f6ae.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/160/configs/tmpo6x49pm4\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/160/configs/tmpo6x49pm4\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-02-17T10:59:41.249862",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-d2m84",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "7d33996773421875",  "inputs": {   "adata": {    "id": "c09695e70462c8ae",    "src": "hda",    "uuid": "63528ecd-74f6-4e8d-a59d-723accf1f6ae"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "f445242a04f33d22",    "src": "hda",    "uuid": "349266c8-3f68-4c5a-879f-4d6180678604"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 4, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groupby\": \"cell_type\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.stacked_violin\", \"num_categories\": \"7\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"var_names\": {\"__current_case__\": 0, \"type\": \"all\"}, \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-17T10:59:54.981480",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Standard output of the job different than expected\nExpected text matching expression \u0027sc.pl.stacked_violin\u0027 in output (\u0027\u0027)" ], "status": "failure", "test_index": 5, "time_seconds": 28.16737651824951, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="32.05715489387512">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.matrixplot(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,    cmap='viridis',    edgecolors='face',    snap=False        )anndata.h5admatrixplot.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="33.43059825897217">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.clustermap(    adata=adata,    show=False,    use_raw=False,    method='single',    metric='euclidean',    col_cluster=False,    row_cluster=False).savefig(fname="output.png")anndata.h5adoutput.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="30.3466477394104">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "0ce7e80894b9be42",   "src": "hda"  },  "format": "png",  "method|gene_symbols": "means",  "method|method": "pl.highest_expr_genes",  "method|n_top": "30",  "method|setseaborn_boxplot|color": "blue",  "method|setseaborn_boxplot|saturation": "0.5" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/0/9/dataset_d0935a27-23df-4145-b81e-70e4fc068a6b.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/167/configs/tmpan6mvh2e\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/167/configs/tmpan6mvh2e\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T11:00:42.341367",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-djcrx",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "676afa03edae8ade",  "inputs": {   "adata": {    "id": "0ce7e80894b9be42",    "src": "hda",    "uuid": "d0935a27-23df-4145-b81e-70e4fc068a6b"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631647.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:00:47"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631644.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:00:44"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "b4a4c0b9db628417",    "src": "hda",    "uuid": "3687e51a-88d3-47ad-9bad-8f5308f71a6b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 8, \"gene_symbols\": \"means\", \"method\": \"pl.highest_expr_genes\", \"n_top\": \"30\", \"setseaborn_boxplot\": {\"color\": \"blue\", \"palette\": null, \"saturation\": \"0.5\"}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/167/configs/tmpan6mvh2e\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/167/configs/tmpan6mvh2e\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "traceback": null,  "update_time": "2023-02-17T11:00:57.677952",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/167/configs/tmpan6mvh2e\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/167/configs/tmpan6mvh2e\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 8, "time_seconds": 30.3466477394104, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highest_expr_genes(        adata,    save='.png',    show=False,        n_top=30,    gene_symbols='means',    color='blue',    saturation=0.5)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/167/configs/tmpan6mvh2e", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="29.607892990112305">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "d9294f76b35b6b8b",   "src": "hda"  },  "format": "png",  "method|highly_variable_genes": true,  "method|log": false,  "method|method": "pl.highly_variable_genes" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/5/5/e/dataset_55ee9b10-7aee-4522-ace6-3727168f7352.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/168/configs/tmp8pwp1rn8\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/168/configs/tmp8pwp1rn8\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-17T11:00:43.508373",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-fhchm",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "6d1579664b08e52c",  "inputs": {   "adata": {    "id": "d9294f76b35b6b8b",    "src": "hda",    "uuid": "55ee9b10-7aee-4522-ace6-3727168f7352"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676631649.0000000",    "title": "Job End Time",    "value": "2023-02-17 11:00:49"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676631645.0000000",    "title": "Job Start Time",    "value": "2023-02-17 11:00:45"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "585b53d46298f1a0",    "src": "hda",    "uuid": "d5547575-1ca0-4ead-8cbc-47baaacfe580"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 7, \"highly_variable_genes\": \"true\", \"log\": \"false\", \"method\": \"pl.highly_variable_genes\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/168/configs/tmp8pwp1rn8\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/168/configs/tmp8pwp1rn8\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "traceback": null,  "update_time": "2023-02-17T11:00:58.612815",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/168/configs/tmp8pwp1rn8\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/168/configs/tmp8pwp1rn8\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 9, "time_seconds": 29.607892990112305, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highly_variable_genes(    adata_or_result=adata,    log=False,    save='.png',    show=False,    highly_variable_genes=True)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/168/configs/tmp8pwp1rn8", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="32.34220838546753">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="32.683390617370605">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file scatter.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="28.62256956100464">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="31.987552642822266">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="30.785242319107056">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file highest_expr_genes.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="29.251405477523804">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file filter_genes_dispersion.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="32.06253099441528">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="33.858802795410156">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="30.286587715148926">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="31.6446475982666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="26.852181434631348">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "54b388fbbeda65c2",   "src": "hda"  },  "advanced_common|show_log": true,  "format": "png",  "method|arrows": false,  "method|edges|edges": "False",  "method|matplotlib_pyplot_scatter|edgecolors": "face",  "method|matplotlib_pyplot_scatter|linewidths": "0",  "method|method": "pl.tsne",  "method|plot|frameon": true,  "method|plot|hspace": "0.25",  "method|plot|legend_fontsize": "1",  "method|plot|legend_fontweight": "normal",  "method|plot|legend_loc": "right margin",  "method|plot|ncols": "4",  "method|plot|palette": "viridis",  "method|plot|projection": "2d",  "method|plot|size": "1",  "method|plot|wspace": "0.1",  "method|sort_order": true,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/b/f/dataset_2bf18c12-d17b-4446-976f-f7e8fa0015ed.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/130/configs/tmpk1h0a84m\u0027 \u003e \u0027/galaxy/server/database/objects/0/c/c/dataset_0ccde95a-84a4-49ba-8d4b-2540181026c6.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/130/configs/tmpk1h0a84m\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/0/c/c/dataset_0ccde95a-84a4-49ba-8d4b-2540181026c6.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/0/c/c/dataset_0ccde95a-84a4-49ba-8d4b-2540181026c6.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": null,  "create_time": "2023-02-17T10:54:55.479880",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-fv5c8",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "6e5ef7f844a6838e",  "inputs": {   "adata": {    "id": "54b388fbbeda65c2",    "src": "hda",    "uuid": "2bf18c12-d17b-4446-976f-f7e8fa0015ed"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "hidden_output": {    "id": "0a2f5be1799da680",    "src": "hda",    "uuid": "0ccde95a-84a4-49ba-8d4b-2540181026c6"   },   "out_png": {    "id": "a24e7a904ad51373",    "src": "hda",    "uuid": "e813898a-596d-4dd6-bee6-8aee451ba8f3"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 13, \"arrows\": \"false\", \"color\": \"\", \"edges\": {\"__current_case__\": 1, \"edges\": \"False\"}, \"groups\": \"\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.tsne\", \"plot\": {\"color_map\": \"None\", \"components\": [], \"frameon\": \"true\", \"hspace\": \"0.25\", \"legend_fontsize\": \"1\", \"legend_fontweight\": \"normal\", \"legend_loc\": \"right margin\", \"ncols\": \"4\", \"palette\": \"viridis\", \"projection\": \"2d\", \"size\": \"1.0\", \"title\": \"\", \"wspace\": \"0.1\"}, \"sort_order\": \"true\", \"use_raw\": \"false\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-17T10:55:05.768359",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 18, "time_seconds": 26.852181434631348, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.7.1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="32.32644772529602">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="31.994299173355103">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="31.37884259223938">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="30.902849912643433">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="47.58762001991272">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="29.852479219436646">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file rank_genes_groups_cell_type.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="43.84862446784973">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #26)" name="25" time="34.69178605079651">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #27)" name="26" time="33.080480337142944">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #28)" name="27" time="36.40248894691467">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="31.119590282440186">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="33.00813341140747">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="28.82900619506836">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="32.18227744102478">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="30.42268443107605">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="29.337680101394653">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="31.893290281295776">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #1)" name="0" time="30.192386388778687">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #2)" name="1" time="28.441012859344482">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'blobs' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="72.723806142807">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "After filtering out unexpressed features:  40 cells and 1733 features."[1] "After filtering out low library counts:  39 cells and 1733 features."[1] "After filtering out low expressed:  39 cells and 1733 features."[1] "After filtering out high MT gene counts:  34 cells and 1733 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filter
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="65.92501306533813">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "Ending with 40 cells and 2000 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: sgeostatRegistered S3 method overwritten by 'GGally':  method from     +.gg   ggplot2sROC 0.1-2 loaded
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="10.361984491348267">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.361984491348267, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter", "tool_version": "1.22.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="111.41379904747009">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "filter_type|filter_type_selector": "pca",  "input_loom": {   "id": "51070f506692cbae",   "src": "hda"  } }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/652923ce664f/scater_filter/scater-pca-filter.R\u0027 -i \u0027/galaxy/server/database/objects/f/b/f/dataset_fbf3a5d7-839a-4437-a2fe-8bb1a1576cc5.dat\u0027 -o \u0027/galaxy/server/database/objects/6/9/9/dataset_69946004-8861-46bd-852f-3d9624210818.dat\u0027",  "command_version": null,  "create_time": "2023-02-17T10:33:22.841921",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-lfds5",  "galaxy_version": "22.05",  "history_id": "d14a0e9ddca4b123",  "id": "7bf4c4b4a5f77d1d",  "inputs": {   "input_loom": {    "id": "51070f506692cbae",    "src": "hda",    "uuid": "fbf3a5d7-839a-4437-a2fe-8bb1a1576cc5"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_loom": {    "id": "7bf4c4b4a5f77d1d",    "src": "hda",    "uuid": "69946004-8861-46bd-852f-3d9624210818"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_type": "{\"__current_case__\": 1, \"filter_type_selector\": \"pca\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-17T10:35:01.333068",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 111.41379904747009, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/scater_normalize (Test #1)" name="0" time="67.3937075138092">
        
            
            <system-out><![CDATA[
            [1] "Normalising...."[1] "Finished normalising"[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factors
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="82.47794580459595">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="35.63677167892456">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 6 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="66.9635238647461">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="46.726868867874146">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_exprs_freq/scater_plot_exprs_freq (Test #1)" name="0" time="60.07980728149414">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterSaving 7 x 7 in image`geom_smooth()` using method = 'loess' and formula 'y ~ x'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="38.55990433692932">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factorsWarning message:In sweep(mat, MARGIN = 2, STATS = sqrt(vars), FUN = "/", check.margin = FALSE) :  'check.margin' is ignored when 'x' is a DelayedArray object or  derivativeSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="71.85687851905823">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE,  :  You're computing too large a percentage of total singular values, use a standard svd instead.Warning message:In check_numbers(k = k, nu = nu, nv = nv, limit = min(dim(x)) -  :  more singular values/vectors requested than availableSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne (Test #1)" name="0" time="115.05693817138672">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
</testsuite>