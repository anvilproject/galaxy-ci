<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="159"
           errors="14"
           failures="35"
           skip="0">
    
    <testcase classname="anndata_ops (Test #1)" name="0" time="0.1055288314819336">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.1055288314819336, "tool_id": "anndata_ops", "tool_version": "1.6.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_ops (Test #1)" name="0" time="0.10045695304870605">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10045695304870605, "tool_id": "anndata_ops", "tool_version": "1.6.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_counts (Test #1)" name="0" time="34.3451189994812">
        
            
            <system-out><![CDATA[
            Number of samples: 3Number of SNPs:    11Number of INDELs:  3Number of MNPs:    0Number of others:  0Number of sites:   15
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #1)" name="0" time="28.779020309448242">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "0d6ee0e94e1d4bce",   "src": "hda"  },  "output_type": "v",  "sec_filter|max_ac": "1",  "sec_filter|min_ac": "1",  "sec_filter|types": "snps",  "sec_subset|samples": "NA00002" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/8/4/b/dataset_84ba8f97-22c0-4587-b98e-842415f7bc9c.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026            bcftools view     --samples \u0027NA00002\u0027     --min-ac 1 --max-ac 1 --types \"snps\"                    --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  \u003e \u0027/galaxy/server/database/objects/c/d/7/dataset_cd7e6a53-a689-4b68-a8f0-e0ada2c7e793.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T07:48:16.287930",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-9d89c",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "266a96c980d6ef30",  "inputs": {   "input_file": {    "id": "0d6ee0e94e1d4bce",    "src": "hda",    "uuid": "84ba8f97-22c0-4587-b98e-842415f7bc9c"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "7a493f8919a2936e",    "src": "hda",    "uuid": "cd7e6a53-a689-4b68-a8f0-e0ada2c7e793"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": \"__none__\", \"types\": \"snps\", \"uncalled\": null}",   "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}",   "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}",   "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:48:28.626696",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 28.779020309448242, "tool_id": "bcftools_view", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #2)" name="1" time="27.06636643409729">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #11)" name="10" time="26.3706693649292">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #3)" name="2" time="26.27293825149536">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #4)" name="3" time="26.451183557510376">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #5)" name="4" time="27.506461143493652">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #6)" name="5" time="27.234462022781372">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #7)" name="6" time="25.652860403060913">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #8)" name="7" time="26.3058762550354">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #9)" name="8" time="28.334670305252075">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_view (Test #10)" name="9" time="25.36773943901062">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #1)" name="0" time="35.80739974975586">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.03 s (8604 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #1)" name="0" time="28.00111436843872">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (6838 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #2)" name="1" time="28.244523286819458">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --output=out1.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim bwa-mem-fastq1_fq_gz.fq.gzProcessing single-end reads on 5 cores ...Finished in 0.03 s (323 µs/read; 0.19 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                         2 (2.0%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpTotal written (filtered):         24,843 bp (100.0%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #2)" name="1" time="28.639010190963745">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --output=out1.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim bwa-mem-fastq1_fq_gz.fq.gzProcessing single-end reads on 5 cores ...Finished in 0.03 s (286 µs/read; 0.21 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                         2 (2.0%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpTotal written (filtered):         24,843 bp (100.0%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #11)" name="10" time="29.897334814071655">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -g file:/galaxy/server/database/objects/7/f/e/dataset_7fee57fe-e7a8-40b4-a0ee-6c8335c6ab9f.dat --output=split/{name}.fastq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_in_split_fastq_gz.fq.gzProcessing single-end reads on 5 cores ...Finished in 0.06 s (5137 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                      11Reads with adapters:                        10 (90.9%)Reads written (passing filters):            11 (100.0%)Total basepairs processed:         1,210 bpTotal written (filtered):          1,130 bp (93.4%)=== Adapter A2 ===Sequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 timesNo. of allowed errors: 0Overview of removed sequenceslengthcountexpectmax.errerror counts850.005=== Adapter A1 ===Sequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 timesNo. of allowed errors: 0Overview of removed sequenceslengthcountexpectmax.errerror counts850.005
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #11)" name="10" time="10.611402988433838">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 10.611402988433838, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #12)" name="11" time="29.75580382347107">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AAAT --untrimmed-output=untrimmed_output.fq --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.03 s (10232 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)== Read fate breakdown ==Reads discarded as untrimmed:                2 (66.7%)Reads written (passing filters):             1 (33.3%)Total basepairs processed:           102 bpTotal written (filtered):             30 bp (29.4%)=== Adapter 1 ===Sequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-4 bp: 0Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts410.001
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #12)" name="11" time="27.98052668571472">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AAAT --untrimmed-output=untrimmed_output.fq --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.03 s (8488 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)== Read fate breakdown ==Reads discarded as untrimmed:                2 (66.7%)Reads written (passing filters):             1 (33.3%)Total basepairs processed:           102 bpTotal written (filtered):             30 bp (29.4%)=== Adapter 1 ===Sequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-4 bp: 0Bases preceding removed adapters:  A: 0.0%  C: 100.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts410.001
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #13)" name="12" time="29.966912031173706">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --untrimmed-output=untrimmed_output.fq.gz --output=out1.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim bwa-mem-fastq1_fq_gz.fq.gzProcessing single-end reads on 5 cores ...Finished in 0.04 s (433 µs/read; 0.14 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                         2 (2.0%)== Read fate breakdown ==Reads discarded as untrimmed:               97 (98.0%)Reads written (passing filters):             2 (2.0%)Total basepairs processed:        24,849 bpTotal written (filtered):            496 bp (2.0%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #13)" name="12" time="28.875425100326538">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --untrimmed-output=untrimmed_output.fq.gz --output=out1.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim bwa-mem-fastq1_fq_gz.fq.gzProcessing single-end reads on 5 cores ...Finished in 0.04 s (382 µs/read; 0.16 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                         2 (2.0%)== Read fate breakdown ==Reads discarded as untrimmed:               97 (98.0%)Reads written (passing filters):             2 (2.0%)Total basepairs processed:        24,849 bpTotal written (filtered):            496 bp (2.0%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #14)" name="13" time="30.082096815109253">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --maximum-length=1000 --max-n=0.0 --pair-filter=both bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (478 µs/read; 0.13 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)== Read fate breakdown ==Pairs that were too long:                    0 (0.0%)Pairs with too many N:                       0 (0.0%)Pairs discarded as untrimmed:               97 (98.0%)Pairs written (passing filters):             2 (2.0%)Total basepairs processed:        49,698 bp  Read 1:        24,849 bp  Read 2:        24,849 bpTotal written (filtered):            998 bp (2.0%)  Read 1:           496 bp  Read 2:           502 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #14)" name="13" time="23.861018180847168">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "filter_options|discard_untrimmed": true,  "filter_options|max_n": "0",  "filter_options|maximum_length": "1000",  "filter_options|pair_filter": "both",  "library|input_1": {   "id": "217af3cbf7c81f91",   "src": "hda"  },  "library|input_2": {   "id": "c916cf5661cfef05",   "src": "hda"  },  "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC",  "library|r1|adapters_0|adapter_source|adapter_source_list": "user",  "library|type": "paired" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/0/a/a/dataset_0aa94003-043a-4676-a365-eae9e07ecf47.dat\u0027 \u0027bwa-mem-fastq1_fq_gz.fq.gz\u0027 \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/2/2/4/dataset_22472957-2246-4fab-97a2-9e56a019d6a4.dat\u0027 \u0027bwa-mem-fastq2_fq_gz.fq.gz\u0027 \u0026\u0026    cutadapt  -j=${GALAXY_SLOTS:-4}      -a \u0027AGATCGGAAGAGC\u0027              --output=\u0027out1.fq.gz\u0027 --paired-output=\u0027out2.fq.gz\u0027  --error-rate=0.1 --times=1 --overlap=3   --action=trim    --discard-untrimmed  --maximum-length=1000 --max-n=0.0 --pair-filter=both       \u0027bwa-mem-fastq1_fq_gz.fq.gz\u0027 \u0027bwa-mem-fastq2_fq_gz.fq.gz\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T06:54:51.106630",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-8zmxh",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "ab47b01f4caa15ec",  "inputs": {   "library|input_1": {    "id": "217af3cbf7c81f91",    "src": "hda",    "uuid": "0aa94003-043a-4676-a365-eae9e07ecf47"   },   "library|input_2": {    "id": "c916cf5661cfef05",    "src": "hda",    "uuid": "22472957-2246-4fab-97a2-9e56a019d6a4"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out1": {    "id": "7193475d877acff0",    "src": "hda",    "uuid": "464a2659-a611-470c-849d-a90c574cdc24"   },   "out2": {    "id": "6fcef987563327e8",    "src": "hda",    "uuid": "4d97cf3d-ca23-455d-a5f7-587bc6a12b37"   }  },  "params": {   "__input_ext": "\"input\"",   "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"internal\": \"\", \"match_read_wildcards\": \" \", \"no_indels\": false, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_options": "{\"discard_cassava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": true, \"length_R2_options\": {\"__current_case__\": 1, \"length_R2_status\": \"False\"}, \"max_expected_errors\": \"\", \"max_n\": \"0.0\", \"maximum_length\": \"1000\", \"minimum_length\": \"\", \"pair_filter\": \"both\"}",   "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"cut2\": \"0\", \"front_adapters2\": [], \"quality_cutoff2\": null}, \"type\": \"paired\"}",   "output_selector": null,   "read_mod_options": "{\"length_tag\": null, \"nextseq_trim\": \"0\", \"quality_cutoff\": \"0\", \"rename\": null, \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"strip_suffix\": null, \"trim_n\": false, \"zero_cap\": false}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T06:54:56.725378",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 13, "time_seconds": 23.861018180847168, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #15)" name="14" time="28.55214548110962">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -u 5 --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7740 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             87 bp (85.3%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #15)" name="14" time="21.53992009162903">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "library|input_1": {   "id": "3b254e6138c27b03",   "src": "hda"  },  "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC",  "library|r1|adapters_0|adapter_source|adapter_source_list": "user",  "library|r1|cut": "5",  "library|type": "single" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/a/6/b/dataset_a6bd8633-3e0c-426f-90ef-763548ce821e.dat\u0027 \u0027cutadapt_small_fastq.fq\u0027 \u0026\u0026     cutadapt  -j=${GALAXY_SLOTS:-4}      -a \u0027AGATCGGAAGAGC\u0027  -u 5     --output=\u0027out1.fq\u0027  --error-rate=0.1 --times=1 --overlap=3   --action=trim            \u0027cutadapt_small_fastq.fq\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T06:55:12.413903",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-xmqgq",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "c4d3b75f28900379",  "inputs": {   "library|input_1": {    "id": "3b254e6138c27b03",    "src": "hda",    "uuid": "a6bd8633-3e0c-426f-90ef-763548ce821e"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out1": {    "id": "cc965caa779febf6",    "src": "hda",    "uuid": "140db463-bc20-4486-88fd-9225fc104b05"   }  },  "params": {   "__input_ext": "\"input\"",   "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"internal\": \"\", \"match_read_wildcards\": \" \", \"no_indels\": false, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_options": "{\"discard_cassava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"length_R2_options\": {\"__current_case__\": 1, \"length_R2_status\": \"False\"}, \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"minimum_length\": \"\", \"pair_filter\": \"any\"}",   "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 150, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"cut\": \"5\", \"front_adapters\": []}, \"type\": \"single\"}",   "output_selector": null,   "read_mod_options": "{\"length_tag\": null, \"nextseq_trim\": \"0\", \"quality_cutoff\": \"0\", \"rename\": null, \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"strip_suffix\": null, \"trim_n\": false, \"zero_cap\": false}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T06:55:18.179820",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 14, "time_seconds": 21.53992009162903, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #16)" name="15" time="30.312496185302734">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -u 5 --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --rename={id} barcode={cut_prefix} cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7912 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             87 bp (85.3%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #16)" name="15" time="27.670055627822876">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -u 5 --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --rename={id} barcode={cut_prefix} cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7047 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             87 bp (85.3%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #17)" name="16" time="28.642343044281006">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a CGTCCGAANTAG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=retain cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7937 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             80 bp (78.4%)=== Adapter 1 ===Sequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-11 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #17)" name="16" time="28.54809856414795">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a CGTCCGAANTAG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=retain cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7504 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             80 bp (78.4%)=== Adapter 1 ===Sequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-11 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #18)" name="17" time="29.09812831878662">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a CGTCCGAANTAG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=mask cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7715 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-11 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #18)" name="17" time="29.426814794540405">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a CGTCCGAANTAG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=mask cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7918 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-11 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #19)" name="18" time="21.943687915802002">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adapter_options|action": "lowercase",  "library|input_1": {   "id": "a883e9a21272057b",   "src": "hda"  },  "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG",  "library|r1|adapters_0|adapter_source|adapter_source_list": "user",  "library|type": "single" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/e/7/2/dataset_e72d3024-8cb5-4720-ac5e-27cb9e0a1162.dat\u0027 \u0027cutadapt_small_fastq.fq\u0027 \u0026\u0026     cutadapt  -j=${GALAXY_SLOTS:-4}      -a \u0027CGTCCGAANTAG\u0027      --output=\u0027out1.fq\u0027  --error-rate=0.1 --times=1 --overlap=3   --action=lowercase            \u0027cutadapt_small_fastq.fq\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T06:43:25.809458",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-rs56g",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "eed2edd4d2aa9306",  "inputs": {   "library|input_1": {    "id": "a883e9a21272057b",    "src": "hda",    "uuid": "e72d3024-8cb5-4720-ac5e-27cb9e0a1162"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out1": {    "id": "1ee44f983af73774",    "src": "hda",    "uuid": "8f9d6336-5997-47a4-879c-30fd182af052"   }  },  "params": {   "__input_ext": "\"input\"",   "adapter_options": "{\"action\": \"lowercase\", \"error_rate\": \"0.1\", \"internal\": \"\", \"match_read_wildcards\": \" \", \"no_indels\": false, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_options": "{\"discard_cassava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"length_R2_options\": {\"__current_case__\": 1, \"length_R2_status\": \"False\"}, \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"minimum_length\": \"\", \"pair_filter\": \"any\"}",   "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 72, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}",   "output_selector": null,   "read_mod_options": "{\"length_tag\": null, \"nextseq_trim\": \"0\", \"quality_cutoff\": \"0\", \"rename\": null, \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"strip_suffix\": null, \"trim_n\": false, \"zero_cap\": false}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T06:43:31.457765",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 18, "time_seconds": 21.943687915802002, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #19)" name="18" time="28.3391752243042">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a CGTCCGAANTAG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=lowercase cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7849 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-11 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #20)" name="19" time="27.755110263824463">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a CGTCCGAANTAG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=none cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7742 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-11 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #20)" name="19" time="29.414458513259888">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a CGTCCGAANTAG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=none cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7349 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-11 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #3)" name="2" time="32.4654655456543">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --pair-filter=any bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (515 µs/read; 0.12 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)Pairs written (passing filters):            99 (100.0%)Total basepairs processed:        49,698 bp  Read 1:        24,849 bp  Read 2:        24,849 bpTotal written (filtered):         49,677 bp (100.0%)  Read 1:        24,843 bp  Read 2:        24,834 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #3)" name="2" time="29.965501308441162">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --pair-filter=any bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (490 µs/read; 0.12 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)Pairs written (passing filters):            99 (100.0%)Total basepairs processed:        49,698 bp  Read 1:        24,849 bp  Read 2:        24,849 bpTotal written (filtered):         49,677 bp (100.0%)  Read 1:        24,843 bp  Read 2:        24,834 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #21)" name="20" time="28.277541399002075">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a TAAACAGATTAGT --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --revcomp cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7078 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reverse-complemented:                        0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             97 bp (95.1%)=== Adapter 1 ===Sequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 100.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts510.001
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #21)" name="20" time="27.48125386238098">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a TAAACAGATTAGT --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --revcomp cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7680 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reverse-complemented:                        0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             97 bp (95.1%)=== Adapter 1 ===Sequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 100.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts510.001
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #22)" name="21" time="30.058598518371582">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (474 µs/read; 0.13 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                      32 (32.3%)  Read 2 with adapter:                      15 (15.2%)== Read fate breakdown ==Pairs that were too short:                   3 (3.0%)Pairs written (passing filters):            96 (97.0%)Total basepairs processed:        48,291 bp  Read 1:        24,147 bp  Read 2:        24,144 bpTotal written (filtered):         38,492 bp (79.7%)  Read 1:        17,741 bp  Read 2:        20,751 bp=== First read: Adapter 1 ===Sequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 90.6%  G: 3.1%  T: 0.0%  none/other: 6.2%WARNING:    The adapter is preceded by 'C' extremely often.    The provided adapter sequence could be incomplete at its 5' end.    Ignore this warning when trimming primers.Overview of removed sequenceslengthcountexpectmax.errerror counts321.5021310.0111410.01120110.01120310.01120820.01220910.01121110.01121420.01221720.01221810.01122210.01122610.01122720.01222810.01122910.01123220.01223810.01124270.01725110.010 1=== Second read: Adapter 2 ===Sequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 timesMinimum overlap: 3No. of allowed errors:1-7 bp: 0Bases preceding removed adapters:  A: 0.0%  C: 73.3%  G: 0.0%  T: 0.0%  none/other: 26.7%Overview of removed sequenceslengthcountexpectmax.errerror counts810.00122820.00222910.00123830.00324110.00124310.00124610.00124810.00125010.00125130.003WARNING:    One or more of your adapter sequences may be incomplete.    Please see the detailed output above.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #22)" name="21" time="31.308767080307007">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (508 µs/read; 0.12 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                      32 (32.3%)  Read 2 with adapter:                      15 (15.2%)== Read fate breakdown ==Pairs that were too short:                   3 (3.0%)Pairs written (passing filters):            96 (97.0%)Total basepairs processed:        48,291 bp  Read 1:        24,147 bp  Read 2:        24,144 bpTotal written (filtered):         38,492 bp (79.7%)  Read 1:        17,741 bp  Read 2:        20,751 bp=== First read: Adapter 1 ===Sequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 90.6%  G: 3.1%  T: 0.0%  none/other: 6.2%WARNING:    The adapter is preceded by 'C' extremely often.    The provided adapter sequence could be incomplete at its 5' end.    Ignore this warning when trimming primers.Overview of removed sequenceslengthcountexpectmax.errerror counts321.5021310.0111410.01120110.01120310.01120820.01220910.01121110.01121420.01221720.01221810.01122210.01122610.01122720.01222810.01122910.01123220.01223810.01124270.01725110.010 1=== Second read: Adapter 2 ===Sequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 timesMinimum overlap: 3No. of allowed errors:1-7 bp: 0Bases preceding removed adapters:  A: 0.0%  C: 73.3%  G: 0.0%  T: 0.0%  none/other: 26.7%Overview of removed sequenceslengthcountexpectmax.errerror counts810.00122820.00222910.00123830.00324110.00124310.00124610.00124810.00125010.00125130.003WARNING:    One or more of your adapter sequences may be incomplete.    Please see the detailed output above.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #23)" name="22" time="29.55155920982361">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --maximum-length=50:30 --pair-filter=both bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.04 s (422 µs/read; 0.14 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)== Read fate breakdown ==Pairs that were too long:                   96 (97.0%)Pairs written (passing filters):             3 (3.0%)Total basepairs processed:        48,291 bp  Read 1:        24,147 bp  Read 2:        24,144 bpTotal written (filtered):             99 bp (0.2%)  Read 1:            51 bp  Read 2:            48 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #23)" name="22" time="30.620001554489136">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --maximum-length=50:30 --pair-filter=both bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (476 µs/read; 0.13 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)== Read fate breakdown ==Pairs that were too long:                   96 (97.0%)Pairs written (passing filters):             3 (3.0%)Total basepairs processed:        48,291 bp  Read 1:        24,147 bp  Read 2:        24,144 bpTotal written (filtered):             99 bp (0.2%)  Read 1:            51 bp  Read 2:            48 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #24)" name="23" time="10.345067501068115">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 23, "time_seconds": 10.345067501068115, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #24)" name="23" time="31.11709976196289">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10: --maximum-length=50:30 --pair-filter=both bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.04 s (450 µs/read; 0.13 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)== Read fate breakdown ==Pairs that were too short:                   0 (0.0%)Pairs that were too long:                   96 (97.0%)Pairs written (passing filters):             3 (3.0%)Total basepairs processed:        48,291 bp  Read 1:        24,147 bp  Read 2:        24,144 bpTotal written (filtered):             99 bp (0.2%)  Read 1:            51 bp  Read 2:            48 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #25)" name="24" time="24.33639097213745">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "filter_options|length_R2_options|R2_minimum": "10",  "filter_options|length_R2_options|length_R2_status": "True",  "filter_options|maximum_length": "50",  "filter_options|minimum_length": "10",  "filter_options|pair_filter": "both",  "library|input_1": {   "id": "5b15e4ff6cfb2c7b",   "src": "hda"  },  "library|input_2": {   "id": "7da62b00f8c4b8cc",   "src": "hda"  },  "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC",  "library|r1|adapters_0|adapter_source|adapter_source_list": "user",  "library|r2|adapters2_0|adapter_source2|adapter2": "AGATCGGAAGAGC",  "library|r2|adapters2_0|adapter_source2|adapter_source_list2": "user",  "library|type": "paired" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/a/4/9/dataset_a497cb57-aeef-40fa-a1a8-673cb119adc4.dat\u0027 \u0027bwa-mem-fastq1_assimetric_fq_gz.fq.gz\u0027 \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/c/8/b/dataset_c8b25a60-67a9-4bb7-8d92-475ee7881f05.dat\u0027 \u0027bwa-mem-fastq2_assimetric_fq_gz.fq.gz\u0027 \u0026\u0026    cutadapt  -j=${GALAXY_SLOTS:-4}      -a \u0027AGATCGGAAGAGC\u0027         -A \u0027AGATCGGAAGAGC\u0027      --output=\u0027out1.fq.gz\u0027 --paired-output=\u0027out2.fq.gz\u0027  --error-rate=0.1 --times=1 --overlap=3   --action=trim      --minimum-length=10:10 --maximum-length=50: --pair-filter=both       \u0027bwa-mem-fastq1_assimetric_fq_gz.fq.gz\u0027 \u0027bwa-mem-fastq2_assimetric_fq_gz.fq.gz\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T06:45:56.379264",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-mqjn7",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "39c4fa78bb518eab",  "inputs": {   "library|input_1": {    "id": "5b15e4ff6cfb2c7b",    "src": "hda",    "uuid": "a497cb57-aeef-40fa-a1a8-673cb119adc4"   },   "library|input_2": {    "id": "7da62b00f8c4b8cc",    "src": "hda",    "uuid": "c8b25a60-67a9-4bb7-8d92-475ee7881f05"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out1": {    "id": "d9ad19a0fec117b7",    "src": "hda",    "uuid": "06c5ab55-e13c-4ee4-86b5-b2f007d5645b"   },   "out2": {    "id": "0a4a8dcd7a7f73f8",    "src": "hda",    "uuid": "9eec96c1-2a50-4e6b-a260-c12665b3294b"   }  },  "params": {   "__input_ext": "\"input\"",   "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"internal\": \"\", \"match_read_wildcards\": \" \", \"no_indels\": false, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_options": "{\"discard_cassava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"length_R2_options\": {\"R2_maximum\": \"\", \"R2_minimum\": \"10\", \"__current_case__\": 0, \"length_R2_status\": \"True\"}, \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"minimum_length\": \"10\", \"pair_filter\": \"both\"}",   "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 88, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 89, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source2\": {\"__current_case__\": 0, \"adapter2\": \"AGATCGGAAGAGC\", \"adapter_name2\": \"\", \"adapter_source_list2\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"cut2\": \"0\", \"front_adapters2\": [], \"quality_cutoff2\": null}, \"type\": \"paired\"}",   "output_selector": null,   "read_mod_options": "{\"length_tag\": null, \"nextseq_trim\": \"0\", \"quality_cutoff\": \"0\", \"rename\": null, \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"strip_suffix\": null, \"trim_n\": false, \"zero_cap\": false}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T06:46:02.097353",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 24, "time_seconds": 24.33639097213745, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #25)" name="24" time="29.8188316822052">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50: --pair-filter=both bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (470 µs/read; 0.13 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)== Read fate breakdown ==Pairs that were too short:                   0 (0.0%)Pairs that were too long:                   96 (97.0%)Pairs written (passing filters):             3 (3.0%)Total basepairs processed:        48,291 bp  Read 1:        24,147 bp  Read 2:        24,144 bpTotal written (filtered):             99 bp (0.2%)  Read 1:            51 bp  Read 2:            48 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #26)" name="25" time="27.470311641693115">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGCCGCTANGACG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7381 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             20 bp (19.6%)=== Adapter 1 ===Sequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #26)" name="25" time="28.13559341430664">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGCCGCTANGACG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7053 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             20 bp (19.6%)=== Adapter 1 ===Sequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #27)" name="26" time="27.58519434928894">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGCCGCTANGACG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (6540 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             20 bp (19.6%)=== Adapter 1 ===Sequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #27)" name="26" time="31.260777711868286">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGCCGCTANGACG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.03 s (8379 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         1 (33.3%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):             20 bp (19.6%)=== Adapter 1 ===Sequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-12 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 0.0%  T: 0.0%  none/other: 100.0%Overview of removed sequenceslengthcountexpectmax.errerror counts3410.011
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #28)" name="27" time="26.30187678337097">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGCGGCTTAGACG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --max-expected-errors=10 cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7504 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)== Read fate breakdown ==Reads with too many exp. errors:             0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #28)" name="27" time="28.18328356742859">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGCGGCTTAGACG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --max-expected-errors=10 cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7756 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)== Read fate breakdown ==Reads with too many exp. errors:             0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #29)" name="28" time="28.309863090515137">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a GAANTAGCTACCACX --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7081 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #29)" name="28" time="27.369420289993286">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a GAANTAGCTACCACX --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7722 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         0 (0.0%)Reads written (passing filters):             3 (100.0%)Total basepairs processed:           102 bpTotal written (filtered):            102 bp (100.0%)=== Adapter 1 ===Sequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #30)" name="29" time="30.352017402648926">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --pair-filter=any bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (468 µs/read; 0.13 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)Pairs written (passing filters):            99 (100.0%)Total basepairs processed:        48,291 bp  Read 1:        24,147 bp  Read 2:        24,144 bpTotal written (filtered):         48,270 bp (100.0%)  Read 1:        24,141 bp  Read 2:        24,129 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #30)" name="29" time="16.838022232055664">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 29, "time_seconds": 16.838022232055664, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #4)" name="3" time="25.264612436294556">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "library|input_1": {   "id": "4b3729b332b89bdf",   "src": "hdca"  },  "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC",  "library|r1|adapters_0|adapter_source|adapter_source_list": "user",  "library|r2|adapters2_0|adapter_source2|adapter2": "AGATCGGAAGAGC",  "library|r2|adapters2_0|adapter_source2|adapter_source_list2": "user",  "library|type": "paired_collection" }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/b/b/5/dataset_bb57ba62-3c8b-4ebf-8fd5-4f3fd2bc784f.dat\u0027 \u0027Unnamed Collection_1.fq.gz\u0027 \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/7/a/5/dataset_7a5c867a-8193-45de-91a7-f9c33d8620f3.dat\u0027 \u0027Unnamed Collection_2.fq.gz\u0027 \u0026\u0026    cutadapt  -j=${GALAXY_SLOTS:-4}      -a \u0027AGATCGGAAGAGC\u0027         -A \u0027AGATCGGAAGAGC\u0027      --output=\u0027out1.fq.gz\u0027 --paired-output=\u0027out2.fq.gz\u0027  --error-rate=0.1 --times=1 --overlap=3   --action=trim      --pair-filter=any       \u0027Unnamed Collection_1.fq.gz\u0027 \u0027Unnamed Collection_2.fq.gz\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T06:36:48.610634",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-9pndn",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "d1eea4a5c4a1acad",  "inputs": {   "library|input_11": {    "id": "653d2f28477c4cae",    "src": "hda",    "uuid": "bb57ba62-3c8b-4ebf-8fd5-4f3fd2bc784f"   },   "library|input_12": {    "id": "ac9b0f8d7adaec04",    "src": "hda",    "uuid": "7a5c867a-8193-45de-91a7-f9c33d8620f3"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {   "out_pairs": {    "id": "223207345b098d62",    "src": "hdca"   }  },  "outputs": {   "out_pairs|__part__|forward": {    "id": "89dc8ff94ad84889",    "src": "hda",    "uuid": "7d157aed-0ab7-40ec-8665-707b426a633c"   },   "out_pairs|__part__|reverse": {    "id": "fec1c19112f83e23",    "src": "hda",    "uuid": "ae008853-3678-4a47-bddc-d22278cd726a"   }  },  "params": {   "__input_ext": "\"input\"",   "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"internal\": \"\", \"match_read_wildcards\": \" \", \"no_indels\": false, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_options": "{\"discard_cassava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"length_R2_options\": {\"__current_case__\": 1, \"length_R2_status\": \"False\"}, \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"minimum_length\": \"\", \"pair_filter\": \"any\"}",   "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 2, \"src\": \"hdca\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source2\": {\"__current_case__\": 0, \"adapter2\": \"AGATCGGAAGAGC\", \"adapter_name2\": \"\", \"adapter_source_list2\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"cut2\": \"0\", \"front_adapters2\": [], \"quality_cutoff2\": null}, \"type\": \"paired_collection\"}",   "output_selector": null,   "read_mod_options": "{\"length_tag\": null, \"nextseq_trim\": \"0\", \"quality_cutoff\": \"0\", \"rename\": null, \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"strip_suffix\": null, \"trim_n\": false, \"zero_cap\": false}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T06:36:54.910421",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 25.264612436294556, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #4)" name="3" time="30.457228899002075">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --pair-filter=any Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (522 µs/read; 0.11 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)Pairs written (passing filters):            99 (100.0%)Total basepairs processed:        49,698 bp  Read 1:        24,849 bp  Read 2:        24,849 bpTotal written (filtered):         49,677 bp (100.0%)  Read 1:        24,843 bp  Read 2:        24,834 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #31)" name="30" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 30, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #31)" name="30" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 30, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #32)" name="31" time="31.512765169143677">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --pair-filter=any Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (488 µs/read; 0.12 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)Pairs written (passing filters):            99 (100.0%)Total basepairs processed:        49,698 bp  Read 1:        24,849 bp  Read 2:        24,849 bpTotal written (filtered):         49,677 bp (100.0%)  Read 1:        24,843 bp  Read 2:        24,834 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #32)" name="31" time="30.3312668800354">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --output=out1.fq.gz --paired-output=out2.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --pair-filter=any Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gzProcessing paired-end reads on 5 cores ...Finished in 0.05 s (468 µs/read; 0.13 M reads/minute).=== Summary ===Total read pairs processed:                 99  Read 1 with adapter:                       2 (2.0%)  Read 2 with adapter:                       4 (4.0%)Pairs written (passing filters):            99 (100.0%)Total basepairs processed:        49,698 bp  Read 1:        24,849 bp  Read 2:        24,849 bpTotal written (filtered):         49,677 bp (100.0%)  Read 1:        24,843 bp  Read 2:        24,834 bp=== First read: Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 50.0%  G: 50.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502=== Second read: Adapter 2 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 50.0%  T: 50.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts321.502410.401510.101
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #33)" name="32" time="10.39168381690979">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 32, "time_seconds": 10.39168381690979, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #33)" name="32" time="16.04249095916748">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 32, "time_seconds": 16.04249095916748, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #5)" name="4" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 4, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #5)" name="4" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 4, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #6)" name="5" time="27.241371870040894">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a TTAGACATATCTCCGTCG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (7303 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         2 (66.7%)== Read fate breakdown ==Reads discarded as trimmed:                  2 (66.7%)Reads written (passing filters):             1 (33.3%)Total basepairs processed:           102 bpTotal written (filtered):             34 bp (33.3%)=== Adapter 1 ===Sequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-18 bp: 1Bases preceding removed adapters:  A: 50.0%  C: 50.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts1010.010 11210.010 1
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #6)" name="5" time="27.802967071533203">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a TTAGACATATCTCCGTCG --output=out1.fq --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed cutadapt_small_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.02 s (8010 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       3Reads with adapters:                         2 (66.7%)== Read fate breakdown ==Reads discarded as trimmed:                  2 (66.7%)Reads written (passing filters):             1 (33.3%)Total basepairs processed:           102 bpTotal written (filtered):             34 bp (33.3%)=== Adapter 1 ===Sequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-18 bp: 1Bases preceding removed adapters:  A: 50.0%  C: 50.0%  G: 0.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts1010.010 11210.010 1
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #7)" name="6" time="30.339503288269043">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 --json stats.json -a AAAGATG --rest-file=rest_output.fa --output=out1.fa --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_rest_fa.faProcessing single-end reads on 5 cores ...Finished in 0.03 s (5988 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       5Reads with adapters:                         5 (100.0%)Reads written (passing filters):             5 (100.0%)Total basepairs processed:            97 bpTotal written (filtered):             35 bp (36.1%)=== Adapter 1 ===Sequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 timesMinimum overlap: 3No. of allowed errors:1-7 bp: 0Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 100.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts710.0011210.0011420.0021510.001
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #7)" name="6" time="29.740760326385498">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 --json stats.json -a AAAGATG --rest-file=rest_output.fa --output=out1.fa --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_rest_fa.faProcessing single-end reads on 5 cores ...Finished in 0.03 s (5821 µs/read; 0.01 M reads/minute).=== Summary ===Total reads processed:                       5Reads with adapters:                         5 (100.0%)Reads written (passing filters):             5 (100.0%)Total basepairs processed:            97 bpTotal written (filtered):             35 bp (36.1%)=== Adapter 1 ===Sequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 timesMinimum overlap: 3No. of allowed errors:1-7 bp: 0Bases preceding removed adapters:  A: 0.0%  C: 0.0%  G: 100.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts710.0011210.0011420.0021510.001
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #8)" name="7" time="28.393306255340576">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --output=out1.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 bwa-mem-fastq1_fq_gz.fq.gzProcessing single-end reads on 5 cores ...Finished in 0.03 s (299 µs/read; 0.20 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                         4 (4.0%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     286 bp (1.2%)Total written (filtered):         24,550 bp (98.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 75.0%  G: 25.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts331.503410.401
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #8)" name="7" time="27.284565925598145">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -a AGATCGGAAGAGC --output=out1.fq.gz --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 bwa-mem-fastq1_fq_gz.fq.gzProcessing single-end reads on 5 cores ...Finished in 0.03 s (283 µs/read; 0.21 M reads/minute).=== Summary ===Total reads processed:                      99Reads with adapters:                         4 (4.0%)Reads written (passing filters):            99 (100.0%)Total basepairs processed:        24,849 bpQuality-trimmed:                     286 bp (1.2%)Total written (filtered):         24,550 bp (98.8%)=== Adapter 1 ===Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 timesMinimum overlap: 3No. of allowed errors:1-9 bp: 0; 10-13 bp: 1Bases preceding removed adapters:  A: 0.0%  C: 75.0%  G: 25.0%  T: 0.0%  none/other: 0.0%Overview of removed sequenceslengthcountexpectmax.errerror counts331.503410.401
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #9)" name="8" time="23.358397960662842">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "library|input_1": {   "id": "fac321cc207923a8",   "src": "hda"  },  "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC",  "library|r1|adapters_0|adapter_source|adapter_source_list": "user",  "library|type": "single",  "output_selector": [   "report",   "info_file"  ] }, "job": {  "command_line": "ln -f -s \u0027/galaxy/server/database/objects/7/2/0/dataset_7202ab8d-5a2a-4da4-af7c-85ead02ee7c4.dat\u0027 \u0027cutadapt_small_fastq.fq\u0027 \u0026\u0026     cutadapt  -j=${GALAXY_SLOTS:-4}      -a \u0027AGATCGGAAGAGC\u0027    --info-file=/galaxy/server/database/objects/6/e/4/dataset_6e4e404b-b393-4175-9ed2-d1c9215a4571.dat   --output=\u0027out1.fq\u0027  --error-rate=0.1 --times=1 --overlap=3   --action=trim            \u0027cutadapt_small_fastq.fq\u0027  \u003e report.txt",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T06:38:38.000213",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-jmzxs",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "4a7f9307bfca6c2d",  "inputs": {   "library|input_1": {    "id": "fac321cc207923a8",    "src": "hda",    "uuid": "7202ab8d-5a2a-4da4-af7c-85ead02ee7c4"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "info_file": {    "id": "bce3552a3a00a34d",    "src": "hda",    "uuid": "6e4e404b-b393-4175-9ed2-d1c9215a4571"   },   "out1": {    "id": "c6a359b6782d4e01",    "src": "hda",    "uuid": "d4a7b485-ba44-4f55-a7e9-774542c3d878"   },   "report": {    "id": "9b32be70e79e2518",    "src": "hda",    "uuid": "9c0f906c-650b-4a40-a1cc-13d159d49556"   }  },  "params": {   "__input_ext": "\"input\"",   "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"internal\": \"\", \"match_read_wildcards\": \" \", \"no_indels\": false, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_options": "{\"discard_cassava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"length_R2_options\": {\"__current_case__\": 1, \"length_R2_status\": \"False\"}, \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"minimum_length\": \"\", \"pair_filter\": \"any\"}",   "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 41, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}",   "output_selector": "[\"report\", \"info_file\"]",   "read_mod_options": "{\"length_tag\": null, \"nextseq_trim\": \"0\", \"quality_cutoff\": \"0\", \"rename\": null, \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"strip_suffix\": null, \"trim_n\": false, \"zero_cap\": false}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T06:38:44.627397",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 8, "time_seconds": 23.358397960662842, "tool_id": "cutadapt", "tool_version": "4.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #9)" name="8" time="27.92270517349243">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #10)" name="9" time="27.538909673690796">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --output=split/{name}.fastq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_in_split_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.03 s (3037 µs/read; 0.02 M reads/minute).=== Summary ===Total reads processed:                      11Reads with adapters:                        10 (90.9%)Reads written (passing filters):            11 (100.0%)Total basepairs processed:         1,210 bpTotal written (filtered):          1,130 bp (93.4%)=== Adapter A1 ===Sequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 timesNo. of allowed errors: 0Overview of removed sequenceslengthcountexpectmax.errerror counts850.005=== Adapter A2 ===Sequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 timesNo. of allowed errors: 0Overview of removed sequenceslengthcountexpectmax.errerror counts850.005
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="cutadapt (Test #10)" name="9" time="28.772849798202515">
        
            
            <system-out><![CDATA[
            This is cutadapt 4.0 with Python 3.9.12Command line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --output=split/{name}.fastq --error-rate=0.1 --times=1 --overlap=3 --action=trim cutadapt_in_split_fastq.fqProcessing single-end reads on 5 cores ...Finished in 0.04 s (3183 µs/read; 0.02 M reads/minute).=== Summary ===Total reads processed:                      11Reads with adapters:                        10 (90.9%)Reads written (passing filters):            11 (100.0%)Total basepairs processed:         1,210 bpTotal written (filtered):          1,130 bp (93.4%)=== Adapter A1 ===Sequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 timesNo. of allowed errors: 0Overview of removed sequenceslengthcountexpectmax.errerror counts850.005=== Adapter A2 ===Sequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 timesNo. of allowed errors: 0Overview of removed sequenceslengthcountexpectmax.errerror counts850.005
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_compare (Test #1)" name="0" time="57.45395112037659">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam', 'two.bam']binLength: 5numberOfSamples: 0blackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: NoneignoreDuplicates: FalsechrsToSkip: []stepSize: 5center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_compare (Test #2)" name="1" time="28.91490125656128">
        
            
            <system-out><![CDATA[
            Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667
            ]]></system-out>
            <system-err><![CDATA[
            bamFilesList: ['one.bam', 'two.bam']binLength: 10numberOfSamples: 0blackListFileName: NoneskipZeroOverZero: Falsebed_and_bin: FalsegenomeChunkSize: NonedefaultFragmentLength: read lengthnumberOfProcessors: 8verbose: Falseregion: NonebedFile: NoneminMappingQuality: 1ignoreDuplicates: FalsechrsToSkip: []stepSize: 10center_read: FalsesamFlag_include: NonesamFlag_exclude: NoneminFragmentLength: 0maxFragmentLength: 0zerosToNans: FalsesmoothLength: Nonesave_data: Falseout_file_for_raw_data: NonemaxPairedFragmentLength: 1000
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_read_10x (Test #1)" name="0" time="0.10064959526062012">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10064959526062012, "tool_id": "dropletutils_read_10x", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastqc (Test #1)" name="0" time="45.201066732406616">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #1)" name="0" time="31.584757566452026">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #2)" name="1" time="30.881803035736084">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #2)" name="1" time="32.059617042541504">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #3)" name="2" time="32.70344305038452">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #3)" name="2" time="31.49736452102661">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #4)" name="3" time="31.582072734832764">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #4)" name="3" time="32.66894245147705">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #5)" name="4" time="32.51555013656616">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #5)" name="4" time="31.09355330467224">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #6)" name="5" time="30.62928819656372">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #6)" name="5" time="30.65078854560852">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #7)" name="6" time="29.317736625671387">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #7)" name="6" time="29.349148750305176">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #8)" name="7" time="30.352667093276978">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastqc (Test #8)" name="7" time="31.45858883857727">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="jq (Test #1)" name="0" time="27.95467758178711">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="jq (Test #2)" name="1" time="24.31319236755371">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #1)" name="0" time="61.836731910705566">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #2)" name="1" time="27.897594213485718">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_hist (Test #3)" name="2" time="28.632946014404297">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #1)" name="0" time="79.19740152359009">
        
            
            <system-out><![CDATA[
            Nov 06 07:12:38 ..... started STAR runNov 06 07:12:38 ... starting to generate Genome filesNov 06 07:12:38 ..... processing annotations GTFNov 06 07:12:38 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:12:38 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:12:38 ... loading chunks from disk, packing SA...Nov 06 07:12:38 ... finished generating suffix arrayNov 06 07:12:38 ... generating Suffix Array indexNov 06 07:12:38 ... completed Suffix Array indexNov 06 07:12:38 ..... inserting junctions into the genome indicesNov 06 07:12:38 ... writing Genome to disk ...Nov 06 07:12:38 ... writing Suffix Array to disk ...Nov 06 07:12:38 ... writing SAindex to diskNov 06 07:12:38 ..... finished successfullyNov 06 07:12:38 ..... started STAR runNov 06 07:12:38 ..... loading genomeNov 06 07:12:38 ..... started mappingNov 06 07:12:56 ..... finished mappingNov 06 07:12:56 ..... started Solo countingNov 06 07:12:56 ..... finished Solo countingNov 06 07:12:56 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #1)" name="0" time="67.57901215553284">
        
            
            <system-out><![CDATA[
            Nov 06 07:22:08 ..... started STAR runNov 06 07:22:08 ... starting to generate Genome filesNov 06 07:22:08 ..... processing annotations GTFNov 06 07:22:08 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:22:08 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:22:08 ... loading chunks from disk, packing SA...Nov 06 07:22:08 ... finished generating suffix arrayNov 06 07:22:08 ... generating Suffix Array indexNov 06 07:22:08 ... completed Suffix Array indexNov 06 07:22:08 ..... inserting junctions into the genome indicesNov 06 07:22:08 ... writing Genome to disk ...Nov 06 07:22:08 ... writing Suffix Array to disk ...Nov 06 07:22:08 ... writing SAindex to diskNov 06 07:22:08 ..... finished successfullyNov 06 07:22:08 ..... started STAR runNov 06 07:22:08 ..... loading genomeNov 06 07:22:08 ..... started mappingNov 06 07:22:25 ..... finished mappingNov 06 07:22:26 ..... started Solo countingNov 06 07:22:26 ..... finished Solo countingNov 06 07:22:26 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #2)" name="1" time="74.53866362571716">
        
            
            <system-out><![CDATA[
            Nov 06 07:13:53 ..... started STAR runNov 06 07:13:53 ... starting to generate Genome filesNov 06 07:13:53 ..... processing annotations GTFNov 06 07:13:53 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:13:53 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:13:54 ... loading chunks from disk, packing SA...Nov 06 07:13:54 ... finished generating suffix arrayNov 06 07:13:54 ... generating Suffix Array indexNov 06 07:13:54 ... completed Suffix Array indexNov 06 07:13:54 ..... inserting junctions into the genome indicesNov 06 07:13:54 ... writing Genome to disk ...Nov 06 07:13:54 ... writing Suffix Array to disk ...Nov 06 07:13:54 ... writing SAindex to diskNov 06 07:13:54 ..... finished successfullyNov 06 07:13:54 ..... started STAR runNov 06 07:13:54 ..... loading genomeNov 06 07:13:54 ..... started mappingNov 06 07:14:11 ..... finished mappingNov 06 07:14:11 ..... started Solo countingNov 06 07:14:11 ..... finished Solo countingNov 06 07:14:11 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #2)" name="1" time="67.83401703834534">
        
            
            <system-out><![CDATA[
            Nov 06 07:23:15 ..... started STAR runNov 06 07:23:15 ... starting to generate Genome filesNov 06 07:23:15 ..... processing annotations GTFNov 06 07:23:15 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:23:15 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:23:15 ... loading chunks from disk, packing SA...Nov 06 07:23:15 ... finished generating suffix arrayNov 06 07:23:15 ... generating Suffix Array indexNov 06 07:23:15 ... completed Suffix Array indexNov 06 07:23:15 ..... inserting junctions into the genome indicesNov 06 07:23:15 ... writing Genome to disk ...Nov 06 07:23:15 ... writing Suffix Array to disk ...Nov 06 07:23:16 ... writing SAindex to diskNov 06 07:23:16 ..... finished successfullyNov 06 07:23:16 ..... started STAR runNov 06 07:23:16 ..... loading genomeNov 06 07:23:16 ..... started mappingNov 06 07:23:33 ..... finished mappingNov 06 07:23:33 ..... started Solo countingNov 06 07:23:33 ..... finished Solo countingNov 06 07:23:33 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #3)" name="2" time="101.80705380439758">
        
            
            <system-out><![CDATA[
            Nov 06 07:15:02 ..... started STAR runNov 06 07:15:02 ... starting to generate Genome filesNov 06 07:15:02 ..... processing annotations GTFNov 06 07:15:02 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:15:02 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:15:02 ... loading chunks from disk, packing SA...Nov 06 07:15:02 ... finished generating suffix arrayNov 06 07:15:02 ... generating Suffix Array indexNov 06 07:15:02 ... completed Suffix Array indexNov 06 07:15:02 ..... inserting junctions into the genome indicesNov 06 07:15:02 ... writing Genome to disk ...Nov 06 07:15:02 ... writing Suffix Array to disk ...Nov 06 07:15:02 ... writing SAindex to diskNov 06 07:15:02 ..... finished successfullyNov 06 07:15:02 ..... started STAR runNov 06 07:15:03 ..... loading genomeNov 06 07:15:03 ..... started mappingNov 06 07:15:54 ..... finished mappingNov 06 07:15:54 ..... started Solo countingNov 06 07:15:54 ..... finished Solo countingNov 06 07:15:54 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #3)" name="2" time="103.92157244682312">
        
            
            <system-out><![CDATA[
            Nov 06 07:24:27 ..... started STAR runNov 06 07:24:27 ... starting to generate Genome filesNov 06 07:24:27 ..... processing annotations GTFNov 06 07:24:27 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:24:27 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:24:27 ... loading chunks from disk, packing SA...Nov 06 07:24:27 ... finished generating suffix arrayNov 06 07:24:27 ... generating Suffix Array indexNov 06 07:24:27 ... completed Suffix Array indexNov 06 07:24:27 ..... inserting junctions into the genome indicesNov 06 07:24:27 ... writing Genome to disk ...Nov 06 07:24:27 ... writing Suffix Array to disk ...Nov 06 07:24:27 ... writing SAindex to diskNov 06 07:24:27 ..... finished successfullyNov 06 07:24:27 ..... started STAR runNov 06 07:24:27 ..... loading genomeNov 06 07:24:27 ..... started mappingNov 06 07:25:19 ..... finished mappingNov 06 07:25:19 ..... started Solo countingNov 06 07:25:19 ..... finished Solo countingNov 06 07:25:19 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #4)" name="3" time="68.40370202064514">
        
            
            <system-out><![CDATA[
            Nov 06 07:16:45 ..... started STAR runNov 06 07:16:45 ... starting to generate Genome filesNov 06 07:16:45 ..... processing annotations GTFNov 06 07:16:45 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:16:45 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:16:45 ... loading chunks from disk, packing SA...Nov 06 07:16:45 ... finished generating suffix arrayNov 06 07:16:45 ... generating Suffix Array indexNov 06 07:16:45 ... completed Suffix Array indexNov 06 07:16:45 ..... inserting junctions into the genome indicesNov 06 07:16:45 ... writing Genome to disk ...Nov 06 07:16:45 ... writing Suffix Array to disk ...Nov 06 07:16:45 ... writing SAindex to diskNov 06 07:16:45 ..... finished successfullyNov 06 07:16:45 ..... started STAR runNov 06 07:16:45 ..... loading genomeNov 06 07:16:45 ..... started mappingNov 06 07:17:02 ..... finished mappingNov 06 07:17:02 ..... started Solo countingNov 06 07:17:02 ..... finished Solo countingNov 06 07:17:02 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #4)" name="3" time="129.81473588943481">
        
            
            <system-out><![CDATA[
            Nov 06 07:27:10 ..... started STAR runNov 06 07:27:10 ... starting to generate Genome filesNov 06 07:27:10 ..... processing annotations GTFNov 06 07:27:10 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:27:10 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:27:10 ... loading chunks from disk, packing SA...Nov 06 07:27:10 ... finished generating suffix arrayNov 06 07:27:10 ... generating Suffix Array indexNov 06 07:27:10 ... completed Suffix Array indexNov 06 07:27:10 ..... inserting junctions into the genome indicesNov 06 07:27:10 ... writing Genome to disk ...Nov 06 07:27:10 ... writing Suffix Array to disk ...Nov 06 07:27:10 ... writing SAindex to diskNov 06 07:27:10 ..... finished successfullyNov 06 07:27:10 ..... started STAR runNov 06 07:27:11 ..... loading genomeNov 06 07:27:11 ..... started mappingNov 06 07:27:28 ..... finished mappingNov 06 07:27:28 ..... started Solo countingNov 06 07:27:28 ..... finished Solo countingNov 06 07:27:28 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #5)" name="4" time="71.69668436050415">
        
            
            <system-out><![CDATA[
            Nov 06 07:17:57 ..... started STAR runNov 06 07:17:57 ... starting to generate Genome filesNov 06 07:17:57 ..... processing annotations GTFNov 06 07:17:57 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:17:57 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:17:57 ... loading chunks from disk, packing SA...Nov 06 07:17:57 ... finished generating suffix arrayNov 06 07:17:57 ... generating Suffix Array indexNov 06 07:17:57 ... completed Suffix Array indexNov 06 07:17:57 ..... inserting junctions into the genome indicesNov 06 07:17:57 ... writing Genome to disk ...Nov 06 07:17:57 ... writing Suffix Array to disk ...Nov 06 07:17:57 ... writing SAindex to diskNov 06 07:17:57 ..... finished successfullyNov 06 07:17:57 ..... started STAR runNov 06 07:17:57 ..... loading genomeNov 06 07:17:57 ..... started mappingNov 06 07:18:14 ..... finished mappingNov 06 07:18:14 ..... started Solo countingNov 06 07:18:14 ..... finished Solo countingNov 06 07:18:14 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #5)" name="4" time="29.200019598007202">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 29.200019598007202, "tool_id": "rna_starsolo", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #6)" name="5" time="14.419739961624146">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 14.419739961624146, "tool_id": "rna_starsolo", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #6)" name="5" time="16.814604997634888">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 16.814604997634888, "tool_id": "rna_starsolo", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #7)" name="6" time="58.72488856315613">
        
            
            <system-out><![CDATA[
            Nov 06 07:19:27 ..... started STAR runNov 06 07:19:27 ... starting to generate Genome filesNov 06 07:19:27 ..... processing annotations GTFNov 06 07:19:27 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:19:27 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:19:27 ... loading chunks from disk, packing SA...Nov 06 07:19:27 ... finished generating suffix arrayNov 06 07:19:27 ... generating Suffix Array indexNov 06 07:19:27 ... completed Suffix Array indexNov 06 07:19:27 ..... inserting junctions into the genome indicesNov 06 07:19:27 ... writing Genome to disk ...Nov 06 07:19:27 ... writing Suffix Array to disk ...Nov 06 07:19:27 ... writing SAindex to diskNov 06 07:19:27 ..... finished successfullyNov 06 07:19:27 ..... started STAR runNov 06 07:19:27 ..... loading genomeNov 06 07:19:27 ..... started mappingNov 06 07:19:28 ..... finished mappingNov 06 07:19:28 ..... started Solo countingNov 06 07:19:28 ..... finished Solo countingNov 06 07:19:28 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #7)" name="6" time="53.716638803482056">
        
            
            <system-out><![CDATA[
            Nov 06 07:29:07 ..... started STAR runNov 06 07:29:07 ... starting to generate Genome filesNov 06 07:29:07 ..... processing annotations GTFNov 06 07:29:07 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:29:07 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:29:07 ... loading chunks from disk, packing SA...Nov 06 07:29:07 ... finished generating suffix arrayNov 06 07:29:07 ... generating Suffix Array indexNov 06 07:29:07 ... completed Suffix Array indexNov 06 07:29:07 ..... inserting junctions into the genome indicesNov 06 07:29:07 ... writing Genome to disk ...Nov 06 07:29:07 ... writing Suffix Array to disk ...Nov 06 07:29:07 ... writing SAindex to diskNov 06 07:29:07 ..... finished successfullyNov 06 07:29:07 ..... started STAR runNov 06 07:29:07 ..... loading genomeNov 06 07:29:07 ..... started mappingNov 06 07:29:08 ..... finished mappingNov 06 07:29:08 ..... started Solo countingNov 06 07:29:08 ..... finished Solo countingNov 06 07:29:08 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #8)" name="7" time="110.08990120887756">
        
            
            <system-out><![CDATA[
            Nov 06 07:21:12 ..... started STAR runNov 06 07:21:12 ... starting to generate Genome filesNov 06 07:21:12 ..... processing annotations GTFNov 06 07:21:12 ... starting to sort Suffix Array. This may take a long time...Nov 06 07:21:12 ... sorting Suffix Array chunks and saving them to disk...Nov 06 07:21:12 ... loading chunks from disk, packing SA...Nov 06 07:21:12 ... finished generating suffix arrayNov 06 07:21:12 ... generating Suffix Array indexNov 06 07:21:12 ... completed Suffix Array indexNov 06 07:21:12 ..... inserting junctions into the genome indicesNov 06 07:21:12 ... writing Genome to disk ...Nov 06 07:21:12 ... writing Suffix Array to disk ...Nov 06 07:21:12 ... writing SAindex to diskNov 06 07:21:12 ..... finished successfullyNov 06 07:21:12 ..... started STAR runNov 06 07:21:12 ..... loading genomeNov 06 07:21:12 ..... started mappingNov 06 07:21:16 ..... finished mappingNov 06 07:21:16 ..... started Solo countingNov 06 07:21:16 ..... finished Solo countingNov 06 07:21:16 ..... finished successfully
            ]]></system-out>
            <system-err><![CDATA[
            [bam_sort_core] merging from 0 files and 3 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="rna_starsolo (Test #8)" name="7" time="60.78098177909851">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 60.78098177909851, "tool_id": "rna_starsolo", "tool_version": "2.7.8a"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_split (Test #1)" name="0" time="31.05920648574829">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_bam": {   "id": "b05cb5a6aec60369",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools split -f \u0027Read_Group_%!.bam\u0027 -u \u0027/galaxy/server/database/objects/d/a/c/dataset_dac93426-a418-43e2-9b4b-27ce8876cf5d.dat\u0027 -@ $addthreads \u0027/galaxy/server/database/objects/5/3/4/dataset_534141d8-9b49-4584-9ec8-1374cd5ebca5.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T07:45:03.314044",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6kb7p",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "7a20f446fcdb18d9",  "inputs": {   "input_bam": {    "id": "b05cb5a6aec60369",    "src": "hda",    "uuid": "534141d8-9b49-4584-9ec8-1374cd5ebca5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256707.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:45:07"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256707.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:45:07"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "__new_primary_file_output|Elephant__": {    "id": "aa09133b98c04aac",    "src": "hda",    "uuid": "813663ee-d828-4720-ae5a-41e804c2e05d"   },   "__new_primary_file_output|Human__": {    "id": "c62ffb04c3c95e65",    "src": "hda",    "uuid": "0fadc40c-f80d-45d8-9666-a9f54406e96f"   },   "__new_primary_file_output|Mouse__": {    "id": "84ddd5cf3d494a5c",    "src": "hda",    "uuid": "bfa24399-9fa4-4eec-b764-961134e2ffac"   },   "output": {    "id": "43a1d62e967c2aff",    "src": "hda",    "uuid": "dac93426-a418-43e2-9b4b-27ce8876cf5d"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "header": null  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_split/samtools_split/1.9",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:45:17.711878",  "user_email": "tests@fake.org" }, "output_problems": [  "Primary output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_5dz535_3.sam v. /tmp/history_bam_converted_to_sam_0hxo7qa6.sam )\n--- local_file\n+++ history_data\n@@ -6,11 +6,11 @@\n @PG\tID:bowtie2-D76CD0\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-58C6F748\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-D76CD0-8B37AF2\tPN:bowtie2\tVN:2.1.0\n-@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/a/c/dataset_dac93426-a418-43e2-9b4b-27ce8876cf5d.dat -@ 0 /galaxy/server/database/objects/5/3/4/dataset_534141d8-9b49-4584-9ec8-1374cd5ebca5.dat\n+@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/a/c/dataset_dac93426-a418-43e2-9b4b-27ce8876cf5d.dat -@ 0 /galaxy/server/database/objects/5/3/4/dataset_534141d8-9b49-4584-9ec8-1374cd5ebca5.dat\n+@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/a/c/dataset_dac93426-a418-43e2-9b4b-27ce8876cf5d.dat -@ 0 /galaxy/server/database/objects/5/3/4/dataset_534141d8-9b49-4584-9ec8-1374cd5ebca5.dat\n+@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/a/c/dataset_dac93426-a418-43e2-9b4b-27ce8876cf5d.dat -@ 0 /galaxy/server/database/objects/5/3/4/dataset_534141d8-9b49-4584-9ec8-1374cd5ebca5.dat\n+@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/d/a/c/dataset_dac93426-a418-43e2-9b4b-27ce8876cf5d.dat -@ 0 /galaxy/server/database/objects/5/3/4/dataset_534141d8-9b49-4584-9ec8-1374cd5ebca5.dat\n phiX174_9_527_1:0:0_0:0:0_54/1\t0\tphiX174\t9\t42\t70M\t*\t0\t0\tTCGCTTCCATGACGCAGAAGTTAACACTTTCGGATATTTCTGATGAGTCGAAAAATTATCTTGATCAAGC\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:65A4\tYT:Z:UU\tRG:Z:Mouse\n phiX174_71_657_0:0:0_1:0:0_72/1\t0\tphiX174\t71\t42\t70M\t*\t0\t0\tGATAAAGCAGGAATTACTACTGCTTGTTTACGAATTAAATCGAAGTGGACTGCTGGCGGAAAATGAGAAA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:0\tXN:i:0\tXM:i:0\tXO:i:0\tXG:i:0\tNM:i:0\tMD:Z:70\tYT:Z:UU\tRG:Z:Mouse\n phiX174_99_617_1:0:0_2:1:0_a2/1\t0\tphiX174\t99\t42\t70M\t*\t0\t0\tTACGAATTAAATCGAAGTGGACTGCTTGCGGAAAATGAGAAAATTCGACCTATCCTTGCGCAGCTCGAGA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:26G43\tYT:Z:UU\tRG:Z:Mouse\n" ], "status": "failure", "test_index": 0, "time_seconds": 31.05920648574829, "tool_id": "samtools_split", "tool_version": "1.9"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #1)" name="0" time="31.929747819900513">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "33ebee145601b35b",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/a/a/4/dataset_aa43d82f-1fe9-41ea-b5d0-e5175dfff4f9.dat\u0027 infile \u0026\u0026        samtools view -@ $addthreads -b      -o outfile      infile    \u0026\u0026 samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile \u0026\u0026 mv tmpsam outfile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:32:38.068649",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-p4ms2",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "77174a92396f7bb5",  "inputs": {   "input": {    "id": "33ebee145601b35b",    "src": "hda",    "uuid": "aa43d82f-1fe9-41ea-b5d0-e5175dfff4f9"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699255963.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:32:43"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699255963.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:32:43"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "5267b6cde66d84e0",    "src": "hda",    "uuid": "55d1df2e-64f0-4448-83dc-45fffed894be"   }  },  "params": {   "__input_ext": "\"sam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:32:53.796686",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (sam_to_bam_out1.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 31.929747819900513, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #11)" name="10" time="27.292494773864746">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "78a8256d73d5368a",   "src": "hda"  },  "mode|output_options|output_format|oformat": "sam",  "mode|output_options|output_format|with_header": true }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/2/8/1/dataset_281d4197-3d78-4b54-abe4-77472c978722.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/7/c/c/metadata_7cc37cbd-b661-4340-98ae-bb19e2cd91c7.dat\u0027 infile.bai \u0026\u0026        samtools view -@ $addthreads      -h  -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:36:52.375675",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-jwm49",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "c2dde6c562ec1eb8",  "inputs": {   "input": {    "id": "78a8256d73d5368a",    "src": "hda",    "uuid": "281d4197-3d78-4b54-abe4-77472c978722"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256214.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:36:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256214.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:36:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "e35d23e0897f5c15",    "src": "hda",    "uuid": "0276fc70-4298-4bb7-8d25-c28616707cd7"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": true}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:37:03.223559",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (bam_to_sam_out1.sam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 10, "time_seconds": 27.292494773864746, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #12)" name="11" time="28.421160221099854">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "cd546fce40250b49",   "src": "hda"  },  "mode|output_options|output_format|oformat": "sam",  "mode|outtype": "header" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/9/a/5/dataset_9a502e95-80ac-4bc9-ae5d-293cb6e28366.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/d/0/4/metadata_d04e776e-60e1-462b-b1b8-59c4245ac8f7.dat\u0027 infile.bai \u0026\u0026    samtools view -H  -o outfile   infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:37:19.786583",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bpmgm",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "cc5913cde81cc901",  "inputs": {   "input": {    "id": "cd546fce40250b49",    "src": "hda",    "uuid": "9a502e95-80ac-4bc9-ae5d-293cb6e28366"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256241.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:37:21"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256241.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:37:21"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "3d11924745b4787b",    "src": "hda",    "uuid": "dc3c58ae-74c9-48d4-a1c9-422071a91d84"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 2, \"output_options\": {\"__current_case__\": 0, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\"}, \"reads_report_type\": \"\"}, \"outtype\": \"header\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:37:31.778779",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (bam_to_sam_out2.sam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 11, "time_seconds": 28.421160221099854, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #13)" name="12" time="25.444393634796143">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "d3be5e08e00defe0",   "src": "hda"  },  "mode|output_options|output_format|oformat": "sam",  "mode|output_options|output_format|with_header": false }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/2/d/6/dataset_2d6abe73-e814-4261-b7c0-a4fc79c4d729.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/5/e/5/metadata_5e51fe41-418e-49ff-9bc1-7ded0bd816c9.dat\u0027 infile.bai \u0026\u0026        samtools view -@ $addthreads        -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:37:47.370441",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-glsnr",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "61d51b289a9448d8",  "inputs": {   "input": {    "id": "d3be5e08e00defe0",    "src": "hda",    "uuid": "2d6abe73-e814-4261-b7c0-a4fc79c4d729"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256268.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:37:48"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256268.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:37:48"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "de63df86b1d71bf2",    "src": "hda",    "uuid": "80461421-e4d9-4fb6-869d-264bb9ca86ec"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": false}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:37:57.278356",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (bam_to_sam_out3.sam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 12, "time_seconds": 25.444393634796143, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #14)" name="13" time="27.389363765716553">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "b884632506efc91b",   "src": "hda"  },  "mode|output_options|reads_report_type": "count",  "mode|outtype": "all_reads" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/0/2/a/dataset_02a1925f-5948-4318-b8f3-c8d841eb3961.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/e/f/a/metadata_efaeb78c-4185-461f-9057-b1331930e612.dat\u0027 infile.bai \u0026\u0026        samtools view -@ $addthreads -c     -o outfile     infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:38:13.808850",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wlf8n",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "f7facdbd3b7bfee7",  "inputs": {   "input": {    "id": "b884632506efc91b",    "src": "hda",    "uuid": "02a1925f-5948-4318-b8f3-c8d841eb3961"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256295.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:38:15"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256295.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:38:15"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputcnt": {    "id": "e93398168b9ee715",    "src": "hda",    "uuid": "0c6c74ea-360f-4831-97bb-8199e02e16fc"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 1, \"reads_report_type\": \"count\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:38:24.629109",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputcnt: Test output file (test_counts.tab) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 13, "time_seconds": 27.389363765716553, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #15)" name="14" time="23.94965958595276">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "875d62646da2a4bc",   "src": "hda"  },  "input": {   "id": "f21aa7a04d6684be",   "src": "hda"  },  "mode|filter_config|cond_region|select_region": "no",  "mode|output_options|output_format|oformat": "cram",  "mode|outtype": "selected_reads" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/3/a/7/dataset_3a7abe7a-28ff-4544-9851-9f11b4e3fa53.dat\u0027 reference.fa \u0026\u0026 samtools faidx reference.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/d/7/6/dataset_d76ad01c-3a33-48c3-9601-e087eba798ac.dat\u0027 infile \u0026\u0026         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T \u0027reference.fa\u0027 -t \u0027reference.fa.fai\u0027   infile",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T07:38:42.423070",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-k8wwv",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "93be88ca4ee3c620",  "inputs": {   "addref_cond|ref": {    "id": "875d62646da2a4bc",    "src": "hda",    "uuid": "3a7abe7a-28ff-4544-9851-9f11b4e3fa53"   },   "input": {    "id": "f21aa7a04d6684be",    "src": "hda",    "uuid": "d76ad01c-3a33-48c3-9601-e087eba798ac"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "76b96c8e4e0e876e",    "src": "hda",    "uuid": "8b38a542-d00d-4ee7-96b4-415aa1acb4e3"   }  },  "params": {   "__input_ext": "\"sam\"",   "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 485, \"src\": \"hda\"}]}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:38:48.660364",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 14, "time_seconds": 23.94965958595276, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #16)" name="15" time="30.502342224121094">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "90a1cdff19b1b502",   "src": "hda"  },  "input": {   "id": "b1766f4ea111c3d1",   "src": "hda"  },  "mode|filter_config|cond_region|select_region": "no",  "mode|output_options|output_format|oformat": "cram",  "mode|outtype": "selected_reads" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/2/5/8/dataset_2585c428-06c6-4081-92fd-8b97cc739180.dat\u0027 reference.fa \u0026\u0026 samtools faidx reference.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/2/b/e/dataset_2be09060-49f1-40d8-a4dd-a9eea395c4b3.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/5/2/7/metadata_527fa5fb-c403-4233-a1ed-736479573632.dat\u0027 infile.bai \u0026\u0026         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T \u0027reference.fa\u0027 -t \u0027reference.fa.fai\u0027   infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:39:07.398777",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rnkx9",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "87fa427e8a6b2de9",  "inputs": {   "addref_cond|ref": {    "id": "90a1cdff19b1b502",    "src": "hda",    "uuid": "2585c428-06c6-4081-92fd-8b97cc739180"   },   "input": {    "id": "b1766f4ea111c3d1",    "src": "hda",    "uuid": "2be09060-49f1-40d8-a4dd-a9eea395c4b3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256349.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:39:09"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256349.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:39:09"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "39661969be3dba63",    "src": "hda",    "uuid": "d4ced4a6-5f11-49d1-b474-81e62ffa7d9e"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 488, \"src\": \"hda\"}]}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:39:19.288712",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 15, "time_seconds": 30.502342224121094, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #17)" name="16" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 16, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #18)" name="17" time="29.381877660751343">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "ae991eb2a22c8487",   "src": "hda"  },  "input": {   "id": "afc7f1d03fdeca70",   "src": "hda"  },  "mode|filter_config|cond_region|regions": "CHROMOSOME_I",  "mode|filter_config|cond_region|select_region": "text",  "mode|output_options|output_format|oformat": "cram",  "mode|outtype": "selected_reads" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/9/c/9/dataset_9c9936c6-025b-4434-86dc-809ecce52fea.dat\u0027 reference.fa \u0026\u0026 samtools faidx reference.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/0/8/5/dataset_0853b71d-a7e5-4a4a-9794-bcda6f8dd19a.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/0/3/d/metadata_03dbe93e-85e7-4027-8ef7-52183b8a3515.dat\u0027 infile.bai \u0026\u0026         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T \u0027reference.fa\u0027 -t \u0027reference.fa.fai\u0027   infile  \u0027CHROMOSOME_I\u0027",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:39:37.298626",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-z272h",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "3129237b65f986d6",  "inputs": {   "addref_cond|ref": {    "id": "ae991eb2a22c8487",    "src": "hda",    "uuid": "9c9936c6-025b-4434-86dc-809ecce52fea"   },   "input": {    "id": "afc7f1d03fdeca70",    "src": "hda",    "uuid": "0853b71d-a7e5-4a4a-9794-bcda6f8dd19a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256379.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:39:39"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256379.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:39:39"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "06b5647aac3f0f0c",    "src": "hda",    "uuid": "917b1633-f8d9-4474-bc30-9fc41636eb42"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 491, \"src\": \"hda\"}]}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:39:48.965113",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 17, "time_seconds": 29.381877660751343, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #19)" name="18" time="23.056519508361816">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "d58d02e6929ee309",   "src": "hda"  },  "input": {   "id": "36a63e2275e5c066",   "src": "hda"  },  "mode|filter_config|cond_region|regions": "CHROMOSOME_I",  "mode|filter_config|cond_region|select_region": "text",  "mode|output_options|output_format|oformat": "bam",  "mode|outtype": "selected_reads" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/9/a/1/dataset_9a185f61-6d4e-44a7-8015-e9054ed2721f.dat\u0027 reference.fa \u0026\u0026 samtools faidx reference.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/9/e/c/dataset_9ec6e883-69ff-4aa8-8fdd-e22203638e5d.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/3/0/a/metadata_30aacc82-acff-470c-a012-2830ed49d9a7.dat\u0027 infile.crai \u0026\u0026         samtools view -@ $addthreads -b      -o outfile    -T \u0027reference.fa\u0027 -t \u0027reference.fa.fai\u0027   infile  \u0027CHROMOSOME_I\u0027  \u0026\u0026 samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile \u0026\u0026 mv tmpsam outfile",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-06T07:40:05.829590",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-p4gvk",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "21c3a66b1a96c553",  "inputs": {   "addref_cond|ref": {    "id": "d58d02e6929ee309",    "src": "hda",    "uuid": "9a185f61-6d4e-44a7-8015-e9054ed2721f"   },   "input": {    "id": "36a63e2275e5c066",    "src": "hda",    "uuid": "9ec6e883-69ff-4aa8-8fdd-e22203638e5d"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "ae55d0be8553e747",    "src": "hda",    "uuid": "d9f7a9eb-cb06-4416-9ad1-e86513e7dcb4"   }  },  "params": {   "__input_ext": "\"cram\"",   "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 494, \"src\": \"hda\"}]}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:40:11.887632",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 18, "time_seconds": 23.056519508361816, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #20)" name="19" time="35.71860694885254">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "4b812d57e333bf60",   "src": "hda"  },  "input": {   "id": "a3419f898d915033",   "src": "hda"  },  "mode|filter_config|cond_region|bedfile": {   "id": "55f223dcf07b04c3",   "src": "hda"  },  "mode|filter_config|cond_region|select_region": "bed",  "mode|output_options|output_format|oformat": "bam",  "mode|outtype": "selected_reads" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/7/b/9/dataset_7b904ae9-858c-4639-ae86-da064eec9d54.dat\u0027 reference.fa \u0026\u0026 samtools faidx reference.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/5/3/1/dataset_531ff260-7f5c-4c29-9982-d93efd89b867.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/9/9/f/metadata_99f5d3d2-6f2c-44e9-a58b-ac03172c8222.dat\u0027 infile.crai \u0026\u0026         samtools view -@ $addthreads -b  -L \u0027/galaxy/server/database/objects/3/e/2/dataset_3e283866-bd0e-4239-90a1-132a44ccb1b9.dat\u0027    -o outfile    -T \u0027reference.fa\u0027 -t \u0027reference.fa.fai\u0027   infile    \u0026\u0026 samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile \u0026\u0026 mv tmpsam outfile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:40:35.386896",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-626nw",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "1abf425a2d802b2d",  "inputs": {   "addref_cond|ref": {    "id": "4b812d57e333bf60",    "src": "hda",    "uuid": "7b904ae9-858c-4639-ae86-da064eec9d54"   },   "input": {    "id": "a3419f898d915033",    "src": "hda",    "uuid": "531ff260-7f5c-4c29-9982-d93efd89b867"   },   "mode|filter_config|cond_region|bedfile": {    "id": "55f223dcf07b04c3",    "src": "hda",    "uuid": "3e283866-bd0e-4239-90a1-132a44ccb1b9"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256437.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:40:37"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256437.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:40:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "d7605d8359e63e19",    "src": "hda",    "uuid": "50b55390-be9c-4fa1-9da2-73c719bfdb5a"   }  },  "params": {   "__input_ext": "\"cram\"",   "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 498, \"src\": \"hda\"}]}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 2, \"bedfile\": {\"values\": [{\"id\": 497, \"src\": \"hda\"}]}, \"select_region\": \"bed\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:40:47.715928",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 19, "time_seconds": 35.71860694885254, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #3)" name="2" time="27.45002770423889">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "da651d1608d32bb7",   "src": "hda"  },  "input": {   "id": "671f898b13e09b3e",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/0/d/f/dataset_0df12b20-9716-438d-8096-0b81c709f289.dat\u0027 reference.fa \u0026\u0026 samtools faidx reference.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/e/f/7/dataset_ef7c319a-e3f7-48e6-a248-abf0cfe87b9c.dat\u0027 infile \u0026\u0026        samtools view -@ $addthreads -b      -o outfile    -T \u0027reference.fa\u0027 -t \u0027reference.fa.fai\u0027   infile    \u0026\u0026 samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile \u0026\u0026 mv tmpsam outfile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:33:10.746137",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zlg2k",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "f7ace35159c4211c",  "inputs": {   "addref_cond|ref": {    "id": "da651d1608d32bb7",    "src": "hda",    "uuid": "0df12b20-9716-438d-8096-0b81c709f289"   },   "input": {    "id": "671f898b13e09b3e",    "src": "hda",    "uuid": "ef7c319a-e3f7-48e6-a248-abf0cfe87b9c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699255992.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:33:12"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699255991.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:33:11"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "95e77af6cb7ac49d",    "src": "hda",    "uuid": "fa4cc6f4-4af3-4b92-9188-d3e21cab5a67"   }  },  "params": {   "__input_ext": "\"sam\"",   "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 459, \"src\": \"hda\"}]}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/equCab2.len\"",   "dbkey": "\"equCab2\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:33:21.299530",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (sam_to_bam_out3.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 27.45002770423889, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #21)" name="20" time="25.120453119277954">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "cb44834805146b19",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|select_subsample": "target",  "mode|subsample_config|subsampling_mode|target": "2" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/1/e/a/dataset_1eaa965a-1398-48ef-8bd2-872359a8b46c.dat\u0027 infile \u0026\u0026         sample_fragment=`samtools view -c  infile  | awk \u0027{s=$1} END {frac=s/2; print(frac \u003e 1 ? 24304+1/frac : \".0\")}\u0027` \u0026\u0026  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:41:02.972966",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9pgnr",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "3cc871a1a60e6898",  "inputs": {   "input": {    "id": "cb44834805146b19",    "src": "hda",    "uuid": "1eaa965a-1398-48ef-8bd2-872359a8b46c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256464.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:41:04"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256464.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:41:04"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "dc13ab32d463c32d",    "src": "hda",    "uuid": "5967ab40-4610-4c17-a395-6661c760eddd"   }  },  "params": {   "__input_ext": "\"sam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"2\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:41:13.006741",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test_ds.sam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 20, "time_seconds": 25.120453119277954, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #22)" name="21" time="27.611613273620605">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "197743c726a6a1d5",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|select_subsample": "target",  "mode|subsample_config|subsampling_mode|target": "20" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/8/d/c/dataset_8dc371af-1a42-4221-8b7e-d7da3d16da12.dat\u0027 infile \u0026\u0026         sample_fragment=`samtools view -c  infile  | awk \u0027{s=$1} END {frac=s/20; print(frac \u003e 1 ? 23504+1/frac : \".0\")}\u0027` \u0026\u0026  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:41:28.737555",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-kg5kr",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "cbb2ca146c1493ae",  "inputs": {   "input": {    "id": "197743c726a6a1d5",    "src": "hda",    "uuid": "8dc371af-1a42-4221-8b7e-d7da3d16da12"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256490.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:41:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256490.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:41:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "81731c79b84547aa",    "src": "hda",    "uuid": "50d7e195-d665-4175-8dd8-ce93c902d9f9"   }  },  "params": {   "__input_ext": "\"sam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:41:40.468772",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test.sam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 21, "time_seconds": 27.611613273620605, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #23)" name="22" time="27.140397548675537">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "42c8b56c996134a0",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|select_subsample": "target",  "mode|subsample_config|subsampling_mode|target": "20" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/1/9/0/dataset_190b1e09-62f4-48c1-a14e-7f1f1c6bbb11.dat\u0027 infile \u0026\u0026         sample_fragment=`samtools view -c  infile  | awk \u0027{s=$1} END {frac=s/20; print(frac \u003e 1 ? 12685+1/frac : \".0\")}\u0027` \u0026\u0026  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:41:55.930694",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-q6kh9",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "74bdf1d0318bf6f8",  "inputs": {   "input": {    "id": "42c8b56c996134a0",    "src": "hda",    "uuid": "190b1e09-62f4-48c1-a14e-7f1f1c6bbb11"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256518.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:41:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256518.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:41:58"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "1a8aeaf1ae3b3aa1",    "src": "hda",    "uuid": "4b6b35fc-f8e1-4c47-bc01-4875e4c3db56"   }  },  "params": {   "__input_ext": "\"sam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:42:07.877663",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (no_reads.sam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 22, "time_seconds": 27.140397548675537, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #24)" name="23" time="25.405110836029053">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "877a3a5f6bdf5b46",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|select_subsample": "target",  "mode|subsample_config|subsampling_mode|target": "20" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/5/7/7/dataset_57754ead-452e-4a77-bd04-c86fc559235b.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/a/b/5/metadata_ab5c544f-e9d2-43f5-9b78-861326f0edbe.dat\u0027 infile.bai \u0026\u0026         sample_fragment=`samtools idxstats infile | awk \u0027{s+=$4+$3} END {frac=s/20; print(frac \u003e 1 ? 21667+1/frac : \".0\")}\u0027` \u0026\u0026  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:42:23.350023",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-t672x",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "fef45b546a73b56d",  "inputs": {   "input": {    "id": "877a3a5f6bdf5b46",    "src": "hda",    "uuid": "57754ead-452e-4a77-bd04-c86fc559235b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256544.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:42:24"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256544.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:42:24"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "0487ba2af0f6d097",    "src": "hda",    "uuid": "179d8024-c901-4fc7-844b-6f9fdfdf3feb"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:42:33.341027",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (no_reads.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 23, "time_seconds": 25.405110836029053, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #25)" name="24" time="26.70883846282959">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "cfe1a92f25e42f22",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|seed": "7",  "mode|subsample_config|subsampling_mode|select_subsample": "target",  "mode|subsample_config|subsampling_mode|target": "2" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/6/2/b/dataset_62b86509-8292-4b9e-bf3e-2263a2a57499.dat\u0027 infile \u0026\u0026         sample_fragment=`samtools view -c  infile  | awk \u0027{s=$1} END {frac=s/2; print(frac \u003e 1 ? 7+1/frac : \".0\")}\u0027` \u0026\u0026  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:42:49.116591",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7fk7z",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "7083c31589ded4ca",  "inputs": {   "input": {    "id": "cfe1a92f25e42f22",    "src": "hda",    "uuid": "62b86509-8292-4b9e-bf3e-2263a2a57499"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256571.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:42:51"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256570.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:42:50"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "c1a0212e6e7ad983",    "src": "hda",    "uuid": "263ecafe-7424-4826-85be-e8bbf242d0a4"   }  },  "params": {   "__input_ext": "\"sam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"2\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:42:59.930411",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test_ds.sam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 24, "time_seconds": 26.70883846282959, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #26)" name="25" time="26.569080114364624">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "6973bc95b04ba2c1",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|seed": "7",  "mode|subsample_config|subsampling_mode|select_subsample": "target",  "mode|subsample_config|subsampling_mode|target": "2" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/b/5/2/dataset_b52edc73-bf04-47c6-9188-1648f9d40f53.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/9/b/a/metadata_9ba15088-0751-4d73-9992-5ec4909c216a.dat\u0027 infile.bai \u0026\u0026         sample_fragment=`samtools idxstats infile | awk \u0027{s+=$4+$3} END {frac=s/2; print(frac \u003e 1 ? 7+1/frac : \".0\")}\u0027` \u0026\u0026  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:43:15.474571",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-d7qch",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "e5be54953bae39b6",  "inputs": {   "input": {    "id": "6973bc95b04ba2c1",    "src": "hda",    "uuid": "b52edc73-bf04-47c6-9188-1648f9d40f53"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256597.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:43:17"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256597.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:43:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "88d93fe3902ed6eb",    "src": "hda",    "uuid": "32995f0d-de78-4f83-8c94-c4e6ab6e000f"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"2\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:43:26.496297",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 25, "time_seconds": 26.569080114364624, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #27)" name="26" time="25.069547414779663">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "2cd0086113d2479c",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|seed": "7",  "mode|subsample_config|subsampling_mode|select_subsample": "target",  "mode|subsample_config|subsampling_mode|target": "20" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/6/0/0/dataset_60084acf-815c-4706-9399-196a05291251.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/6/3/9/metadata_639952b2-cae5-4afe-802b-f0ff2eb8efac.dat\u0027 infile.bai \u0026\u0026         sample_fragment=`samtools idxstats infile | awk \u0027{s+=$4+$3} END {frac=s/20; print(frac \u003e 1 ? 7+1/frac : \".0\")}\u0027` \u0026\u0026  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:43:41.762871",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-ssw2q",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "8092bc540c3fdafb",  "inputs": {   "input": {    "id": "2cd0086113d2479c",    "src": "hda",    "uuid": "60084acf-815c-4706-9399-196a05291251"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256624.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:43:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256623.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:43:43"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "3af4c7830cf90fb1",    "src": "hda",    "uuid": "9e83c010-4a38-4d1a-b26a-325d977a6228"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:43:51.846619",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 26, "time_seconds": 25.069547414779663, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #28)" name="27" time="27.29562997817993">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "3e936349f3b64b6d",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|factor": "5",  "mode|subsample_config|subsampling_mode|seed": "7",  "mode|subsample_config|subsampling_mode|select_subsample": "fraction" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/b/5/9/dataset_b59229fc-96ba-4599-85b8-c2453e4184a5.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/8/1/5/metadata_81536ddc-9126-4e92-a7c1-c5194165d380.dat\u0027 infile.bai \u0026\u0026          samtools view -@ $addthreads -b    -s 7.2   -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:44:08.631002",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rcczr",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "afda21e65807181e",  "inputs": {   "input": {    "id": "3e936349f3b64b6d",    "src": "hda",    "uuid": "b59229fc-96ba-4599-85b8-c2453e4184a5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256650.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:44:10"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256650.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:44:10"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "78e4368cd82ea774",    "src": "hda",    "uuid": "43f7760d-a6f4-4865-9a57-0ef7233c8366"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"5.0\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:44:19.227765",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 27, "time_seconds": 27.29562997817993, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #29)" name="28" time="26.6001398563385">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "54c49131f618a5b3",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input",  "mode|output_options|reads_report_type": "dropped",  "mode|outtype": "selected_reads",  "mode|subsample_config|subsampling_mode|factor": "1.25",  "mode|subsample_config|subsampling_mode|seed": "7",  "mode|subsample_config|subsampling_mode|select_subsample": "fraction" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/e/7/7/dataset_e7780b05-0a71-4725-8c99-1983801dfaf6.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/a/c/a/metadata_aca94ada-0386-4f19-b34e-7f8b041f2afb.dat\u0027 infile.bai \u0026\u0026          samtools view -@ $addthreads -b    -s 7.8   -U outfile -o /dev/null      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:44:34.949632",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-lrk2z",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "54e42078c22e893d",  "inputs": {   "input": {    "id": "54c49131f618a5b3",    "src": "hda",    "uuid": "e7780b05-0a71-4725-8c99-1983801dfaf6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256677.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:44:37"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256677.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:44:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "15a5f9c28fafd9c3",    "src": "hda",    "uuid": "d9b12364-7a70-40b8-9caa-cd1eb3d1d2f7"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 1, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"dropped\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.25\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:44:45.808089",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 28, "time_seconds": 26.6001398563385, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #4)" name="3" time="29.0867977142334">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "addref_cond|addref_select": "history",  "addref_cond|ref": {   "id": "a453959e9c7d811f",   "src": "hda"  },  "input": {   "id": "6b28260d2300e4ac",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/2/a/4/dataset_2a4253bc-9cc4-44a9-843b-de1def6be0ef.dat\u0027 reference.fa \u0026\u0026 samtools faidx reference.fa \u0026\u0026   ln -s \u0027/galaxy/server/database/objects/4/3/b/dataset_43b35b7d-dd8d-4b2b-a2f6-90dcf62a8bdd.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/a/9/3/metadata_a9308bdc-d759-4faf-96c4-a80ff6aab5ca.dat\u0027 infile.crai \u0026\u0026        samtools view -@ $addthreads -b      -o outfile    -T \u0027reference.fa\u0027 -t \u0027reference.fa.fai\u0027   infile    \u0026\u0026 samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile \u0026\u0026 mv tmpsam outfile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:33:38.570760",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-c5vqj",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "79c8bfc5f544f94a",  "inputs": {   "addref_cond|ref": {    "id": "a453959e9c7d811f",    "src": "hda",    "uuid": "2a4253bc-9cc4-44a9-843b-de1def6be0ef"   },   "input": {    "id": "6b28260d2300e4ac",    "src": "hda",    "uuid": "43b35b7d-dd8d-4b2b-a2f6-90dcf62a8bdd"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256020.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:33:40"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256019.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:33:39"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "3ae21c0c4eaf2c8e",    "src": "hda",    "uuid": "32b30559-a623-4487-8eea-9e1108b4a2f9"   }  },  "params": {   "__input_ext": "\"cram\"",   "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 462, \"src\": \"hda\"}]}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:33:50.435221",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 29.0867977142334, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #5)" name="4" time="27.34886908531189">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "d62587aac245b0c8",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/0/b/2/dataset_0b2d8004-f87b-4ecd-b513-4e91a19ebd59.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/4/a/0/metadata_4a0a3e19-a78c-4260-9f47-98ee618aa01e.dat\u0027 infile.bai \u0026\u0026        samtools view -@ $addthreads -b      -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:34:06.981965",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5tnjq",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "83ed4997d8dbbf64",  "inputs": {   "input": {    "id": "d62587aac245b0c8",    "src": "hda",    "uuid": "0b2d8004-f87b-4ecd-b513-4e91a19ebd59"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256048.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:34:08"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256048.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:34:08"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "0f35d662e63fea86",    "src": "hda",    "uuid": "ecac4940-accb-4078-b75d-4ddf8f378411"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:34:17.839241",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 27.34886908531189, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #6)" name="5" time="28.206000804901123">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "1e5241ea46128adf",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/e/8/b/dataset_e8bf3bd6-33cd-4484-8a76-8348bb2dd74d.dat\u0027 infile \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/6/d/4/metadata_6d430d12-6ef3-40ab-a836-12cc1eacf510.dat\u0027 infile.bai \u0026\u0026        samtools view -@ $addthreads -b      -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:34:34.579402",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-xd2mx",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "521b617df9965e0e",  "inputs": {   "input": {    "id": "1e5241ea46128adf",    "src": "hda",    "uuid": "e8bf3bd6-33cd-4484-8a76-8348bb2dd74d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256076.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:34:36"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256076.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:34:36"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "2be0becd1208192d",    "src": "hda",    "uuid": "0142d4a9-1c57-41e5-ba30-2faa2f777da2"   }  },  "params": {   "__input_ext": "\"bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:34:46.323087",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 28.206000804901123, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #7)" name="6" time="25.51296830177307">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "2bac78b68cb89443",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/9/f/6/dataset_9f662658-cff1-4820-ada0-752e38f37217.dat\u0027 infile \u0026\u0026        samtools view -@ $addthreads -b      -o outfile      infile    \u0026\u0026 samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile \u0026\u0026 mv tmpsam outfile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:35:00.747263",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fcrhh",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "4a9e00cc08926e98",  "inputs": {   "input": {    "id": "2bac78b68cb89443",    "src": "hda",    "uuid": "9f662658-cff1-4820-ada0-752e38f37217"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256102.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:35:02"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256102.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:35:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "da3230ab568bd4a1",    "src": "hda",    "uuid": "aa074e70-6f78-4b0d-9ddf-d07c4f4077ee"   }  },  "params": {   "__input_ext": "\"qname_sorted.bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:35:11.621898",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 6, "time_seconds": 25.51296830177307, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #8)" name="7" time="28.46569561958313">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "4d3cf96c2a4626a6",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/b/0/f/dataset_b0f26a66-f3ca-42c2-99f0-bf95992f3574.dat\u0027 infile \u0026\u0026        samtools view -@ $addthreads -h      -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:35:28.607455",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-w8gds",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "546eda6e17a968c4",  "inputs": {   "input": {    "id": "4d3cf96c2a4626a6",    "src": "hda",    "uuid": "b0f26a66-f3ca-42c2-99f0-bf95992f3574"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256130.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:35:30"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256130.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:35:30"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "9f90d056a30db015",    "src": "hda",    "uuid": "f6d43529-c9d8-4662-a967-76429d2815d4"   }  },  "params": {   "__input_ext": "\"qname_sorted.bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:35:40.169540",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (1_sort_read_names.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 7, "time_seconds": 28.46569561958313, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #9)" name="8" time="28.43071675300598">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "187e0250a1fe823e",   "src": "hda"  } }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/c/3/c/dataset_c3c5c5b5-d1b8-49b3-899b-1c93a9cba327.dat\u0027 infile \u0026\u0026        samtools view -@ $addthreads -b      -o outfile      infile    \u0026\u0026 samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile \u0026\u0026 mv tmpsam outfile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:35:57.038354",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fwp8c",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "5c4caaf602a0fc2a",  "inputs": {   "input": {    "id": "187e0250a1fe823e",    "src": "hda",    "uuid": "c3c5c5b5-d1b8-49b3-899b-1c93a9cba327"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256158.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:35:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256158.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:35:58"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "8519a98e70137351",    "src": "hda",    "uuid": "11417bab-8b1f-46ce-9ff8-19ada7b58d69"   }  },  "params": {   "__input_ext": "\"unsorted.bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:36:08.664410",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 8, "time_seconds": 28.43071675300598, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_view (Test #10)" name="9" time="27.093971967697144">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input": {   "id": "23ec890ccb1d0edd",   "src": "hda"  },  "mode|output_options|output_format|oformat": "input" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} \u0026\u0026 ((addmemory=addmemory*75/100)) \u0026\u0026     ln -s \u0027/galaxy/server/database/objects/0/8/a/dataset_08afc40b-5df2-4654-8315-89382f85297c.dat\u0027 infile \u0026\u0026        samtools view -@ $addthreads -h      -o outfile      infile",  "command_version": "Version: 1.9 (using htslib 1.9)",  "copied_from_job_id": null,  "create_time": "2023-11-06T07:36:25.203661",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qcvgw",  "galaxy_version": "23.1",  "history_id": "9157f838fa2287aa",  "id": "5b5ad6cc32890e4c",  "inputs": {   "input": {    "id": "23ec890ccb1d0edd",    "src": "hda",    "uuid": "08afc40b-5df2-4654-8315-89382f85297c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1699256187.0000000",    "title": "Job End Time",    "value": "2023-11-06 07:36:27"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1699256187.0000000",    "title": "Job Start Time",    "value": "2023-11-06 07:36:27"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outputsam": {    "id": "56c7cecab5091529",    "src": "hda",    "uuid": "223363c7-7f15-4b2c-a14a-fc3ee77bc8d5"   }  },  "params": {   "__input_ext": "\"unsorted.bam\"",   "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-06T07:36:35.985525",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outputsam: Test output file (1_sort_read_names.bam) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 9, "time_seconds": 27.093971967697144, "tool_id": "samtools_view", "tool_version": "1.9+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_plot_embed (Test #1)" name="0" time="0.10339617729187012">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10339617729187012, "tool_id": "scanpy_plot_embed", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_plot_embed (Test #1)" name="0" time="0.10734772682189941">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10734772682189941, "tool_id": "scanpy_plot_embed", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_normalize (Test #1)" name="0" time="61.61897802352905">
        
            
            <system-out><![CDATA[
            [1] "Normalising...."[1] "Finished normalising"[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factors
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="unicycler (Test #1)" name="0" time="229.49876403808594">
        
            
            <system-out><![CDATA[
            Starting Unicycler (2023-11-06 06:25:39)    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since youprovided only short reads, Unicycler will essentially function as a SPAdes-optimiser. It will try many k-mer sizes, choose the best based on contig lengthand graph connectivity, and scaffold the graph using SPAdes repeat resolution.    For more information, please see https://github.com/rrwick/UnicyclerCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2Unicycler version: v0.4.8Using 8 threadsThe output directory already exists and files may be reused or overwritten:  /galaxy/server/database/jobs_directory/000/3/workingBridging mode: normal  using default normal bridge quality cutoff: 10.00Dependencies:  Program         Version             Status     Path                                     spades.py       3.14.1              good       /usr/local/bin/spades.py                 racon                               not used                                            makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb               tblastn         2.12.0+             good       /usr/local/bin/tblastn                   bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build             bowtie2         2.4.4               good       /usr/local/bin/bowtie2                   samtools        1.14                good       /usr/local/bin/samtools                  java            11.0.9.1-internal   good       /usr/local/bin/java                      pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar  bcftools                            not used                                          Choosing k-mer range for assembly (2023-11-06 06:25:40)    Unicycler chooses a k-mer range for SPAdes based on the length of the inputreads. It uses a wide range of many k-mer sizes to maximise the chance offinding an ideal assembly.SPAdes maximum k-mer: 127Median read length: 251K-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127SPAdes assemblies (2023-11-06 06:25:40)    Unicycler now uses SPAdes to assemble the short reads. It scores theassembly graph for each k-mer using the number of contigs (fewer is better) andthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),where c is the contig count and d is the dead end count.== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastqSystem information:  SPAdes version: 3.14.1  Python version: 3.9.9  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assemblyMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq']      right reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/tmp  Threads: 8  Memory limit (in Gb): 78======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/spades.log/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq: max reads length: 251/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq: max reads length: 251Reads length: 251===== Before start started.===== Assembling started.===== K27 started.== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K27/configs/config.infoWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K27/configs/config.info  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/dataset.info) with K=27  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.102    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written  0:00:00.102    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads  0:00:00.105    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.105    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads  0:00:00.107    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.157    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction  0:00:00.172    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251  0:00:00.172    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525  0:00:00.172    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting  0:00:00.174    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.176    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.176    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb  0:00:00.176    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:00.886    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads  0:00:00.886    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.115    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.  0:00:01.115    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.264    38M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction  0:00:01.266    38M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.266    38M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.268    38M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.268    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb  0:00:01.268    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.560     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers  0:00:02.560     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.  0:00:02.575   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.070   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.  0:00:03.070   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.414   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.450   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.485   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).  0:00:03.486   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.500   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.503   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping  0:00:03.503   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)  0:00:03.503   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping  0:00:03.513   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404  0:00:03.514   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413  0:00:03.515   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper  0:00:03.515   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph  0:00:03.519   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:03.522   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted  0:00:03.524   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops  0:00:03.529   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected  0:00:03.532   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)  0:00:03.532   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:03.532   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.559   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).  0:00:03.559   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.  0:00:03.629   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM  0:00:03.630   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges  0:00:03.634   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding  0:00:03.634   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7  0:00:03.634   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695  0:00:03.635   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212  0:00:03.635   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:03.717   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:03.920   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:04.401   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:04.957   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:05.911   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:05.912   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418  0:00:05.913   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1  0:00:05.913   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275  0:00:05.914   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275  0:00:05.914   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132  0:00:05.914   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577  0:00:05.914   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275  0:00:05.914   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0  0:00:05.914   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification  0:00:05.915   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:05.915   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled  0:00:05.915   131M / 131M  INFO   S..  Finalizing paths  0:00:10.099    50M / 172M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths  0:00:10.099    50M / 172M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated  0:00:10.100    50M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.100    50M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.100    50M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.100    50M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.100    50M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.100    50M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.100    50M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.101    50M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.101    50M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized  0:00:10.101    50M / 172M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished  0:00:10.101    50M / 172M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output  0:00:10.101    50M / 172M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/before_rr.fasta  0:00:10.108    50M / 172M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa  0:00:10.109    50M / 172M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/assembly_graph.fastg  0:00:10.117    50M / 172M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds  0:00:10.118    50M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/final_contigs.fasta  0:00:10.124    50M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/final_contigs.paths  0:00:10.130    50M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/scaffolds.fasta  0:00:10.136    50M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/scaffolds.paths  0:00:10.142    50M / 172M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths  0:00:10.152    50M / 172M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished  0:00:10.157    50M / 172M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 10 seconds===== K127 finished.===== Copy files started.== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/contigs.paths===== Copy files finished.===== Assembling finished.===== Breaking scaffolds started.== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished.===== Terminate started.===== Terminate finished. * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:10.094    55M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly/spades.logThank you for using SPAdes!Insert size mean: 367.3 bpInsert size stdev: 37.3 bpCleaning k127 graphRepair multi way junctions  (2023-11-06 06:27:20)Filter by read depth        (2023-11-06 06:27:20)Filter homopolymer loops    (2023-11-06 06:27:20)Merge all possible          (2023-11-06 06:27:20)Normalise read depths       (2023-11-06 06:27:20)Remove zero length segments (2023-11-06 06:27:20)Sort link order             (2023-11-06 06:27:20)Graph cleaning finished     (2023-11-06 06:27:20)Saving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfaRepair multi way junctions  (2023-11-06 06:27:20)Filter by read depth        (2023-11-06 06:27:20)Filter homopolymer loops    (2023-11-06 06:27:20)Merge all possible          (2023-11-06 06:27:20)Normalise read depths       (2023-11-06 06:27:20)Remove zero length segments (2023-11-06 06:27:20)Sort link order             (2023-11-06 06:27:20)Graph cleaning finished     (2023-11-06 06:27:20)Saving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfaSPAdes assembly graph summary (2023-11-06 06:27:20)K-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score      27                                                                                    47                                                                                    63                                                                                    77                                                                                    89                                                                                    99                                                                                   107                                                                                   115                                                                                   121                                                                                   127         1       1          5,513   5,513            5,513           0   5.00e-01 <-bestRead depth filter: removed 0 contigs totalling 0 bpDeleting /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/Determining graph multiplicity (2023-11-06 06:27:21)    Multiplicity is the number of times a sequence occurs in the underlyingsequence. Single-copy contigs (those with a multiplicity of one, occurring onlyonce in the underlying sequence) are particularly useful.    Multiplicity determination begins by identifying contigs which are clearlysingle-copy because they are of low depth and do not have more than one linkper side.Median depth of 10 longest contigs: 1.00Initial single copy segments:    1    Unicycler now uses a greedy algorithm to propagate multiplicity through thegraph. For example, if two single-copy contigs merge together, the resultingcontig will get a multiplicity of two. When no more propagation is possible,additional single-copy contigs are added and the process is repeated. Thisallows for multiplicity to be correctly assigned to the chromosome (at themedian depth) but also for plasmids (which may be higher or lower in depth).          MERGING MULTIPLICITY                SPLITTING MULTIPLICITY               FINDING NEW SINGLE-COPY                  MERGING MULTIPLICITY                SPLITTING MULTIPLICITY        REMOVING PROPAGATION TOLERANCE                  MERGING MULTIPLICITY                SPLITTING MULTIPLICITY        Saving /galaxy/server/database/jobs_directory/000/3/working/001_best_spades_graph.gfaCleaning graph (2023-11-06 06:27:21)    Unicycler now performs various cleaning procedures on the graph to removeoverlaps and simplify the graph structure. The end result is a graph ready forbridging.Grouping graph edges based on overlap removal0 / 2 (0.0%)1 / 2 (50.0%)2 / 2 (100.0%)Removing graph overlaps             Bases     Bases           trimmed   trimmed Segment      from      from  number     start       end       1        63        64Graph overlaps removedSaving /galaxy/server/database/jobs_directory/000/3/working/002_overlaps_removed.gfa    Unicycler now selects a set of anchor contigs from the single-copy contigs.These are the contigs which will be connected via bridges to form the finalassembly.1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)Anchor segments:    1Creating SPAdes contig bridges (2023-11-06 06:27:21)    SPAdes uses paired-end information to perform repeat resolution (RR) andproduce contigs from the assembly graph. SPAdes saves the graph pathscorresponding to these contigs in the contigs.paths file. When one of thesepaths contains two or more anchor contigs, Unicycler can create a bridge fromthe path.No SPAdes contig bridgesCreating loop unrolling bridges (2023-11-06 06:27:21)    When a SPAdes contig path connects an anchor contig with the middle contigof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.the loop is not a separate piece of DNA). It then uses the read depth of themiddle and repeat contigs to guess the number of times to traverse the loop andmakes a bridge.No loop unrolling bridges madenone foundApplying bridges (2023-11-06 06:27:21)    Unicycler now applies to the graph in decreasing order of quality. Thisensures that when multiple, contradictory bridges exist, the most supportedoption is used.Bridge type   Start -> end   Path   Quality   ResultSaving /galaxy/server/database/jobs_directory/000/3/working/003_bridges_applied.gfaCleaning up leftover segments (2023-11-06 06:27:21)Segments eligible for deletion:Bridged assembly graph (2023-11-06 06:27:21)    The assembly is now mostly finished and no more structural changes will bemade. Ideally the assembly graph should now have one contig per replicon and noerroneous contigs (i.e a complete assembly). If there are more contigs, thenthe assembly is not complete.Saving /galaxy/server/database/jobs_directory/000/3/working/004_final_clean.gfaComponent   Segments   Links   Length   N50     Longest segment   Status          1          1       1    5,386   5,386             5,386   completePolishing assembly with Pilon (2023-11-06 06:27:21)    Unicycler now conducts multiple rounds of Pilon in an attempt to repair anyremaining small-scale errors with the assembly.Aligning reads to find appropriate insert size range...  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta  bowtie2 -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.samInsert size 1st percentile:  263Insert size 99th percentile: 450Pilon polish round 1  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam  samtools index 1_paired_alignments.bam  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/3/working/pilon_polish --fix bases --frags 1_paired_alignments.bamNo Pilon changesSaving /galaxy/server/database/jobs_directory/000/3/working/005_polished.gfaRotating completed replicons (2023-11-06 06:27:25)    Any completed circular contigs (i.e. single contigs which have one linkconnecting end to start) can have their start position changed without alteringthe sequence. For consistency, Unicycler now searches for a starting gene (dnaAor repA) in each such contig, and if one is found, the contig is rotated tostart with that gene on the forward strand.Segment 1:  makeblastdb -dbtype nucl -in replicon.fasta  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1Segment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage      1    5,386   1.00x   none found                                             Assembly complete (2023-11-06 06:27:35)Saving /galaxy/server/database/jobs_directory/000/3/working/assembly.gfaSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.fasta
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="unicycler (Test #2)" name="1" time="160.44686079025269">
        
            
            <system-out><![CDATA[
            Starting Unicycler (2023-11-06 06:28:11)    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since youprovided both short and long reads, Unicycler will perform a hybrid assembly.It will first use SPAdes to make a short-read assembly graph, and then it willuse various methods to scaffold that graph with the long reads.    For more information, please see https://github.com/rrwick/UnicyclerCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq.gz -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2Unicycler version: v0.4.8Using 8 threadsThe output directory already exists and files may be reused or overwritten:  /galaxy/server/database/jobs_directory/000/7/workingBridging mode: normal  using default normal bridge quality cutoff: 10.00Dependencies:  Program         Version             Status     Path                                     spades.py       3.14.1              good       /usr/local/bin/spades.py                 racon           1.4.20              good       /usr/local/bin/racon                     makeblastdb     2.12.0+             good       /usr/local/bin/makeblastdb               tblastn         2.12.0+             good       /usr/local/bin/tblastn                   bowtie2-build   2.4.4               good       /usr/local/bin/bowtie2-build             bowtie2         2.4.4               good       /usr/local/bin/bowtie2                   samtools        1.14                good       /usr/local/bin/samtools                  java            11.0.9.1-internal   good       /usr/local/bin/java                      pilon           1.24                good       /usr/local/share/pilon-1.24-0/pilon.jar  bcftools                            not used                                          Choosing k-mer range for assembly (2023-11-06 06:28:13)    Unicycler chooses a k-mer range for SPAdes based on the length of the inputreads. It uses a wide range of many k-mer sizes to maximise the chance offinding an ideal assembly.SPAdes maximum k-mer: 127Median read length: 251K-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127SPAdes assemblies (2023-11-06 06:28:13)    Unicycler now uses SPAdes to assemble the short reads. It scores theassembly graph for each k-mer using the number of contigs (fewer is better) andthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),where c is the contig count and d is the dead end count.== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gzSystem information:  SPAdes version: 3.14.1  Python version: 3.9.9  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assemblyMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/tmp  Threads: 8  Memory limit (in Gb): 78======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.log/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251Reads length: 251===== Before start started.===== Assembling started.===== K27 started.== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.infoWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/K27/configs/config.info  0:00:00.000     5M / 19M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/dataset.info) with K=27  0:00:00.000     5M / 19M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion  0:00:00.000     5M / 19M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0  0:00:00.000     5M / 19M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion  0:00:00.018     5M / 19M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.018     5M / 19M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.148    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written  0:00:00.149    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads  0:00:00.152    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.153    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads  0:00:00.155    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.198    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction  0:00:00.215    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251  0:00:00.215    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525  0:00:00.215    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting  0:00:00.217    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.218    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.218    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb  0:00:00.219    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:01.032    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads  0:00:01.033    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.288    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.  0:00:01.289    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.470    38M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction  0:00:01.472    38M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.472    38M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.473    38M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.474    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb  0:00:01.474    38M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.930     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers  0:00:02.930     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.  0:00:02.943   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.458   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.  0:00:03.458   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.818   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.853   131M / 131M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.896   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).  0:00:03.896   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.903   131M / 131M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.905   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping  0:00:03.906   131M / 131M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)  0:00:03.906   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping  0:00:03.915   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404  0:00:03.915   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413  0:00:03.916   131M / 131M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper  0:00:03.917   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph  0:00:03.921   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:03.926   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted  0:00:03.928   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops  0:00:03.933   131M / 131M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected  0:00:03.937   131M / 131M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)  0:00:03.937   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:03.938   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.963   131M / 131M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).  0:00:03.963   131M / 131M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.  0:00:04.039   131M / 131M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM  0:00:04.040   131M / 131M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges  0:00:04.047   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding  0:00:04.047   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7  0:00:04.047   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695  0:00:04.047   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212  0:00:04.047   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:04.129   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:04.331   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:04.812   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:05.369   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:06.332   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.332   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418  0:00:06.334   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1  0:00:06.334   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275  0:00:06.334   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275  0:00:06.334   131M / 131M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132  0:00:06.334   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577  0:00:06.334   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275  0:00:06.335   131M / 131M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0  0:00:06.335   131M / 131M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification  0:00:06.335   131M / 131M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:06.335   131M / 131M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled  0:00:06.335  ../server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:10.588    44M / 170M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/assembly/spades.logThank you for using SPAdes!Insert size mean: 367.3 bpInsert size stdev: 37.3 bpCleaning k127 graphRepair multi way junctions  (2023-11-06 06:29:58)Filter by read depth        (2023-11-06 06:29:58)Filter homopolymer loops    (2023-11-06 06:29:58)Merge all possible          (2023-11-06 06:29:58)Normalise read depths       (2023-11-06 06:29:58)Remove zero length segments (2023-11-06 06:29:58)Sort link order             (2023-11-06 06:29:58)Graph cleaning finished     (2023-11-06 06:29:58)Saving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfaRepair multi way junctions  (2023-11-06 06:29:58)Filter by read depth        (2023-11-06 06:29:58)Filter homopolymer loops    (2023-11-06 06:29:58)Merge all possible          (2023-11-06 06:29:58)Normalise read depths       (2023-11-06 06:29:58)Remove zero length segments (2023-11-06 06:29:58)Sort link order             (2023-11-06 06:29:58)Graph cleaning finished     (2023-11-06 06:29:58)Saving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfaSPAdes assembly graph summary (2023-11-06 06:29:58)K-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score      27                                                                                    47                                                                                    63                                                                                    77                                                                                    89                                                                                    99                                                                                   107                                                                                   115                                                                                   121                                                                                   127         1       1          5,513   5,513            5,513           0   5.00e-01 <-bestRead depth filter: removed 0 contigs totalling 0 bpDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/Determining graph multiplicity (2023-11-06 06:29:58)    Multiplicity is the number of times a sequence occurs in the underlyingsequence. Single-copy contigs (those with a multiplicity of one, occurring onlyonce in the underlying sequence) are particularly useful.    Multiplicity determination begins by identifying contigs which are clearlysingle-copy because they are of low depth and do not have more than one linkper side.Median depth of 10 longest contigs: 1.00Initial single copy segments:    1    Unicycler now uses a greedy algorithm to propagate multiplicity through thegraph. For example, if two single-copy contigs merge together, the resultingcontig will get a multiplicity of two. When no more propagation is possible,additional single-copy contigs are added and the process is repeated. Thisallows for multiplicity to be correctly assigned to the chromosome (at themedian depth) but also for plasmids (which may be higher or lower in depth).          MERGING MULTIPLICITY                SPLITTING MULTIPLICITY               FINDING NEW SINGLE-COPY                  MERGING MULTIPLICITY                SPLITTING MULTIPLICITY        REMOVING PROPAGATION TOLERANCE                  MERGING MULTIPLICITY                SPLITTING MULTIPLICITY        Saving /galaxy/server/database/jobs_directory/000/7/working/001_best_spades_graph.gfaCleaning graph (2023-11-06 06:29:58)    Unicycler now performs various cleaning procedures on the graph to removeoverlaps and simplify the graph structure. The end result is a graph ready forbridging.Grouping graph edges based on overlap removal0 / 2 (0.0%)1 / 2 (50.0%)2 / 2 (100.0%)Removing graph overlaps             Bases     Bases           trimmed   trimmed Segment      from      from  number     start       end       1        63        64Graph overlaps removedSaving /galaxy/server/database/jobs_directory/000/7/working/002_overlaps_removed.gfa    Unicycler now selects a set of anchor contigs from the single-copy contigs.These are the contigs which will be connected via bridges to form the finalassembly.1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)Anchor segments:    1Creating SPAdes contig bridges (2023-11-06 06:29:58)    SPAdes uses paired-end information to perform repeat resolution (RR) andproduce contigs from the assembly graph. SPAdes saves the graph pathscorresponding to these contigs in the contigs.paths file. When one of thesepaths contains two or more anchor contigs, Unicycler can create a bridge fromthe path.No SPAdes contig bridgesCreating loop unrolling bridges (2023-11-06 06:29:58)    When a SPAdes contig path connects an anchor contig with the middle contigof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.the loop is not a separate piece of DNA). It then uses the read depth of themiddle and repeat contigs to guess the number of times to traverse the loop andmakes a bridge.No loop unrolling bridges madenone foundLoading reads (2023-11-06 06:29:58)0 / 1 (0.0%)1 / 1 (100.0%) - 5,386 bp1 / 1 (100.0%) - 5,386 bpAssembling contigs and long reads with miniasm (2023-11-06 06:29:58)    Unicycler uses miniasm to construct a string graph assembly using both theshort read contigs and the long reads. It will then use the resulting stringgraph to produce bridges between contigs. This method requires decent coverageof long reads and therefore may not be fruitful if long reads are sparse.However, it does not rely on the short read assembly graph having goodconnectivity and is able to bridge an assembly graph even when it contains manydead ends.    Unicycler uses two types of "reads" as assembly input: anchor contigs fromthe short-read assembly and actual long reads which overlap two or more ofthese contigs. It then assembles them with miniasm.Aligning long reads to graph using minimapSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta1538635081-153864508250785078255cm:i:11341538650905383-1538650885381293293255cm:i:63Number of minimap alignments: 1Saving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:  0 short-read contigs  1 long readsFinding overlaps with minimap... failedAssembling reads with miniasm... empty resultCreating simple long read bridges (2023-11-06 06:29:58)    Unicycler uses long read alignments (from minimap) to resolve simple repeatstructures in the graph. This takes care of some "low-hanging fruit" of thegraph simplification.Aligning long reads to graph using minimapSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta1538635081-153864508250785078255cm:i:11341538650905383-1538650885381293293255cm:i:63Number of minimap alignments: 1    Two-way junctions are defined as cases where two graph contigs (A and B)join together (C) and then split apart again (D and E). This usually representsa simple 2-copy repeat, and there are two possible options for its resolution:(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such ajunction gets to "vote" for option 1, option 2 or neither. Unicycler creates abridge at each junction for the most voted for option.No suitable two-way junctions present    Simple loops are parts of the graph where two contigs (A and B) areconnected via a repeat (C) which loops back to itself (via D). It is possibleto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is thecorrect number of times through. In this step, such reads are found and each isaligned against alternative loop counts. A reads casts its "vote" for the loopcount it agrees best with, and Unicycler creates a bridge using the most votedfor count.No suitable simple loops presentDetermining low score threshold (2023-11-06 06:29:58)    Before conducting semi-global alignment of the long reads to the assemblygraph, Unicycler must determine a minimum alignment score threshold such thatnonsense alignments are excluded. To choose a threshold automatically, itexamines alignments between random sequences and selects a score a few standarddeviations above the mean.Automatically choosing a threshold using random alignment scores.Random alignment mean score: 61.66         standard deviation:  1.31        Low score threshold: 61.66 + (7 x 1.31) = 70.86Aligning reads with minimap (2023-11-06 06:29:58)1538655077-153868508050725072255cm:i:9451538650935384-1538650875378291291255cm:i:52Done! 1 out of 1 reads alignedAligning reads (2023-11-06 06:29:58)1/1: 1 (5386 bp)minimap alignments:    5,5077,-,1,8,5080    5093,5384,-,1,5087,5378Reference ranges:    1-: 0 - 5386Range: 1: 0 - 5386    common 10-mers: 5464    line 1: 5076 points, score=5074.000394 (good)    line 2: 292 points, score=290.006826 (good)All Seqan alignments (time to align = 0.039 s):  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity         1          0     5085           0      5085       -      15255        100.00   100.00%         1       5085     5386        5085      5386       -        903        100.00   100.00%Final alignments:  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity         1          0     5085           0      5085       -      15255        100.00   100.00%         1       5085     5386        5085      5386       -        903        100.00   100.00%Read alignment summary (2023-11-06 06:29:58)Total read count:            1Fully aligned reads:         1Partially aligned reads:     0Unaligned reads:             0Total bases aligned:     5,386 bpMean alignment identity:   100.0%Deleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/Setting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00Building long read bridges (2023-11-06 06:29:58)    Unicycler uses the long read alignments to produce bridges between anchorsegments. These bridges can be formed using as few as one long read, givingUnicycler the ability to bridge the graph even when long-read depth is low.Median depth of 10 longest contigs: 1.00                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path                Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  QualityApplying bridges (2023-11-06 06:29:58)    Unicycler now applies to the graph in decreasing order of quality. Thisensures that when multiple, contradictory bridges exist, the most supportedoption is used.Bridge type   Start -> end   Path   Quality   ResultSaving /galaxy/server/database/jobs_directory/000/7/working/003_bridges_applied.gfaCleaning up leftover segments (2023-11-06 06:29:58)Segments eligible for deletion:Bridged assembly graph (2023-11-06 06:29:58)    The assembly is now mostly finished and no more structural changes will bemade. Ideally the assembly graph should now have one contig per replicon and noerroneous contigs (i.e a complete assembly). If there are more contigs, thenthe assembly is not complete.Saving /galaxy/server/database/jobs_directory/000/7/working/004_final_clean.gfaComponent   Segments   Links   Length   N50     Longest segment   Status          1          1       1    5,386   5,386             5,386   completePolishing assembly with Pilon (2023-11-06 06:29:58)    Unicycler now conducts multiple rounds of Pilon in an attempt to repair anyremaining small-scale errors with the assembly.Aligning reads to find appropriate insert size range...  bowtie2-build 0_insert_size_check.fasta 0_insert_size_check.fasta  bowtie2 -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -x 0_insert_size_check.fasta --fast --threads 8 -I 0 -X 5000 -S 0_alignments.samInsert size 1st percentile:  263Insert size 99th percentile: 450Pilon polish round 1  bowtie2-build 1_polish_input.fasta 1_polish_input.fasta  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 1_polish_input.fasta -S 1_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz  samtools sort -@ 8 -o 1_paired_alignments.bam -O bam -T temp 1_paired_alignments.sam  samtools index 1_paired_alignments.bam  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 1_polish_input.fasta --changes --output 1_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix bases --frags 1_paired_alignments.bamNo Pilon changesPilon polish round 2  bowtie2-build 2_polish_input.fasta 2_polish_input.fasta  bowtie2 --local --very-sensitive-local --threads 8 -I 263 -X 450 -x 2_polish_input.fasta -S 2_paired_alignments.sam -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz  samtools sort -@ 8 -o 2_paired_alignments.bam -O bam -T temp 2_paired_alignments.sam  samtools index 2_paired_alignments.bam  java -jar /usr/local/share/pilon-1.24-0/pilon.jar --genome 2_polish_input.fasta --changes --output 2_pilon --outdir /galaxy/server/database/jobs_directory/000/7/working/pilon_polish --fix all --frags 2_paired_alignments.bamNo Pilon changesSaving /galaxy/server/database/jobs_directory/000/7/working/005_polished.gfaRotating completed replicons (2023-11-06 06:30:06)    Any completed circular contigs (i.e. single contigs which have one linkconnecting end to start) can have their start position changed without alteringthe sequence. For consistency, Unicycler now searches for a starting gene (dnaAor repA) in each such contig, and if one is found, the contig is rotated tostart with that gene on the forward strand.Segment 1:  makeblastdb -dbtype nucl -in replicon.fasta  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1Segment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage      1    5,386   1.00x   none found                                             Assembly complete (2023-11-06 06:30:16)Saving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfaSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="unicycler (Test #3)" name="2" time="145.35018610954285">
        
            
            <system-out><![CDATA[
            Starting Unicycler (2023-11-06 06:30:48)    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since youprovided only short reads, Unicycler will essentially function as a SPAdes-optimiser. It will try many k-mer sizes, choose the best based on contig lengthand graph connectivity, and scaffold the graph using SPAdes repeat resolution.    For more information, please see https://github.com/rrwick/UnicyclerCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --no_pilon --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2Unicycler version: v0.4.8Using 8 threadsThe output directory already exists and files may be reused or overwritten:  /galaxy/server/database/jobs_directory/000/10/workingBridging mode: normal  using default normal bridge quality cutoff: 10.00Dependencies:  Program         Version   Status     Path                        spades.py       3.14.1    good       /usr/local/bin/spades.py    racon                     not used                               makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb  tblastn         2.12.0+   good       /usr/local/bin/tblastn      bowtie2-build             not used                               bowtie2                   not used                               samtools                  not used                               java                      not used                               pilon                     not used                               bcftools                  not used                             Choosing k-mer range for assembly (2023-11-06 06:30:48)    Unicycler chooses a k-mer range for SPAdes based on the length of the inputreads. It uses a wide range of many k-mer sizes to maximise the chance offinding an ideal assembly.SPAdes maximum k-mer: 127Median read length: 251K-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127SPAdes assemblies (2023-11-06 06:30:48)    Unicycler now uses SPAdes to assemble the short reads. It scores theassembly graph for each k-mer using the number of contigs (fewer is better) andthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),where c is the contig count and d is the dead end count.== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.Command: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastqSystem information:  SPAdes version: 3.14.1  Python version: 3.9.9  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assemblyMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Standard mode  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/tmp  Threads: 8  Memory limit (in Gb): 78======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.log/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251Reads length: 251===== Before start started.===== Assembling started.===== K27 started.== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.infoWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K27/configs/config.info  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/dataset.info) with K=27  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)  0:00:00.007     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads  0:00:00.102    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written  0:00:00.102    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads  0:00:00.105    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.105    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads  0:00:00.107    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written  0:00:00.143    25M / 29M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction  0:00:00.159    25M / 29M   INFO    General                 (construction.cpp          : 150)   Max read length 251  0:00:00.159    25M / 29M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525  0:00:00.159    25M / 29M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting  0:00:00.161    25M / 29M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.162    25M / 29M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.163    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb  0:00:00.163    25M / 29M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:00.895    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads  0:00:00.896    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.131    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.  0:00:01.131    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.291    43M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction  0:00:01.292    43M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.292    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.294    43M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.294    43M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb  0:00:01.295    43M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.655     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers  0:00:02.656     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.  0:00:02.668   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:03.181   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.  0:00:03.181   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.561   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.597   136M / 136M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.642   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).  0:00:03.643   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.650   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.654   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping  0:00:03.655   136M / 136M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)  0:00:03.655   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping  0:00:03.664   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404  0:00:03.664   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413  0:00:03.665   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper  0:00:03.665   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph  0:00:03.668   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths  0:00:03.671   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted  0:00:03.673   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops  0:00:03.677   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected  0:00:03.681   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)  0:00:03.681   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:03.682   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.713   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).  0:00:03.713   136M / 136M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.  0:00:03.788   136M / 136M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM  0:00:03.789   136M / 136M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges  0:00:03.797   136M / 136M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding  0:00:03.797   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7  0:00:03.797   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695  0:00:03.797   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212  0:00:03.798   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:03.880   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:04.083   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:04.572   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:05.142   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:06.127   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.127   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418  0:00:06.129   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1  0:00:06.129   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275  0:00:06.130   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275  0:00:06.130   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132  0:00:06.130   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577  0:00:06.130   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275  0:00:06.131   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0  0:00:06.131   136M / 136M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification  0:00:06.131   136M / 136M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:06.131   136M / 136M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled  0:00:06.131   136M / 136M  INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:06.132   136M / 136M  INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover trigger..   (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.899    46M / 171M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.899    46M / 171M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.899    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.899    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.899    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.899    46M / 171M  INFO    General                 (launcher.cpp              : 267)   Paths finalized  0:00:09.900    46M / 171M  INFO    General                 (launcher.cpp              : 439)   Closing gaps in paths  0:00:09.900    46M / 171M  INFO    General                 (launcher.cpp              : 467)   Gap closing completed  0:00:09.900    46M / 171M  INFO    General                 (launcher.cpp              : 296)   Traversing tandem repeats  0:00:09.900    46M / 171M  INFO    General                 (launcher.cpp              : 306)   Traversed 0 loops  0:00:09.900    46M / 171M  INFO    General                 (launcher.cpp              : 244)   Finalizing paths  0:00:09.901    46M / 171M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths  0:00:09.901    46M / 171M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated  0:00:09.901    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:09.901    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:09.901    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:09.901    46M / 171M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:09.901    46M / 171M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:09.902    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:09.902    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:09.902    46M / 171M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:09.902    46M / 171M  INFO    General                 (launcher.cpp              : 267)   Paths finalized  0:00:09.902    46M / 171M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished  0:00:09.902    46M / 171M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output  0:00:09.903    46M / 171M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta  0:00:09.910    46M / 171M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa  0:00:09.910    46M / 171M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg  0:00:09.916    46M / 171M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds  0:00:09.916    46M / 171M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta  0:00:09.922    46M / 171M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths  0:00:09.927    46M / 171M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta  0:00:09.933    46M / 171M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths  0:00:09.940    46M / 171M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths  0:00:09.951    46M / 171M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished  0:00:09.955    46M / 171M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 9 seconds===== K127 finished.===== Copy files started.== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths===== Copy files finished.===== Assembling finished.===== Breaking scaffolds started.== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3===== Breaking scaffolds finished.===== Terminate started.===== Terminate finished. * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.fasta * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/scaffolds.paths * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa======= SPAdes pipeline finished WITH WARNINGS!=== Error correction and assembling warnings: * 0:00:09.896    51M / 171M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.======= Warnings saved to /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/warnings.logSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly/spades.logThank you for using SPAdes!Insert size mean: 367.3 bpInsert size stdev: 37.3 bpCleaning k127 graphRepair multi way junctions  (2023-11-06 06:32:30)Filter by read depth        (2023-11-06 06:32:30)Filter homopolymer loops    (2023-11-06 06:32:30)Merge all possible          (2023-11-06 06:32:30)Normalise read depths       (2023-11-06 06:32:30)Remove zero length segments (2023-11-06 06:32:30)Sort link order             (2023-11-06 06:32:30)Graph cleaning finished     (2023-11-06 06:32:30)Saving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfaRepair multi way junctions  (2023-11-06 06:32:30)Filter by read depth        (2023-11-06 06:32:30)Filter homopolymer loops    (2023-11-06 06:32:30)Merge all possible          (2023-11-06 06:32:30)Normalise read depths       (2023-11-06 06:32:30)Remove zero length segments (2023-11-06 06:32:30)Sort link order             (2023-11-06 06:32:30)Graph cleaning finished     (2023-11-06 06:32:30)Saving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfaSPAdes assembly graph summary (2023-11-06 06:32:30)K-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score      27                                                                                    47                                                                                    63                                                                                    77                                                                                    89                                                                                    99                                                                                   107                                                                                   115                                                                                   121                                                                                   127         1       1          5,513   5,513            5,513           0   5.00e-01 <-bestRead depth filter: removed 0 contigs totalling 0 bpDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/Determining graph multiplicity (2023-11-06 06:32:31)    Multiplicity is the number of times a sequence occurs in the underlyingsequence. Single-copy contigs (those with a multiplicity of one, occurring onlyonce in the underlying sequence) are particularly useful.    Multiplicity determination begins by identifying contigs which are clearlysingle-copy because they are of low depth and do not have more than one linkper side.Median depth of 10 longest contigs: 1.00Initial single copy segments:    1    Unicycler now uses a greedy algorithm to propagate multiplicity through thegraph. For example, if two single-copy contigs merge together, the resultingcontig will get a multiplicity of two. When no more propagation is possible,additional single-copy contigs are added and the process is repeated. Thisallows for multiplicity to be correctly assigned to the chromosome (at themedian depth) but also for plasmids (which may be higher or lower in depth).          MERGING MULTIPLICITY                SPLITTING MULTIPLICITY               FINDING NEW SINGLE-COPY                  MERGING MULTIPLICITY                SPLITTING MULTIPLICITY        REMOVING PROPAGATION TOLERANCE                  MERGING MULTIPLICITY                SPLITTING MULTIPLICITY        Saving /galaxy/server/database/jobs_directory/000/10/working/001_best_spades_graph.gfaCleaning graph (2023-11-06 06:32:31)    Unicycler now performs various cleaning procedures on the graph to removeoverlaps and simplify the graph structure. The end result is a graph ready forbridging.Grouping graph edges based on overlap removal0 / 2 (0.0%)1 / 2 (50.0%)2 / 2 (100.0%)Removing graph overlaps             Bases     Bases           trimmed   trimmed Segment      from      from  number     start       end       1        63        64Graph overlaps removedSaving /galaxy/server/database/jobs_directory/000/10/working/002_overlaps_removed.gfa    Unicycler now selects a set of anchor contigs from the single-copy contigs.These are the contigs which will be connected via bridges to form the finalassembly.1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)Anchor segments:    1Creating SPAdes contig bridges (2023-11-06 06:32:31)    SPAdes uses paired-end information to perform repeat resolution (RR) andproduce contigs from the assembly graph. SPAdes saves the graph pathscorresponding to these contigs in the contigs.paths file. When one of thesepaths contains two or more anchor contigs, Unicycler can create a bridge fromthe path.No SPAdes contig bridgesCreating loop unrolling bridges (2023-11-06 06:32:31)    When a SPAdes contig path connects an anchor contig with the middle contigof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.the loop is not a separate piece of DNA). It then uses the read depth of themiddle and repeat contigs to guess the number of times to traverse the loop andmakes a bridge.No loop unrolling bridges madenone foundApplying bridges (2023-11-06 06:32:31)    Unicycler now applies to the graph in decreasing order of quality. Thisensures that when multiple, contradictory bridges exist, the most supportedoption is used.Bridge type   Start -> end   Path   Quality   ResultSaving /galaxy/server/database/jobs_directory/000/10/working/003_bridges_applied.gfaCleaning up leftover segments (2023-11-06 06:32:31)Segments eligible for deletion:Bridged assembly graph (2023-11-06 06:32:31)    The assembly is now mostly finished and no more structural changes will bemade. Ideally the assembly graph should now have one contig per replicon and noerroneous contigs (i.e a complete assembly). If there are more contigs, thenthe assembly is not complete.Saving /galaxy/server/database/jobs_directory/000/10/working/004_final_clean.gfaComponent   Segments   Links   Length   N50     Longest segment   Status          1          1       1    5,386   5,386             5,386   completeRotating completed replicons (2023-11-06 06:32:31)    Any completed circular contigs (i.e. single contigs which have one linkconnecting end to start) can have their start position changed without alteringthe sequence. For consistency, Unicycler now searches for a starting gene (dnaAor repA) in each such contig, and if one is found, the contig is rotated tostart with that gene on the forward strand.Segment 1:  makeblastdb -dbtype nucl -in replicon.fasta  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1Segment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage      1    5,386   1.00x   none found                                             Assembly complete (2023-11-06 06:32:41)Saving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfaSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="unicycler (Test #4)" name="3" time="32.49692130088806">
        
            
            <system-out><![CDATA[
            Starting Unicycler (2023-11-06 06:33:10)    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since youprovided only long reads, Unicycler will assemble the reads with miniasm andthen run repeated polishing rounds using Racon.    For more information, please see https://github.com/rrwick/UnicyclerCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2Unicycler version: v0.4.8Using 8 threadsThe output directory already exists and files may be reused or overwritten:  /galaxy/server/database/jobs_directory/000/12/workingDependencies:  Program         Version   Status     Path                        spades.py                 not used                               racon           1.4.20    good       /usr/local/bin/racon        makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb  tblastn         2.12.0+   good       /usr/local/bin/tblastn      bowtie2-build             not used                               bowtie2                   not used                               samtools                  not used                               java                      not used                               pilon                     not used                               bcftools                  not used                             Loading reads (2023-11-06 06:33:13)0 / 40 (0.0%)1 / 40 (2.5%) - 412 bp2 / 40 (5.0%) - 4,847 bp3 / 40 (7.5%) - 8,974 bp4 / 40 (10.0%) - 13,249 bp5 / 40 (12.5%) - 14,258 bp6 / 40 (15.0%) - 14,806 bp7 / 40 (17.5%) - 19,262 bp8 / 40 (20.0%) - 19,737 bp9 / 40 (22.5%) - 20,395 bp10 / 40 (25.0%) - 32,024 bp11 / 40 (27.5%) - 32,698 bp12 / 40 (30.0%) - 34,509 bp13 / 40 (32.5%) - 39,018 bp14 / 40 (35.0%) - 43,351 bp15 / 40 (37.5%) - 44,224 bp16 / 40 (40.0%) - 45,978 bp17 / 40 (42.5%) - 46,402 bp18 / 40 (45.0%) - 61,596 bp19 / 40 (47.5%) - 62,279 bp20 / 40 (50.0%) - 63,700 bp21 / 40 (52.5%) - 66,412 bp22 / 40 (55.0%) - 66,845 bp23 / 40 (57.5%) - 67,316 bp24 / 40 (60.0%) - 69,428 bp25 / 40 (62.5%) - 73,964 bp26 / 40 (65.0%) - 75,608 bp27 / 40 (67.5%) - 80,223 bp28 / 40 (70.0%) - 84,810 bp29 / 40 (72.5%) - 92,076 bp30 / 40 (75.0%) - 92,832 bp31 / 40 (77.5%) - 92,939 bp32 / 40 (80.0%) - 93,532 bp33 / 40 (82.5%) - 96,370 bp34 / 40 (85.0%) - 100,656 bp35 / 40 (87.5%) - 119,222 bp36 / 40 (90.0%) - 123,827 bp37 / 40 (92.5%) - 155,106 bp38 / 40 (95.0%) - 156,254 bp39 / 40 (97.5%) - 157,993 bp40 / 40 (100.0%) - 162,406 bp40 / 40 (100.0%) - 162,406 bpAssembling contigs and long reads with miniasm (2023-11-06 06:33:13)Saving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:  40 long readsFinding overlaps with minimap... success  120 overlapsAssembling reads with miniasm... success  7 segments, 6 links    Unicycler removes any links from the string graph which create branches.I.e. if any segment has two or more links connected to one end, those links areremoved. This will result in a graph with only simple linear paths that issuitable for creating unambiguous bridges.No links needed removalSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfaMerging segments into unitigs:Linear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-  1 linear unitig  total size = 5,836 bpSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfaSaving /galaxy/server/database/jobs_directory/000/12/working/002_unitig_graph.gfaPolishing miniasm assembly with Racon (2023-11-06 06:33:13)    Unicycler now uses Racon to polish the miniasm assembly. It does multiplerounds of polishing to get the best consensus. Circular unitigs are rotatedbetween rounds such that all parts (including the ends) are polished well.Saving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:  40 long readsPolish       Assembly          Mappinground            size          quality0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template42862104010+158361061460311473800255cm:i:2000237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template4286129722+1583652215833179612255cm:i:27054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44139344391-158362376583334573457255cm:i:1153054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44131262525-158363023147872399255cm:i:1443708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template46052804284-158364393614814004255cm:i:2463708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template460527194286-15836421558335461618255cm:i:884850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template41271704027+158361680583310324153255cm:i:1744850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template412728934082+15836416022201598255cm:i:30598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template458713344566-158362699578612813232255cm:i:243598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template4587982778-158365026637722680255cm:i:129771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template461512254611-158362657583314693386255cm:i:268771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template4615972786-158363026369052689255cm:i:1579780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template43331434271-15836338425418344128255cm:i:4709780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template433330924330-15836450357984301295255cm:i:779e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template45365444408-1583669392712083864255cm:i:2379e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template453630084472-15836421557483511533255cm:i:53a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template433106396+1583629093222131313255cm:i:22a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template44563354397+158361321525713514062255cm:i:280a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template445634374349+1583623961238938255cm:i:40a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template445686537+1583653345798154464255cm:i:26b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351114359-158361673579820624248255cm:i:487b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351091619-158363015254721510255cm:i:68bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template4275934048+158361733583313034100255cm:i:230bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template427525324244+15836416903111712255cm:i:43f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45092894205+1583623393910393916255cm:i:166f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45092961782+15836424257983671556255cm:i:63begin           5,836             5.330237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template42861294010+162901009505424314045255cm:i:5290237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template4286129722+1629056706287297617255cm:i:630237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template428636324010+162904404122400255cm:i:19054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44139344391-162902540628722493747255cm:i:527054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44131262508-1629051247412762423255cm:i:2453708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template46051104284-162904431623224312255cm:i:4863708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template460527194590-16290435462879431933255cm:i:1944850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template41271164027+162901774628721454513255cm:i:4264850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template412728934124+16290417414211737255cm:i:61598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template458713454580-162902854622622573372255cm:i:501598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template4587982778-1629051283114592780255cm:i:289771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template461512254611-162902825628722683462255cm:i:513771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template4615972745-1629074280515012731255cm:i:2899780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template43331404284-16290354469920224345255cm:i:3779780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template433330694304-16290498462716141287255cm:i:1179e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template45361384408-1629072453419214462255cm:i:3379e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template453630024533-16290459762065801609255cm:i:103a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template433106396+1629030833386169303255cm:i:32a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template4456864397+162901126570823684582255cm:i:487a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template445634374392+162902310393621016255cm:i:59a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template445686539+1629057856254217469255cm:i:45b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351054374-162901806625827774452255cm:i:600b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351051578-162907416037611529255cm:i:150bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template1421122795+1629052095912149703255cm:i:24bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template1421149847+162905851307155722255cm:i:17bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template4275934048+162901886628720704401255cm:i:456bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template427525324244+16290418386561834255cm:i:109c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template114897391+1629020602358156298255cm:i:35f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45092894485+1629023443621064413255cm:i:421f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45091111803+16290448862737441785255cm:i:1311               6,290             7.820237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template42861294010+162421016500924603993255cm:i:5300237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template4286129722+1624256266239283613255cm:i:610237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template428636324010+162424408117404255cm:i:18054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44139344391-162422535623922343704255cm:i:514054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44131262508-1624251246913872418255cm:i:2713708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template46051104284-162424427623804272255cm:i:4943708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template460527194590-16242431462399551925255cm:i:1964850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template41271084027+162421759623921944480255cm:i:4404850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template412728934124+16242417354501731255cm:i:67598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template458713454580-162422848617822843330255cm:i:509598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template4587982778-1624251282515042774255cm:i:295771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template461512254611-162422819623922353420255cm:i:510771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template46151092745-1624274278715172713255cm:i:3049780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template43331404284-16242358465920514301255cm:i:3919780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template433330694304-16242493962236181284255cm:i:1149e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template45361384408-1624272449319414421255cm:i:3459e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template453630024533-16242455661585791602255cm:i:105a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template433106396+1624230773380169303255cm:i:32a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template4456864397+162421133566424054531255cm:i:507a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template445634374397+162422310513531028255cm:i:59a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template4456107539+1624257596206204447255cm:i:40b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351054374-162421799621027494411255cm:i:591b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351051578-162427416017951527255cm:i:165bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template1421122847+1624251665916224750255cm:i:35bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template1421160847+162426021310144708255cm:i:16bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template42751244048+162421908623920614331255cm:i:454bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template427525324244+16242418316671827255cm:i:111c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template114897391+1624220532352157299255cm:i:37f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45092894485+1624223439521304372255cm:i:425f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45091111803+16242444762257621778255cm:i:1382               6,242             8.020237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template42861294010+162651028502524363997255cm:i:5270237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template4286129722+1626556426262281620255cm:i:590237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template428636324010+162654408105404255cm:i:17054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44139344391-162652544626222283718255cm:i:507054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template44131262508-1626551247813532427255cm:i:2603708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template46051104284-162654429323774289255cm:i:4923708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template460527194590-16265433162629671931255cm:i:1944850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template41271084027+162651772626221904490255cm:i:4364850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template412728934124+16265417484481744255cm:i:62598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template458713454580-162652857620122703344255cm:i:503598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template4587982778-1626551283414632783255cm:i:284771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template461512254611-162652828626222513434255cm:i:515771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template46151022745-1626574280415112730255cm:i:3059780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template43331404284-16265358467620634318255cm:i:3929780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template433330694328-16265493062466231316255cm:i:1139e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template45361384408-1626572451019874438255cm:i:3509e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template453630024533-16265457361815691608255cm:i:102a152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template433106396+1626530893392169303255cm:i:32a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template4456864397+162651145568024234535255cm:i:509a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template445634374397+162652310633371040255cm:i:56a53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template4456107539+1626557796229223450255cm:i:45b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351054374-162651812623327694421255cm:i:601b9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template44351051578-162657416157641541255cm:i:156bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template1421122847+1626551825936236754255cm:i:36bca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template1421149847+162655891322155733255cm:i:17bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template42751244048+162651921626220624341255cm:i:449bd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template427525324244+16265418446601840255cm:i:111c2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template114897391+1626520632361157298255cm:i:37f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45092894485+1626523441221824389255cm:i:436f49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template45091111803+16265446462487871784255cm:i:1413               6,265             8.04Best polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fastaSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfaSaving /galaxy/server/database/jobs_directory/000/12/working/003_racon_polished.gfaAssembly complete (2023-11-06 06:33:13)Saving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcheck (Test #1)" name="0" time="33.81964349746704">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            index file localref.fa.fai not found, generating...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfdistance (Test #1)" name="0" time="28.04037308692932">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>