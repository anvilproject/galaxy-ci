<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="81"
           errors="7"
           failures="25"
           skip="0">
    
    <testcase classname="anndata_import (Test #1)" name="0" time="52.774329662323">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "60543a45b77755ac",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/92/configs/tmp6dgpmvnq\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/92/configs/tmp6dgpmvnq\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-21T19:00:40.920564",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-h87pv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "594bdb544680e659",  "inputs": {   "hd5_format|in|input": {    "id": "60543a45b77755ac",    "src": "hda",    "uuid": "9d815b4f-0346-4cbb-b87f-d1af72a49449"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "cb8cab7b377ae869",    "src": "hda",    "uuid": "cabdf0c6-7d7f-4ca5-8db0-d298fabfeeae"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "error",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/d/8/dataset_9d815b4f-0346-4cbb-b87f-d1af72a49449.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/9/d/8/dataset_9d815b4f-0346-4cbb-b87f-d1af72a49449.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:01:11.215986",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1, exit_code: None, stderr: Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n." ], "status": "failure", "test_index": 0, "time_seconds": 52.774329662323, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/9/d/8/dataset_9d815b4f-0346-4cbb-b87f-d1af72a49449.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #1)" name="0" time="47.3148136138916">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "loom",  "hd5_format|in|cleanup": false,  "hd5_format|in|input": {   "id": "43947b4bb8bdac5b",   "src": "hda"  },  "hd5_format|in|obs_names": "CellID",  "hd5_format|in|sparse": true,  "hd5_format|in|var_names": "Gene",  "hd5_format|in|x_name": "spliced" }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/108/configs/tmp1ohcecbo\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/108/configs/tmp1ohcecbo\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:05:58.633597",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-kbw6l",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "4b5912d266ee3c42",  "inputs": {   "hd5_format|in|input": {    "id": "43947b4bb8bdac5b",    "src": "hda",    "uuid": "81a87de6-604a-474a-81e1-17555e2f4f4d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732215963.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:06:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732215960.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:06:00"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "cc9e93fdecedbead",    "src": "hda",    "uuid": "ed00d851-7cf7-4cd8-8174-121c37e48d4d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 0, \"adata_format\": \"loom\", \"cleanup\": false, \"input\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}, \"obs_names\": \"CellID\", \"sparse\": true, \"var_names\": \"Gene\", \"x_name\": \"spliced\"}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/8/1/a/dataset_81a87de6-604a-474a-81e1-17555e2f4f4d.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\n... storing \u0027cell_type\u0027 as categorical\n",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_loom(\n    \u0027/galaxy/server/database/objects/8/1/a/dataset_81a87de6-604a-474a-81e1-17555e2f4f4d.dat\u0027,\n    sparse=True,\n    cleanup=False,\n    X_name=\u0027spliced\u0027,\n    obs_names=\u0027CellID\u0027,\n    var_names=\u0027Gene\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:06:20.108655",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.loom.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 47.3148136138916, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_loom(    '/galaxy/server/database/objects/8/1/a/dataset_81a87de6-604a-474a-81e1-17555e2f4f4d.dat',    sparse=True,    cleanup=False,    X_name='spliced',    obs_names='CellID',    var_names='Gene')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'cell_type' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="46.14919877052307">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "3ff8c97cd13bd6c7",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmp301btur3\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/94/configs/tmp301btur3\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:01:36.249837",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-v4gr9",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "45e6df4a505a63a2",  "inputs": {   "hd5_format|in|input": {    "id": "3ff8c97cd13bd6c7",    "src": "hda",    "uuid": "20ff52e8-d647-4c82-9c4e-f3da56a05064"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732215700.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:01:40"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732215698.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:01:38"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "a0074eb7e6832fbe",    "src": "hda",    "uuid": "4b72dbc7-00ba-4f9c-a25f-4eca415a9860"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 138, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/2/0/f/dataset_20ff52e8-d647-4c82-9c4e-f3da56a05064.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/2/0/f/dataset_20ff52e8-d647-4c82-9c4e-f3da56a05064.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:01:57.235781",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmpxv215d6nimport.csv.h5ad v. /tmp/tmp9gnzj_z0import.csv.h5ad )\nFiles /tmp/tmpxv215d6nimport.csv.h5ad=29512b but /tmp/tmp9gnzj_z0import.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 46.14919877052307, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/2/0/f/dataset_20ff52e8-d647-4c82-9c4e-f3da56a05064.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #2)" name="1" time="48.26175355911255">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "391a3069612fbd8a",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/110/configs/tmpu2xskj42\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/110/configs/tmpu2xskj42\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:06:48.430046",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5p44g",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "d05586d3ceb6c6fa",  "inputs": {   "hd5_format|in|input": {    "id": "391a3069612fbd8a",    "src": "hda",    "uuid": "fdd429c1-e0ce-4bdd-b316-6ac05c55d0aa"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216013.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:06:53"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216011.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:06:51"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "83e773989450fb52",    "src": "hda",    "uuid": "1cfca0dd-c9fc-41ed-a66e-92c3c6ec6ba2"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/d/d/dataset_fdd429c1-e0ce-4bdd-b316-6ac05c55d0aa.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/f/d/d/dataset_fdd429c1-e0ce-4bdd-b316-6ac05c55d0aa.dat\u0027,\n    delimiter=\u0027,\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:07:08.721589",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata:  different than expected, difference (using sim_size):\n( /tmp/tmphvkzr1fbimport.csv.h5ad v. /tmp/tmpep8sb7qlimport.csv.h5ad )\nFiles /tmp/tmphvkzr1fbimport.csv.h5ad=29512b but /tmp/tmpep8sb7qlimport.csv.h5ad=11048b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 1, "time_seconds": 48.26175355911255, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/f/d/d/dataset_fdd429c1-e0ce-4bdd-b316-6ac05c55d0aa.dat',    delimiter=',',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="43.67133450508118">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "172bad222d599e1f",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpuwlcwt2t\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/96/configs/tmpuwlcwt2t\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:02:24.166320",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-z4rp6",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "224accc362e763b8",  "inputs": {   "hd5_format|in|input": {    "id": "172bad222d599e1f",    "src": "hda",    "uuid": "89eb1fe2-cbab-4aab-bdc1-ce413f0fda4f"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732215747.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:02:27"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732215745.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:02:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "01c540afaef6c786",    "src": "hda",    "uuid": "e0e84341-9faf-4fe7-8e02-9a81f57f0e33"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 140, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/9/e/dataset_89eb1fe2-cbab-4aab-bdc1-ce413f0fda4f.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/9/e/dataset_89eb1fe2-cbab-4aab-bdc1-ce413f0fda4f.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:02:41.400455",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 43.67133450508118, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/8/9/e/dataset_89eb1fe2-cbab-4aab-bdc1-ce413f0fda4f.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #3)" name="2" time="51.48715782165527">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "tabular",  "hd5_format|in|first_column_names": true,  "hd5_format|in|input": {   "id": "2159dfcf27b6093b",   "src": "hda"  } }, "job": {  "command_line": "cat \u0027/galaxy/server/database/jobs_directory/000/112/configs/tmpwr8kqc_d\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/112/configs/tmpwr8kqc_d\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:07:38.146119",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-6hpk4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "ccde6cea1e16403e",  "inputs": {   "hd5_format|in|input": {    "id": "2159dfcf27b6093b",    "src": "hda",    "uuid": "8426feb6-1a41-4a19-a600-fac0bbfbfa6f"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216063.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:07:43"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216060.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:07:40"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "e71919be81b330a8",    "src": "hda",    "uuid": "5db83b56-1b1b-4760-bb52-145a0b769bac"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 1, \"adata_format\": \"tabular\", \"first_column_names\": true, \"input\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/4/2/dataset_8426feb6-1a41-4a19-a600-fac0bbfbfa6f.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_csv(\n    \u0027/galaxy/server/database/objects/8/4/2/dataset_8426feb6-1a41-4a19-a600-fac0bbfbfa6f.dat\u0027,\n    delimiter=\u0027\\t\u0027,\n    first_column_names=True)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:08:00.269819",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.tsv.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 51.48715782165527, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_csv(    '/galaxy/server/database/objects/8/4/2/dataset_8426feb6-1a41-4a19-a600-fac0bbfbfa6f.dat',    delimiter='\t',    first_column_names=True)adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="45.699288845062256">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "f3a2eddd503c56fe",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmp3tdeu43c\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/98/configs/tmp3tdeu43c\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:03:08.123958",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-gd686",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "fc5d4e029adf9c12",  "inputs": {   "hd5_format|in|matrix": {    "id": "f3a2eddd503c56fe",    "src": "hda",    "uuid": "96399812-c38e-408c-b1f7-5236e6a78810"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732215792.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:03:12"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732215790.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:03:10"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "6136981eed28ac7c",    "src": "hda",    "uuid": "996a2a88-e012-4ba5-9d92-95414d159769"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/9/6/3/dataset_96399812-c38e-408c-b1f7-5236e6a78810.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/9/6/3/dataset_96399812-c38e-408c-b1f7-5236e6a78810.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:03:26.984543",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 45.699288845062256, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/9/6/3/dataset_96399812-c38e-408c-b1f7-5236e6a78810.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #4)" name="3" time="40.900891065597534">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|in|adata_format": "mtx",  "hd5_format|in|matrix": {   "id": "f96839ea939bcccf",   "src": "hda"  },  "hd5_format|in|tenx|use": "no" }, "job": {  "command_line": "mkdir mtx \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/114/configs/tmp05u0zoyi\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/114/configs/tmp05u0zoyi\u0027    \u0026\u0026 rm -rf mtx",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:08:25.523960",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-twkkb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "3f506fee84b0a5f8",  "inputs": {   "hd5_format|in|matrix": {    "id": "f96839ea939bcccf",    "src": "hda",    "uuid": "d1328e13-c73f-4cb2-af4b-3308ac5217e7"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216108.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:08:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216106.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:08:26"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "994e499738863a83",    "src": "hda",    "uuid": "877092d5-5bca-49d6-bade-2912db15feb9"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 3, \"adata_format\": \"mtx\", \"matrix\": {\"values\": [{\"id\": 158, \"src\": \"hda\"}]}, \"tenx\": {\"__current_case__\": 0, \"use\": \"no\"}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/d/1/3/dataset_d1328e13-c73f-4cb2-af4b-3308ac5217e7.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_mtx(filename=\u0027/galaxy/server/database/objects/d/1/3/dataset_d1328e13-c73f-4cb2-af4b-3308ac5217e7.dat\u0027)\n\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:08:41.218687",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.mtx.no_10x.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 40.900891065597534, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_mtx(filename='/galaxy/server/database/objects/d/1/3/dataset_d1328e13-c73f-4cb2-af4b-3308ac5217e7.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="12.482785940170288">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 12.482785940170288, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #5)" name="4" time="36.37725567817688">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|filetype": "anndata",  "hd5_format|in|adata_format": "umi_tools",  "hd5_format|in|input": {   "id": "20056bd7d37e34c3",   "src": "hda"  } }, "job": {  "command_line": "gzip -c \u0027/galaxy/server/database/objects/2/d/e/dataset_2def0fa4-8cf9-43d3-a3fd-fc67daaf14b1.dat\u0027 \u003e umi_tools_input.gz \u0026\u0026   cat \u0027/galaxy/server/database/jobs_directory/000/116/configs/tmpwi14vtij\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/116/configs/tmpwi14vtij\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:09:02.765119",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wtfm4",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "b9696cad61b5019f",  "inputs": {   "hd5_format|in|input": {    "id": "20056bd7d37e34c3",    "src": "hda",    "uuid": "2def0fa4-8cf9-43d3-a3fd-fc67daaf14b1"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216146.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:09:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216144.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:09:04"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata": {    "id": "cb486f123af9465b",    "src": "hda",    "uuid": "6bb5a4a9-f6f0-4eb2-9f12-8e61e303c68f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 0, \"filetype\": \"anndata\", \"in\": {\"__current_case__\": 4, \"adata_format\": \"umi_tools\", \"input\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}}}"  },  "state": "ok",  "stderr": "",  "stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "\n\nimport anndata as ad\n    \n    \nadata = ad.read_umi_tools(\u0027umi_tools_input.gz\u0027)\nadata.write(\u0027anndata.h5ad\u0027)\n",  "update_time": "2024-11-21T19:09:17.592143",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata: Test output file (import.umi_tools.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 36.37725567817688, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import anndata as ad        adata = ad.read_umi_tools('umi_tools_input.gz')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="62.40545988082886">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "1fe507fa8e8ed014",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "0cfc7fc9bd9f04df",   "src": "hda"  },  "hd5_format|other_files": {   "id": "45095a5b2ee0c1e1",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "6cc2f6f61c50c4b9",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/f/1/d/dataset_f1deb193-e0b4-4e3a-b7b3-a3c4e5b3a086.dat\u0027 -r \u0027/galaxy/server/database/objects/5/3/8/dataset_53833fff-bcde-4031-8209-ce850b68719c.dat\u0027 -f \u0027/galaxy/server/database/objects/f/3/4/dataset_f343babb-9476-4050-a515-31a41ce6fab5.dat\u0027 \u0027/galaxy/server/database/objects/b/1/e/dataset_b1e8d7b0-430a-46ad-bdf3-87db5c2f2754.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:04:22.503316",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-46zrd",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "5c6aee84dbca9a60",  "inputs": {   "hd5_format|coldata": {    "id": "1fe507fa8e8ed014",    "src": "hda",    "uuid": "f1deb193-e0b4-4e3a-b7b3-a3c4e5b3a086"   },   "hd5_format|mainmatrix": {    "id": "0cfc7fc9bd9f04df",    "src": "hda",    "uuid": "f343babb-9476-4050-a515-31a41ce6fab5"   },   "hd5_format|other_files": {    "id": "45095a5b2ee0c1e1",    "src": "hda",    "uuid": "b1e8d7b0-430a-46ad-bdf3-87db5c2f2754"   },   "hd5_format|other_files1": {    "id": "45095a5b2ee0c1e1",    "src": "hda",    "uuid": "b1e8d7b0-430a-46ad-bdf3-87db5c2f2754"   },   "hd5_format|rowdata": {    "id": "6cc2f6f61c50c4b9",    "src": "hda",    "uuid": "53833fff-bcde-4031-8209-ce850b68719c"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732215867.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:04:27"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732215865.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:04:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "cdb472323ab24c00",    "src": "hda",    "uuid": "22032526-e48c-4b45-8504-8ac08c592680"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 145, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 148, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-11-21T19:04:42.323758",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpcrih206qconverted.loom.test v. /tmp/tmp5qwtwqn3converted.loom.test )\nFiles /tmp/tmpcrih206qconverted.loom.test=41883b but /tmp/tmp5qwtwqn3converted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 62.40545988082886, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #6)" name="5" time="49.8019335269928">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "hd5_format|coldata": {   "id": "05d3621661a54391",   "src": "hda"  },  "hd5_format|filetype": "loom",  "hd5_format|mainmatrix": {   "id": "1efe1d8fa04054db",   "src": "hda"  },  "hd5_format|other_files": {   "id": "6015e8cd287f9fc4",   "src": "hda"  },  "hd5_format|rowdata": {   "id": "ff77a367c1b9a855",   "src": "hda"  } }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/fb9e030ffae4/anndata_import/tsv_to_loompy.py\u0027 -c \u0027/galaxy/server/database/objects/9/f/3/dataset_9f393947-a53b-4b89-83a9-eb92ea4f29a4.dat\u0027 -r \u0027/galaxy/server/database/objects/1/7/5/dataset_1750b9d2-6202-41d0-af2f-defcfa49604b.dat\u0027 -f \u0027/galaxy/server/database/objects/f/a/7/dataset_fa745a32-774f-496b-85f3-f700fefd120f.dat\u0027 \u0027/galaxy/server/database/objects/5/5/4/dataset_554ccaa6-dc51-4532-a5fd-b77e7120bf36.dat\u0027",  "command_version": "anndata version: 0.7.5\n\nloompy version: 2.0.17",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:09:51.172421",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-856kt",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "31f150b306dac64e",  "inputs": {   "hd5_format|coldata": {    "id": "05d3621661a54391",    "src": "hda",    "uuid": "9f393947-a53b-4b89-83a9-eb92ea4f29a4"   },   "hd5_format|mainmatrix": {    "id": "1efe1d8fa04054db",    "src": "hda",    "uuid": "fa745a32-774f-496b-85f3-f700fefd120f"   },   "hd5_format|other_files": {    "id": "6015e8cd287f9fc4",    "src": "hda",    "uuid": "554ccaa6-dc51-4532-a5fd-b77e7120bf36"   },   "hd5_format|other_files1": {    "id": "6015e8cd287f9fc4",    "src": "hda",    "uuid": "554ccaa6-dc51-4532-a5fd-b77e7120bf36"   },   "hd5_format|rowdata": {    "id": "ff77a367c1b9a855",    "src": "hda",    "uuid": "1750b9d2-6202-41d0-af2f-defcfa49604b"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216194.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:09:54"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216193.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:09:53"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "2147.0000000",    "title": "Memory Allocated (MB)",    "value": "2147"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "loomdata": {    "id": "31c754bf58adab69",    "src": "hda",    "uuid": "97e69346-4480-4a2b-ae0a-5463c02d8529"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "hd5_format": "{\"__current_case__\": 1, \"coldata\": {\"values\": [{\"id\": 164, \"src\": \"hda\"}]}, \"filetype\": \"loom\", \"mainmatrix\": {\"values\": [{\"id\": 162, \"src\": \"hda\"}]}, \"other_files\": {\"values\": [{\"id\": 163, \"src\": \"hda\"}]}, \"rowdata\": {\"values\": [{\"id\": 165, \"src\": \"hda\"}]}}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_import/anndata_import/0.7.5+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-11-21T19:10:07.527372",  "user_email": "tests@fake.org" }, "output_problems": [  "Output loomdata:  different than expected, difference (using sim_size):\n( /tmp/tmpqxm0itolconverted.loom.test v. /tmp/tmps6je4ff9converted.loom.test )\nFiles /tmp/tmpqxm0itolconverted.loom.test=41883b but /tmp/tmps6je4ff9converted.loom.test=28145b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 49.8019335269928, "tool_id": "anndata_import", "tool_version": "0.7.5+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="49.41330862045288">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/1/3/c/dataset_13cc99ba-c38c-4fdf-a821-9fe8acce236e.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="anndata_import (Test #7)" name="6" time="40.37415432929993">
        
            
            <system-out><![CDATA[
            import anndata as ad        import scanpy as scadata = sc.read_10x_h5('/galaxy/server/database/objects/7/2/1/dataset_7216f70b-6f6b-494a-982b-e36cc1bd57a7.dat')adata.write('anndata.h5ad')
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_fixploidy (Test #1)" name="0" time="52.983285427093506">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #1)" name="0" time="74.83619403839111">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_stats", "tool_version": "1.15.1+galaxy4"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #3)" name="2" time="63.42038154602051">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Parsing bcftools stats output: /galaxy/server/database/objects/1/c/2/dataset_1c26d76a-4161-4b90-a979-de3ad5c7fac6.datPlotting graphs: python3 plot.pyCreating PDF: tectonic summary.tex >plot-vcfstats.log 2>&1Finished: plot_tmp//summary.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #4)" name="3" time="37.32452964782715">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_stats (Test #5)" name="4" time="36.1112163066864">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #1)" name="0" time="45.18979001045227">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="collection_element_identifiers (Test #2)" name="1" time="35.49732422828674">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #1)" name="0" time="89.7653923034668">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_correlation (Test #2)" name="1" time="38.89235758781433">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "corData": {   "id": "9f480c6e389cd663",   "src": "hda"  },  "outFileFormat": "png",  "plotting_type|plotTitle": "Test Plot",  "plotting_type|whatToPlot": "scatterplot",  "removeOutliers": true }, "job": {  "command_line": "plotCorrelation --corData \u0027/galaxy/server/database/objects/f/5/a/dataset_f5a05bf2-e117-467b-b56d-4c32aeb457c6.dat\u0027 --plotFile \u0027/galaxy/server/database/objects/4/8/2/dataset_482b57ad-d8f1-4cc5-946e-0f3ee531b08f.dat\u0027 --corMethod \u0027spearman\u0027 --whatToPlot \u0027scatterplot\u0027 --plotTitle \u0027Test Plot\u0027   --plotFileFormat \u0027png\u0027 --removeOutliers",  "command_version": "plotCorrelation 3.5.4",  "copied_from_job_id": null,  "create_time": "2024-11-21T18:39:52.704486",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-zrnlm",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "9f480c6e389cd663",  "inputs": {   "corData": {    "id": "9f480c6e389cd663",    "src": "hda",    "uuid": "f5a05bf2-e117-467b-b56d-4c32aeb457c6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732214398.0000000",    "title": "Job End Time",    "value": "2024-11-21 18:39:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732214394.0000000",    "title": "Job Start Time",    "value": "2024-11-21 18:39:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "21474.0000000",    "title": "Memory Allocated (MB)",    "value": "21474"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "outFileName": {    "id": "766be5ea76c817d7",    "src": "hda",    "uuid": "482b57ad-d8f1-4cc5-946e-0f3ee531b08f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "corMethod": "\"spearman\"",   "dbkey": "\"?\"",   "outFileCorMatrix": "false",   "outFileFormat": "\"png\"",   "plotting_type": "{\"__current_case__\": 1, \"log1p\": false, \"plotTitle\": \"Test Plot\", \"whatToPlot\": \"scatterplot\", \"xrange_conditional\": {\"__current_case__\": 1, \"xrange_select\": \"no\"}, \"yrange_conditional\": {\"__current_case__\": 1, \"yrange_select\": \"no\"}}",   "removeOutliers": "true",   "skipZeros": "false"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_correlation/deeptools_plot_correlation/3.5.4+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "update_time": "2024-11-21T18:40:10.594166",  "user_email": "tests@fake.org" }, "output_problems": [  "Output outFileName:  different than expected, difference (using sim_size):\n( /tmp/tmpebg8x2w6plotCorrelation_result2.png v. /tmp/tmpil1o2mocplotCorrelation_result2.png )\nFiles /tmp/tmpebg8x2w6plotCorrelation_result2.png=11943b but /tmp/tmpil1o2mocplotCorrelation_result2.png=12341b - compare by size (delta=300) failed" ], "status": "failure", "test_index": 1, "time_seconds": 38.89235758781433, "tool_id": "deeptools_plot_correlation", "tool_version": "3.5.4+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #1)" name="0" time="46.180498123168945">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #2)" name="1" time="45.53527760505676">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #3)" name="2" time="40.444835901260376">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/e/2/e/dataset_e2e48b9f-87df-4105-81c5-b6528f53e75d.dat[FLASH]     /galaxy/server/database/objects/3/b/2/dataset_3b257ebf-821f-4a11-9c17-3e5599216954.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=64[FLASH]     Output format:         FASTQ, phred_offset=64[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 200 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      200[FLASH]     Combined pairs:   5[FLASH]     Uncombined pairs: 195[FLASH]     Percent combined: 2.50%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.016 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #4)" name="3" time="39.17380499839783">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="flash (Test #5)" name="4" time="40.672953367233276">
        
            
            <system-out><![CDATA[
            [FLASH] Starting FLASH v1.2.11[FLASH] Fast Length Adjustment of SHort reads[FLASH]  [FLASH] Input files:[FLASH]     /galaxy/server/database/objects/d/5/d/dataset_d5ded77e-8fdc-4ac7-a1b1-78969b9dc528.dat[FLASH]     /galaxy/server/database/objects/7/8/e/dataset_78edb768-715c-425e-9c75-b937fd77f4c9.dat[FLASH]  [FLASH] Output files:[FLASH]     ./out.extendedFrags.fastq[FLASH]     ./out.notCombined_1.fastq[FLASH]     ./out.notCombined_2.fastq[FLASH]     ./out.hist[FLASH]     ./out.histogram[FLASH]  [FLASH] Parameters:[FLASH]     Min overlap:           10[FLASH]     Max overlap:           65[FLASH]     Max mismatch density:  0.250000[FLASH]     Allow "outie" pairs:   false[FLASH]     Cap mismatch quals:    false[FLASH]     Combiner threads:      1[FLASH]     Input format:          FASTQ, phred_offset=33[FLASH]     Output format:         FASTQ, phred_offset=33, gzip[FLASH]  [FLASH] Starting reader and writer threads[FLASH] Starting 1 combiner threads[FLASH] Processed 500 read pairs[FLASH]  [FLASH] Read combination statistics:[FLASH]     Total pairs:      500[FLASH]     Combined pairs:   18[FLASH]     Uncombined pairs: 482[FLASH]     Percent combined: 3.60%[FLASH]  [FLASH] Writing histogram files.[FLASH]  [FLASH] FLASH v1.2.11 complete![FLASH] 0.039 seconds elapsed
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #1)" name="0" time="51.874348402023315">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "b56f06eeb8bff1e9",   "src": "hda"  },  "reference_source|ref": {   "id": "df67c29c151cb0c6",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/6/3/4/dataset_6349d1d7-5567-417c-9fc6-77b014f33f19.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/a/7/4/dataset_a74662c5-679f-4272-ac26-abb108a32ace.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/9/4/e/metadata_94e68463-90aa-41fe-8416-8255c7eb469c.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:23:27.243873",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-265m9",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "e71919be81b330a8",  "inputs": {   "reads": {    "id": "b56f06eeb8bff1e9",    "src": "hda",    "uuid": "a74662c5-679f-4272-ac26-abb108a32ace"   },   "reference_source|ref": {    "id": "df67c29c151cb0c6",    "src": "hda",    "uuid": "6349d1d7-5567-417c-9fc6-77b014f33f19"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732217021.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:23:41"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732217017.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:23:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "f379cc58597b82bf",    "src": "hda",    "uuid": "dde9e031-5f9e-4e96-8185-632a37dfbbee"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 219, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-21 19:23:37,456]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-21 19:23:37,567]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:23:41,560]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-21 19:23:37,456]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-21 19:23:37,567]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:23:41,560]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-11-21T19:23:55.706504",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpsnk446qhcall-out1.vcf v. /tmp/tmpdur1zzy1call-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241121\n+##source=lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/concat.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/0.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/1.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/2.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/3.vcf.gz /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/4.vcf.gz; Date=Thu Nov 21 19:23:41 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 0, "time_seconds": 51.874348402023315, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-21 19:23:37,456]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 0.01 --bonf dynamic reads.bamINFO [2024-11-21 19:23:37,567]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-21 19:23:41,560]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/157/tmp/lofreq2_call_parallelpmttnfva/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #2)" name="1" time="42.00224184989929">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "reads": {   "id": "f61439c37c32824e",   "src": "hda"  },  "reference_source|ref": {   "id": "fa393cc65d4ea753",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/0/c/dataset_10c5deea-890a-4c72-ad50-415a96277bc4.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/a/d/2/dataset_ad2313c9-58fa-4947-aabb-318b168a64c2.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/d/4/f/metadata_d4f82907-4324-4c1d-84c5-dbc7cf82f717.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:24:19.515966",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-m9lcs",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "20056bd7d37e34c3",  "inputs": {   "reads": {    "id": "f61439c37c32824e",    "src": "hda",    "uuid": "ad2313c9-58fa-4947-aabb-318b168a64c2"   },   "reference_source|ref": {    "id": "fa393cc65d4ea753",    "src": "hda",    "uuid": "10c5deea-890a-4c72-ad50-415a96277bc4"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732217065.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:24:25"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732217061.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:24:21"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "1421490ec5966248",    "src": "hda",    "uuid": "91ec08bb-e9ca-443b-9367-b27ce4c64591"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 0, \"src_qual\": \"\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 222, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-21 19:24:21,346]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-21 19:24:21,369]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:24:25,163]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-21 19:24:21,346]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-21 19:24:21,369]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:24:25,163]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-11-21T19:24:38.045823",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpp3jonkljcall-out1.vcf v. /tmp/tmpiv59ar5ucall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241121\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/concat.vcf.gz /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/0.vcf.gz /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/1.vcf.gz /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/2.vcf.gz /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/3.vcf.gz /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/4.vcf.gz; Date=Thu Nov 21 19:24:24 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 1, "time_seconds": 42.00224184989929, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-21 19:24:21,346]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-11-21 19:24:21,369]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-21 19:24:25,163]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/160/tmp/lofreq2_call_parallel6z4e00pn/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #3)" name="2" time="47.00158643722534">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "call_control|set_call_options": "yes",  "call_control|source_qual|use_src_qual|def_nm_q": "40",  "call_control|source_qual|use_src_qual|ign_vcf": {   "id": "7761c95d83fca678",   "src": "hda"  },  "call_control|source_qual|use_src_qual|src_qual": "--src-qual",  "reads": {   "id": "5a8a354619c93506",   "src": "hda"  },  "reference_source|ref": {   "id": "a006479228aea119",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/1/0/dataset_110392ed-2713-4ab7-873b-8ed39cda3448.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/1/f/c/dataset_1fc62270-8f46-4816-8b69-0a33e0e7233f.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/6/a/b/metadata_6abb5648-7d37-48b3-ba8c-6006cc609682.dat\u0027 reads.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/5/a/2/dataset_5a2c5fa9-c354-42f4-96bc-697034fb04a0.dat\u0027 ign0.vcf \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf   --min-cov 1 --max-depth 1000000  --min-bq 6 --min-alt-bq 6    --min-mq 0 --max-mq 255 --src-qual --ign-vcf \u0027ign0.vcf\u0027 --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0  --sig 0.01 --bonf dynamic   reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 echo set_lofreq_standard",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:25:06.632054",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-htp7x",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "05d3621661a54391",  "inputs": {   "call_control|source_qual|use_src_qual|ign_vcf": {    "id": "7761c95d83fca678",    "src": "hda",    "uuid": "5a2c5fa9-c354-42f4-96bc-697034fb04a0"   },   "call_control|source_qual|use_src_qual|ign_vcf1": {    "id": "7761c95d83fca678",    "src": "hda",    "uuid": "5a2c5fa9-c354-42f4-96bc-697034fb04a0"   },   "reads": {    "id": "5a8a354619c93506",    "src": "hda",    "uuid": "1fc62270-8f46-4816-8b69-0a33e0e7233f"   },   "reference_source|ref": {    "id": "a006479228aea119",    "src": "hda",    "uuid": "110392ed-2713-4ab7-873b-8ed39cda3448"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732217112.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:25:12"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732217108.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:25:08"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "2f9303dc6fc17ad7",    "src": "hda",    "uuid": "7b5fa52a-17fe-43a5-b6d6-23079781ce7a"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 1, \"align_quals\": {\"alnqual\": {\"__current_case__\": 0, \"alnqual_choice\": {\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}, \"use_alnqual\": \"\"}}, \"bc_quals\": {\"alt_bq\": {\"__current_case__\": 0, \"modify\": \"\"}, \"min_alt_bq\": \"6\", \"min_bq\": \"6\"}, \"coverage\": {\"max_depth\": \"1000000\", \"min_cov\": \"1\"}, \"joint_qual\": {\"def_alt_jq\": \"0\", \"min_alt_jq\": \"0\", \"min_jq\": \"0\"}, \"map_quals\": {\"min_mq\": \"0\", \"use_mq\": {\"__current_case__\": 0, \"max_mq\": \"255\", \"no_mq\": \"\"}}, \"pe\": {\"use_orphan\": false}, \"set_call_options\": \"yes\", \"source_qual\": {\"use_src_qual\": {\"__current_case__\": 1, \"def_nm_q\": \"40\", \"ign_vcf\": {\"values\": [{\"id\": 226, \"src\": \"hda\"}]}, \"src_qual\": \"--src-qual\"}}}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 2, \"bonf\": \"dynamic\", \"filter_type\": \"set_lofreq_standard\", \"others\": \"\", \"sig\": \"0.01\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 225, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-21 19:25:08,501]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-21 19:25:08,528]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:25:12,785]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-21 19:25:08,501]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bam\n\nINFO [2024-11-21 19:25:08,528]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:25:12,785]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20\n\nset_lofreq_standard\n",  "update_time": "2024-11-21T19:25:24.910703",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpbyjn73z1call-out1.vcf v. /tmp/tmp15iio96ecall-out1.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmpe0171355/job_working_directory/000/28/working/pp-tmp/lofreq2_call_parallell2yprl2k/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241121\n+##source=lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,11 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n-##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n+##FILTER=\u003cID=min_snvqual_33,Description=\"Minimum SNV Quality (Phred) 33\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n+##FILTER=\u003cID=min_snvqual_36,Description=\"Minimum SNV Quality (Phred) 36\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##FILTER=\u003cID=min_snvqual_20,Description=\"Minimum SNV Quality (Phred) 20\"\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/concat.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/0.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/1.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/2.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/3.vcf.gz /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/4.vcf.gz; Date=Thu Nov 21 19:25:12 2024\n ##FILTER=\u003cID=min_dp_10,Description=\"Minimum Coverage 10\"\u003e\n ##FILTER=\u003cID=sb_fdr,Description=\"Strand-Bias Multiple Testing Correction: fdr corr. pvalue \u003e 0.001000\"\u003e\n ##FILTER=\u003cID=min_snvqual_38,Description=\"Minimum SNV Quality (Phred) 38\"\u003e\n ##FILTER=\u003cID=min_indelqual_20,Description=\"Minimum Indel Quality (Phred) 20\"\u003e\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n-pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1.000000;SB=0;DP4=0,0,910,857\n+pBR322\t1134\t.\tC\tT\t49314\tPASS\tDP=1767;AF=1;SB=0;DP4=0,0,910,857\n" ], "status": "failure", "test_index": 2, "time_seconds": 47.00158643722534, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-21 19:25:08,501]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --min-cov 1 --max-depth 1000000 --min-bq 6 --min-alt-bq 6 --min-mq 0 --max-mq 255 --src-qual --ign-vcf ign0.vcf --def-nm-q 40 --min-jq 0 --min-alt-jq 0 --def-alt-jq 0 --sig 0.01 --bonf dynamic reads.bamINFO [2024-11-21 19:25:08,528]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-21 19:25:12,785]: Executing lofreq filter -i /galaxy/server/database/jobs_directory/000/164/tmp/lofreq2_call_parallelecpooqk4/concat.vcf.gz -o variants.vcf --snvqual-thresh 38 --indelqual-thresh 20set_lofreq_standard
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #4)" name="3" time="31.862163543701172">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "e1738d94a91202a9",   "src": "hda"  },  "reference_source|ref": {   "id": "9bb76d52152cb22d",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/2/6/c/dataset_26cd4e18-bbf8-45b5-a8a2-b9741df3bed4.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/a/6/1/dataset_a611c729-6789-4d4b-8f16-65d0da7dc218.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/f/9/3/metadata_f9392907-a754-431c-9504-99d867bbe379.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-21T19:25:48.393458",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-6tkfr",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "8ff57b184bbf5d08",  "inputs": {   "reads": {    "id": "e1738d94a91202a9",    "src": "hda",    "uuid": "a611c729-6789-4d4b-8f16-65d0da7dc218"   },   "reference_source|ref": {    "id": "9bb76d52152cb22d",    "src": "hda",    "uuid": "26cd4e18-bbf8-45b5-a8a2-b9741df3bed4"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "32e2e8aea6d63ece",    "src": "hda",    "uuid": "5d083fc6-3ec0-4df5-aba3-2abada3086e5"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 229, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "INFO [2024-11-21 19:25:50,499]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-21 19:25:50,522]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:25:53,559]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-21 19:25:50,499]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-21 19:25:50,522]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 66\nNumber of indel tests performed: 0\nINFO [2024-11-21 19:25:53,559]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2024-11-21T19:25:56.888966",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 31.862163543701172, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-21 19:25:50,499]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2024-11-21 19:25:50,522]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 66Number of indel tests performed: 0INFO [2024-11-21 19:25:53,559]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_call (Test #5)" name="4" time="43.40747356414795">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "filter_control|filter_type": "set_all_off",  "reads": {   "id": "4dc78bd48ee83f3b",   "src": "hda"  },  "reference_source|ref": {   "id": "c0373b74dc5d7531",   "src": "hda"  },  "reference_source|ref_selector": "history",  "variant_types": "--call-indels --only-indels" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/1/9/9/dataset_199d37d4-4317-4645-aa20-ab54e43984f5.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/5/0/0/dataset_500117f4-d2e3-4143-b7e2-53eab41d6da1.dat\u0027 reads.bam \u0026\u0026 ln -s -f \u0027/galaxy/server/database/objects/_metadata_files/6/2/9/metadata_629d9132-eaee-4e29-9af8-94f2a2963d97.dat\u0027 reads.bam.bai \u0026\u0026   lofreq call-parallel --pp-threads ${GALAXY_SLOTS:-1} --verbose  --ref \u0027reference.fa\u0027 --out variants.vcf --call-indels --only-indels    --sig 1 --bonf 1 --no-default-filter  reads.bam 2\u003e\u00261  || (tool_exit_code=$? \u0026\u0026 cat \"$TMPDIR\"/lofreq2_call_parallel*/*.log 1\u003e\u00262 \u0026\u0026 exit $tool_exit_code)  \u0026\u0026 ln -s variants.vcf variants.vcf.gz \u0026\u0026 gzip -df variants.vcf.gz \u0026\u0026 echo set_all_off",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:26:21.280558",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7gngl",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "08954ccc438aaf10",  "inputs": {   "reads": {    "id": "4dc78bd48ee83f3b",    "src": "hda",    "uuid": "500117f4-d2e3-4143-b7e2-53eab41d6da1"   },   "reference_source|ref": {    "id": "c0373b74dc5d7531",    "src": "hda",    "uuid": "199d37d4-4317-4645-aa20-ab54e43984f5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732217188.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:26:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732217183.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:26:23"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8589.0000000",    "title": "Memory Allocated (MB)",    "value": "8589"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Cores Allocated",    "value": "2"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "variants": {    "id": "dd3be19af40f5a1e",    "src": "hda",    "uuid": "a5102d17-7e7e-4199-b719-7dc6c816fa5f"   }  },  "params": {   "__input_ext": "\"input\"",   "call_control": "{\"__current_case__\": 0, \"set_call_options\": \"no\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_control": "{\"__current_case__\": 0, \"bonf\": \"1\", \"filter_type\": \"set_all_off\", \"others\": \"--no-default-filter\", \"sig\": \"1\"}",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 232, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}",   "regions": "{\"__current_case__\": 0, \"restrict_to_region\": \"genome\"}",   "variant_types": "\"--call-indels --only-indels\""  },  "state": "ok",  "stderr": "",  "stdout": "INFO [2024-11-21 19:26:23,541]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-21 19:26:23,569]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2024-11-21 19:26:27,966]: Copying concatenated vcf file to final destination\nset_all_off\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_call/lofreq_call/2.1.5+galaxy3",  "tool_stderr": "",  "tool_stdout": "INFO [2024-11-21 19:26:23,541]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bam\n\nINFO [2024-11-21 19:26:23,569]: Adding 5 commands to mp-pool\nChecking the headers and starting positions of 5 files\nNumber of substitution tests performed: 0\nNumber of indel tests performed: 9\nINFO [2024-11-21 19:26:27,966]: Copying concatenated vcf file to final destination\nset_all_off\n",  "update_time": "2024-11-21T19:26:40.410766",  "user_email": "tests@fake.org" }, "output_problems": [  "Output variants:  different than expected, difference (using diff):\n( /tmp/tmpnr7ua_3_indel-call-out.vcf v. /tmp/tmp1qsklab3indel-call-out.vcf )\n--- local_file\n+++ history_data\n@@ -1,6 +1,7 @@\n ##fileformat=VCFv4.0\n-##fileDate=20200615\n-##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-2180 -o /tmp/tmp265htsdc/job_working_directory/000/31/working/pp-tmp/lofreq2_call_parallel4gfado3q/0.vcf.gz reads.bam \n+##FILTER=\u003cID=PASS,Description=\"All filters passed\"\u003e\n+##fileDate=20241121\n+##source=lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter --no-default-filter -r pBR322:1-1090 -o /galaxy/server/database/jobs_directory/000/170/tmp/lofreq2_call_parallelvd4hu32p/0.vcf.gz reads.bam \n ##reference=reference.fa\n ##INFO=\u003cID=DP,Number=1,Type=Integer,Description=\"Raw Depth\"\u003e\n ##INFO=\u003cID=AF,Number=1,Type=Float,Description=\"Allele Frequency\"\u003e\n@@ -9,13 +10,16 @@\n ##INFO=\u003cID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"\u003e\n ##INFO=\u003cID=CONSVAR,Number=0,Type=Flag,Description=\"Indicates that the variant is a consensus variant (as opposed to a low frequency variant).\"\u003e\n ##INFO=\u003cID=HRUN,Number=1,Type=Integer,Description=\"Homopolymer length to the right of report indel position\"\u003e\n+##contig=\u003cID=pBR322\u003e\n+##bcftools_concatVersion=1.21+htslib-1.21\n+##bcftools_concatCommand=concat -a -O z -o /galaxy/server/database/jobs_directory/000/170/tmp/lofreq2_call_parallelvd4hu32p/concat.vcf.gz /galaxy/server/database/jobs_directory/000/170/tmp/lofreq2_call_parallelvd4hu32p/0.vcf.gz /galaxy/server/database/jobs_directory/000/170/tmp/lofreq2_call_parallelvd4hu32p/1.vcf.gz /galaxy/server/database/jobs_directory/000/170/tmp/lofreq2_call_parallelvd4hu32p/2.vcf.gz /galaxy/server/database/jobs_directory/000/170/tmp/lofreq2_call_parallelvd4hu32p/3.vcf.gz /galaxy/server/database/jobs_directory/000/170/tmp/lofreq2_call_parallelvd4hu32p/4.vcf.gz; Date=Thu Nov 21 19:26:27 2024\n #CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\n pBR322\t725\t.\tG\tGN\t0\t.\tDP=46;AF=0.021739;SB=0;DP4=22,23,0,1;INDEL;HRUN=1\n pBR322\t746\t.\tA\tAN\t0\t.\tDP=225;AF=0.004444;SB=3;DP4=116,108,0,1;INDEL;HRUN=1\n pBR322\t747\t.\tT\tTN\t0\t.\tDP=230;AF=0.004348;SB=3;DP4=118,111,0,1;INDEL;HRUN=1\n pBR322\t751\t.\tG\tGN\t0\t.\tDP=255;AF=0.003922;SB=3;DP4=128,126,0,1;INDEL;HRUN=1\n-pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.001650;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n+pBR322\t807\t.\tT\tTN\t0\t.\tDP=606;AF=0.00165;SB=0;DP4=300,305,0,1;INDEL;HRUN=3\n pBR322\t943\t.\tC\tCCG\t0\t.\tDP=1465;AF=0.000683;SB=0;DP4=709,755,0,1;INDEL;HRUN=1\n-pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.000570;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n+pBR322\t1152\t.\tC\tCN\t0\t.\tDP=1754;AF=0.00057;SB=0;DP4=926,830,1,0;INDEL;HRUN=2\n pBR322\t1271\t.\tA\tAN\t0\t.\tDP=1743;AF=0.000574;SB=0;DP4=890,855,1,0;INDEL;HRUN=2\n pBR322\t1376\t.\tA\tANN\t0\t.\tDP=1691;AF=0.000591;SB=3;DP4=849,843,0,1;INDEL;HRUN=1\n" ], "status": "failure", "test_index": 4, "time_seconds": 43.40747356414795, "tool_id": "lofreq_call", "tool_version": "2.1.5+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            INFO [2024-11-21 19:26:23,541]: Using 2 threads with following basic args: lofreq call --verbose --ref reference.fa --call-indels --only-indels --sig 1 --bonf 1 --no-default-filter reads.bamINFO [2024-11-21 19:26:23,569]: Adding 5 commands to mp-poolChecking the headers and starting positions of 5 filesNumber of substitution tests performed: 0Number of indel tests performed: 9INFO [2024-11-21 19:26:27,966]: Copying concatenated vcf file to final destinationset_all_off
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #1)" name="0" time="78.28664875030518">
        
            
            <system-out><![CDATA[
            [18:47:15 - DataStre] Loaded sample register.[18:47:15 - DataStre] Loaded sample register.[18:47:15 - DataIndx] Loaded 1/2 (50.00%) sample files.[18:47:15 - DataIndx] Loaded 2/2 (100.00%) sample files.[18:47:15 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:47:15 - Variants] Processing NC_045512.2:0-.[18:47:15 - TrimOlap] NC_045512.2:30.0-2939.0 is contained within NC_045512.2:30.0-2939.0, skipping.
            ]]></system-out>
            <system-err><![CDATA[
            [18:47:17 - Annotate] Getting chrom coordinates[18:47:17 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:47:17 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #2)" name="1" time="49.58358025550842">
        
            
            <system-out><![CDATA[
            [18:48:12 - DataStre] Loaded sample register.[18:48:12 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:48:12 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:48:12 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            [18:48:14 - Annotate] Getting chrom coordinates[18:48:14 - Annotate] Processing chunk with coordinates: NC_045512.2:44-1813[18:48:14 - BAMFile] Creating pool of 16 BAM file sets.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_variant (Test #3)" name="2" time="41.73413562774658">
        
            
            <system-out><![CDATA[
            [18:48:56 - DataStre] Loaded sample register.[18:48:56 - DataIndx] Loaded 1/1 (100.00%) sample files.[18:48:56 - Variants] Label decoding is:0: ('*',)1: ('A',)2: ('C',)3: ('G',)4: ('T',)[18:48:56 - Variants] Processing NC_045512.2:0-.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_times (Test #1)" name="0" time="66.23085474967957">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="68.3069920539856">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #1)" name="0" time="40.07189607620239">
        
            
            <system-out><![CDATA[
            null device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="42.133514165878296">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #2)" name="1" time="12.903152227401733">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 12.903152227401733, "tool_id": "raceid_inspecttrajectory", "tool_version": "0.2.3+galaxy3"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="44.5365047454834">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #3)" name="2" time="43.581281900405884">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="44.25231575965881">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #4)" name="3" time="44.633036851882935">
        
            
            <system-out><![CDATA[
            [1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="52.56861090660095">
        
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="raceid_inspecttrajectory (Test #5)" name="4" time="43.416056632995605">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "inputrds": {   "id": "dee6841acf424766",   "src": "hda"  },  "trjfid|basic|cellsfromz": "3,9,2",  "trjfid|basic|doit": "yes",  "trjfid|basic|som|doit": "yes",  "trjfid|basic|som|use_genes|typer": "genelist",  "trjfid|basic|som|use_genes|use_genes": "Clca4,Mki67,Defa24,Ybx1,Vasp,Apoa1",  "trjfid|basic|use|def": "no",  "trjfid|basic|use|filterset_minexpr": "1",  "trjfid|basic|use|filterset_minnumber": "2",  "trjfid|basic|use|plotheat_ygrid": true,  "trjfid|basic|use|procsom_corthr": "0.5",  "trjfid|basic|use|procsom_minsom": "5",  "trjsid|basic|br": "6,5,3",  "trjsid|basic|doit": "yes",  "trjsid|basic|i": "5",  "trjsid|basic|use|def": "no",  "trjsid|basic|use|ndiffgenes": "14",  "trjsid|basic|use|zscore": true }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/a6821f856a1e/raceid_inspecttrajectory/scripts/trajectoryinspect.R\u0027 \u0027/galaxy/server/database/jobs_directory/000/142/configs/tmpsaxj3g79\u0027 2\u003e \u0027/galaxy/server/database/objects/3/5/3/dataset_3536cfec-eede-4285-87a0-d530568afc6d.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-21T19:17:46.827122",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-mv5cb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "f3a2eddd503c56fe",  "inputs": {   "inputrds": {    "id": "dee6841acf424766",    "src": "hda",    "uuid": "080cee54-53b5-4132-a982-dfb4039ef7eb"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "outdiffgenes": {    "id": "e53049349146cd99",    "src": "hda",    "uuid": "7a385a66-d49b-437f-b102-fa4223d6f149"   },   "outlog": {    "id": "53f7ba4785939ea3",    "src": "hda",    "uuid": "3536cfec-eede-4285-87a0-d530568afc6d"   },   "outpdf": {    "id": "13a1f1ae596f2052",    "src": "hda",    "uuid": "9ce6f5c8-fa0d-471f-b30e-af4c4d02b593"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "trjfid": "{\"basic\": {\"__current_case__\": 1, \"cellsfromz\": \"3,9,2\", \"doit\": \"yes\", \"som\": {\"__current_case__\": 1, \"doit\": \"yes\", \"title\": \"Title\", \"use\": {\"__current_case__\": 0, \"def\": \"yes\"}, \"use_genes\": {\"__current_case__\": 0, \"typer\": \"genelist\", \"use_genes\": \"Clca4,Mki67,Defa24,Ybx1,Vasp,Apoa1\"}, \"use_types\": \"\\\\\\\\_\\\\\\\\d+\"}, \"use\": {\"__current_case__\": 1, \"def\": \"no\", \"filterset_minexpr\": \"1\", \"filterset_minnumber\": \"2\", \"getsom_alpha\": \"0.5\", \"getsom_nb\": \"1000\", \"plotheat_xgrid\": false, \"plotheat_xlab\": false, \"plotheat_ygrid\": true, \"procsom_corthr\": \"0.5\", \"procsom_minsom\": \"5\"}}}",   "trjsid": "{\"basic\": {\"__current_case__\": 1, \"br\": \"6,5,3\", \"doit\": \"yes\", \"i\": \"5\", \"use\": {\"__current_case__\": 1, \"def\": \"no\", \"ndiffgenes\": \"14\", \"zscore\": true}}}"  },  "state": "error",  "stderr": "",  "stdout": "NULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\nNULL\nNULL\nNULL\nnull device \n          1 \n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3",  "tool_stderr": "",  "tool_stdout": "NULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\n[1] 1\nNULL\nNULL\nNULL\nNULL\nnull device \n          1 \n",  "update_time": "2024-11-21T19:18:07.401147",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/raceid_inspecttrajectory/raceid_inspecttrajectory/0.2.3+galaxy3, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 43.416056632995605, "tool_id": "raceid_inspecttrajectory", "tool_version": "0.2.3+galaxy3"}
                ]]></error>
            
            <system-out><![CDATA[
            NULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULLNULL[1] 1NULL[1] 1NULL[1] 1NULL[1] 1NULLNULLNULLNULLnull device           1 
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #1)" name="0" time="24.17009711265564">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 24.17009711265564, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #2)" name="1" time="58.77521085739136">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.000912692sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 4.1566e-05sWriting sequence data to file . . . doneElapsed time: 5.8403e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 0.000110564sdoneElapsed time: 0.00318238sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00144588sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { /dev/fd/63 }# [ mates2 ] => { /dev/fd/62 }# [ libType ] => { IU }# [ output ] => { ./results }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-11-21 18:51:26.539] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-11-21 18:51:26.628] [jointLog] [info] Loading Quasi index[2024-11-21 18:51:26.632] [jointLog] [info] done[2024-11-21 18:51:26.652] [jointLog] [info] Gathered fragment lengths from all threads[2024-11-21 18:51:26.652] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-11-21 18:51:26.653] [jointLog] [info] Estimating effective lengths[2024-11-21 18:51:26.630] [stderrLog] [info] Loading Suffix Array [2024-11-21 18:51:26.630] [stderrLog] [info] Loading Position Hash[2024-11-21 18:51:26.630] [stderrLog] [info] Loading Transcript Info [2024-11-21 18:51:26.631] [stderrLog] [info] Loading Rank-Select Bit Array[2024-11-21 18:51:26.631] [stderrLog] [info] There were 15 set bits in the bit array[2024-11-21 18:51:26.631] [stderrLog] [info] Computing transcript lengths[2024-11-21 18:51:26.631] [stderrLog] [info] Waiting to finish loading hash[2024-11-21 18:51:26.632] [stderrLog] [info] Done loading indexDone Quasi-Mapping [2024-11-21 18:51:26.663] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-11-21 18:51:26.663] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-11-21 18:51:26.664] [jointLog] [info] Starting optimizer:[2024-11-21 18:51:26.664] [jointLog] [info] Optimizing over 21 equivalence classes[2024-11-21 18:51:26.664] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-11-21 18:51:26.664] [jointLog] [info] iteration = 64 | max rel diff. = 0.00117687[2024-11-21 18:51:26.664] [jointLog] [info] Finished optimizer[2024-11-21 18:51:26.664] [jointLog] [info] writing output 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="sailfish (Test #3)" name="2" time="12.080281972885132">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 12.080281972885132, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="sailfish (Test #4)" name="3" time="39.91654634475708">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "biasCorrect": true,  "geneMap": {   "id": "aa15877de4f53663",   "src": "hda"  },  "refTranscriptSource|TranscriptSource": "history",  "refTranscriptSource|ownFile": {   "id": "54c0eb4dcb136175",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "640ab2b73eeff931",   "src": "hda"  },  "single_or_paired|input_mate2": {   "id": "d823bb738a434ae0",   "src": "hda"  },  "single_or_paired|single_or_paired_opts": "paired" }, "job": {  "command_line": "sailfish index --transcripts /galaxy/server/database/objects/f/8/7/dataset_f87efd0c-6553-47d0-bd45-127a06bdb363.dat --kmerSize 21 --out ./index_dir --threads \"${GALAXY_SLOTS:-4}\" \u0026\u0026 ln -s /galaxy/server/database/objects/1/3/2/dataset_132b9050-a652-4bc6-99e1-5bf19c0f965f.dat ./mate1.fastq \u0026\u0026 ln -s /galaxy/server/database/objects/2/1/4/dataset_214bb6c2-9e36-4411-a148-2f41c4b15ebb.dat ./mate2.fastq \u0026\u0026 ln -s \"/galaxy/server/database/objects/4/7/7/dataset_47706400-add8-425d-88d6-af251ac49ea4.dat\" ./geneMap.tabular \u0026\u0026 sailfish quant --index ./index_dir --mates1 ./mate1.fastq --mates2 ./mate2.fastq --libType \"IU\" --output ./results --biasCorrect  --threads \"${GALAXY_SLOTS:-4}\"  --gcSizeSamp 1 --gcSpeedSamp 1 --fldMean 200 --fldSD 80 --maxReadOcc 200 --geneMap ./geneMap.tabular      --maxFragLen 1000 --txpAggregationKey \u0027gene_id\u0027    --numBiasSamples 1000000 --numFragSamples 10000 --numGibbsSamples 0 --numBootstraps 0",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-21T18:52:27.383525",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-7bdt5",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "70c8082e125ad335",  "inputs": {   "geneMap": {    "id": "aa15877de4f53663",    "src": "hda",    "uuid": "47706400-add8-425d-88d6-af251ac49ea4"   },   "refTranscriptSource|ownFile": {    "id": "54c0eb4dcb136175",    "src": "hda",    "uuid": "f87efd0c-6553-47d0-bd45-127a06bdb363"   },   "single_or_paired|input_mate1": {    "id": "640ab2b73eeff931",    "src": "hda",    "uuid": "132b9050-a652-4bc6-99e1-5bf19c0f965f"   },   "single_or_paired|input_mate2": {    "id": "d823bb738a434ae0",    "src": "hda",    "uuid": "214bb6c2-9e36-4411-a148-2f41c4b15ebb"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_gene_quant": {    "id": "908a25670ba0aa8a",    "src": "hda",    "uuid": "00cc8199-bc52-437c-a7ba-46be479e2081"   },   "output_quant": {    "id": "f6d1bc1b265275b5",    "src": "hda",    "uuid": "0881529d-930c-44b5-99a5-3ec1b24118c3"   }  },  "params": {   "__input_ext": "\"fasta\"",   "allowDovetail": "false",   "biasCorrect": "true",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "discardOrphans": "false",   "dumpEq": "false",   "enforceLibCompat": "false",   "fldMean": "\"200\"",   "fldSD": "\"80\"",   "gcBiasCorrect": "false",   "gcSizeSamp": "\"1\"",   "gcSpeedSamp": "\"1\"",   "ignoreLibCompat": "false",   "maxFragLen": "\"1000\"",   "maxReadOcc": "\"200\"",   "noEffectiveLengthCorrection": "false",   "numBiasSamples": "\"1000000\"",   "numBootstraps": "\"0\"",   "numFragSamples": "\"10000\"",   "numGibbsSamples": "\"0\"",   "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"kmerSize\": \"21\", \"ownFile\": {\"values\": [{\"id\": 84, \"src\": \"hda\"}]}}",   "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 85, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 86, \"src\": \"hda\"}]}, \"orientation\": \"I\", \"single_or_paired_opts\": \"paired\", \"strandedness\": \"U\"}",   "strictIntersect": "false",   "txpAggregationKey": "\"gene_id\"",   "unsmoothedFLD": "false",   "useVBOpt": "false"  },  "state": "error",  "stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000917208s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.5649e-05s\nWriting sequence data to file . . . done\nElapsed time: 6.4464e-05s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 8.6207e-05s\ndone\nElapsed time: 0.0136994s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00145025s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2024-11-21 18:52:30.573] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n\n[2024-11-21 18:52:30.662] [jointLog] [info] Loading Quasi index\n[2024-11-21 18:52:30.666] [jointLog] [info] done\n[2024-11-21 18:52:30.687] [jointLog] [info] Gathered fragment lengths from all threads\n[2024-11-21 18:52:30.687] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2024-11-21 18:52:30.688] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Suffix Array \n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Position Hash\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Transcript Info \n[2024-11-21 18:52:30.665] [stderrLog] [info] Loading Rank-Select Bit Array\n[2024-11-21 18:52:30.665] [stderrLog] [info] There were 15 set bits in the bit array\n[2024-11-21 18:52:30.665] [stderrLog] [info] Computing transcript lengths\n[2024-11-21 18:52:30.665] [stderrLog] [info] Waiting to finish loading hash\n[2024-11-21 18:52:30.666] [stderrLog] [info] Done loading index\n[2024-11-21 18:52:30.698] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2024-11-21 18:52:30.698] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2024-11-21 18:52:30.698] [jointLog] [info] Starting optimizer:\n\n[2024-11-21 18:52:30.698] [jointLog] [info] Optimizing over 21 equivalence classes\n[2024-11-21 18:52:30.698] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2024-11-21 18:52:30.699] [jointLog] [info] iteration 50, recomputing effective lengths\n[2024-11-21 18:52:30.701] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2024-11-21 18:52:30.701] [jointLog] [info] Finished optimizer\n[2024-11-21 18:52:30.701] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1",  "tool_stderr": "Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000917208s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.5649e-05s\nWriting sequence data to file . . . done\nElapsed time: 6.4464e-05s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 8.6207e-05s\ndone\nElapsed time: 0.0136994s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00145025s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2024-11-21 18:52:30.573] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n\n[2024-11-21 18:52:30.662] [jointLog] [info] Loading Quasi index\n[2024-11-21 18:52:30.666] [jointLog] [info] done\n[2024-11-21 18:52:30.687] [jointLog] [info] Gathered fragment lengths from all threads\n[2024-11-21 18:52:30.687] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2024-11-21 18:52:30.688] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Suffix Array \n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Position Hash\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Transcript Info \n[2024-11-21 18:52:30.665] [stderrLog] [info] Loading Rank-Select Bit Array\n[2024-11-21 18:52:30.665] [stderrLog] [info] There were 15 set bits in the bit array\n[2024-11-21 18:52:30.665] [stderrLog] [info] Computing transcript lengths\n[2024-11-21 18:52:30.665] [stderrLog] [info] Waiting to finish loading hash\n[2024-11-21 18:52:30.666] [stderrLog] [info] Done loading index\n[2024-11-21 18:52:30.698] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2024-11-21 18:52:30.698] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2024-11-21 18:52:30.698] [jointLog] [info] Starting optimizer:\n\n[2024-11-21 18:52:30.698] [jointLog] [info] Optimizing over 21 equivalence classes\n[2024-11-21 18:52:30.698] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2024-11-21 18:52:30.699] [jointLog] [info] iteration 50, recomputing effective lengths\n[2024-11-21 18:52:30.701] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2024-11-21 18:52:30.701] [jointLog] [info] Finished optimizer\n[2024-11-21 18:52:30.701] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n",  "tool_stdout": "",  "update_time": "2024-11-21T18:52:33.759159",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1, exit_code: None, stderr: Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000917208s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.5649e-05s\nWriting sequence data to file . . . done\nElapsed time: 6.4464e-05s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 8.6207e-05s\ndone\nElapsed time: 0.0136994s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00145025s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2024-11-21 18:52:30.573] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n\n[2024-11-21 18:52:30.662] [jointLog] [info] Loading Quasi index\n[2024-11-21 18:52:30.666] [jointLog] [info] done\n[2024-11-21 18:52:30.687] [jointLog] [info] Gathered fragment lengths from all threads\n[2024-11-21 18:52:30.687] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2024-11-21 18:52:30.688] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Suffix Array \n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Position Hash\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Transcript Info \n[2024-11-21 18:52:30.665] [stderrLog] [info] Loading Rank-Select Bit Array\n[2024-11-21 18:52:30.665] [stderrLog] [info] There were 15 set bits in the bit array\n[2024-11-21 18:52:30.665] [stderrLog] [info] Computing transcript lengths\n[2024-11-21 18:52:30.665] [stderrLog] [info] Waiting to finish loading hash\n[2024-11-21 18:52:30.666] [stderrLog] [info] Done loading index\n[2024-11-21 18:52:30.698] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2024-11-21 18:52:30.698] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2024-11-21 18:52:30.698] [jointLog] [info] Starting optimizer:\n\n[2024-11-21 18:52:30.698] [jointLog] [info] Optimizing over 21 equivalence classes\n[2024-11-21 18:52:30.698] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2024-11-21 18:52:30.699] [jointLog] [info] iteration 50, recomputing effective lengths\n[2024-11-21 18:52:30.701] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2024-11-21 18:52:30.701] [jointLog] [info] Finished optimizer\n[2024-11-21 18:52:30.701] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1, exit_code: None, stderr: Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000917208s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.5649e-05s\nWriting sequence data to file . . . done\nElapsed time: 6.4464e-05s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 8.6207e-05s\ndone\nElapsed time: 0.0136994s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00145025s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2024-11-21 18:52:30.573] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n\n[2024-11-21 18:52:30.662] [jointLog] [info] Loading Quasi index\n[2024-11-21 18:52:30.666] [jointLog] [info] done\n[2024-11-21 18:52:30.687] [jointLog] [info] Gathered fragment lengths from all threads\n[2024-11-21 18:52:30.687] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2024-11-21 18:52:30.688] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Suffix Array \n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Position Hash\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Transcript Info \n[2024-11-21 18:52:30.665] [stderrLog] [info] Loading Rank-Select Bit Array\n[2024-11-21 18:52:30.665] [stderrLog] [info] There were 15 set bits in the bit array\n[2024-11-21 18:52:30.665] [stderrLog] [info] Computing transcript lengths\n[2024-11-21 18:52:30.665] [stderrLog] [info] Waiting to finish loading hash\n[2024-11-21 18:52:30.666] [stderrLog] [info] Done loading index\n[2024-11-21 18:52:30.698] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2024-11-21 18:52:30.698] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2024-11-21 18:52:30.698] [jointLog] [info] Starting optimizer:\n\n[2024-11-21 18:52:30.698] [jointLog] [info] Optimizing over 21 equivalence classes\n[2024-11-21 18:52:30.698] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2024-11-21 18:52:30.699] [jointLog] [info] iteration 50, recomputing effective lengths\n[2024-11-21 18:52:30.701] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2024-11-21 18:52:30.701] [jointLog] [info] Finished optimizer\n[2024-11-21 18:52:30.701] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/sailfish/sailfish/0.10.1.1, exit_code: None, stderr: Version Info: This is the most recent version of Sailfish\nwriting log to ./index_dir/logs/sailfish_index.log\nRapMap Indexer\n\n[Step 1 of 4] : counting k-mers\nElapsed time: 0.000917208s\n\nReplaced 0 non-ATCG nucleotides\nClipped poly-A tails from 0 transcripts\nBuilding rank-select dictionary and saving to disk done\nElapsed time: 4.5649e-05s\nWriting sequence data to file . . . done\nElapsed time: 6.4464e-05s\n[info] Building 32-bit suffix array (length of generalized text is 28577)\nBuilding suffix array . . . success\nsaving to disk . . . done\nElapsed time: 8.6207e-05s\ndone\nElapsed time: 0.0136994s\n\r\rprocessed 0 positions\nkhash had 18955 keys\nsaving hash to disk . . . done\nElapsed time: 0.00145025s\nVersion Info: This is the most recent version of Sailfish\n# sailfish (quasi-mapping-based) v0.9.2\n# [ program ] =\u003e sailfish \n# [ command ] =\u003e quant \n# [ index ] =\u003e { ./index_dir }\n# [ mates1 ] =\u003e { ./mate1.fastq }\n# [ mates2 ] =\u003e { ./mate2.fastq }\n# [ libType ] =\u003e { IU }\n# [ output ] =\u003e { ./results }\n# [ biasCorrect ] =\u003e { }\n# [ threads ] =\u003e { 6 }\n# [ gcSizeSamp ] =\u003e { 1 }\n# [ gcSpeedSamp ] =\u003e { 1 }\n# [ fldMean ] =\u003e { 200 }\n# [ fldSD ] =\u003e { 80 }\n# [ maxReadOcc ] =\u003e { 200 }\n# [ geneMap ] =\u003e { ./geneMap.tabular }\n# [ maxFragLen ] =\u003e { 1000 }\n# [ txpAggregationKey ] =\u003e { gene_id }\n# [ numBiasSamples ] =\u003e { 1000000 }\n# [ numFragSamples ] =\u003e { 10000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\nLogs will be written to ./results/logs\n[2024-11-21 18:52:30.573] [jointLog] [info] parsing read library format\nthere is 1 lib\nLoading 32-bit quasi indexIndex contained 15 targets\nLoaded targets\n\n\n\n[2024-11-21 18:52:30.662] [jointLog] [info] Loading Quasi index\n[2024-11-21 18:52:30.666] [jointLog] [info] done\n[2024-11-21 18:52:30.687] [jointLog] [info] Gathered fragment lengths from all threads\n[2024-11-21 18:52:30.687] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction\n[2024-11-21 18:52:30.688] [jointLog] [info] Estimating effective lengths\nDone Quasi-Mapping \n\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Suffix Array \n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Position Hash\n[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Transcript Info \n[2024-11-21 18:52:30.665] [stderrLog] [info] Loading Rank-Select Bit Array\n[2024-11-21 18:52:30.665] [stderrLog] [info] There were 15 set bits in the bit array\n[2024-11-21 18:52:30.665] [stderrLog] [info] Computing transcript lengths\n[2024-11-21 18:52:30.665] [stderrLog] [info] Waiting to finish loading hash\n[2024-11-21 18:52:30.666] [stderrLog] [info] Done loading index\n[2024-11-21 18:52:30.698] [jointLog] [info] Computed 21 rich equivalence classes for further processing\n[2024-11-21 18:52:30.698] [jointLog] [info] Counted 10000 total reads in the equivalence classes \n[2024-11-21 18:52:30.698] [jointLog] [info] Starting optimizer:\n\n[2024-11-21 18:52:30.698] [jointLog] [info] Optimizing over 21 equivalence classes\n[2024-11-21 18:52:30.698] [jointLog] [info] iteration = 0 | max rel diff. = 14.873\n[2024-11-21 18:52:30.699] [jointLog] [info] iteration 50, recomputing effective lengths\n[2024-11-21 18:52:30.701] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953\n[2024-11-21 18:52:30.701] [jointLog] [info] Finished optimizer\n[2024-11-21 18:52:30.701] [jointLog] [info] writing output \n\nComputing gene-level abundance estimates\nThere were 3 transcripts mapping to 3 genes\nWARNING: couldn\u0027t find transcript named [NR_031764]; returning transcript  as it\u0027s own gene\n\ndone\nAggregating expressions to gene level . . . done\n." ], "status": "failure", "test_index": 3, "time_seconds": 39.91654634475708, "tool_id": "sailfish", "tool_version": "0.10.1.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: This is the most recent version of Sailfishwriting log to ./index_dir/logs/sailfish_index.logRapMap Indexer[Step 1 of 4] : counting k-mersElapsed time: 0.000917208sReplaced 0 non-ATCG nucleotidesClipped poly-A tails from 0 transcriptsBuilding rank-select dictionary and saving to disk doneElapsed time: 4.5649e-05sWriting sequence data to file . . . doneElapsed time: 6.4464e-05s[info] Building 32-bit suffix array (length of generalized text is 28577)Building suffix array . . . successsaving to disk . . . doneElapsed time: 8.6207e-05sdoneElapsed time: 0.0136994sprocessed 0 positionskhash had 18955 keyssaving hash to disk . . . doneElapsed time: 0.00145025sVersion Info: This is the most recent version of Sailfish# sailfish (quasi-mapping-based) v0.9.2# [ program ] => sailfish # [ command ] => quant # [ index ] => { ./index_dir }# [ mates1 ] => { ./mate1.fastq }# [ mates2 ] => { ./mate2.fastq }# [ libType ] => { IU }# [ output ] => { ./results }# [ biasCorrect ] => { }# [ threads ] => { 6 }# [ gcSizeSamp ] => { 1 }# [ gcSpeedSamp ] => { 1 }# [ fldMean ] => { 200 }# [ fldSD ] => { 80 }# [ maxReadOcc ] => { 200 }# [ geneMap ] => { ./geneMap.tabular }# [ maxFragLen ] => { 1000 }# [ txpAggregationKey ] => { gene_id }# [ numBiasSamples ] => { 1000000 }# [ numFragSamples ] => { 10000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }Logs will be written to ./results/logs[2024-11-21 18:52:30.573] [jointLog] [info] parsing read library formatthere is 1 libLoading 32-bit quasi indexIndex contained 15 targetsLoaded targets[2024-11-21 18:52:30.662] [jointLog] [info] Loading Quasi index[2024-11-21 18:52:30.666] [jointLog] [info] done[2024-11-21 18:52:30.687] [jointLog] [info] Gathered fragment lengths from all threads[2024-11-21 18:52:30.687] [jointLog] [warning] Sailfish saw fewer then 10000 uniquely mapped reads so 200 will be used as the mean fragment length and 80 as the standard deviation for effective length correction[2024-11-21 18:52:30.688] [jointLog] [info] Estimating effective lengthsDone Quasi-Mapping [2024-11-21 18:52:30.664] [stderrLog] [info] Loading Suffix Array [2024-11-21 18:52:30.664] [stderrLog] [info] Loading Position Hash[2024-11-21 18:52:30.664] [stderrLog] [info] Loading Transcript Info [2024-11-21 18:52:30.665] [stderrLog] [info] Loading Rank-Select Bit Array[2024-11-21 18:52:30.665] [stderrLog] [info] There were 15 set bits in the bit array[2024-11-21 18:52:30.665] [stderrLog] [info] Computing transcript lengths[2024-11-21 18:52:30.665] [stderrLog] [info] Waiting to finish loading hash[2024-11-21 18:52:30.666] [stderrLog] [info] Done loading index[2024-11-21 18:52:30.698] [jointLog] [info] Computed 21 rich equivalence classes for further processing[2024-11-21 18:52:30.698] [jointLog] [info] Counted 10000 total reads in the equivalence classes [2024-11-21 18:52:30.698] [jointLog] [info] Starting optimizer:[2024-11-21 18:52:30.698] [jointLog] [info] Optimizing over 21 equivalence classes[2024-11-21 18:52:30.698] [jointLog] [info] iteration = 0 | max rel diff. = 14.873[2024-11-21 18:52:30.699] [jointLog] [info] iteration 50, recomputing effective lengths[2024-11-21 18:52:30.701] [jointLog] [info] iteration = 63 | max rel diff. = 0.00199953[2024-11-21 18:52:30.701] [jointLog] [info] Finished optimizer[2024-11-21 18:52:30.701] [jointLog] [info] writing output Computing gene-level abundance estimatesThere were 3 transcripts mapping to 3 genesWARNING: couldn't find transcript named [NR_031764]; returning transcript  as it's own genedoneAggregating expressions to gene level . . . done
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #1)" name="0" time="52.92526865005493">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #2)" name="1" time="36.26726508140564">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #3)" name="2" time="37.507633447647095">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #4)" name="3" time="39.055447578430176">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #5)" name="4" time="36.65477395057678">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_mpileup (Test #6)" name="5" time="39.03453040122986">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="43.269081354141235">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #1)" name="0" time="39.86407446861267">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="40.50648522377014">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #2)" name="1" time="39.423320055007935">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="13.425126314163208">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 13.425126314163208, "tool_id": "samtools_phase", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_phase (Test #3)" name="2" time="41.035226345062256">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #1)" name="0" time="87.93182373046875">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "48e1c4364b572444",   "src": "hda"  },  "advanced_common|show_log": true,  "method|exclude_highly_expressed|exclude_highly_expressed": "False",  "method|key_added": "n_counts",  "method|layer_norm": "None",  "method|layers": "all",  "method|method": "pp.normalize_total" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/f/c/dataset_2fc7d48e-5aa0-4418-9a3a-5524f88adf7a.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/144/configs/tmp2y1qftp9\u0027 \u003e \u0027/galaxy/server/database/objects/0/3/7/dataset_03753e5d-1243-40a9-bb88-7a13c948b6eb.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/144/configs/tmp2y1qftp9\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/0/3/7/dataset_03753e5d-1243-40a9-bb88-7a13c948b6eb.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/0/3/7/dataset_03753e5d-1243-40a9-bb88-7a13c948b6eb.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:18:30.037813",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wdtrv",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "ad0becaac6a5a173",  "inputs": {   "adata": {    "id": "48e1c4364b572444",    "src": "hda",    "uuid": "2fc7d48e-5aa0-4418-9a3a-5524f88adf7a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216754.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:19:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216749.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:19:09"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "b85f87da30bc6230",    "src": "hda",    "uuid": "8df7a949-9df0-49a2-b6aa-96dab9a55199"   },   "hidden_output": {    "id": "9417235a5ed144bc",    "src": "hda",    "uuid": "03753e5d-1243-40a9-bb88-7a13c948b6eb"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 0, \"exclude_highly_expressed\": {\"__current_case__\": 1, \"exclude_highly_expressed\": \"False\"}, \"key_added\": \"n_counts\", \"layer_norm\": \"None\", \"layers\": \"all\", \"method\": \"pp.normalize_total\", \"target_sum\": \"\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n-    n_counts\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2024-11-21T19:19:36.238883",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.normalize_total.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 87.93182373046875, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #2)" name="1" time="33.221025705337524">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "6125d231b8bcd8af",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_zheng17",  "method|n_top_genes": "1000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/7/e/f/dataset_7eff7c92-8f82-4902-8ded-9545a3fd7f17.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmp5t1kf9lc\u0027 \u003e \u0027/galaxy/server/database/objects/9/8/6/dataset_986ad7c9-67da-4130-8755-5089278262a1.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/146/configs/tmp5t1kf9lc\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/9/8/6/dataset_986ad7c9-67da-4130-8755-5089278262a1.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/9/8/6/dataset_986ad7c9-67da-4130-8755-5089278262a1.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-11-21T19:19:59.654250",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-j44f8",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "45095a5b2ee0c1e1",  "inputs": {   "adata": {    "id": "6125d231b8bcd8af",    "src": "hda",    "uuid": "7eff7c92-8f82-4902-8ded-9545a3fd7f17"   }  },  "job_messages": null,  "job_metrics": [],  "job_runner_name": null,  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "0ab0debbd52119b3",    "src": "hda",    "uuid": "0fe9797a-3055-44a6-bbee-187fe970067c"   },   "hidden_output": {    "id": "087691541b745193",    "src": "hda",    "uuid": "986ad7c9-67da-4130-8755-5089278262a1"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 1, \"log\": true, \"method\": \"pp.recipe_zheng17\", \"n_top_genes\": \"1000\"}"  },  "state": "error",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 998\n[obs]\n-    n_counts_all\n[var]\n-    n_counts\n-    mean\n-    std\n[uns]\n-    log1p\n",  "update_time": "2024-11-21T19:20:09.760023",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 33.221025705337524, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #3)" name="2" time="42.49969458580017">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "133738695c38e7b7",   "src": "hda"  },  "advanced_common|show_log": true,  "method|cv_threshold": "2.0",  "method|log": true,  "method|mean_threshold": "0.01",  "method|method": "pp.recipe_weinreb17",  "method|n_pcs": "50",  "method|random_state": "0",  "method|svd_solver": "randomized" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/6/6/1/dataset_661cf815-b7dc-4301-be29-5698da3ef9a6.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmpj741hjqf\u0027 \u003e \u0027/galaxy/server/database/objects/3/3/4/dataset_334d3375-7389-4964-bb15-8d075263c7c5.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/148/configs/tmpj741hjqf\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/3/3/4/dataset_334d3375-7389-4964-bb15-8d075263c7c5.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/3/3/4/dataset_334d3375-7389-4964-bb15-8d075263c7c5.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:20:32.279231",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-knxwk",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "6cc2f6f61c50c4b9",  "inputs": {   "adata": {    "id": "133738695c38e7b7",    "src": "hda",    "uuid": "661cf815-b7dc-4301-be29-5698da3ef9a6"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216840.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:20:40"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216834.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:20:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "f32ad0ff10bb4f4c",    "src": "hda",    "uuid": "db6a5d64-c296-435d-a3d8-a5bedb9c817e"   },   "hidden_output": {    "id": "55a38e4c2a9cef2e",    "src": "hda",    "uuid": "334d3375-7389-4964-bb15-8d075263c7c5"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 2, \"cv_threshold\": \"2.0\", \"log\": true, \"mean_threshold\": \"0.01\", \"method\": \"pp.recipe_weinreb17\", \"n_pcs\": \"50\", \"random_state\": \"0\", \"svd_solver\": \"randomized\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    100 \u00d7 1592\n[obs]\n-    paul15_clusters\n[uns]\n-    iroot\n-    log1p\n[obsm]\n-    X_pca\n",  "update_time": "2024-11-21T19:20:51.933162",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_weinreb17.paul15_subsample.updated.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 2, "time_seconds": 42.49969458580017, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #4)" name="3" time="42.18419861793518">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "b434cac328a369d9",   "src": "hda"  },  "advanced_common|show_log": true,  "method|log": true,  "method|method": "pp.recipe_seurat" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/0/f/dataset_d0faec5e-ce1f-42f6-b768-f73f09ae379a.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmp7ii3lqdf\u0027 \u003e \u0027/galaxy/server/database/objects/b/4/2/dataset_b42e2415-a3ce-4473-baf5-187dee38ad39.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/150/configs/tmp7ii3lqdf\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/b/4/2/dataset_b42e2415-a3ce-4473-baf5-187dee38ad39.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/b/4/2/dataset_b42e2415-a3ce-4473-baf5-187dee38ad39.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:21:15.421612",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-9c7ll",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "a74b7b20c38d0c12",  "inputs": {   "adata": {    "id": "b434cac328a369d9",    "src": "hda",    "uuid": "d0faec5e-ce1f-42f6-b768-f73f09ae379a"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216882.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:21:22"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216877.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:21:17"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "3ee125369402dc58",    "src": "hda",    "uuid": "7b67150e-323d-4335-b69d-8a375a74d60a"   },   "hidden_output": {    "id": "1dc0e83a8acfd933",    "src": "hda",    "uuid": "b42e2415-a3ce-4473-baf5-187dee38ad39"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 3, \"log\": true, \"method\": \"pp.recipe_seurat\"}"  },  "state": "ok",  "stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "WARNING: adata.X seems to be already log-transformed.\n",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    1000 \u00d7 1\n[obs]\n-    n_counts_all\n-    n_genes\n[var]\n-    n_counts\n-    mean\n-    std\n-    n_cells\n[uns]\n-    log1p\n",  "update_time": "2024-11-21T19:21:34.474204",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (pp.recipe_seurat.recipe_zheng17.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 3, "time_seconds": 42.18419861793518, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: adata.X seems to be already log-transformed.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #5)" name="4" time="41.175862073898315">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "628a6172edfea47c",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "all_genes",  "method|t": "-1" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/a/a/d/dataset_aad645f6-186b-49bd-bdf5-a8c759c9c2a5.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmpmqh41gmt\u0027 \u003e \u0027/galaxy/server/database/objects/a/d/4/dataset_ad4bd6db-fafc-45b4-91a6-ab5387e7a869.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/152/configs/tmpmqh41gmt\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/a/d/4/dataset_ad4bd6db-fafc-45b4-91a6-ab5387e7a869.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/a/d/4/dataset_ad4bd6db-fafc-45b4-91a6-ab5387e7a869.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:21:56.635963",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-2pn8d",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "43947b4bb8bdac5b",  "inputs": {   "adata": {    "id": "628a6172edfea47c",    "src": "hda",    "uuid": "aad645f6-186b-49bd-bdf5-a8c759c9c2a5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216923.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:22:03"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216918.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:21:58"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "08f19d694cf05091",    "src": "hda",    "uuid": "35bf31d4-44f9-4f18-b7ee-30805f3c0fe3"   },   "hidden_output": {    "id": "e6c8351413d5395a",    "src": "hda",    "uuid": "ad4bd6db-fafc-45b4-91a6-ab5387e7a869"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"all_genes\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"-1\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n",  "update_time": "2024-11-21T19:22:15.710953",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.all_genes.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 4, "time_seconds": 41.175862073898315, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_normalize (Test #6)" name="5" time="43.145931005477905">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "a73a133bdff08c8c",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "external.pp.magic",  "method|n_pca": "5",  "method|name_list": "pca_only",  "method|t": "3" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/a/1/f/dataset_a1f861db-aa79-42bd-8eb8-dda92bbb41cc.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmp1ray79fg\u0027 \u003e \u0027/galaxy/server/database/objects/c/6/0/dataset_c60277c5-860a-4d83-b37f-74e9a7b3c88f.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/154/configs/tmp1ray79fg\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/c/6/0/dataset_c60277c5-860a-4d83-b37f-74e9a7b3c88f.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/c/6/0/dataset_c60277c5-860a-4d83-b37f-74e9a7b3c88f.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.9.6",  "copied_from_job_id": null,  "create_time": "2024-11-21T19:22:39.011529",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-glfvb",  "galaxy_version": "24.1",  "handler": null,  "history_id": "75cf1ac1369dc6a9",  "id": "391a3069612fbd8a",  "inputs": {   "adata": {    "id": "a73a133bdff08c8c",    "src": "hda",    "uuid": "a1f861db-aa79-42bd-8eb8-dda92bbb41cc"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1732216966.0000000",    "title": "Job End Time",    "value": "2024-11-21 19:22:46"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1732216961.0000000",    "title": "Job Start Time",    "value": "2024-11-21 19:22:41"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "8160.0000000",    "title": "Memory Allocated (MB)",    "value": "8160"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Cores Allocated",    "value": "4"   }  ],  "job_runner_name": null,  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "dbd841c54803e855",    "src": "hda",    "uuid": "75ff38d3-84cf-4fac-aed0-2b44a244fe81"   },   "hidden_output": {    "id": "35e8705d22c874df",    "src": "hda",    "uuid": "c60277c5-860a-4d83-b37f-74e9a7b3c88f"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 4, \"decay\": \"1\", \"knn\": \"5\", \"knn_dist\": \"euclidean\", \"knn_max\": \"\", \"method\": \"external.pp.magic\", \"n_pca\": \"5\", \"name_list\": \"pca_only\", \"random_state\": \"0\", \"solver\": \"exact\", \"t\": \"3\"}"  },  "state": "ok",  "stderr": "",  "stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize/1.9.6+galaxy4",  "tool_stderr": "",  "tool_stdout": "[n_obs \u00d7 n_vars]\n-    640 \u00d7 11\n[obs]\n-    cell_type\n[uns]\n-    cell_type_colors\n-    highlights\n-    iroot\n[obsm]\n-    X_magic\n",  "update_time": "2024-11-21T19:22:58.968645",  "user_email": "tests@fake.org" }, "output_problems": [  "Output anndata_out: Test output file (external.pp.magic.pca_only.krumsiek11.h5ad) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 5, "time_seconds": 43.145931005477905, "tool_id": "scanpy_normalize", "tool_version": "1.9.6+galaxy4"}
                ]]></error>
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_magic
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.21578431129455566">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.21578431129455566, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_scale_data (Test #1)" name="0" time="0.221482515335083">
        
            <error type="error" message="Input staging problem: Test input file (find_variable_genes.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_variable_genes.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.221482515335083, "tool_id": "scanpy_scale_data", "tool_version": "1.9.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="snpeff_sars_cov_2 (Test #1)" name="0" time="69.37987661361694">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #1)" name="0" time="42.33223271369934">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcf2tsv (Test #2)" name="1" time="37.36347413063049">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #1)" name="0" time="35.67302703857422">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #2)" name="1" time="35.128772497177124">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfhethom (Test #3)" name="2" time="36.245848417282104">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #1)" name="0" time="67.91110634803772">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #2)" name="1" time="42.46651482582092">
        
            
            <system-out><![CDATA[
            [1] "Header row detected"null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="volcanoplot (Test #3)" name="2" time="43.2187716960907">
        
            
            <system-out><![CDATA[
            null device           1 R version 4.0.5 (2021-03-31)Platform: x86_64-conda-linux-gnu (64-bit)Running under: Debian GNU/Linux 10 (buster)Matrix products: defaultBLAS/LAPACK: /usr/local/lib/libopenblasp-r0.3.15.solocale: [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C          [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C   attached base packages:[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:[1] ggrepel_0.9.1 ggplot2_3.3.3 dplyr_1.0.6  loaded via a namespace (and not attached): [1] Rcpp_1.0.6       magrittr_2.0.1   tidyselect_1.1.1 munsell_0.5.0    [5] colorspace_2.0-1 R6_2.5.0         rlang_0.4.11     fansi_0.5.0      [9] grid_4.0.5       gtable_0.3.0     utf8_1.2.1       withr_2.4.2     [13] ellipsis_0.3.2   digest_0.6.27    tibble_3.1.2     lifecycle_1.0.0 [17] crayon_1.4.1     purrr_0.3.4      farver_2.1.0     vctrs_0.3.8     [21] glue_1.4.2       labeling_0.4.2   compiler_4.0.5   pillar_1.6.1    [25] generics_0.1.0   scales_1.1.1     pkgconfig_2.0.3 
            ]]></system-out>
            <system-err><![CDATA[
            Warning message:In Sys.setlocale("LC_MESSAGES", "en_US.UTF-8") :  OS reports request to set locale to "en_US.UTF-8" cannot be honored
            ]]></system-err>
        
    </testcase>
    
</testsuite>