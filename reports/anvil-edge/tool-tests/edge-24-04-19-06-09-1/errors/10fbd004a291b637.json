{
    "model_class": "Job",
    "id": "10fbd004a291b637",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-04-19T07:16:11.417388",
    "create_time": "2024-04-19T07:15:41.266341",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "a66d7ea91a3e4609",
    "external_id": "gxy-8c745",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/5/6/0/dataset_56079067-ef60-4e25-8c08-191cf9b7cf50.dat' && cp '/galaxy/server/database/objects/4/a/3/dataset_4a362210-c12a-4501-9c32-8b0bcdb46dd5.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/b/3/3/dataset_b33b3f6b-f655-4af6-baba-18fc3fd1ccd4.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/4/a/f/dataset_4afd9f8c-0a2e-462a-8aa4-250bb06f1062.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 307, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 308, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 306, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "8b4c5c1eafa9f96e",
            "src": "hda",
            "uuid": "4afd9f8c-0a2e-462a-8aa4-250bb06f1062"
        },
        "pairstraight|file2": {
            "id": "eede5fbe49bb5d07",
            "src": "hda",
            "uuid": "b33b3f6b-f655-4af6-baba-18fc3fd1ccd4"
        },
        "pairstraight|file1": {
            "id": "ec7e0fa390a9fd85",
            "src": "hda",
            "uuid": "4a362210-c12a-4501-9c32-8b0bcdb46dd5"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "76d68f88c2ad19c8",
            "src": "hda",
            "uuid": "56079067-ef60-4e25-8c08-191cf9b7cf50"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "c9674c138206b7a8",
            "src": "hda",
            "uuid": "eed0eb78-a4a3-4115-b742-ba34ea1caf72"
        },
        "observed_bias_3p": {
            "id": "564f1bb3b054957a",
            "src": "hda",
            "uuid": "b9495fb4-cfc8-42ea-87c0-158a9d7ade58"
        },
        "observed_bias": {
            "id": "b801129515a96cc9",
            "src": "hda",
            "uuid": "8ac14079-3d7c-4e22-93c3-4b1cff10c374"
        },
        "expected_bias": {
            "id": "8f94be65654e129f",
            "src": "hda",
            "uuid": "94eb61ec-dbe2-4116-b22b-2a1788dc896b"
        },
        "whitelist_txt": {
            "id": "6787b64ccaf2327e",
            "src": "hda",
            "uuid": "1f4c15d7-a12a-4d99-8b66-8c7729be6911"
        },
        "featureDump_txt": {
            "id": "00408b7cda82266b",
            "src": "hda",
            "uuid": "26d7dd79-9df3-4c57-83c3-4ddac3336d32"
        },
        "quants_tier_mat": {
            "id": "6de514587006bf36",
            "src": "hda",
            "uuid": "62bcf9b2-2efa-442a-a15a-4faf5837bed6"
        },
        "quants_mat_rows_txt": {
            "id": "eda6657e7d4209a1",
            "src": "hda",
            "uuid": "c36e21c1-23ce-4d40-b22b-b59eff9bbaa7"
        },
        "quants_mat_cols_txt": {
            "id": "ac0a281cc48bbe98",
            "src": "hda",
            "uuid": "ecd9dc56-5cc7-4d6a-9ac3-e7491bc4ca43"
        },
        "raw_cb_frequency_txt": {
            "id": "8695329744cac506",
            "src": "hda",
            "uuid": "2ae9ae6e-68d9-44c9-a6ff-44afec49f4cd"
        },
        "quants_mat_mtx": {
            "id": "0a314711d14a3f40",
            "src": "hda",
            "uuid": "b76db032-5b73-498e-a8e5-82164798614b"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
