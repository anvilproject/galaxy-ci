{
    "model_class": "Job",
    "id": "98f8b3ab8b92c955",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-07-05T07:17:00.004635",
    "create_time": "2024-07-05T07:16:44.085601",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "a0ac838f29091919",
    "external_id": "gxy-79n5p",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/d/a/1/dataset_da1d6c9b-5f82-45ed-9090-a81de140d000.dat' && cp '/galaxy/server/database/objects/0/2/c/dataset_02c23ead-6409-4398-9cb2-0515c1eb7afd.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/6/f/4/dataset_6f486bec-2572-4bbc-a0a3-7550500767c9.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/f/a/f/dataset_faf3f7a8-bd07-4f70-9cf3-b2c7c7c69032.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 28: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 320, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 321, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 319, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "653d1ffa7647c180",
            "src": "hda",
            "uuid": "faf3f7a8-bd07-4f70-9cf3-b2c7c7c69032"
        },
        "pairstraight|file2": {
            "id": "3ad16a1b96822961",
            "src": "hda",
            "uuid": "6f486bec-2572-4bbc-a0a3-7550500767c9"
        },
        "pairstraight|file1": {
            "id": "1773bd756177a108",
            "src": "hda",
            "uuid": "02c23ead-6409-4398-9cb2-0515c1eb7afd"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "9e14b7f53a690087",
            "src": "hda",
            "uuid": "da1d6c9b-5f82-45ed-9090-a81de140d000"
        }
    },
    "outputs": {
        "quants_mat_mtx": {
            "id": "88d9e4fa168f7c5a",
            "src": "hda",
            "uuid": "0af40f79-c5f4-4b87-8af9-f59a833ec1d0"
        },
        "raw_cb_frequency_txt": {
            "id": "58302e5c139b667e",
            "src": "hda",
            "uuid": "b15feae8-1e50-4ec5-9e20-4fb4ca6388fb"
        },
        "quants_mat_cols_txt": {
            "id": "c3b6a7d5319653f5",
            "src": "hda",
            "uuid": "f6a0e45a-697d-46c4-a39b-3b7c9db7545f"
        },
        "quants_mat_rows_txt": {
            "id": "f52e48edffef7841",
            "src": "hda",
            "uuid": "ccdfe799-7f49-4d60-87e8-01c0963bfdb8"
        },
        "quants_tier_mat": {
            "id": "4f4369a4ec8c8c3e",
            "src": "hda",
            "uuid": "4f2aca53-ee77-4abc-8e2d-edf37f1b0316"
        },
        "featureDump_txt": {
            "id": "397d65dd649dc89b",
            "src": "hda",
            "uuid": "1852216d-fd98-4367-9442-18515f80c3fd"
        },
        "whitelist_txt": {
            "id": "eb9b3b62830d0fc2",
            "src": "hda",
            "uuid": "5f9bfcde-efd2-417f-9d3c-f6fffa15b01c"
        },
        "expected_bias": {
            "id": "0c785d0ae3b16967",
            "src": "hda",
            "uuid": "216e108e-f4be-4dbe-a8d2-68c73a973ce7"
        },
        "observed_bias": {
            "id": "046eca3d0c68d107",
            "src": "hda",
            "uuid": "19cef7e8-e517-48a0-a7d3-375b37243004"
        },
        "observed_bias_3p": {
            "id": "75ecdac9a8998f69",
            "src": "hda",
            "uuid": "671b111f-07ad-42b9-a0fb-c108dca0521f"
        },
        "flenDist_txt": {
            "id": "c9f1970296a2884c",
            "src": "hda",
            "uuid": "816bd02d-1829-4789-9c1a-e756c6a3ff2d"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
