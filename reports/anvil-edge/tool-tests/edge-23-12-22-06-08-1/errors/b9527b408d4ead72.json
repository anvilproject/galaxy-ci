{
    "model_class": "Job",
    "id": "b9527b408d4ead72",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-12-22T07:22:42.853647",
    "create_time": "2023-12-22T07:21:56.488195",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "8147a155b52bda66",
    "external_id": "gxy-dwtf9",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/b/8/7/dataset_b87f9b47-8caa-4ec6-83b9-8454486f7702.dat' && cp '/galaxy/server/database/objects/9/b/1/dataset_9b1701c0-482b-4340-ba65-949f10b376ed.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/7/9/a/dataset_79a73df4-9a27-4ec0-91a3-d9ceb813e7bf.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/d/2/e/dataset_d2e7a28d-d17f-4056-8ed4-7401feda2fd8.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 74: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 304, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 305, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 303, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "71d2b7623f8d041d",
            "src": "hda",
            "uuid": "b87f9b47-8caa-4ec6-83b9-8454486f7702"
        },
        "pairstraight|file1": {
            "id": "728b2f98e1090231",
            "src": "hda",
            "uuid": "9b1701c0-482b-4340-ba65-949f10b376ed"
        },
        "pairstraight|file2": {
            "id": "6bb0df59c7fed00e",
            "src": "hda",
            "uuid": "79a73df4-9a27-4ec0-91a3-d9ceb813e7bf"
        },
        "tgmap": {
            "id": "706c0fc93d391335",
            "src": "hda",
            "uuid": "d2e7a28d-d17f-4056-8ed4-7401feda2fd8"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "c26aa9014b962851",
            "src": "hda",
            "uuid": "46fbc2d1-498d-4dbf-b38e-3b6183012fea"
        },
        "observed_bias_3p": {
            "id": "16aaf53ebcded397",
            "src": "hda",
            "uuid": "ee22bbc3-d1c7-4005-a5d0-fd6823f89afc"
        },
        "observed_bias": {
            "id": "ad37c7eb289e146a",
            "src": "hda",
            "uuid": "8c44259a-aa3e-4ac2-ba56-8a1a058e046e"
        },
        "expected_bias": {
            "id": "f7d7b12e5d2b7cd2",
            "src": "hda",
            "uuid": "9378bf92-954b-4c86-90a5-3c0e89acd872"
        },
        "whitelist_txt": {
            "id": "4e7a3cc8240dd4ef",
            "src": "hda",
            "uuid": "600857b7-91bb-469b-9b73-59a14c4e7732"
        },
        "featureDump_txt": {
            "id": "bd9d499abe52cb9b",
            "src": "hda",
            "uuid": "3b648a11-4e55-4771-87c0-0e44a514d2bc"
        },
        "quants_tier_mat": {
            "id": "0bb3975bf85831f0",
            "src": "hda",
            "uuid": "ef486e16-8bd6-48b3-ac81-0ddecb16d6d7"
        },
        "quants_mat_rows_txt": {
            "id": "84f969d204764395",
            "src": "hda",
            "uuid": "0acd1aeb-26a8-4262-abbf-b4327fcd10e7"
        },
        "quants_mat_cols_txt": {
            "id": "dec2d856a2a5a103",
            "src": "hda",
            "uuid": "8e95a99c-1018-4734-a39b-c43b83b56d7a"
        },
        "raw_cb_frequency_txt": {
            "id": "a7a5e22edcc5a932",
            "src": "hda",
            "uuid": "7db0ff95-9eec-4720-8b1e-a36f2d7f9799"
        },
        "quants_mat_mtx": {
            "id": "bf041a4927a3f8a9",
            "src": "hda",
            "uuid": "83857f36-2b6f-46dd-ab6f-a35774b233fc"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
