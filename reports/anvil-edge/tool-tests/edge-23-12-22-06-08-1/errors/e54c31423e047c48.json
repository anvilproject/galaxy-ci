{
    "model_class": "Job",
    "id": "e54c31423e047c48",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-12-22T07:23:55.645505",
    "create_time": "2023-12-22T07:23:39.379037",
    "galaxy_version": "23.1",
    "command_version": "",
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "8147a155b52bda66",
    "external_id": "gxy-6mcpc",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/c/9/4/dataset_c94d80a4-d14c-488f-be83-94402f6085f8.dat' && cp '/galaxy/server/database/objects/b/6/d/dataset_b6df2598-40e7-4ef8-ad3c-152ab347deb5.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/2/8/f/dataset_28f1b3d5-3414-44a4-81aa-7fc6eb850204.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/9/0/d/dataset_90da671b-5df0-4a93-ade6-d8d7c535f8c9.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 323, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 324, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 322, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "ab02a71acdd37f3a",
            "src": "hda",
            "uuid": "c94d80a4-d14c-488f-be83-94402f6085f8"
        },
        "pairstraight|file1": {
            "id": "7bbbb81117c4e22e",
            "src": "hda",
            "uuid": "b6df2598-40e7-4ef8-ad3c-152ab347deb5"
        },
        "pairstraight|file2": {
            "id": "12cdaf13f279fe68",
            "src": "hda",
            "uuid": "28f1b3d5-3414-44a4-81aa-7fc6eb850204"
        },
        "tgmap": {
            "id": "efa80462881716a1",
            "src": "hda",
            "uuid": "90da671b-5df0-4a93-ade6-d8d7c535f8c9"
        }
    },
    "outputs": {
        "observed_bias_3p": {
            "id": "5d0b494e3d01622e",
            "src": "hda",
            "uuid": "a27439e0-3c7b-4553-81a1-bc4a2f950b37"
        },
        "observed_bias": {
            "id": "f977a66972ee2de7",
            "src": "hda",
            "uuid": "a6059baf-53e8-4b10-a1b7-f194d280dd0d"
        },
        "quants_mat_cols_txt": {
            "id": "5d443478c391dea7",
            "src": "hda",
            "uuid": "1a80c53c-b51f-479f-bed4-d7de21e8bd09"
        },
        "raw_cb_frequency_txt": {
            "id": "1bad66e5cd862401",
            "src": "hda",
            "uuid": "5b73d378-c3e4-4506-8ffe-a731da66247a"
        },
        "flenDist_txt": {
            "id": "281bea8112bcfed4",
            "src": "hda",
            "uuid": "9ca12f7e-9506-4e1c-9596-33a142835262"
        },
        "expected_bias": {
            "id": "6265c51399bdb581",
            "src": "hda",
            "uuid": "7029d11a-b9de-4f24-bfcf-ff1ca2f81435"
        },
        "whitelist_txt": {
            "id": "e76126244a65752b",
            "src": "hda",
            "uuid": "b309a7b3-0f5d-4aef-9a11-076b76b61f23"
        },
        "featureDump_txt": {
            "id": "991cdd6b8c051c94",
            "src": "hda",
            "uuid": "0a802f6f-88e7-4e23-a99e-51e7debf6515"
        },
        "quants_tier_mat": {
            "id": "2f18689bcf621023",
            "src": "hda",
            "uuid": "98e41ed4-c2e9-494a-b55c-b7a46b41c0b1"
        },
        "quants_mat_rows_txt": {
            "id": "65f5f5e89fb3a064",
            "src": "hda",
            "uuid": "3de3f152-8ce5-4061-a24f-7bcfaea44027"
        },
        "quants_mat_mtx": {
            "id": "6d330378fa716c1c",
            "src": "hda",
            "uuid": "0d3b7e15-cdc9-49ad-80ea-a1a88e919fd4"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
