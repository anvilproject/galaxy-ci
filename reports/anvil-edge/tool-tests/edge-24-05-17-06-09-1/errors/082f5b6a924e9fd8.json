{
    "model_class": "Job",
    "id": "082f5b6a924e9fd8",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-05-17T07:11:43.342024",
    "create_time": "2024-05-17T07:11:27.253874",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "c2126e74c95d81e5",
    "external_id": "gxy-lf977",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/c/e/0/dataset_ce01961a-5431-4448-8008-d601537d2cd1.dat' && cp '/galaxy/server/database/objects/4/1/b/dataset_41b5cd05-d8a8-4989-88e5-9eb9dc3a93fc.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/7/1/f/dataset_71f6ce2d-33cf-41df-8b8d-f846447f4467.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/9/1/3/dataset_9136b113-187d-4a32-bcd4-0776f7ddb4f7.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 329, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 330, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 328, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "ad845ed36c0ad758",
            "src": "hda",
            "uuid": "9136b113-187d-4a32-bcd4-0776f7ddb4f7"
        },
        "pairstraight|file2": {
            "id": "1399eb917ed7dd8c",
            "src": "hda",
            "uuid": "71f6ce2d-33cf-41df-8b8d-f846447f4467"
        },
        "pairstraight|file1": {
            "id": "0039767aa9271667",
            "src": "hda",
            "uuid": "41b5cd05-d8a8-4989-88e5-9eb9dc3a93fc"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "afbc6f0269f146f5",
            "src": "hda",
            "uuid": "ce01961a-5431-4448-8008-d601537d2cd1"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "7b8855a56c520f32",
            "src": "hda",
            "uuid": "f8044531-3d56-4c4c-96e3-d106773710a1"
        },
        "quants_mat_mtx": {
            "id": "c1ce0b060fdc7701",
            "src": "hda",
            "uuid": "36cbba00-89b2-49de-a91a-d6e8027d4f9d"
        },
        "expected_bias": {
            "id": "5b4a0ee16fd49592",
            "src": "hda",
            "uuid": "db938aa2-6b34-48e1-bb05-b2527077d846"
        },
        "observed_bias": {
            "id": "d468ca7f10f41d2b",
            "src": "hda",
            "uuid": "ca884341-a42d-4e52-a008-4d71bd7277a4"
        },
        "featureDump_txt": {
            "id": "5ff4572c89fbcf04",
            "src": "hda",
            "uuid": "270a4160-4be7-43fb-a29f-4d2432c9710a"
        },
        "raw_cb_frequency_txt": {
            "id": "8ce609fe48033675",
            "src": "hda",
            "uuid": "f55e41f6-76c8-4b53-81c8-95533f9fb13e"
        },
        "quants_mat_cols_txt": {
            "id": "25a9247d99f50cfc",
            "src": "hda",
            "uuid": "4463a2d6-1558-4386-b633-81d3db54bd4e"
        },
        "quants_mat_rows_txt": {
            "id": "ca5b3bdda170d656",
            "src": "hda",
            "uuid": "6de287a1-0b5c-4a48-b565-9fa5a1604835"
        },
        "quants_tier_mat": {
            "id": "86376391105ccdb5",
            "src": "hda",
            "uuid": "b85849a2-4fbb-4e05-b848-29b516589e80"
        },
        "observed_bias_3p": {
            "id": "fdf5b5ec871e0241",
            "src": "hda",
            "uuid": "8f08428a-1927-4335-ae86-adba233db9ea"
        },
        "whitelist_txt": {
            "id": "2b0e65b5ab2b0122",
            "src": "hda",
            "uuid": "0a645729-ca97-403a-853a-a90c220d87c1"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
