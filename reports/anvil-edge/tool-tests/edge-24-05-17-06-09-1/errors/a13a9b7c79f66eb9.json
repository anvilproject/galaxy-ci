{
    "model_class": "Job",
    "id": "a13a9b7c79f66eb9",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-05-17T07:10:26.497580",
    "create_time": "2024-05-17T07:09:57.320201",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "c2126e74c95d81e5",
    "external_id": "gxy-rfdvn",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/1/d/f/dataset_1dfe69f5-0bb6-4fb8-887b-fb33014f6ba6.dat' && cp '/galaxy/server/database/objects/2/b/1/dataset_2b161732-8e2b-4aca-bf26-9fb6f5d7399b.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/f/b/a/dataset_fba6f3d9-1406-46f2-a266-d16fd3c4d4fa.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/d/3/b/dataset_d3b305c9-2706-425e-b13e-5372aed22ea2.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 37: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 296, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 297, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 295, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "bb11fd28395c9fec",
            "src": "hda",
            "uuid": "d3b305c9-2706-425e-b13e-5372aed22ea2"
        },
        "pairstraight|file2": {
            "id": "0dfce74f894f53d0",
            "src": "hda",
            "uuid": "fba6f3d9-1406-46f2-a266-d16fd3c4d4fa"
        },
        "pairstraight|file1": {
            "id": "d055a70d494278e7",
            "src": "hda",
            "uuid": "2b161732-8e2b-4aca-bf26-9fb6f5d7399b"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "6b8780a9d0c368a6",
            "src": "hda",
            "uuid": "1dfe69f5-0bb6-4fb8-887b-fb33014f6ba6"
        }
    },
    "outputs": {
        "observed_bias": {
            "id": "7ff76c163fb71e2c",
            "src": "hda",
            "uuid": "1d729fd1-e93d-438c-9c29-fa04a64a90b8"
        },
        "flenDist_txt": {
            "id": "9c98e80468e6e95f",
            "src": "hda",
            "uuid": "a514417b-82f0-4dc6-b0a3-6fd4aeeb5511"
        },
        "featureDump_txt": {
            "id": "966b9fa034db4a6f",
            "src": "hda",
            "uuid": "97e020dd-ee6c-46ba-ab94-ae7bd4f97d08"
        },
        "expected_bias": {
            "id": "f200a9176b6a4fc0",
            "src": "hda",
            "uuid": "95de77c7-f785-4191-ab7d-da82c77af01f"
        },
        "whitelist_txt": {
            "id": "22078e6acde499d7",
            "src": "hda",
            "uuid": "9cec5a3e-57fc-4277-bc88-4686bf4b8761"
        },
        "observed_bias_3p": {
            "id": "e584bf2f8987f15e",
            "src": "hda",
            "uuid": "6e09ccc8-1e7a-4aec-9646-311c5c7e3e94"
        },
        "quants_mat_mtx": {
            "id": "d299d62bbf72c2ad",
            "src": "hda",
            "uuid": "8391259b-9a3b-431e-9566-06a8520d2e07"
        },
        "raw_cb_frequency_txt": {
            "id": "b57dba70eb03065c",
            "src": "hda",
            "uuid": "f0774363-2e9a-40a1-badf-05598aa63d85"
        },
        "quants_mat_cols_txt": {
            "id": "439f82daf7edcc6c",
            "src": "hda",
            "uuid": "989724e9-76b4-4c47-b547-4131a47daba6"
        },
        "quants_mat_rows_txt": {
            "id": "f52df26f52910b88",
            "src": "hda",
            "uuid": "1f050a8d-6c59-40e3-9c9a-29d302f454a2"
        },
        "quants_tier_mat": {
            "id": "98d0937363f82443",
            "src": "hda",
            "uuid": "937332da-365a-454e-96e2-223e33592a15"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
