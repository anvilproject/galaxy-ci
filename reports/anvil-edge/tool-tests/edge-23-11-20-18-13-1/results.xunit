<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="4"
           failures="5"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="38.85837125778198">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="32.23833084106445">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="33.49494934082031">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="32.19729256629944">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="32.590303897857666">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="33.15348529815674">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="31.534475564956665">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="33.50942778587341">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="32.88881707191467">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="40.7280957698822">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="35.616333961486816">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="34.70033669471741">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input|input_bams": [   {    "id": "c9ba3456bdf74e01",    "src": "hda"   },   {    "id": "cbc23fd4f880ac01",    "src": "hda"   },   {    "id": "ed224b6a68516f9f",    "src": "hda"   }  ],  "input|input_number": "multiple",  "output_type": "v",  "reference_source|ref_file": {   "id": "b7156522819707c1",   "src": "hda"  },  "reference_source|reference_source_selector": "history",  "sec_output_options|output_tags": [   "DP",   "INFO/AD",   "DV"  ],  "sec_restrict|regions|regions_0|chrom": "17",  "sec_restrict|regions|regions_0|start": "100",  "sec_restrict|regions|regions_0|stop": "110",  "sec_restrict|regions|regions_src": "regions" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/f/7/3/dataset_f732ee10-e5c5-4704-8e30-1da75c2b6e87.dat\u0027 mpileup_1.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/3/b/c/metadata_3bc6ec5c-f85b-4326-ac4e-86476a2c2f58.dat\u0027 mpileup_1.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/1/2/b/dataset_12be7bd8-6514-44fe-95bd-fff46c775385.dat\u0027 mpileup_2.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/9/8/6/metadata_9869f40e-6de5-4361-b06c-b4ff996914ce.dat\u0027 mpileup_2.bam.bai \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/2/8/f/dataset_28f0a7d3-6d99-444d-be8a-5fd8b38b726f.dat\u0027 mpileup_3.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/3/a/8/metadata_3a8be4f6-859b-441e-990a-2bba8a2c1a75.dat\u0027 mpileup_3.bam.bai \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/1/1/0/dataset_110a1a79-406c-4291-b175-0b955b498be8.dat\u0027 ref.fa \u0026\u0026 samtools faidx ref.fa \u0026\u0026           bcftools mpileup  --fasta-ref \u0027ref.fa\u0027   -d \"250\"   --annotate \"DP,INFO/AD,DV\"            --regions \u002717:100-110\u0027         --threads ${GALAXY_SLOTS:-4}    --output-type \u0027v\u0027   mpileup_1.bam mpileup_2.bam mpileup_3.bam \u003e \u0027/galaxy/server/database/objects/f/7/b/dataset_f7b518c9-0e8b-41ab-b069-95da072b2152.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-20T19:05:25.970623",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-h4fqr",  "galaxy_version": "23.1",  "history_id": "e1a893b67da1749f",  "id": "4fb87eed5828a9ae",  "inputs": {   "input|input_bams": {    "id": "c9ba3456bdf74e01",    "src": "hda",    "uuid": "f732ee10-e5c5-4704-8e30-1da75c2b6e87"   },   "input|input_bams1": {    "id": "c9ba3456bdf74e01",    "src": "hda",    "uuid": "f732ee10-e5c5-4704-8e30-1da75c2b6e87"   },   "input|input_bams2": {    "id": "cbc23fd4f880ac01",    "src": "hda",    "uuid": "12be7bd8-6514-44fe-95bd-fff46c775385"   },   "input|input_bams3": {    "id": "ed224b6a68516f9f",    "src": "hda",    "uuid": "28f0a7d3-6d99-444d-be8a-5fd8b38b726f"   },   "reference_source|ref_file": {    "id": "b7156522819707c1",    "src": "hda",    "uuid": "110a1a79-406c-4291-b175-0b955b498be8"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "cdd86e16c001e265",    "src": "hda",    "uuid": "f7b518c9-0e8b-41ab-b069-95da072b2152"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 206, \"src\": \"hda\"}, {\"id\": 207, \"src\": \"hda\"}, {\"id\": 208, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}",   "output_type": "\"v\"",   "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 209, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",   "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}",   "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}",   "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}",   "sec_restrict": "{\"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"100\", \"stop\": \"110\"}], \"regions_src\": \"regions\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}",   "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-20T19:05:32.567483",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 34.70033669471741, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="45.5760931968689">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="42.06652760505676">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="68.24805450439453">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="34.35346555709839">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.1009376049041748">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.1009376049041748, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="37.19413495063782">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="11.773840427398682">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.773840427398682, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="30.56002926826477">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="30.9479820728302">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="30.24225664138794">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="31.335077047348022">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="30.60359215736389">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="30.226900339126587">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="29.317851066589355">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="33.60328197479248">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "a9d7c4afb48dc8c1",   "src": "hda"  },  "linefilters_0|filter|filter_type": "regex",  "linefilters_0|filter|regex_action": "include_find",  "linefilters_0|filter|regex_pattern": "^\\d+",  "linefilters_1|filter|filter_type": "append_line_num",  "linefilters_2|filter|columns": "7,2,3,4,1",  "linefilters_2|filter|filter_type": "select_columns",  "linefilters_3|filter|column": "c4",  "linefilters_3|filter|filter_type": "replace",  "linefilters_3|filter|regex_pattern": "(\\d+)/(\\d+)/(\\d+)",  "linefilters_3|filter|regex_replace": "19\\3-\\2-\\1" }, "job": {  "command_line": "python \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py\u0027 -i \u0027/galaxy/server/database/objects/2/a/d/dataset_2ad7a5f6-d879-4018-a590-9ae3d2beff79.dat\u0027 -j \u0027/galaxy/server/database/jobs_directory/000/128/configs/tmpw_h_rl2e\u0027 -o \u0027/galaxy/server/database/objects/6/5/c/dataset_65c45f30-21f5-49f4-9749-ffed2dfa588f.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2023-11-20T19:02:22.290036",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-nxdbs",  "galaxy_version": "23.1",  "history_id": "e1a893b67da1749f",  "id": "0e46d1305a56b20f",  "inputs": {   "input": {    "id": "a9d7c4afb48dc8c1",    "src": "hda",    "uuid": "2ad7a5f6-d879-4018-a590-9ae3d2beff79"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "0db48677a6edfeba",    "src": "hda",    "uuid": "65c45f30-21f5-49f4-9749-ffed2dfa588f"   }  },  "params": {   "__input_ext": "\"tabular\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 3, \"filter_type\": \"append_line_num\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 7, \"columns\": \"7,2,3,4,1\", \"filter_type\": \"select_columns\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 8, \"add\": null, \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \"(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"regex_replace\": \"19\\\\3-\\\\2-\\\\1\"}}]"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-20T19:02:35.617656",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 33.60328197479248, "tool_id": "filter_tabular", "tool_version": "3.1.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="30.263137817382812">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="32.2228844165802">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="64.56918168067932">
        
            
            <system-out><![CDATA[
            gnuplot 5.2 patchlevel 7
            ]]></system-out>
            <system-err><![CDATA[
            Reading delta file out.deltaWriting plot files out.fplot, out.rplot, out.hplotWriting gnuplot script out.gpRendering plot out.pngWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="63.645347118377686">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="36.43408417701721">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="57.2528657913208">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/b/f/9/dataset_bf92663e-299a-4581-b9e9-d1b90895caef.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/d/3/3/dataset_d336cf2f-f46b-4a9d-887e-7c16da45c524.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/c/3/7/dataset_c37d8046-5052-487d-b2dc-8c1d8876001a.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2023-11-20T19:01:04.497099",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-fx9fb",  "galaxy_version": "23.1",  "history_id": "e1a893b67da1749f",  "id": "069b0ce9fd155416",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "25.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "25 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1700506894.0000000",    "title": "Job End Time",    "value": "2023-11-20 19:01:34"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1700506869.0000000",    "title": "Job Start Time",    "value": "2023-11-20 19:01:09"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "a0aa9d20c317544d",    "src": "hda",    "uuid": "c37d8046-5052-487d-b2dc-8c1d8876001a"   },   "design_tsv": {    "id": "d9138baecb3ef015",    "src": "hda",    "uuid": "d5431688-7596-4f0e-a7b3-ea754b4acd53"   },   "genes_tsv": {    "id": "3f4790bb014cdebc",    "src": "hda",    "uuid": "d336cf2f-f46b-4a9d-887e-7c16da45c524"   },   "matrix_mtx": {    "id": "05966845142b4083",    "src": "hda",    "uuid": "bf92663e-299a-4581-b9e9-d1b90895caef"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-11-20 19:01:09--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  180K\n    50K .......... .......... .......... .......... ..........  271K\n   100K .......... .......... .......... .......... ..........  537K\n   150K .......... .......... .......... .......... ..........  348K\n   200K .......... .......... .......... .......... ..........  542K\n   250K .......... .......... .......... .......... .......... 1.18M\n   300K .......... .......... .......... .......... ..........  561K\n   350K .......... .......... .......... .......... ..........  542K\n   400K .......... .......... .......... .......... ..........  545K\n   450K .......... .......... .......... .......... ..........  932K\n   500K .......... .......... .......... .......... .......... 1.25M\n   550K .......... .......... .......... .......... ..........  937K\n   600K .......... .......... .......... .......... .......... 1.14M\n   650K .......... .......... .......... .......... ..........  573K\n   700K .......... .......... .......... .......... .......... 9.08M\n   750K .......... .......... .......... .......... ..........  572K\n   800K .......... .......... .......... .......... .......... 11.3M\n   850K .......... .......... .......... .......... ..........  570K\n   900K .......... .......... .......... .......... .......... 11.7M\n   950K .......... .......... .......... .......... ..........  981K\n  1000K .......... .......... .......... .......... .......... 1.25M\n  1050K .......... .......... .......... .......... ..........  935K\n  1100K .......... .......... .......... .......... .......... 1.31M\n  1150K .......... .......... .......... .......... .......... 13.1M\n  1200K .......... .......... .......... .......... ..........  970K\n  1250K .......... .......... .......... .......... .......... 1.29M\n  1300K .......... .......... .......... .......... .......... 14.9M\n  1350K .......... .......... .......... .......... ..........  565K\n  1400K .......... .......... .......... .......... ..........  127M\n  1450K .......... .......... .......... .......... .......... 16.6M\n  1500K .......... .......... .......... .......... ..........  964K\n  1550K .......... .......... .......... .......... .......... 1.30M\n  1600K .......... .......... .......... .......... .......... 16.1M\n  1650K .......... .......... .......... .......... ..........  969K\n  1700K .......... .......... .......... .......... .......... 1.31M\n  1750K .......... .......... .......... .......... .......... 12.3M\n  1800K .......... .......... .......... .......... ..........  982K\n  1850K .......... .......... .......... .......... .......... 1.33M\n  1900K .......... .......... .......... .......... .......... 94.7M\n  1950K .......... .......... .......... .......... .......... 12.4M\n  2000K .......... .......... .......... .......... ..........  971K\n  2050K .......... .......... .......... .......... .......... 1.32M\n  2100K .......... .......... .......... .......... .......... 21.1M\n  2150K .......... .......... .......... .......... .......... 24.4M\n  2200K .......... .......... .......... .......... ..........  975K\n  2250K .......... .......... .......... .......... .......... 1.33M\n  2300K .......... .......... .......... .......... ..........  149M\n  2350K .......... .......... .......... .......... .......... 11.3M\n  2400K .......... .......... .......... .......... ..........  992K\n  2450K .......... .......... .......... .......... .......... 1.31M\n  2500K .......... .......... .......... .......... ..........  149M\n  2550K .......... .......... .......... .......... .......... 11.9M\n  2600K .......... .......... .......... .......... ..........  981K\n  2650K .......... .......... .......... .......... .......... 1.34M\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... .......... 14.2M\n  2800K .......... .......... .......... .......... .......... 86.4M\n  2850K .......... .......... .......... .......... ..........  980K\n  2900K .......... .......... .......... .......... .......... 1.34M\n  2950K .......... .......... .......... .......... ..........  108M\n  3000K .......... .......... .......... .......... .......... 12.6M\n  3050K .......... .......... .......... .......... .......... 60.2M\n  3100K .......... .......... .......... .......... ..........  976K\n  3150K .......... .......... .......... .......... .......... 1.35M\n  3200K .......... .......... .......... .......... ..........  115M\n  3250K .......... .......... .......... .......... .......... 13.0M\n  3300K .......... .......... .......... .......... .......... 47.3M\n  3350K .......... .......... .......... .......... ..........  981K\n  3400K .......... .......... .......... .......... .......... 1.37M\n  3450K .......... .......... .......... .......... ..........  125M\n  3500K .......... .......... .......... .......... .......... 16.5M\n  3550K .......... .......... .......... .......... .......... 42.1M\n  3600K .......... .......... .......... .......... ..........  970K\n  3650K .......... .......... .......... .......... .......... 1.36M\n  3700K .......... .......... .......... .......... ..........  103M\n  3750K .......... .......... .......... .......... .......... 32.2M\n  3800K .......... .......... .......... .......... .......... 18.5M\n  3850K .......... .......... .......... .......... .......... 38.4M\n  3900K .......... .......... .......... .......... ..........  986K\n  3950K .......... .......... .......... .......... .......... 1.36M\n  4000K .......... .......... .......... .......... ..........  101M\n  4050K .......... .......... .......... .......... .......... 25.5M\n  4100K .......... .......... .......... .......... .......... 21.7M\n  4150K .......... .......... .......... .......... .......... 53.9M\n  4200K .......... .......... .......... .......... ..........  978K\n  4250K .......... .......... .......... .......... .......... 1.38M\n  4300K .......... .......... .......... .......... ..........  137M\n  4350K .......... .......... .......... .......... .......... 22.5M\n  4400K .......... .......... .......... .......... .......... 25.1M\n  4450K .......... .......... .......... .......... .......... 65.4M\n  4500K .......... .......... .......... .......... ..........  972K\n  4550K .......... .......... .......... .......... .......... 1.38M\n  4600K .......... .......... .......... .......... .......... 78.7M\n  4650K .......... .......... .......... .......... ..........  168M\n  4700K .......... .......... .......... .......... .......... 18.4M\n  4750K .......... .......... .......... .......... .......... 26.5M\n  4800K .......... .......... .......... .......... .......... 54.1M\n  4850K .......... .......... .......... .......... ..........  986K\n  4900K .......... .......... .......... .......... .......... 1.38M\n  4950K .......... .......... .......... .......... .......... 70.2M\n  5000K .......... .......... .......... .......... .......... 93.6M\n  5050K .......... .......... .......... .......... .......... 19.4M\n  5100K .......... .......... .......... .......... .......... 69.0M\n  5150K .......... .......... .......... .......... .......... 28.5M\n  5200K .......... .......... .......... .......... ..........  989K\n  5250K .......... .......... .......... .......... ..........  392K\n  5300K .......... .......... .......... .......... .......... 82.3M\n  5350K .......... .......... .......... .......... ..........  134M\n  5400K .......... .......... .......... .......... ..........  141M\n  5450K .......... .......... .......... .......... ..........  178M\n  5500K .......... .......... .......... .......... ..........  102M\n  5550K .......... .......... .......... .......... .......... 89.9M\n  5600K .......... .......... .......... .......... ..........  132M\n  5650K .......... .......... .......... .......... ..........  167M\n  5700K .......... .......... .......... .......... .......... 48.2M\n  5750K .......... .......... .......... .......... .......... 32.3M\n  5800K .......... .......... .......... .......... .......... 25.1M\n  5850K .......... .......... .......... .......... .......... 1009K\n  5900K .......... .......... .......... .......... .......... 1.39M\n  5950K .......... .......... .......... .......... .......... 14.2M\n  6000K .......... .......... .......... .......... .......... 26.1M\n  6050K .......... .......... .......... .......... .......... 25.1M\n  6100K .......... .......... .......... .......... ..........  992K\n  6150K .......... .......... .......... .......... .......... 1.41M\n  6200K .......... .......... .......... .......... .......... 69.5M\n  6250K .......... .......... .......... .......... .......... 12.2M\n  6300K .......... .......... .......... .......... ..........  132M\n  6350K .......... .......... .......... .......... ..........  961K\n  6400K .......... .......... .......... .......... .......... 1.41M\n  6450K .......... .......... .......... .......... .......... 66.5M\n  6500K .......... .......... .......... .......... .......... 18.3M\n  6550K .......... .......... .......... .......... .......... 25.6M\n  6600K .......... .......... .......... .......... .......... 22.0M\n  6650K .......... .......... .......... .......... ..........  995K\n  6700K .......... .......... .......... .......... .......... 1.41M\n  6750K .......... .......... .......... .......... ..........  106M\n  6800K .......... .......... .......... .......... .......... 11.1M\n  6850K .......... .......... .......... .......... .......... 25.1M\n  6900K .......... .......... .......... .......... .......... 1001K\n  6950K .......... .......... .......... .......... .......... 1.40M\n  7000K .......... .......... .......... .......... .......... 53.0M\n  7050K .......... .......... .......... .......... .......... 26.1M\n  7100K .......... .......... .......... .......... .......... 18.2M\n  7150K .......... .......... .......... .......... .......... 21.2M\n  7200K .......... .......... .......... .......... ..........  980K\n  7250K .......... .......... .......... .......... .......... 1.43M\n  7300K .......... .......... .......... .......... .......... 73.1M\n  7350K .......... .......... .......... .......... .......... 17.3M\n  7400K .......... .......... .......... .......... .......... 31.0M\n  7450K .......... .......... .......... .......... .......... 17.9M\n  7500K .......... .......... .......... .......... ..........  990K\n  7550K .......... .......... .......... .......... .......... 1.43M\n  7600K .......... .......... .......... .......... ..........  131M\n  7650K .......... .......... .......... .......... .......... 12.8M\n  7700K .......... .......... .......... .......... ..........  103M\n  7750K .......... .......... .......... .......... .......... 14.9M\n  7800K .......... .......... .......... .......... ..........  980K\n  7850K .......... .......... .......... .......... .......... 1.46M\n  7900K .......... .......... .......... .......... ..........  149M\n  7950K .......... .......... .......... .......... .......... 13.7M\n  8000K .......... .......... .......... .......... ..........  111M\n  8050K .......... .......... .......... .......... .......... 1.06M\n  8100K .......... .......... .......... .......... .......... 5.44M\n  8150K .......... .......... .......... .......... .......... 1.46M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... .......... 17.7M\n  8300K .......... .......... .......... .......... .......... 91.1M\n  8350K .......... .......... .......... .......... ..........  957K\n  8400K .......... .......... .......... .......... .......... 19.5M\n  8450K .......... .......... .......... .......... .......... 1.45M\n  8500K .......... .......... .......... .......... .......... 91.3M\n  8550K .......... .......... .......... .......... .......... 13.7M\n  8600K .......... .......... .......... .......... ..........  133M\n  8650K .......... .......... .......... .......... .......... 17.3M\n  8700K .......... .......... .......... .......... ..........  970K\n  8750K .......... .......... .......... .......... .......... 1.45M\n  8800K .......... .......... .......... .......... .......... 61.2M\n  8850K .......... .......... .......... .......... .......... 15.9M\n  8900K .......... .......... .......... .......... .......... 50.9M\n  8950K .......... .......... .......... .......... .......... 17.9M\n  9000K .......... .......... .......... .......... .......... 1002K\n  9050K .......... .......... .......... .......... .......... 1.42M\n  9100K .......... .......... .......... .......... .......... 37.0M\n  9150K .......... .......... .......... .......... .......... 23.7M\n  9200K .......... .......... .......... .......... .......... 35.6M\n  9250K .......... .......... .......... .......... .......... 8.48M\n  9300K .......... .......... .......... .......... .......... 1.04M\n  9350K .......... .......... .......... .......... .......... 1.43M\n  9400K .......... .......... .......... .......... .......... 95.7M\n  9450K .......... .......... .......... .......... .......... 32.6M\n  9500K .......... .......... .......... .......... .......... 17.4M\n  9550K .......... .......... .......... .......... .......... 25.0M\n  9600K .......... .......... .......... .......... ..........  961K\n  9650K .......... .......... .......... .......... .......... 1.45M\n  9700K .......... .......... .......... .......... .......... 92.6M\n  9750K .......... .......... .......... .......... .......... 28.0M\n  9800K .......... .......... .......... .......... .......... 22.7M\n  9850K .......... .......... .......... .......... ..........  154M\n  9900K .......... .......... .......... .......... .......... 8.11M\n  9950K .......... .......... .......... .......... .......... 1017K\n 10000K .......... .......... .......... .......... .......... 1.46M\n 10050K .......... .......... .......... .......... ..........  105M\n 10100K .......... .......... .......... .......... .......... 24.6M\n 10150K .......... .......... .......... .......... .......... 71.8M\n 10200K .......... .......... .......... .......... .......... 21.1M\n 10250K .......... .......... .......... .......... ..........  944K\n 10300K .......... .......... .......... .......... .......... 1.47M\n 10350K .......... .......... .......... .......... .......... 63.4M\n 10400K .......... .......... .......... .......... ..........  143M\n 10450K .......... .......... .......... .......... .......... 22.0M\n 10500K .......... .......... .......... .......... .......... 68.8M\n 10550K .......... .......... .......... .......... .......... 7.12M\n 10600K .......... .......... .......... .......... .......... 1.00M\n 10650K .......... .......... .......... .......... .......... 1.48M\n 10700K .......... .......... .......... .......... .......... 88.7M\n 10750K .......... .......... .......... .......... .......... 23.2M\n 10800K .......... .......... .......... .......... .......... 42.9M\n 10850K .......... .......... .......... .......... .......... 25.3M\n 10900K .......... .......... .......... .......... ..........  929K\n 10950K .......... .......... .......... .......... ..........  106M\n 11000K .......... .......... .......... .......... .......... 1.50M\n 11050K .......... .......... .......... .......... ..........  120M\n 11100K .......... .......... .......... .......... .......... 19.0M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... .......... 6.20M\n 11250K .......... .......... .......... .......... .......... 1.02M\n 11300K .......... .......... .......... .......... .......... 1.47M\n 11350K .......... .......... .......... .......... ..........  150M\n 11400K .......... .......... .......... .......... ..........  161M\n 11450K .......... .......... .......... .......... .......... 20.7M\n 11500K .......... .......... .......... .......... .......... 12.8M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 2.60M\n 50150K .......... .......... .......... .......... ..........  153M\n 50200K .......... .......... .......... .......... .......... 16.1M\n 50250K .......... .......... .......... .......... .......... 56.2M\n 50300K .......... .......... .......... .......... .......... 6.67M\n 50350K .......... .......... .......... .......... .......... 8.76M\n 50400K .......... .......... .......... .......... .......... 1.57M\n 50450K .......... .......... .......... .......... .......... 1.11M\n 50500K .......... .......... .......... .......... .......... 69.2M\n 50550K .......... .......... .......... .......... .......... 92.5M\n 50600K .......... .......... .......... .......... .......... 15.4M\n 50650K .......... .......... .......... .......... .......... 9.17M\n 50700K .......... .......... .......... .......... .......... 8.45M\n 50750K .......... .......... .......... .......... .......... 2.31M\n 50800K .......... .......... .......... .......... .......... 1.23M\n 50850K .......... .......... .......... .......... .......... 2.75M\n 50900K .......... .......... .......... .......... .......... 96.5M\n 50950K .......... .......... .......... .......... .......... 21.5M\n 51000K .......... .......... .......... .......... .......... 39.9M\n 51050K .......... .......... .......... .......... .......... 7.85M\n 51100K .......... .......... .......... .......... .......... 7.27M\n 51150K .......... .......... .......... .......... .......... 2.31M\n 51200K .......... .......... .......... .......... ..........  928K\n 51250K .......... .......... .......... .......... .......... 76.2M\n 51300K .......... .......... .......... .......... ..........  152M\n 51350K .......... .......... .......... .......... .......... 16.9M\n 51400K .......... .......... .......... .......... .......... 8.93M\n 51450K .......... .......... .......... .......... .......... 9.53M\n 51500K .......... .......... .......... .......... .......... 2.27M\n 51550K .......... .......... .......... .......... .......... 2.83M\n 51600K .......... .......... .......... .......... .......... 1.22M\n 51650K .......... .......... .......... .......... .......... 38.1M\n 51700K .......... .......... .......... .......... .......... 23.1M\n 51750K .......... .......... .......... .......... .......... 40.6M\n 51800K .......... .......... .......... .......... .......... 8.84M\n 51850K .......... .......... .......... .......... .......... 5.45M\n 51900K .......... .......... .......... .......... .......... 1.83M\n 51950K .......... .......... .......... .......... .......... 1.62M\n 52000K .......... .......... .......... .......... .......... 2.72M\n 52050K .......... .......... .......... .......... .......... 93.7M\n 52100K .......... .......... .......... .......... .......... 51.4M\n 52150K .......... .......... .......... .......... .......... 8.91M\n 52200K .......... .......... .......... .......... .......... 8.18M\n 52250K .......... .......... .......... .......... .......... 2.30M\n 52300K .......... .......... .......... .......... .......... 2.72M\n 52350K .......... .......... .......... .......... .......... 1.25M\n 52400K .......... .......... .......... .......... .......... 30.2M\n 52450K .......... .......... .......... .......... .......... 80.9M\n 52500K .......... .......... .......... .......... .......... 13.6M\n 52550K .......... .......... .......... .......... .......... 9.83M\n 52600K .......... .......... .......... .......... .......... 4.91M\n 52650K .......... .......... .......... .......... .......... 1.96M\n 52700K .......... .......... .......... .......... .......... 1.60M\n 52750K .......... .......... .......... .......... .......... 2.79M\n 52800K .......... .......... .......... .......... .......... 73.0M\n 52850K .......... .......... .......... .......... ..........  159M\n 52900K .......... .......... .......... .......... .......... 8.77M\n 52950K .......... .......... .......... .......... .......... 6.89M\n 53000K .......... .......... .......... .......... .......... 2.26M\n 53050K .......... .......... .......... .......... .......... 2.72M\n 53100K .......... .......... .......... .......... .......... 1.29M\n 53150K .......... .......... .......... .......... .......... 27.1M\n 53200K .......... .......... .......... .......... .......... 94.6M\n 53250K .......... .......... .......... .......... .......... 9.94M\n 53300K .......... .......... .......... .......... .......... 13.2M\n 53350K .......... .......... .......... .......... .......... 4.24M\n 53400K .......... .......... .......... .......... .......... 2.17M\n 53450K .......... .......... .......... .......... .......... 1.56M\n 53500K .......... .......... .......... .......... .......... 2.99M\n 53550K .......... .......... .......... .......... .......... 19.6M\n 53600K .......... .......... .......... .......... .......... 10.2M\n 53650K .......... .......... .......... .......... ..........  110M\n 53700K .......... .......... .......... .......... .......... 7.22M\n 53750K .......... .......... .......... .......... .......... 2.25M\n 53800K .......... .......... .......... .......... .......... 2.75M\n 53850K .......... .......... .......... .......... .......... 1.28M\n 53900K .......... .......... .......... .......... .......... 22.2M\n 53950K .......... .......... .......... .......... ..........  539K\n 54000K .......... .......... .......... .......... ..........  144M\n 54050K .......... .......... .......... .......... ..........  177M\n 54100K .......... .......... .......... .......... ..........  136M\n 54150K .......... .......... .......... .......... ..........  164M\n 54200K .......... .......... .......... .......... ..........  155M\n 54250K .......... .......... .......... .......... ..........  154M\n 54300K .......... .......... .......... .......... .......... 11.5M\n 54350K .......... .......... .......... .......... .......... 3.25M\n 54400K .......... .......... .......... .......... .......... 1.66M\n 54450K .......... .......... .......... .......... .......... 1.21M\n 54500K .......... .......... .......... .......... .......... 33.8M\n 54550K .......... .......... .......... .......... .......... 6.36M\n 54600K .......... .......... .......... .......... .......... 3.48M\n 54650K .......... .......... .......... .......... ..........  940K\n 54700K .......... .......... .......... .......... .......... 3.08M\n 54750K .......... .......... .......... .......... .......... 6.52M\n 54800K .......... .......... .......... .......... .......... 6.58M\n 54850K .......... .......... .......... .......... .......... 2.22M\n 54900K .......... .......... .......... .......... ..........  907K\n 54950K .......... .......... .......... .......... .......... 40.3M\n 55000K .......... .......... .......... .......... .......... 6.77M\n 55050K .......... .......... .......... .......... .......... 6.26M\n 55100K .......... .......... .......... .......... .......... 2.27M\n 55150K .......... .......... .......... .......... ..........  914K\n 55200K .......... .......... .......... .......... .......... 59.1M\n 55250K .......... .......... .......... .......... .......... 5.78M\n 55300K .......... .......... .......... .......... .......... 4.01M\n 55350K .......... .......... .......... .......... .......... 1.68M\n 55400K .......... .......... .......... .......... .......... 1.16M\n 55450K .......... .......... .......... .......... ..........  100M\n 55500K .......... .......... .......... .......... .......... 5.60M\n 55550K .......... .......... .......... .......... .......... 1.72M\n 55600K .......... .......... .......... .......... .......... 1.26M\n 55650K .......... .......... .......... .......... .......... 3.08M\n 55700K .......... .......... .......... .......... .......... 6.05M\n 55750K .......... .......... .......... .......... .......... 7.32M\n 55800K .......... .......... .......... .......... .......... 6.93M\n 55850K .......... .......... .......... .......... .......... 1.54M\n 55900K .......... .......... .......... .......... .......... 1.24M\n 55950K .......... .......... .......... .......... .......... 6.80M\n 56000K .......... .......... .......... .......... .......... 6.55M\n 56050K .......... .......... .......... .......... .......... 2.20M\n 56100K .......... .......... .......... .......... .......... 1.26M\n 56150K .......... .......... .......... .......... .......... 2.98M\n 56200K .......... .......... .......... .......... .......... 6.47M\n 56250K .......... .......... .......... .......... .......... 7.17M\n 56300K .......... .......... .......... .......... .......... 6.25M\n 56350K .......... .......... .......... .......... ..........  925K\n 56400K .......... .......... .......... .......... .......... 2.97M\n 56450K .......... .......... .......... .......... .......... 6.67M\n 56500K .......... .......... .......... .......... .......... 6.49M\n 56550K .......... .......... .......... .......... .......... 7.29M\n 56600K .......... .......... .......... .......... .......... 1.56M\n 56650K .......... .......... .......... .......... .......... 1.25M\n 56700K .......... .......... .......... .......... .......... 79.6M\n 56750K .......... .......... .......... .......... .......... 3.23M\n 56800K .......... .......... .......... .......... .......... 7.23M\n 56850K .......... .......... .......... .......... .......... 1.58M\n 56900K .......... .......... .......... .......... .......... 1.27M\n 56950K .......... .......... .......... .......... ..........  114M\n 57000K .......... .......... .......... .......... .......... 5.42M\n 57050K .......... .......... .......... .......... .......... 5.73M\n 57100K .......... .......... .......... .......... .......... 1.90M\n 57150K .......... .......... .......... .......... .......... 1.00M\n 57200K .......... .......... .......... .......... .......... 79.2M\n 57250K .......... .......... .......... .......... .......... 5.65M\n 57300K .......... .......... .......... .......... .......... 5.60M\n 57350K .......... .......... .......... .......... .......... 1.92M\n 57400K .......... .......... .......... .......... .......... 1.03M\n 57450K .......... .......... .......... .......... .......... 20.6M\n 57500K .......... .......... .......... .......... .......... 5.76M\n 57550K .......... .......... .......... .......... .......... 5.61M\n 57600K .......... .......... .......... .......... .......... 2.34M\n 57650K .......... .......... .......... .......... ..........  959K\n 57700K .......... .......... .......... .......... .......... 23.6M\n 57750K .......... .......... .......... .......... .......... 5.00M\n 57800K .......... .......... .......... .......... .......... 6.95M\n 57850K .......... .......... .......... .......... .......... 2.45M\n 57900K .......... .......... .......... .......... .......... 3.08M\n 57950K .......... .......... .......... .......... .......... 1.24M\n 58000K .......... .......... .......... .......... .......... 5.15M\n 58050K .......... .......... .......... .......... .......... 7.53M\n 58100K .......... .......... .......... .......... .......... 5.89M\n 58150K .......... .......... .......... .......... .......... 1.72M\n 58200K .......... .......... .......... .......... .......... 1.26M\n 58250K .......... .......... .......... .......... .......... 26.9M\n 58300K .......... .......... .......... .......... .......... 5.37M\n 58350K .......... .......... .......... .......... .......... 3.56M\n 58400K .......... .......... .......... .......... .......... 2.40M\n 58450K .......... .......... .......... .......... .......... 1.04M\n 58500K .......... .......... .......... .......... .......... 42.0M\n 58550K .......... .......... .......... .......... .......... 4.89M\n 58600K .......... .......... .......... .......... .......... 6.18M\n 58650K .......... .......... .......... .......... .......... 2.52M\n 58700K .......... .......... .......... .......... .......... 1.23M\n 58750K .......... .......... .......... .......... .......... 3.26M\n 58800K .......... .......... .......... .......... .......... 4.17M\n 58850K .......... .......... .......... .......... .......... 7.09M\n 58900K .......... .......... .......... .......... .......... 6.69M\n 58950K .......... .......... .......... .......... .......... 1.83M\n 59000K .......... .......... .......... .......... .......... 1.24M\n 59050K .......... .......... .......... .......... .......... 53.6M\n 59100K .......... .......... .......... .......... .......... 3.28M\n 59150K .......... .......... .......... .......... .......... 5.21M\n 59200K .......... .......... .......... .......... .......... 2.83M\n 59250K .......... .......... .......... .......... .......... 1006K\n 59300K .......... .......... .......... .......... ..........  106M\n 59350K .......... .......... .......... .......... .......... 4.21M\n 59400K .......... .......... .......... .......... .......... 7.14M\n 59450K .......... .......... .......... .......... .......... 2.64M\n 59500K .......... .......... .......... .......... ..........  919K\n 59550K .......... .......... .......... .......... .......... 83.4M\n 59600K .......... .......... .......... .......... .......... 4.21M\n 59650K .......... .......... .......... .......... .......... 11.8M\n 59700K .......... .......... .......... .......... .......... 5.43M\n 59750K .......... .......... .......... .......... .......... 2.34M\n 59800K .......... .......... .......... .......... .......... 1.05M\n 59850K .......... .......... .......... .......... .......... 72.3M\n 59900K .......... .......... .......... .......... .......... 4.11M\n 59950K .......... .......... .......... .......... .......... 7.01M\n 60000K .......... .......... .......... .......... .......... 2.70M\n 60050K .......... .......... .......... .......... ..........  921K\n 60100K .......... .......... .......... .......... .......... 88.9M\n 60150K .......... .......... .......... .......... .......... 4.28M\n 60200K .......... .......... .......... .......... .......... 11.9M\n 60250K .......... .......... .......... .......... .......... 5.11M\n 60300K .......... .......... .......... .......... .......... 1.82M\n 60350K .......... .......... .......... .......... .......... 1.22M\n 60400K .......... .......... .......... .......... .......... 27.9M\n 60450K .......... .......... .......... .......... .......... 4.54M\n 60500K .......... .......... .......... .......... .......... 7.91M\n 60550K .......... .......... .......... .......... .......... 2.46M\n 60600K .......... .......... .......... .......... .......... 1.19M\n 60650K .......... .........                                   1.55M=19s\n\n2023-11-20 19:01:28 (3.16 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-11-20 19:01:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  265K 3s\n    50K .......... .......... .......... .......... .......... 12%  269K 3s\n   100K .......... .......... .......... .......... .......... 18%  532K 2s\n   150K .......... .......... .......... .......... .......... 24%  534K 2s\n   200K .......... .......... .......... .......... .......... 30%  534K 2s\n   250K .......... .......... .......... .......... .......... 36%  538K 1s\n   300K .......... .......... .......... .......... .......... 42%  537K 1s\n   350K .......... .......... .......... .......... .......... 48%  533K 1s\n   400K .......... .......... .......... .......... .......... 54%  535K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.12M 1s\n   500K .......... .......... .......... .......... .......... 66%  997K 1s\n   550K .......... .......... .......... .......... .......... 72%  534K 0s\n   600K .......... .......... .......... .......... .......... 78%  127M 0s\n   650K .......... .......... .......... .......... .......... 84%  538K 0s\n   700K .......... .......... .......... .......... .......... 90%  536K 0s\n   750K .......... .......... .......... .......... .......... 96% 89.2M 0s\n   800K .......... .......... .......                         100%  646K=1.4s\n\n2023-11-20 19:01:34 (572 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-11-20 19:01:09--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  180K\n    50K .......... .......... .......... .......... ..........  271K\n   100K .......... .......... .......... .......... ..........  537K\n   150K .......... .......... .......... .......... ..........  348K\n   200K .......... .......... .......... .......... ..........  542K\n   250K .......... .......... .......... .......... .......... 1.18M\n   300K .......... .......... .......... .......... ..........  561K\n   350K .......... .......... .......... .......... ..........  542K\n   400K .......... .......... .......... .......... ..........  545K\n   450K .......... .......... .......... .......... ..........  932K\n   500K .......... .......... .......... .......... .......... 1.25M\n   550K .......... .......... .......... .......... ..........  937K\n   600K .......... .......... .......... .......... .......... 1.14M\n   650K .......... .......... .......... .......... ..........  573K\n   700K .......... .......... .......... .......... .......... 9.08M\n   750K .......... .......... .......... .......... ..........  572K\n   800K .......... .......... .......... .......... .......... 11.3M\n   850K .......... .......... .......... .......... ..........  570K\n   900K .......... .......... .......... .......... .......... 11.7M\n   950K .......... .......... .......... .......... ..........  981K\n  1000K .......... .......... .......... .......... .......... 1.25M\n  1050K .......... .......... .......... .......... ..........  935K\n  1100K .......... .......... .......... .......... .......... 1.31M\n  1150K .......... .......... .......... .......... .......... 13.1M\n  1200K .......... .......... .......... .......... ..........  970K\n  1250K .......... .......... .......... .......... .......... 1.29M\n  1300K .......... .......... .......... .......... .......... 14.9M\n  1350K .......... .......... .......... .......... ..........  565K\n  1400K .......... .......... .......... .......... ..........  127M\n  1450K .......... .......... .......... .......... .......... 16.6M\n  1500K .......... .......... .......... .......... ..........  964K\n  1550K .......... .......... .......... .......... .......... 1.30M\n  1600K .......... .......... .......... .......... .......... 16.1M\n  1650K .......... .......... .......... .......... ..........  969K\n  1700K .......... .......... .......... .......... .......... 1.31M\n  1750K .......... .......... .......... .......... .......... 12.3M\n  1800K .......... .......... .......... .......... ..........  982K\n  1850K .......... .......... .......... .......... .......... 1.33M\n  1900K .......... .......... .......... .......... .......... 94.7M\n  1950K .......... .......... .......... .......... .......... 12.4M\n  2000K .......... .......... .......... .......... ..........  971K\n  2050K .......... .......... .......... .......... .......... 1.32M\n  2100K .......... .......... .......... .......... .......... 21.1M\n  2150K .......... .......... .......... .......... .......... 24.4M\n  2200K .......... .......... .......... .......... ..........  975K\n  2250K .......... .......... .......... .......... .......... 1.33M\n  2300K .......... .......... .......... .......... ..........  149M\n  2350K .......... .......... .......... .......... .......... 11.3M\n  2400K .......... .......... .......... .......... ..........  992K\n  2450K .......... .......... .......... .......... .......... 1.31M\n  2500K .......... .......... .......... .......... ..........  149M\n  2550K .......... .......... .......... .......... .......... 11.9M\n  2600K .......... .......... .......... .......... ..........  981K\n  2650K .......... .......... .......... .......... .......... 1.34M\n  2700K .......... .......... .......... .......... .......... 50.2M\n  2750K .......... .......... .......... .......... .......... 14.2M\n  2800K .......... .......... .......... .......... .......... 86.4M\n  2850K .......... .......... .......... .......... ..........  980K\n  2900K .......... .......... .......... .......... .......... 1.34M\n  2950K .......... .......... .......... .......... ..........  108M\n  3000K .......... .......... .......... .......... .......... 12.6M\n  3050K .......... .......... .......... .......... .......... 60.2M\n  3100K .......... .......... .......... .......... ..........  976K\n  3150K .......... .......... .......... .......... .......... 1.35M\n  3200K .......... .......... .......... .......... ..........  115M\n  3250K .......... .......... .......... .......... .......... 13.0M\n  3300K .......... .......... .......... .......... .......... 47.3M\n  3350K .......... .......... .......... .......... ..........  981K\n  3400K .......... .......... .......... .......... .......... 1.37M\n  3450K .......... .......... .......... .......... ..........  125M\n  3500K .......... .......... .......... .......... .......... 16.5M\n  3550K .......... .......... .......... .......... .......... 42.1M\n  3600K .......... .......... .......... .......... ..........  970K\n  3650K .......... .......... .......... .......... .......... 1.36M\n  3700K .......... .......... .......... .......... ..........  103M\n  3750K .......... .......... .......... .......... .......... 32.2M\n  3800K .......... .......... .......... .......... .......... 18.5M\n  3850K .......... .......... .......... .......... .......... 38.4M\n  3900K .......... .......... .......... .......... ..........  986K\n  3950K .......... .......... .......... .......... .......... 1.36M\n  4000K .......... .......... .......... .......... ..........  101M\n  4050K .......... .......... .......... .......... .......... 25.5M\n  4100K .......... .......... .......... .......... .......... 21.7M\n  4150K .......... .......... .......... .......... .......... 53.9M\n  4200K .......... .......... .......... .......... ..........  978K\n  4250K .......... .......... .......... .......... .......... 1.38M\n  4300K .......... .......... .......... .......... ..........  137M\n  4350K .......... .......... .......... .......... .......... 22.5M\n  4400K .......... .......... .......... .......... .......... 25.1M\n  4450K .......... .......... .......... .......... .......... 65.4M\n  4500K .......... .......... .......... .......... ..........  972K\n  4550K .......... .......... .......... .......... .......... 1.38M\n  4600K .......... .......... .......... .......... .......... 78.7M\n  4650K .......... .......... .......... .......... ..........  168M\n  4700K .......... .......... .......... .......... .......... 18.4M\n  4750K .......... .......... .......... .......... .......... 26.5M\n  4800K .......... .......... .......... .......... .......... 54.1M\n  4850K .......... .......... .......... .......... ..........  986K\n  4900K .......... .......... .......... .......... .......... 1.38M\n  4950K .......... .......... .......... .......... .......... 70.2M\n  5000K .......... .......... .......... .......... .......... 93.6M\n  5050K .......... .......... .......... .......... .......... 19.4M\n  5100K .......... .......... .......... .......... .......... 69.0M\n  5150K .......... .......... .......... .......... .......... 28.5M\n  5200K .......... .......... .......... .......... ..........  989K\n  5250K .......... .......... .......... .......... ..........  392K\n  5300K .......... .......... .......... .......... .......... 82.3M\n  5350K .......... .......... .......... .......... ..........  134M\n  5400K .......... .......... .......... .......... ..........  141M\n  5450K .......... .......... .......... .......... ..........  178M\n  5500K .......... .......... .......... .......... ..........  102M\n  5550K .......... .......... .......... .......... .......... 89.9M\n  5600K .......... .......... .......... .......... ..........  132M\n  5650K .......... .......... .......... .......... ..........  167M\n  5700K .......... .......... .......... .......... .......... 48.2M\n  5750K .......... .......... .......... .......... .......... 32.3M\n  5800K .......... .......... .......... .......... .......... 25.1M\n  5850K .......... .......... .......... .......... .......... 1009K\n  5900K .......... .......... .......... .......... .......... 1.39M\n  5950K .......... .......... .......... .......... .......... 14.2M\n  6000K .......... .......... .......... .......... .......... 26.1M\n  6050K .......... .......... .......... .......... .......... 25.1M\n  6100K .......... .......... .......... .......... ..........  992K\n  6150K .......... .......... .......... .......... .......... 1.41M\n  6200K .......... .......... .......... .......... .......... 69.5M\n  6250K .......... .......... .......... .......... .......... 12.2M\n  6300K .......... .......... .......... .......... ..........  132M\n  6350K .......... .......... .......... .......... ..........  961K\n  6400K .......... .......... .......... .......... .......... 1.41M\n  6450K .......... .......... .......... .......... .......... 66.5M\n  6500K .......... .......... .......... .......... .......... 18.3M\n  6550K .......... .......... .......... .......... .......... 25.6M\n  6600K .......... .......... .......... .......... .......... 22.0M\n  6650K .......... .......... .......... .......... ..........  995K\n  6700K .......... .......... .......... .......... .......... 1.41M\n  6750K .......... .......... .......... .......... ..........  106M\n  6800K .......... .......... .......... .......... .......... 11.1M\n  6850K .......... .......... .......... .......... .......... 25.1M\n  6900K .......... .......... .......... .......... .......... 1001K\n  6950K .......... .......... .......... .......... .......... 1.40M\n  7000K .......... .......... .......... .......... .......... 53.0M\n  7050K .......... .......... .......... .......... .......... 26.1M\n  7100K .......... .......... .......... .......... .......... 18.2M\n  7150K .......... .......... .......... .......... .......... 21.2M\n  7200K .......... .......... .......... .......... ..........  980K\n  7250K .......... .......... .......... .......... .......... 1.43M\n  7300K .......... .......... .......... .......... .......... 73.1M\n  7350K .......... .......... .......... .......... .......... 17.3M\n  7400K .......... .......... .......... .......... .......... 31.0M\n  7450K .......... .......... .......... .......... .......... 17.9M\n  7500K .......... .......... .......... .......... ..........  990K\n  7550K .......... .......... .......... .......... .......... 1.43M\n  7600K .......... .......... .......... .......... ..........  131M\n  7650K .......... .......... .......... .......... .......... 12.8M\n  7700K .......... .......... .......... .......... ..........  103M\n  7750K .......... .......... .......... .......... .......... 14.9M\n  7800K .......... .......... .......... .......... ..........  980K\n  7850K .......... .......... .......... .......... .......... 1.46M\n  7900K .......... .......... .......... .......... ..........  149M\n  7950K .......... .......... .......... .......... .......... 13.7M\n  8000K .......... .......... .......... .......... ..........  111M\n  8050K .......... .......... .......... .......... .......... 1.06M\n  8100K .......... .......... .......... .......... .......... 5.44M\n  8150K .......... .......... .......... .......... .......... 1.46M\n  8200K .......... .......... .......... .......... ..........  126M\n  8250K .......... .......... .......... .......... .......... 17.7M\n  8300K .......... .......... .......... .......... .......... 91.1M\n  8350K .......... .......... .......... .......... ..........  957K\n  8400K .......... .......... .......... .......... .......... 19.5M\n  8450K .......... .......... .......... .......... .......... 1.45M\n  8500K .......... .......... .......... .......... .......... 91.3M\n  8550K .......... .......... .......... .......... .......... 13.7M\n  8600K .......... .......... .......... .......... ..........  133M\n  8650K .......... .......... .......... .......... .......... 17.3M\n  8700K .......... .......... .......... .......... ..........  970K\n  8750K .......... .......... .......... .......... .......... 1.45M\n  8800K .......... .......... .......... .......... .......... 61.2M\n  8850K .......... .......... .......... .......... .......... 15.9M\n  8900K .......... .......... .......... .......... .......... 50.9M\n  8950K .......... .......... .......... .......... .......... 17.9M\n  9000K .......... .......... .......... .......... .......... 1002K\n  9050K .......... .......... .......... .......... .......... 1.42M\n  9100K .......... .......... .......... .......... .......... 37.0M\n  9150K .......... .......... .......... .......... .......... 23.7M\n  9200K .......... .......... .......... .......... .......... 35.6M\n  9250K .......... .......... .......... .......... .......... 8.48M\n  9300K .......... .......... .......... .......... .......... 1.04M\n  9350K .......... .......... .......... .......... .......... 1.43M\n  9400K .......... .......... .......... .......... .......... 95.7M\n  9450K .......... .......... .......... .......... .......... 32.6M\n  9500K .......... .......... .......... .......... .......... 17.4M\n  9550K .......... .......... .......... .......... .......... 25.0M\n  9600K .......... .......... .......... .......... ..........  961K\n  9650K .......... .......... .......... .......... .......... 1.45M\n  9700K .......... .......... .......... .......... .......... 92.6M\n  9750K .......... .......... .......... .......... .......... 28.0M\n  9800K .......... .......... .......... .......... .......... 22.7M\n  9850K .......... .......... .......... .......... ..........  154M\n  9900K .......... .......... .......... .......... .......... 8.11M\n  9950K .......... .......... .......... .......... .......... 1017K\n 10000K .......... .......... .......... .......... .......... 1.46M\n 10050K .......... .......... .......... .......... ..........  105M\n 10100K .......... .......... .......... .......... .......... 24.6M\n 10150K .......... .......... .......... .......... .......... 71.8M\n 10200K .......... .......... .......... .......... .......... 21.1M\n 10250K .......... .......... .......... .......... ..........  944K\n 10300K .......... .......... .......... .......... .......... 1.47M\n 10350K .......... .......... .......... .......... .......... 63.4M\n 10400K .......... .......... .......... .......... ..........  143M\n 10450K .......... .......... .......... .......... .......... 22.0M\n 10500K .......... .......... .......... .......... .......... 68.8M\n 10550K .......... .......... .......... .......... .......... 7.12M\n 10600K .......... .......... .......... .......... .......... 1.00M\n 10650K .......... .......... .......... .......... .......... 1.48M\n 10700K .......... .......... .......... .......... .......... 88.7M\n 10750K .......... .......... .......... .......... .......... 23.2M\n 10800K .......... .......... .......... .......... .......... 42.9M\n 10850K .......... .......... .......... .......... .......... 25.3M\n 10900K .......... .......... .......... .......... ..........  929K\n 10950K .......... .......... .......... .......... ..........  106M\n 11000K .......... .......... .......... .......... .......... 1.50M\n 11050K .......... .......... .......... .......... ..........  120M\n 11100K .......... .......... .......... .......... .......... 19.0M\n 11150K .......... .......... .......... .......... ..........  117M\n 11200K .......... .......... .......... .......... .......... 6.20M\n 11250K .......... .......... .......... .......... .......... 1.02M\n 11300K .......... .......... .......... .......... .......... 1.47M\n 11350K .......... .......... .......... .......... ..........  150M\n 11400K .......... .......... .......... .......... ..........  161M\n 11450K .......... .......... .......... .......... .......... 20.7M\n 11500K .......... .......... .......... .......... .......... 12.8M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 2.60M\n 50150K .......... .......... .......... .......... ..........  153M\n 50200K .......... .......... .......... .......... .......... 16.1M\n 50250K .......... .......... .......... .......... .......... 56.2M\n 50300K .......... .......... .......... .......... .......... 6.67M\n 50350K .......... .......... .......... .......... .......... 8.76M\n 50400K .......... .......... .......... .......... .......... 1.57M\n 50450K .......... .......... .......... .......... .......... 1.11M\n 50500K .......... .......... .......... .......... .......... 69.2M\n 50550K .......... .......... .......... .......... .......... 92.5M\n 50600K .......... .......... .......... .......... .......... 15.4M\n 50650K .......... .......... .......... .......... .......... 9.17M\n 50700K .......... .......... .......... .......... .......... 8.45M\n 50750K .......... .......... .......... .......... .......... 2.31M\n 50800K .......... .......... .......... .......... .......... 1.23M\n 50850K .......... .......... .......... .......... .......... 2.75M\n 50900K .......... .......... .......... .......... .......... 96.5M\n 50950K .......... .......... .......... .......... .......... 21.5M\n 51000K .......... .......... .......... .......... .......... 39.9M\n 51050K .......... .......... .......... .......... .......... 7.85M\n 51100K .......... .......... .......... .......... .......... 7.27M\n 51150K .......... .......... .......... .......... .......... 2.31M\n 51200K .......... .......... .......... .......... ..........  928K\n 51250K .......... .......... .......... .......... .......... 76.2M\n 51300K .......... .......... .......... .......... ..........  152M\n 51350K .......... .......... .......... .......... .......... 16.9M\n 51400K .......... .......... .......... .......... .......... 8.93M\n 51450K .......... .......... .......... .......... .......... 9.53M\n 51500K .......... .......... .......... .......... .......... 2.27M\n 51550K .......... .......... .......... .......... .......... 2.83M\n 51600K .......... .......... .......... .......... .......... 1.22M\n 51650K .......... .......... .......... .......... .......... 38.1M\n 51700K .......... .......... .......... .......... .......... 23.1M\n 51750K .......... .......... .......... .......... .......... 40.6M\n 51800K .......... .......... .......... .......... .......... 8.84M\n 51850K .......... .......... .......... .......... .......... 5.45M\n 51900K .......... .......... .......... .......... .......... 1.83M\n 51950K .......... .......... .......... .......... .......... 1.62M\n 52000K .......... .......... .......... .......... .......... 2.72M\n 52050K .......... .......... .......... .......... .......... 93.7M\n 52100K .......... .......... .......... .......... .......... 51.4M\n 52150K .......... .......... .......... .......... .......... 8.91M\n 52200K .......... .......... .......... .......... .......... 8.18M\n 52250K .......... .......... .......... .......... .......... 2.30M\n 52300K .......... .......... .......... .......... .......... 2.72M\n 52350K .......... .......... .......... .......... .......... 1.25M\n 52400K .......... .......... .......... .......... .......... 30.2M\n 52450K .......... .......... .......... .......... .......... 80.9M\n 52500K .......... .......... .......... .......... .......... 13.6M\n 52550K .......... .......... .......... .......... .......... 9.83M\n 52600K .......... .......... .......... .......... .......... 4.91M\n 52650K .......... .......... .......... .......... .......... 1.96M\n 52700K .......... .......... .......... .......... .......... 1.60M\n 52750K .......... .......... .......... .......... .......... 2.79M\n 52800K .......... .......... .......... .......... .......... 73.0M\n 52850K .......... .......... .......... .......... ..........  159M\n 52900K .......... .......... .......... .......... .......... 8.77M\n 52950K .......... .......... .......... .......... .......... 6.89M\n 53000K .......... .......... .......... .......... .......... 2.26M\n 53050K .......... .......... .......... .......... .......... 2.72M\n 53100K .......... .......... .......... .......... .......... 1.29M\n 53150K .......... .......... .......... .......... .......... 27.1M\n 53200K .......... .......... .......... .......... .......... 94.6M\n 53250K .......... .......... .......... .......... .......... 9.94M\n 53300K .......... .......... .......... .......... .......... 13.2M\n 53350K .......... .......... .......... .......... .......... 4.24M\n 53400K .......... .......... .......... .......... .......... 2.17M\n 53450K .......... .......... .......... .......... .......... 1.56M\n 53500K .......... .......... .......... .......... .......... 2.99M\n 53550K .......... .......... .......... .......... .......... 19.6M\n 53600K .......... .......... .......... .......... .......... 10.2M\n 53650K .......... .......... .......... .......... ..........  110M\n 53700K .......... .......... .......... .......... .......... 7.22M\n 53750K .......... .......... .......... .......... .......... 2.25M\n 53800K .......... .......... .......... .......... .......... 2.75M\n 53850K .......... .......... .......... .......... .......... 1.28M\n 53900K .......... .......... .......... .......... .......... 22.2M\n 53950K .......... .......... .......... .......... ..........  539K\n 54000K .......... .......... .......... .......... ..........  144M\n 54050K .......... .......... .......... .......... ..........  177M\n 54100K .......... .......... .......... .......... ..........  136M\n 54150K .......... .......... .......... .......... ..........  164M\n 54200K .......... .......... .......... .......... ..........  155M\n 54250K .......... .......... .......... .......... ..........  154M\n 54300K .......... .......... .......... .......... .......... 11.5M\n 54350K .......... .......... .......... .......... .......... 3.25M\n 54400K .......... .......... .......... .......... .......... 1.66M\n 54450K .......... .......... .......... .......... .......... 1.21M\n 54500K .......... .......... .......... .......... .......... 33.8M\n 54550K .......... .......... .......... .......... .......... 6.36M\n 54600K .......... .......... .......... .......... .......... 3.48M\n 54650K .......... .......... .......... .......... ..........  940K\n 54700K .......... .......... .......... .......... .......... 3.08M\n 54750K .......... .......... .......... .......... .......... 6.52M\n 54800K .......... .......... .......... .......... .......... 6.58M\n 54850K .......... .......... .......... .......... .......... 2.22M\n 54900K .......... .......... .......... .......... ..........  907K\n 54950K .......... .......... .......... .......... .......... 40.3M\n 55000K .......... .......... .......... .......... .......... 6.77M\n 55050K .......... .......... .......... .......... .......... 6.26M\n 55100K .......... .......... .......... .......... .......... 2.27M\n 55150K .......... .......... .......... .......... ..........  914K\n 55200K .......... .......... .......... .......... .......... 59.1M\n 55250K .......... .......... .......... .......... .......... 5.78M\n 55300K .......... .......... .......... .......... .......... 4.01M\n 55350K .......... .......... .......... .......... .......... 1.68M\n 55400K .......... .......... .......... .......... .......... 1.16M\n 55450K .......... .......... .......... .......... ..........  100M\n 55500K .......... .......... .......... .......... .......... 5.60M\n 55550K .......... .......... .......... .......... .......... 1.72M\n 55600K .......... .......... .......... .......... .......... 1.26M\n 55650K .......... .......... .......... .......... .......... 3.08M\n 55700K .......... .......... .......... .......... .......... 6.05M\n 55750K .......... .......... .......... .......... .......... 7.32M\n 55800K .......... .......... .......... .......... .......... 6.93M\n 55850K .......... .......... .......... .......... .......... 1.54M\n 55900K .......... .......... .......... .......... .......... 1.24M\n 55950K .......... .......... .......... .......... .......... 6.80M\n 56000K .......... .......... .......... .......... .......... 6.55M\n 56050K .......... .......... .......... .......... .......... 2.20M\n 56100K .......... .......... .......... .......... .......... 1.26M\n 56150K .......... .......... .......... .......... .......... 2.98M\n 56200K .......... .......... .......... .......... .......... 6.47M\n 56250K .......... .......... .......... .......... .......... 7.17M\n 56300K .......... .......... .......... .......... .......... 6.25M\n 56350K .......... .......... .......... .......... ..........  925K\n 56400K .......... .......... .......... .......... .......... 2.97M\n 56450K .......... .......... .......... .......... .......... 6.67M\n 56500K .......... .......... .......... .......... .......... 6.49M\n 56550K .......... .......... .......... .......... .......... 7.29M\n 56600K .......... .......... .......... .......... .......... 1.56M\n 56650K .......... .......... .......... .......... .......... 1.25M\n 56700K .......... .......... .......... .......... .......... 79.6M\n 56750K .......... .......... .......... .......... .......... 3.23M\n 56800K .......... .......... .......... .......... .......... 7.23M\n 56850K .......... .......... .......... .......... .......... 1.58M\n 56900K .......... .......... .......... .......... .......... 1.27M\n 56950K .......... .......... .......... .......... ..........  114M\n 57000K .......... .......... .......... .......... .......... 5.42M\n 57050K .......... .......... .......... .......... .......... 5.73M\n 57100K .......... .......... .......... .......... .......... 1.90M\n 57150K .......... .......... .......... .......... .......... 1.00M\n 57200K .......... .......... .......... .......... .......... 79.2M\n 57250K .......... .......... .......... .......... .......... 5.65M\n 57300K .......... .......... .......... .......... .......... 5.60M\n 57350K .......... .......... .......... .......... .......... 1.92M\n 57400K .......... .......... .......... .......... .......... 1.03M\n 57450K .......... .......... .......... .......... .......... 20.6M\n 57500K .......... .......... .......... .......... .......... 5.76M\n 57550K .......... .......... .......... .......... .......... 5.61M\n 57600K .......... .......... .......... .......... .......... 2.34M\n 57650K .......... .......... .......... .......... ..........  959K\n 57700K .......... .......... .......... .......... .......... 23.6M\n 57750K .......... .......... .......... .......... .......... 5.00M\n 57800K .......... .......... .......... .......... .......... 6.95M\n 57850K .......... .......... .......... .......... .......... 2.45M\n 57900K .......... .......... .......... .......... .......... 3.08M\n 57950K .......... .......... .......... .......... .......... 1.24M\n 58000K .......... .......... .......... .......... .......... 5.15M\n 58050K .......... .......... .......... .......... .......... 7.53M\n 58100K .......... .......... .......... .......... .......... 5.89M\n 58150K .......... .......... .......... .......... .......... 1.72M\n 58200K .......... .......... .......... .......... .......... 1.26M\n 58250K .......... .......... .......... .......... .......... 26.9M\n 58300K .......... .......... .......... .......... .......... 5.37M\n 58350K .......... .......... .......... .......... .......... 3.56M\n 58400K .......... .......... .......... .......... .......... 2.40M\n 58450K .......... .......... .......... .......... .......... 1.04M\n 58500K .......... .......... .......... .......... .......... 42.0M\n 58550K .......... .......... .......... .......... .......... 4.89M\n 58600K .......... .......... .......... .......... .......... 6.18M\n 58650K .......... .......... .......... .......... .......... 2.52M\n 58700K .......... .......... .......... .......... .......... 1.23M\n 58750K .......... .......... .......... .......... .......... 3.26M\n 58800K .......... .......... .......... .......... .......... 4.17M\n 58850K .......... .......... .......... .......... .......... 7.09M\n 58900K .......... .......... .......... .......... .......... 6.69M\n 58950K .......... .......... .......... .......... .......... 1.83M\n 59000K .......... .......... .......... .......... .......... 1.24M\n 59050K .......... .......... .......... .......... .......... 53.6M\n 59100K .......... .......... .......... .......... .......... 3.28M\n 59150K .......... .......... .......... .......... .......... 5.21M\n 59200K .......... .......... .......... .......... .......... 2.83M\n 59250K .......... .......... .......... .......... .......... 1006K\n 59300K .......... .......... .......... .......... ..........  106M\n 59350K .......... .......... .......... .......... .......... 4.21M\n 59400K .......... .......... .......... .......... .......... 7.14M\n 59450K .......... .......... .......... .......... .......... 2.64M\n 59500K .......... .......... .......... .......... ..........  919K\n 59550K .......... .......... .......... .......... .......... 83.4M\n 59600K .......... .......... .......... .......... .......... 4.21M\n 59650K .......... .......... .......... .......... .......... 11.8M\n 59700K .......... .......... .......... .......... .......... 5.43M\n 59750K .......... .......... .......... .......... .......... 2.34M\n 59800K .......... .......... .......... .......... .......... 1.05M\n 59850K .......... .......... .......... .......... .......... 72.3M\n 59900K .......... .......... .......... .......... .......... 4.11M\n 59950K .......... .......... .......... .......... .......... 7.01M\n 60000K .......... .......... .......... .......... .......... 2.70M\n 60050K .......... .......... .......... .......... ..........  921K\n 60100K .......... .......... .......... .......... .......... 88.9M\n 60150K .......... .......... .......... .......... .......... 4.28M\n 60200K .......... .......... .......... .......... .......... 11.9M\n 60250K .......... .......... .......... .......... .......... 5.11M\n 60300K .......... .......... .......... .......... .......... 1.82M\n 60350K .......... .......... .......... .......... .......... 1.22M\n 60400K .......... .......... .......... .......... .......... 27.9M\n 60450K .......... .......... .......... .......... .......... 4.54M\n 60500K .......... .......... .......... .......... .......... 7.91M\n 60550K .......... .......... .......... .......... .......... 2.46M\n 60600K .......... .......... .......... .......... .......... 1.19M\n 60650K .......... .........                                   1.55M=19s\n\n2023-11-20 19:01:28 (3.16 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-11-20 19:01:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  265K 3s\n    50K .......... .......... .......... .......... .......... 12%  269K 3s\n   100K .......... .......... .......... .......... .......... 18%  532K 2s\n   150K .......... .......... .......... .......... .......... 24%  534K 2s\n   200K .......... .......... .......... .......... .......... 30%  534K 2s\n   250K .......... .......... .......... .......... .......... 36%  538K 1s\n   300K .......... .......... .......... .......... .......... 42%  537K 1s\n   350K .......... .......... .......... .......... .......... 48%  533K 1s\n   400K .......... .......... .......... .......... .......... 54%  535K 1s\n   450K .......... .......... .......... .......... .......... 60% 1.12M 1s\n   500K .......... .......... .......... .......... .......... 66%  997K 1s\n   550K .......... .......... .......... .......... .......... 72%  534K 0s\n   600K .......... .......... .......... .......... .......... 78%  127M 0s\n   650K .......... .......... .......... .......... .......... 84%  538K 0s\n   700K .......... .......... .......... .......... .......... 90%  536K 0s\n   750K .......... .......... .......... .......... .......... 96% 89.2M 0s\n   800K .......... .......... .......                         100%  646K=1.4s\n\n2023-11-20 19:01:34 (572 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-11-20T19:01:49.206986",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 57.2528657913208, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-11-20 19:01:09--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  180K    50K .......... .......... .......... .......... ..........  271K   100K .......... .......... .......... .......... ..........  537K   150K .......... .......... .......... .......... ..........  348K   200K .......... .......... .......... .......... ..........  542K   250K .......... .......... .......... .......... .......... 1.18M   300K .......... .......... .......... .......... ..........  561K   350K .......... .......... .......... .......... ..........  542K   400K .......... .......... .......... .......... ..........  545K   450K .......... .......... .......... .......... ..........  932K   500K .......... .......... .......... .......... .......... 1.25M   550K .......... .......... .......... .......... ..........  937K   600K .......... .......... .......... .......... .......... 1.14M   650K .......... .......... .......... .......... ..........  573K   700K .......... .......... .......... .......... .......... 9.08M   750K .......... .......... .......... .......... ..........  572K   800K .......... .......... .......... .......... .......... 11.3M   850K .......... .......... .......... .......... ..........  570K   900K .......... .......... .......... .......... .......... 11.7M   950K .......... .......... .......... .......... ..........  981K  1000K .......... .......... .......... .......... .......... 1.25M  1050K .......... .......... .......... .......... ..........  935K  1100K .......... .......... .......... .......... .......... 1.31M  1150K .......... .......... .......... .......... .......... 13.1M  1200K .......... .......... .......... .......... ..........  970K  1250K .......... .......... .......... .......... .......... 1.29M  1300K .......... .......... .......... .......... .......... 14.9M  1350K .......... .......... .......... .......... ..........  565K  1400K .......... .......... .......... .......... ..........  127M  1450K .......... .......... .......... .......... .......... 16.6M  1500K .......... .......... .......... .......... ..........  964K  1550K .......... .......... .......... .......... .......... 1.30M  1600K .......... .......... .......... .......... .......... 16.1M  1650K .......... .......... .......... .......... ..........  969K  1700K .......... .......... .......... .......... .......... 1.31M  1750K .......... .......... .......... .......... .......... 12.3M  1800K .......... .......... .......... .......... ..........  982K  1850K .......... .......... .......... .......... .......... 1.33M  1900K .......... .......... .......... .......... .......... 94.7M  1950K .......... .......... .......... .......... .......... 12.4M  2000K .......... .......... .......... .......... ..........  971K  2050K .......... .......... .......... .......... .......... 1.32M  2100K .......... .......... .......... .......... .......... 21.1M  2150K .......... .......... .......... .......... .......... 24.4M  2200K .......... .......... .......... .......... ..........  975K  2250K .......... .......... .......... .......... .......... 1.33M  2300K .......... .......... .......... .......... ..........  149M  2350K .......... .......... .......... .......... .......... 11.3M  2400K .......... .......... .......... .......... ..........  992K  2450K .......... .......... .......... .......... .......... 1.31M  2500K .......... .......... .......... .......... ..........  149M  2550K .......... .......... .......... .......... .......... 11.9M  2600K .......... .......... .......... .......... ..........  981K  2650K .......... .......... .......... .......... .......... 1.34M  2700K .......... .......... .......... .......... .......... 50.2M  2750K .......... .......... .......... .......... .......... 14.2M  2800K .......... .......... .......... .......... .......... 86.4M  2850K .......... .......... .......... .......... ..........  980K  2900K .......... .......... .......... .......... .......... 1.34M  2950K .......... .......... .......... .......... ..........  108M  3000K .......... .......... .......... .......... .......... 12.6M  3050K .......... .......... .......... .......... .......... 60.2M  3100K .......... .......... .......... .......... ..........  976K  3150K .......... .......... .......... .......... .......... 1.35M  3200K .......... .......... .......... .......... ..........  115M  3250K .......... .......... .......... .......... .......... 13.0M  3300K .......... .......... .......... .......... .......... 47.3M  3350K .......... .......... .......... .......... ..........  981K  3400K .......... .......... .......... .......... .......... 1.37M  3450K .......... .......... .......... .......... ..........  125M  3500K .......... .......... .......... .......... .......... 16.5M  3550K .......... .......... .......... .......... .......... 42.1M  3600K .......... .......... .......... .......... ..........  970K  3650K .......... .......... .......... .......... .......... 1.36M  3700K .......... .......... .......... .......... ..........  103M  3750K .......... .......... .......... .......... .......... 32.2M  3800K .......... .......... .......... .......... .......... 18.5M  3850K .......... .......... .......... .......... .......... 38.4M  3900K .......... .......... .......... .......... ..........  986K  3950K .......... .......... .......... .......... .......... 1.36M  4000K .......... .......... .......... .......... ..........  101M  4050K .......... .......... .......... .......... .......... 25.5M  4100K .......... .......... .......... .......... .......... 21.7M  4150K .......... .......... .......... .......... .......... 53.9M  4200K .......... .......... .......... .......... ..........  978K  4250K .......... .......... .......... .......... .......... 1.38M  4300K .......... .......... .......... .......... ..........  137M  4350K .......... .......... .......... .......... .......... 22.5M  4400K .......... .......... .......... .......... .......... 25.1M  4450K .......... .......... .......... .......... .......... 65.4M  4500K .......... .......... .......... .......... ..........  972K  4550K .......... .......... .......... .......... .......... 1.38M  4600K .......... .......... .......... .......... .......... 78.7M  4650K .......... .......... .......... .......... ..........  168M  4700K .......... .......... .......... .......... .......... 18.4M  4750K .......... .......... .......... .......... .......... 26.5M  4800K .......... .......... .......... .......... .......... 54.1M  4850K .......... .......... .......... .......... ..........  986K  4900K .......... .......... .......... .......... .......... 1.38M  4950K .......... .......... .......... .......... .......... 70.2M  5000K .......... .......... .......... .......... .......... 93.6M  5050K .......... .......... .......... .......... .......... 19.4M  5100K .......... .......... .......... .......... .......... 69.0M  5150K .......... .......... .......... .......... .......... 28.5M  5200K .......... .......... .......... .......... ..........  989K  5250K .......... .......... .......... .......... ..........  392K  5300K .......... .......... .......... .......... .......... 82.3M  5350K .......... .......... .......... .......... ..........  134M  5400K .......... .......... .......... .......... ..........  141M  5450K .......... .......... .......... .......... ..........  178M  5500K .......... .......... .......... .......... ..........  102M  5550K .......... .......... .......... .......... .......... 89.9M  5600K .......... .......... .......... .......... ..........  132M  5650K .......... .......... .......... .......... ..........  167M  5700K .......... .......... .......... .......... .......... 48.2M  5750K .......... .......... .......... .......... .......... 32.3M  5800K .......... .......... .......... .......... .......... 25.1M  5850K .......... .......... .......... .......... .......... 1009K  5900K .......... .......... .......... .......... .......... 1.39M  5950K .......... .......... .......... .......... .......... 14.2M  6000K .......... .......... .......... .......... .......... 26.1M  6050K .......... .......... .......... .......... .......... 25.1M  6100K .......... .......... .......... .......... ..........  992K  6150K .......... .......... .......... .......... .......... 1.41M  6200K .......... .......... .......... .......... .......... 69.5M  6250K .......... .......... .......... .......... .......... 12.2M  6300K .......... .......... .......... .......... ..........  132M  6350K .......... .......... .......... .......... ..........  961K  6400K .......... .......... .......... .......... .......... 1.41M  6450K .......... .......... .......... .......... .......... 66.5M  6500K .......... .......... .......... .......... .......... 18.3M  6550K .......... .......... .......... .......... .......... 25.6M  6600K .......... .......... .......... .......... .......... 22.0M  6650K .......... .......... .......... .......... ..........  995K  6700K .......... .......... .......... .......... .......... 1.41M  6750K .......... .......... .......... .......... ..........  106M  6800K .......... .......... .......... .......... .......... 11.1M  6850K .......... .......... .......... .......... .......... 25.1M  6900K .......... .......... .......... .......... .......... 1001K  6950K .......... .......... .......... .......... .......... 1.40M  7000K .......... .......... .......... .......... .......... 53.0M  7050K .......... .......... .......... .......... .......... 26.1M  7100K .......... .......... .......... .......... .......... 18.2M  7150K .......... .......... .......... .......... .......... 21.2M  7200K .......... .......... .......... .......... ..........  980K  7250K .......... .......... .......... .......... .......... 1.43M  7300K .......... .......... .......... .......... .......... 73.1M  7350K .......... .......... .......... .......... .......... 17.3M  7400K .......... .......... .......... .......... .......... 31.0M  7450K .......... .......... .......... .......... .......... 17.9M  7500K .......... .......... .......... .......... ..........  990K  7550K .......... .......... .......... .......... .......... 1.43M  7600K .......... .......... .......... .......... ..........  131M  7650K .......... .......... .......... .......... .......... 12.8M  7700K .......... .......... .......... .......... ..........  103M  7750K .......... .......... .......... .......... .......... 14.9M  7800K .......... .......... .......... .......... ..........  980K  7850K .......... .......... .......... .......... .......... 1.46M  7900K .......... .......... .......... .......... ..........  149M  7950K .......... .......... .......... .......... .......... 13.7M  8000K .......... .......... .......... .......... ..........  111M  8050K .......... .......... .......... .......... .......... 1.06M  8100K .......... .......... .......... .......... .......... 5.44M  8150K .......... .......... .......... .......... .......... 1.46M  8200K .......... .......... .......... .......... ..........  126M  8250K .......... .......... .......... .......... .......... 17.7M  8300K .......... .......... .......... .......... .......... 91.1M  8350K .......... .......... .......... .......... ..........  957K  8400K .......... .......... .......... .......... .......... 19.5M  8450K .......... .......... .......... .......... .......... 1.45M  8500K .......... .......... .......... .......... .......... 91.3M  8550K .......... .......... .......... .......... .......... 13.7M  8600K .......... .......... .......... .......... ..........  133M  8650K .......... .......... .......... .......... .......... 17.3M  8700K .......... .......... .......... .......... ..........  970K  8750K .......... .......... .......... .......... .......... 1.45M  8800K .......... .......... .......... .......... .......... 61.2M  8850K .......... .......... .......... .......... .......... 15.9M  8900K .......... .......... .......... .......... .......... 50.9M  8950K .......... .......... .......... .......... .......... 17.9M  9000K .......... .......... .......... .......... .......... 1002K  9050K .......... .......... .......... .......... .......... 1.42M  9100K .......... .......... .......... .......... .......... 37.0M  9150K .......... .......... .......... .......... .......... 23.7M  9200K .......... .......... .......... .......... .......... 35.6M  9250K .......... .......... .......... .......... .......... 8.48M  9300K .......... .......... .......... .......... .......... 1.04M  9350K .......... .......... .......... .......... .......... 1.43M  9400K .......... .......... .......... .......... .......... 95.7M  9450K .......... .......... .......... .......... .......... 32.6M  9500K .......... .......... .......... .......... .......... 17.4M  9550K .......... .......... .......... .......... .......... 25.0M  9600K .......... .......... .......... .......... ..........  961K  9650K .......... .......... .......... .......... .......... 1.45M  9700K .......... .......... .......... .......... .......... 92.6M  9750K .......... .......... .......... .......... .......... 28.0M  9800K .......... .......... .......... .......... .......... 22.7M  9850K .......... .......... .......... .......... ..........  154M  9900K .......... .......... .......... .......... .......... 8.11M  9950K .......... .......... .......... .......... .......... 1017K 10000K .......... .......... .......... .......... .......... 1.46M 10050K .......... .......... .......... .......... ..........  105M 10100K .......... .......... .......... .......... .......... 24.6M 10150K .......... .......... .......... .......... .......... 71.8M 10200K .......... .......... .......... .......... .......... 21.1M 10250K .......... .......... .......... .......... ..........  944K 10300K .......... .......... .......... .......... .......... 1.47M 10350K .......... .......... .......... .......... .......... 63.4M 10400K .......... .......... .......... .......... ..........  143M 10450K .......... .......... .......... .......... .......... 22.0M 10500K .......... .......... .......... .......... .......... 68.8M 10550K .......... .......... .......... .......... .......... 7.12M 10600K .......... .......... .......... .......... .......... 1.00M 10650K .......... .......... .......... .......... .......... 1.48M 10700K .......... .......... .......... .......... .......... 88.7M 10750K .......... .......... .......... .......... .......... 23.2M 10800K .......... .......... .......... .......... .......... 42.9M 10850K .......... .......... .......... .......... .......... 25.3M 10900K .......... .......... .......... .......... ..........  929K 10950K .......... .......... .......... .......... ..........  106M 11000K .......... .......... .......... .......... .......... 1.50M 11050K .......... .......... .......... .......... ..........  120M 11100K .......... .......... .......... .......... .......... 19.0M 11150K .......... .......... .......... .......... ..........  117M 11200K .......... .......... .......... .......... .......... 6.20M 11250K .......... .......... .......... .......... .......... 1.02M 11300K .......... .......... .......... .......... .......... 1.47M 11350K .......... .......... .......... .......... ..........  150M 11400K .......... .......... .......... .......... ..........  161M 11450K .......... .......... .......... .......... .......... 20.7M 11500K .......... .......... .......... .......... .......... 12.8M 11550K .......... .......... .......... .......... .................. 2.60M 50150K .......... .......... .......... .......... ..........  153M 50200K .......... .......... .......... .......... .......... 16.1M 50250K .......... .......... .......... .......... .......... 56.2M 50300K .......... .......... .......... .......... .......... 6.67M 50350K .......... .......... .......... .......... .......... 8.76M 50400K .......... .......... .......... .......... .......... 1.57M 50450K .......... .......... .......... .......... .......... 1.11M 50500K .......... .......... .......... .......... .......... 69.2M 50550K .......... .......... .......... .......... .......... 92.5M 50600K .......... .......... .......... .......... .......... 15.4M 50650K .......... .......... .......... .......... .......... 9.17M 50700K .......... .......... .......... .......... .......... 8.45M 50750K .......... .......... .......... .......... .......... 2.31M 50800K .......... .......... .......... .......... .......... 1.23M 50850K .......... .......... .......... .......... .......... 2.75M 50900K .......... .......... .......... .......... .......... 96.5M 50950K .......... .......... .......... .......... .......... 21.5M 51000K .......... .......... .......... .......... .......... 39.9M 51050K .......... .......... .......... .......... .......... 7.85M 51100K .......... .......... .......... .......... .......... 7.27M 51150K .......... .......... .......... .......... .......... 2.31M 51200K .......... .......... .......... .......... ..........  928K 51250K .......... .......... .......... .......... .......... 76.2M 51300K .......... .......... .......... .......... ..........  152M 51350K .......... .......... .......... .......... .......... 16.9M 51400K .......... .......... .......... .......... .......... 8.93M 51450K .......... .......... .......... .......... .......... 9.53M 51500K .......... .......... .......... .......... .......... 2.27M 51550K .......... .......... .......... .......... .......... 2.83M 51600K .......... .......... .......... .......... .......... 1.22M 51650K .......... .......... .......... .......... .......... 38.1M 51700K .......... .......... .......... .......... .......... 23.1M 51750K .......... .......... .......... .......... .......... 40.6M 51800K .......... .......... .......... .......... .......... 8.84M 51850K .......... .......... .......... .......... .......... 5.45M 51900K .......... .......... .......... .......... .......... 1.83M 51950K .......... .......... .......... .......... .......... 1.62M 52000K .......... .......... .......... .......... .......... 2.72M 52050K .......... .......... .......... .......... .......... 93.7M 52100K .......... .......... .......... .......... .......... 51.4M 52150K .......... .......... .......... .......... .......... 8.91M 52200K .......... .......... .......... .......... .......... 8.18M 52250K .......... .......... .......... .......... .......... 2.30M 52300K .......... .......... .......... .......... .......... 2.72M 52350K .......... .......... .......... .......... .......... 1.25M 52400K .......... .......... .......... .......... .......... 30.2M 52450K .......... .......... .......... .......... .......... 80.9M 52500K .......... .......... .......... .......... .......... 13.6M 52550K .......... .......... .......... .......... .......... 9.83M 52600K .......... .......... .......... .......... .......... 4.91M 52650K .......... .......... .......... .......... .......... 1.96M 52700K .......... .......... .......... .......... .......... 1.60M 52750K .......... .......... .......... .......... .......... 2.79M 52800K .......... .......... .......... .......... .......... 73.0M 52850K .......... .......... .......... .......... ..........  159M 52900K .......... .......... .......... .......... .......... 8.77M 52950K .......... .......... .......... .......... .......... 6.89M 53000K .......... .......... .......... .......... .......... 2.26M 53050K .......... .......... .......... .......... .......... 2.72M 53100K .......... .......... .......... .......... .......... 1.29M 53150K .......... .......... .......... .......... .......... 27.1M 53200K .......... .......... .......... .......... .......... 94.6M 53250K .......... .......... .......... .......... .......... 9.94M 53300K .......... .......... .......... .......... .......... 13.2M 53350K .......... .......... .......... .......... .......... 4.24M 53400K .......... .......... .......... .......... .......... 2.17M 53450K .......... .......... .......... .......... .......... 1.56M 53500K .......... .......... .......... .......... .......... 2.99M 53550K .......... .......... .......... .......... .......... 19.6M 53600K .......... .......... .......... .......... .......... 10.2M 53650K .......... .......... .......... .......... ..........  110M 53700K .......... .......... .......... .......... .......... 7.22M 53750K .......... .......... .......... .......... .......... 2.25M 53800K .......... .......... .......... .......... .......... 2.75M 53850K .......... .......... .......... .......... .......... 1.28M 53900K .......... .......... .......... .......... .......... 22.2M 53950K .......... .......... .......... .......... ..........  539K 54000K .......... .......... .......... .......... ..........  144M 54050K .......... .......... .......... .......... ..........  177M 54100K .......... .......... .......... .......... ..........  136M 54150K .......... .......... .......... .......... ..........  164M 54200K .......... .......... .......... .......... ..........  155M 54250K .......... .......... .......... .......... ..........  154M 54300K .......... .......... .......... .......... .......... 11.5M 54350K .......... .......... .......... .......... .......... 3.25M 54400K .......... .......... .......... .......... .......... 1.66M 54450K .......... .......... .......... .......... .......... 1.21M 54500K .......... .......... .......... .......... .......... 33.8M 54550K .......... .......... .......... .......... .......... 6.36M 54600K .......... .......... .......... .......... .......... 3.48M 54650K .......... .......... .......... .......... ..........  940K 54700K .......... .......... .......... .......... .......... 3.08M 54750K .......... .......... .......... .......... .......... 6.52M 54800K .......... .......... .......... .......... .......... 6.58M 54850K .......... .......... .......... .......... .......... 2.22M 54900K .......... .......... .......... .......... ..........  907K 54950K .......... .......... .......... .......... .......... 40.3M 55000K .......... .......... .......... .......... .......... 6.77M 55050K .......... .......... .......... .......... .......... 6.26M 55100K .......... .......... .......... .......... .......... 2.27M 55150K .......... .......... .......... .......... ..........  914K 55200K .......... .......... .......... .......... .......... 59.1M 55250K .......... .......... .......... .......... .......... 5.78M 55300K .......... .......... .......... .......... .......... 4.01M 55350K .......... .......... .......... .......... .......... 1.68M 55400K .......... .......... .......... .......... .......... 1.16M 55450K .......... .......... .......... .......... ..........  100M 55500K .......... .......... .......... .......... .......... 5.60M 55550K .......... .......... .......... .......... .......... 1.72M 55600K .......... .......... .......... .......... .......... 1.26M 55650K .......... .......... .......... .......... .......... 3.08M 55700K .......... .......... .......... .......... .......... 6.05M 55750K .......... .......... .......... .......... .......... 7.32M 55800K .......... .......... .......... .......... .......... 6.93M 55850K .......... .......... .......... .......... .......... 1.54M 55900K .......... .......... .......... .......... .......... 1.24M 55950K .......... .......... .......... .......... .......... 6.80M 56000K .......... .......... .......... .......... .......... 6.55M 56050K .......... .......... .......... .......... .......... 2.20M 56100K .......... .......... .......... .......... .......... 1.26M 56150K .......... .......... .......... .......... .......... 2.98M 56200K .......... .......... .......... .......... .......... 6.47M 56250K .......... .......... .......... .......... .......... 7.17M 56300K .......... .......... .......... .......... .......... 6.25M 56350K .......... .......... .......... .......... ..........  925K 56400K .......... .......... .......... .......... .......... 2.97M 56450K .......... .......... .......... .......... .......... 6.67M 56500K .......... .......... .......... .......... .......... 6.49M 56550K .......... .......... .......... .......... .......... 7.29M 56600K .......... .......... .......... .......... .......... 1.56M 56650K .......... .......... .......... .......... .......... 1.25M 56700K .......... .......... .......... .......... .......... 79.6M 56750K .......... .......... .......... .......... .......... 3.23M 56800K .......... .......... .......... .......... .......... 7.23M 56850K .......... .......... .......... .......... .......... 1.58M 56900K .......... .......... .......... .......... .......... 1.27M 56950K .......... .......... .......... .......... ..........  114M 57000K .......... .......... .......... .......... .......... 5.42M 57050K .......... .......... .......... .......... .......... 5.73M 57100K .......... .......... .......... .......... .......... 1.90M 57150K .......... .......... .......... .......... .......... 1.00M 57200K .......... .......... .......... .......... .......... 79.2M 57250K .......... .......... .......... .......... .......... 5.65M 57300K .......... .......... .......... .......... .......... 5.60M 57350K .......... .......... .......... .......... .......... 1.92M 57400K .......... .......... .......... .......... .......... 1.03M 57450K .......... .......... .......... .......... .......... 20.6M 57500K .......... .......... .......... .......... .......... 5.76M 57550K .......... .......... .......... .......... .......... 5.61M 57600K .......... .......... .......... .......... .......... 2.34M 57650K .......... .......... .......... .......... ..........  959K 57700K .......... .......... .......... .......... .......... 23.6M 57750K .......... .......... .......... .......... .......... 5.00M 57800K .......... .......... .......... .......... .......... 6.95M 57850K .......... .......... .......... .......... .......... 2.45M 57900K .......... .......... .......... .......... .......... 3.08M 57950K .......... .......... .......... .......... .......... 1.24M 58000K .......... .......... .......... .......... .......... 5.15M 58050K .......... .......... .......... .......... .......... 7.53M 58100K .......... .......... .......... .......... .......... 5.89M 58150K .......... .......... .......... .......... .......... 1.72M 58200K .......... .......... .......... .......... .......... 1.26M 58250K .......... .......... .......... .......... .......... 26.9M 58300K .......... .......... .......... .......... .......... 5.37M 58350K .......... .......... .......... .......... .......... 3.56M 58400K .......... .......... .......... .......... .......... 2.40M 58450K .......... .......... .......... .......... .......... 1.04M 58500K .......... .......... .......... .......... .......... 42.0M 58550K .......... .......... .......... .......... .......... 4.89M 58600K .......... .......... .......... .......... .......... 6.18M 58650K .......... .......... .......... .......... .......... 2.52M 58700K .......... .......... .......... .......... .......... 1.23M 58750K .......... .......... .......... .......... .......... 3.26M 58800K .......... .......... .......... .......... .......... 4.17M 58850K .......... .......... .......... .......... .......... 7.09M 58900K .......... .......... .......... .......... .......... 6.69M 58950K .......... .......... .......... .......... .......... 1.83M 59000K .......... .......... .......... .......... .......... 1.24M 59050K .......... .......... .......... .......... .......... 53.6M 59100K .......... .......... .......... .......... .......... 3.28M 59150K .......... .......... .......... .......... .......... 5.21M 59200K .......... .......... .......... .......... .......... 2.83M 59250K .......... .......... .......... .......... .......... 1006K 59300K .......... .......... .......... .......... ..........  106M 59350K .......... .......... .......... .......... .......... 4.21M 59400K .......... .......... .......... .......... .......... 7.14M 59450K .......... .......... .......... .......... .......... 2.64M 59500K .......... .......... .......... .......... ..........  919K 59550K .......... .......... .......... .......... .......... 83.4M 59600K .......... .......... .......... .......... .......... 4.21M 59650K .......... .......... .......... .......... .......... 11.8M 59700K .......... .......... .......... .......... .......... 5.43M 59750K .......... .......... .......... .......... .......... 2.34M 59800K .......... .......... .......... .......... .......... 1.05M 59850K .......... .......... .......... .......... .......... 72.3M 59900K .......... .......... .......... .......... .......... 4.11M 59950K .......... .......... .......... .......... .......... 7.01M 60000K .......... .......... .......... .......... .......... 2.70M 60050K .......... .......... .......... .......... ..........  921K 60100K .......... .......... .......... .......... .......... 88.9M 60150K .......... .......... .......... .......... .......... 4.28M 60200K .......... .......... .......... .......... .......... 11.9M 60250K .......... .......... .......... .......... .......... 5.11M 60300K .......... .......... .......... .......... .......... 1.82M 60350K .......... .......... .......... .......... .......... 1.22M 60400K .......... .......... .......... .......... .......... 27.9M 60450K .......... .......... .......... .......... .......... 4.54M 60500K .......... .......... .......... .......... .......... 7.91M 60550K .......... .......... .......... .......... .......... 2.46M 60600K .......... .......... .......... .......... .......... 1.19M 60650K .......... .........                                   1.55M=19s2023-11-20 19:01:28 (3.16 MB/s) - 'exp_quant.zip' saved [62125370]--2023-11-20 19:01:32--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  265K 3s    50K .......... .......... .......... .......... .......... 12%  269K 3s   100K .......... .......... .......... .......... .......... 18%  532K 2s   150K .......... .......... .......... .......... .......... 24%  534K 2s   200K .......... .......... .......... .......... .......... 30%  534K 2s   250K .......... .......... .......... .......... .......... 36%  538K 1s   300K .......... .......... .......... .......... .......... 42%  537K 1s   350K .......... .......... .......... .......... .......... 48%  533K 1s   400K .......... .......... .......... .......... .......... 54%  535K 1s   450K .......... .......... .......... .......... .......... 60% 1.12M 1s   500K .......... .......... .......... .......... .......... 66%  997K 1s   550K .......... .......... .......... .......... .......... 72%  534K 0s   600K .......... .......... .......... .......... .......... 78%  127M 0s   650K .......... .......... .......... .......... .......... 84%  538K 0s   700K .......... .......... .......... .......... .......... 90%  536K 0s   750K .......... .......... .......... .......... .......... 96% 89.2M 0s   800K .......... .......... .......                         100%  646K=1.4s2023-11-20 19:01:34 (572 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="48.48494005203247">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-11-20 18:50:51.359] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-11-20 18:50:51.359] [jLog] [info] building indexout : ./index[2023-11-20 18:50:51.360] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-11-20 18:50:51.368] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-11-20 18:50:51.368] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-11-20 18:50:51.385] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-11-20 18:50:51.387] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-11-20 18:50:51.443] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-11-20 18:50:51.443] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 897.75 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 686.77 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-11-20 18:50:51.445] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-11-20 18:50:51.445] [puff::index::jointLog] [info] contig count for validation: 23[2023-11-20 18:50:51.445] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-11-20 18:50:51.446] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-11-20 18:50:51.446] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-11-20 18:50:51.446] [puff::index::jointLog] [info] bits per offset entry 6[2023-11-20 18:50:51.446] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-11-20 18:50:51.456] [puff::index::jointLog] [info] # segments = 23[2023-11-20 18:50:51.456] [puff::index::jointLog] [info] total length = 19592[2023-11-20 18:50:51.456] [puff::index::jointLog] [info] Reading the reference files ...[2023-11-20 18:50:51.464] [puff::index::jointLog] [info] positional integer width = 15[2023-11-20 18:50:51.464] [puff::index::jointLog] [info] seqSize = 19592[2023-11-20 18:50:51.464] [puff::index::jointLog] [info] rankSize = 19592[2023-11-20 18:50:51.464] [puff::index::jointLog] [info] edgeVecSize = 0[2023-11-20 18:50:51.464] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-11-20 18:50:51.539] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-11-20 18:50:51.539] [puff::index::jointLog] [info] chunk size = 9796[2023-11-20 18:50:51.539] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-11-20 18:50:51.539] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-11-20 18:50:51.541] [puff::index::jointLog] [info] finished populating pos vector[2023-11-20 18:50:51.541] [puff::index::jointLog] [info] writing index components[2023-11-20 18:50:51.553] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-11-20 18:50:51.558] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-11-20 18:50:52.207] [jointLog] [info] setting maxHashResizeThreads to 6[2023-11-20 18:50:52.207] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-11-20 18:50:52.207] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-11-20 18:50:52.207] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-11-20 18:50:52.207] [jointLog] [info] parsing read library format[2023-11-20 18:50:52.207] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 536.62 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0307 ms-----------------------------------------[2023-11-20 18:50:52.324] [jointLog] [info] Loading pufferfish index[2023-11-20 18:50:52.324] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading reference lengths | Time = 370.64 us----------------------------------------------------------------------------------| Loading mphf table | Time = 509.88 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 667.68 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 586.35 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 821.34 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 618.56 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 387.2 us-----------------------------------------[2023-11-20 18:50:52.332] [jointLog] [info] done[2023-11-20 18:50:52.332] [jointLog] [info] Index contained 15 targets[2023-11-20 18:50:52.332] [jointLog] [info] Number of decoys : 0[2023-11-20 18:50:52.406] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-11-20 18:50:52.406] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-11-20 18:50:52.409] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-11-20 18:50:52.409] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-11-20 18:50:52.409] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-11-20 18:50:52.409] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-11-20 18:50:52.409] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-11-20 18:50:52.409] [jointLog] [info] Mapping rate = 100%[2023-11-20 18:50:52.409] [jointLog] [info] finished quantifyLibrary()[2023-11-20 18:50:52.414] [jointLog] [info] Starting optimizer[2023-11-20 18:50:52.415] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-11-20 18:50:52.415] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-11-20 18:50:52.416] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-11-20 18:50:52.416] [jointLog] [info] Finished optimizer[2023-11-20 18:50:52.416] [jointLog] [info] writing output [2023-11-20 18:50:52.420] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="31.709986209869385">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100210True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-11-20 18:51:26.958] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-11-20 18:51:26.958] [jLog] [info] building indexout : ./index[2023-11-20 18:51:26.959] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-11-20 18:51:26.967] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-11-20 18:51:26.967] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-11-20 18:51:26.979] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-11-20 18:51:26.981] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-11-20 18:51:27.040] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-11-20 18:51:27.040] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 780.74 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 677.01 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-11-20 18:51:27.041] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-11-20 18:51:27.041] [puff::index::jointLog] [info] contig count for validation: 23[2023-11-20 18:51:27.042] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-11-20 18:51:27.042] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-11-20 18:51:27.042] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-11-20 18:51:27.042] [puff::index::jointLog] [info] bits per offset entry 6[2023-11-20 18:51:27.042] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-11-20 18:51:27.052] [puff::index::jointLog] [info] # segments = 23[2023-11-20 18:51:27.052] [puff::index::jointLog] [info] total length = 19592[2023-11-20 18:51:27.052] [puff::index::jointLog] [info] Reading the reference files ...[2023-11-20 18:51:27.063] [puff::index::jointLog] [info] positional integer width = 15[2023-11-20 18:51:27.063] [puff::index::jointLog] [info] seqSize = 19592[2023-11-20 18:51:27.063] [puff::index::jointLog] [info] rankSize = 19592[2023-11-20 18:51:27.063] [puff::index::jointLog] [info] edgeVecSize = 0[2023-11-20 18:51:27.063] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-11-20 18:51:27.133] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-11-20 18:51:27.134] [puff::index::jointLog] [info] chunk size = 9796[2023-11-20 18:51:27.134] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-11-20 18:51:27.134] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-11-20 18:51:27.135] [puff::index::jointLog] [info] finished populating pos vector[2023-11-20 18:51:27.135] [puff::index::jointLog] [info] writing index components[2023-11-20 18:51:27.148] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-11-20 18:51:27.153] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-11-20 18:51:27.250] [jointLog] [info] setting maxHashResizeThreads to 6[2023-11-20 18:51:27.250] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-11-20 18:51:27.250] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-11-20 18:51:27.250] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-11-20 18:51:27.250] [jointLog] [info] parsing read library format[2023-11-20 18:51:27.250] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 462.18 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0294 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 568.74 us----------------------------------------------------------------------------------| Loading mphf table | Time = 561.46 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 835.64 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 1.3644 ms-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.5459 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 769.1 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 386.58 us-----------------------------------------[2023-11-20 18:51:27.353] [jointLog] [info] Loading pufferfish index[2023-11-20 18:51:27.353] [jointLog] [info] Loading dense pufferfish index.[2023-11-20 18:51:27.363] [jointLog] [info] done[2023-11-20 18:51:27.363] [jointLog] [info] Index contained 15 targets[2023-11-20 18:51:27.363] [jointLog] [info] Number of decoys : 0[2023-11-20 18:51:27.432] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-11-20 18:51:27.432] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-11-20 18:51:27.434] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-11-20 18:51:27.434] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-11-20 18:51:27.434] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-11-20 18:51:27.434] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-11-20 18:51:27.434] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-11-20 18:51:27.434] [jointLog] [info] Mapping rate = 100%[2023-11-20 18:51:27.434] [jointLog] [info] finished quantifyLibrary()[2023-11-20 18:51:27.438] [jointLog] [info] Starting optimizer[2023-11-20 18:51:27.439] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-11-20 18:51:27.439] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-11-20 18:51:27.440] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-11-20 18:51:27.440] [jointLog] [info] Finished optimizer[2023-11-20 18:51:27.440] [jointLog] [info] writing output [2023-11-20 18:51:27.444] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="31.614516496658325">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-11-20 18:51:58.615] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-11-20 18:51:58.615] [jLog] [info] building indexout : ./index[2023-11-20 18:51:58.616] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-11-20 18:51:58.623] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-11-20 18:51:58.623] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-11-20 18:51:58.635] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-11-20 18:51:58.637] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-11-20 18:51:58.691] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-11-20 18:51:58.691] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 801.17 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 587.21 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-11-20 18:51:58.692] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-11-20 18:51:58.692] [puff::index::jointLog] [info] contig count for validation: 23[2023-11-20 18:51:58.693] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-11-20 18:51:58.693] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-11-20 18:51:58.693] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-11-20 18:51:58.693] [puff::index::jointLog] [info] bits per offset entry 6[2023-11-20 18:51:58.693] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-11-20 18:51:58.702] [puff::index::jointLog] [info] # segments = 23[2023-11-20 18:51:58.702] [puff::index::jointLog] [info] total length = 19592[2023-11-20 18:51:58.702] [puff::index::jointLog] [info] Reading the reference files ...[2023-11-20 18:51:58.711] [puff::index::jointLog] [info] positional integer width = 15[2023-11-20 18:51:58.712] [puff::index::jointLog] [info] seqSize = 19592[2023-11-20 18:51:58.712] [puff::index::jointLog] [info] rankSize = 19592[2023-11-20 18:51:58.712] [puff::index::jointLog] [info] edgeVecSize = 0[2023-11-20 18:51:58.712] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela..  elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-11-20 18:51:58.779] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-11-20 18:51:58.779] [puff::index::jointLog] [info] chunk size = 9796[2023-11-20 18:51:58.779] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-11-20 18:51:58.779] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-11-20 18:51:58.780] [puff::index::jointLog] [info] finished populating pos vector[2023-11-20 18:51:58.780] [puff::index::jointLog] [info] writing index components[2023-11-20 18:51:58.794] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-11-20 18:51:58.799] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-11-20 18:51:58.897] [jointLog] [info] setting maxHashResizeThreads to 6[2023-11-20 18:51:58.897] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-11-20 18:51:58.897] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-11-20 18:51:58.897] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-11-20 18:51:58.897] [jointLog] [info] parsing read library format[2023-11-20 18:51:58.897] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 581.25 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.2293 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 402.68 us----------------------------------------------------------------------------------| Loading mphf table | Time = 432.18 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 771.66 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 679.15 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 996.13 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 541.32 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 273.13 us-----------------------------------------[2023-11-20 18:51:59.005] [jointLog] [info] Loading pufferfish index[2023-11-20 18:51:59.006] [jointLog] [info] Loading dense pufferfish index.[2023-11-20 18:51:59.013] [jointLog] [info] done[2023-11-20 18:51:59.013] [jointLog] [info] Index contained 15 targets[2023-11-20 18:51:59.013] [jointLog] [info] Number of decoys : 0[2023-11-20 18:51:59.082] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-11-20 18:51:59.082] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-11-20 18:51:59.083] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-11-20 18:51:59.083] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-11-20 18:51:59.083] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-11-20 18:51:59.083] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-11-20 18:51:59.084] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-11-20 18:51:59.084] [jointLog] [info] Mapping rate = 100%[2023-11-20 18:51:59.084] [jointLog] [info] finished quantifyLibrary()[2023-11-20 18:51:59.088] [jointLog] [info] Starting optimizer[2023-11-20 18:51:59.089] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-11-20 18:51:59.089] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-11-20 18:51:59.090] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-11-20 18:51:59.090] [jointLog] [info] Finished optimizer[2023-11-20 18:51:59.090] [jointLog] [info] writing output [2023-11-20 18:51:59.095] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="35.66532325744629">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "4bd5b692a417406e",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "f88e09c83789271a",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/d/6/c/dataset_d6cbbc27-e070-4e6d-963b-c47e692dd788.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2023-11-20T18:52:31.658534",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-r795k",  "galaxy_version": "23.1",  "history_id": "e1a893b67da1749f",  "id": "81e9bfc13c95e64d",  "inputs": {   "quant_type|afile": {    "id": "4bd5b692a417406e",    "src": "hda",    "uuid": "fab9747f-a40e-4094-82fb-92e57d35f0be"   },   "quant_type|transcript": {    "id": "f88e09c83789271a",    "src": "hda",    "uuid": "d6cbbc27-e070-4e6d-963b-c47e692dd788"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1700506356.0000000",    "title": "Job End Time",    "value": "2023-11-20 18:52:36"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1700506354.0000000",    "title": "Job Start Time",    "value": "2023-11-20 18:52:34"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "05af4ca7cbbf7afe",    "src": "hda",    "uuid": "fe784f79-198c-4cb3-9826-166a5ba6b885"   },   "postSample": {    "id": "72f09ce9c5dd1279",    "src": "hda",    "uuid": "3615fa38-0b85-4315-b68c-b76b9e8f7c33"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 155, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/d/6/c/dataset_d6cbbc27-e070-4e6d-963b-c47e692dd788.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-11-20 18:52:34.184] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-11-20 18:52:34.184] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-11-20 18:52:34.185] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat\", fasta = \"/galaxy/server/database/objects/d/6/c/dataset_d6cbbc27-e070-4e6d-963b-c47e692dd788.dat\" . . .done\n[2023-11-20 18:52:34.719] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2023-11-20 18:52:34.954] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-11-20 18:52:34.963] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-11-20 18:52:34.963] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-11-20 18:52:34.964] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-11-20 18:52:34.965] [jointLog] [info] starting optimizer\n[2023-11-20 18:52:34.965] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-11-20 18:52:34.965] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-11-20 18:52:34.966] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-11-20 18:52:34.966] [jointLog] [info] finished optimizer\n[2023-11-20 18:52:34.966] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2023-11-20 18:52:34.972] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/d/6/c/dataset_d6cbbc27-e070-4e6d-963b-c47e692dd788.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2023-11-20 18:52:34.184] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-11-20 18:52:34.184] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-11-20 18:52:34.185] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat\", fasta = \"/galaxy/server/database/objects/d/6/c/dataset_d6cbbc27-e070-4e6d-963b-c47e692dd788.dat\" . . .done\n[2023-11-20 18:52:34.719] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2023-11-20 18:52:34.954] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-11-20 18:52:34.963] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-11-20 18:52:34.963] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-11-20 18:52:34.964] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-11-20 18:52:34.965] [jointLog] [info] starting optimizer\n[2023-11-20 18:52:34.965] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-11-20 18:52:34.965] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-11-20 18:52:34.966] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-11-20 18:52:34.966] [jointLog] [info] finished optimizer\n[2023-11-20 18:52:34.966] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2023-11-20 18:52:34.972] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-11-20T18:52:45.953417",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_xgx4a1yy.sam v. /tmp/history_bam_converted_to_sam_z8z48vzq.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -15011,11 +15012,11 @@\n 1710:NM_022658:195:168\t83\tNM_022658\t314\t1\t50M\t=\t196\t-168\tGGCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6524:NM_022658:179:184\t83\tNM_022658\t314\t1\t50M\t=\t180\t-184\tGGCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7202:NM_022658:176:187\t83\tNM_022658\t314\t1\t50M\t=\t177\t-187\tGGCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+3865:NM_022658:315:183\t99\tNM_022658\t316\t1\t50M\t=\t449\t183\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 263:NM_022658:315:176\t163\tNM_022658\t316\t1\t50M\t=\t442\t176\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 794:NM_022658:315:158\t163\tNM_022658\t316\t1\t50M\t=\t424\t158\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3036:NM_022658:315:197\t163\tNM_022658\t316\t1\t50M\t=\t463\t197\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3258:NM_022658:315:184\t163\tNM_022658\t316\t1\t50M\t=\t450\t184\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-3865:NM_022658:315:183\t99\tNM_022658\t316\t1\t50M\t=\t449\t183\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1707:NM_022658:181:184\t83\tNM_022658\t316\t1\t50M\t=\t182\t-184\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4621:NM_022658:167:198\t147\tNM_022658\t316\t1\t50M\t=\t168\t-198\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5235:NM_022658:202:163\t147\tNM_022658\t316\t1\t50M\t=\t203\t-163\tCGCCCGGCTTCCAGCACGCTTCGCACCACGTTCAAGACTTCTTCCACCAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -18013,9 +18014,9 @@\n 2071:NM_022658:827:189\t83\tNM_022658\t967\t1\t50M\t=\t828\t-189\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2980:NM_022658:826:190\t83\tNM_022658\t967\t1\t50M\t=\t827\t-190\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9883:NM_022658:822:194\t147\tNM_022658\t967\t1\t50M\t=\t823\t-194\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1395:NM_022658:967:112\t99\tNM_022658\t968\t1\t50M\t=\t1030\t112\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5474:NM_022658:967:171\t99\tNM_022658\t968\t1\t50M\t=\t1089\t171\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1989:NM_022658:833:184\t147\tNM_022658\t968\t1\t50M\t=\t834\t-184\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7622:NM_022658:968:140\t99\tNM_022658\t969\t1\t50M\t=\t1059\t140\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1913:NM_022658:831:187\t83\tNM_022658\t969\t1\t50M\t=\t832\t-187\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -27014,8 +27015,8 @@\n 3076:NM_173860:414:198\t99\tNM_173860\t415\t1\t50M\t=\t563\t198\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3326:NM_173860:414:135\t163\tNM_173860\t415\t1\t50M\t=\t500\t135\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8790:NM_173860:286:178\t147\tNM_173860\t415\t1\t50M\t=\t287\t-178\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7340:NM_173860:415:212\t99\tNM_173860\t416\t1\t50M\t=\t578\t212\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 35.66532325744629, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/d/6/c/dataset_d6cbbc27-e070-4e6d-963b-c47e692dd788.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2023-11-20 18:52:34.184] [jointLog] [info] setting maxHashResizeThreads to 6[2023-11-20 18:52:34.184] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2023-11-20 18:52:34.185] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat", fasta = "/galaxy/server/database/objects/d/6/c/dataset_d6cbbc27-e070-4e6d-963b-c47e692dd788.dat" . . .done[2023-11-20 18:52:34.719] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2023-11-20 18:52:34.954] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2023-11-20 18:52:34.963] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2023-11-20 18:52:34.963] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2023-11-20 18:52:34.964] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-11-20 18:52:34.965] [jointLog] [info] starting optimizer[2023-11-20 18:52:34.965] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-11-20 18:52:34.965] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2023-11-20 18:52:34.966] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-11-20 18:52:34.966] [jointLog] [info] finished optimizer[2023-11-20 18:52:34.966] [jointLog] [info] writing outputResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2023-11-20 18:52:34.972] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/f/a/b/dataset_fab9747f-a40e-4094-82fb-92e57d35f0be.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="31.052119731903076">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-11-20 18:53:06.115] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-11-20 18:53:06.115] [jLog] [info] building indexout : ./index[2023-11-20 18:53:06.115] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-11-20 18:53:06.122] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-11-20 18:53:06.122] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-11-20 18:53:06.134] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-11-20 18:53:06.136] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-11-20 18:53:06.193] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-11-20 18:53:06.193] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 782.6 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 781.37 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-11-20 18:53:06.195] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-11-20 18:53:06.195] [puff::index::jointLog] [info] contig count for validation: 23[2023-11-20 18:53:06.195] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-11-20 18:53:06.195] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-11-20 18:53:06.195] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-11-20 18:53:06.195] [puff::index::jointLog] [info] bits per offset entry 6[2023-11-20 18:53:06.195] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-11-20 18:53:06.205] [puff::index::jointLog] [info] # segments = 23[2023-11-20 18:53:06.205] [puff::index::jointLog] [info] total length = 19592[2023-11-20 18:53:06.205] [puff::index::jointLog] [info] Reading the reference files ...[2023-11-20 18:53:06.214] [puff::index::jointLog] [info] positional integer width = 15[2023-11-20 18:53:06.214] [puff::index::jointLog] [info] seqSize = 19592[2023-11-20 18:53:06.214] [puff::index::jointLog] [info] rankSize = 19592[2023-11-20 18:53:06.214] [puff::index::jointLog] [info] edgeVecSize = 0[2023-11-20 18:53:06.214] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elap..sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-11-20 18:53:06.276] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-11-20 18:53:06.276] [puff::index::jointLog] [info] chunk size = 9796[2023-11-20 18:53:06.276] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-11-20 18:53:06.276] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-11-20 18:53:06.278] [puff::index::jointLog] [info] finished populating pos vector[2023-11-20 18:53:06.278] [puff::index::jointLog] [info] writing index components[2023-11-20 18:53:06.290] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-11-20 18:53:06.294] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-11-20 18:53:06.389] [jointLog] [info] setting maxHashResizeThreads to 6[2023-11-20 18:53:06.389] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-11-20 18:53:06.389] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2023-11-20 18:53:06.389] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-11-20 18:53:06.389] [jointLog] [info] parsing read library format[2023-11-20 18:53:06.389] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 498.17 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0539 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 364.98 us----------------------------------------------------------------------------------| Loading mphf table | Time = 506.89 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 839.8 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 886.39 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 941.41 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 726.75 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 326.29 us-----------------------------------------[2023-11-20 18:53:06.495] [jointLog] [info] Loading pufferfish index[2023-11-20 18:53:06.496] [jointLog] [info] Loading dense pufferfish index.[2023-11-20 18:53:06.504] [jointLog] [info] done[2023-11-20 18:53:06.504] [jointLog] [info] Index contained 15 targets[2023-11-20 18:53:06.504] [jointLog] [info] Number of decoys : 0[2023-11-20 18:53:06.574] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-11-20 18:53:06.574] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-11-20 18:53:06.576] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2023-11-20 18:53:06.576] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2023-11-20 18:53:06.576] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-11-20 18:53:06.576] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-11-20 18:53:06.576] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-11-20 18:53:06.576] [jointLog] [info] Mapping rate = 100%[2023-11-20 18:53:06.576] [jointLog] [info] finished quantifyLibrary()[2023-11-20 18:53:06.582] [jointLog] [info] Starting optimizer[2023-11-20 18:53:06.582] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-11-20 18:53:06.582] [jointLog] [info] iteration = 0 | max rel diff. = 0[2023-11-20 18:53:06.583] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-11-20 18:53:06.583] [jointLog] [info] Finished optimizer[2023-11-20 18:53:06.583] [jointLog] [info] writing output [2023-11-20 18:53:06.588] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="32.63769030570984">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2023-11-20 18:53:37.785] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2023-11-20 18:53:37.785] [jLog] [info] building indexout : ./index[2023-11-20 18:53:37.786] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2023-11-20 18:53:37.793] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2023-11-20 18:53:37.793] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2023-11-20 18:53:37.806] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2023-11-20 18:53:37.807] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2023-11-20 18:53:37.872] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2023-11-20 18:53:37.872] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 846.08 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 596.8 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2023-11-20 18:53:37.874] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2023-11-20 18:53:37.874] [puff::index::jointLog] [info] contig count for validation: 23[2023-11-20 18:53:37.874] [puff::index::jointLog] [info] Total # of Contigs : 23[2023-11-20 18:53:37.874] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2023-11-20 18:53:37.875] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2023-11-20 18:53:37.875] [puff::index::jointLog] [info] bits per offset entry 6[2023-11-20 18:53:37.875] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2023-11-20 18:53:37.885] [puff::index::jointLog] [info] # segments = 23[2023-11-20 18:53:37.885] [puff::index::jointLog] [info] total length = 19592[2023-11-20 18:53:37.885] [puff::index::jointLog] [info] Reading the reference files ...[2023-11-20 18:53:37.894] [puff::index::jointLog] [info] positional integer width = 15[2023-11-20 18:53:37.894] [puff::index::jointLog] [info] seqSize = 19592[2023-11-20 18:53:37.894] [puff::index::jointLog] [info] rankSize = 19592[2023-11-20 18:53:37.894] [puff::index::jointLog] [info] edgeVecSize = 0[2023-11-20 18:53:37.894] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elap.. BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2023-11-20 18:53:37.970] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2023-11-20 18:53:37.970] [puff::index::jointLog] [info] chunk size = 9796[2023-11-20 18:53:37.970] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2023-11-20 18:53:37.970] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2023-11-20 18:53:37.971] [puff::index::jointLog] [info] finished populating pos vector[2023-11-20 18:53:37.971] [puff::index::jointLog] [info] writing index components[2023-11-20 18:53:37.983] [puff::index::jointLog] [info] finished writing dense pufferfish index[2023-11-20 18:53:37.988] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2023-11-20 18:53:38.093] [jointLog] [info] setting maxHashResizeThreads to 6[2023-11-20 18:53:38.093] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2023-11-20 18:53:38.093] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2023-11-20 18:53:38.093] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2023-11-20 18:53:38.093] [jointLog] [info] parsing read library format[2023-11-20 18:53:38.093] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 740.01 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.304 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 316.46 us----------------------------------------------------------------------------------| Loading mphf table | Time = 482.24 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 792.26 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 646.56 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.1902 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 730.88 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 381.81 us-----------------------------------------[2023-11-20 18:53:38.197] [jointLog] [info] Loading pufferfish index[2023-11-20 18:53:38.198] [jointLog] [info] Loading dense pufferfish index.[2023-11-20 18:53:38.206] [jointLog] [info] done[2023-11-20 18:53:38.206] [jointLog] [info] Index contained 15 targets[2023-11-20 18:53:38.206] [jointLog] [info] Number of decoys : 0[2023-11-20 18:53:38.206] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2023-11-20 18:53:38.276] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2023-11-20 18:53:38.276] [jointLog] [info] Counted 15 total reads in the equivalence classes [2023-11-20 18:53:38.278] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2023-11-20 18:53:38.278] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2023-11-20 18:53:38.278] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2023-11-20 18:53:38.278] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2023-11-20 18:53:38.278] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2023-11-20 18:53:38.278] [jointLog] [info] Mapping rate = 100%[2023-11-20 18:53:38.278] [jointLog] [info] finished quantifyLibrary()[2023-11-20 18:53:38.282] [jointLog] [info] Starting optimizer[2023-11-20 18:53:38.283] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2023-11-20 18:53:38.283] [jointLog] [info] iteration = 0 | max rel diff. = 49[2023-11-20 18:53:38.283] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2023-11-20 18:53:38.287] [jointLog] [info] Computed expected counts (for bias correction)[2023-11-20 18:53:38.289] [jointLog] [info] processed bias for 26.7% of the transcripts[2023-11-20 18:53:38.289] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-11-20 18:53:38.289] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-11-20 18:53:38.290] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-11-20 18:53:38.290] [jointLog] [info] processed bias for 40.0% of the transcripts[2023-11-20 18:53:38.290] [jointLog] [info] processed bias for 53.3% of the transcripts[2023-11-20 18:53:38.290] [jointLog] [info] processed bias for 53.3% of the transcripts[2023-11-20 18:53:38.291] [jointLog] [info] processed bias for 93.3% of the transcripts[2023-11-20 18:53:38.293] [jointLog] [info] processed bias for 100.0% of the transcripts[2023-11-20 18:53:38.294] [jointLog] [info] iteration = 100 | max rel diff. = 0[2023-11-20 18:53:38.294] [jointLog] [info] Finished optimizer[2023-11-20 18:53:38.294] [jointLog] [info] writing output [2023-11-20 18:53:38.299] [jointLog] [info] writing equivalence class counts.[2023-11-20 18:53:38.300] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2023-11-20 18:53:38.300] [jointLog] [info] done.[2023-11-20 18:53:38.303] [jointLog] [info] done writing equivalence class counts.[2023-11-20 18:53:38.304] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="33.735209941864014">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="36.79668402671814">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="33.64756464958191">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="36.656710386276245">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="34.85974192619324">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="34.40392255783081">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="81.52588415145874">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="44.82891535758972">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="45.56749391555786">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="45.24663829803467">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="104.57115292549133">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/9/b/0/dataset_9b04d847-1a13-46af-aaff-8b5379aeaffd.dat--pe1-2fastq:/galaxy/server/database/objects/6/6/2/dataset_6629d819-a54c-440f-be8e-dc6d2b8cb4bb.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/9/b/0/dataset_9b04d847-1a13-46af-aaff-8b5379aeaffd.dat']      right reads: ['/galaxy/server/database/objects/6/6/2/dataset_6629d819-a54c-440f-be8e-dc6d2b8cb4bb.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/9/b/0/dataset_9b04d847-1a13-46af-aaff-8b5379aeaffd.dat  0:00:00.930     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/6/2/dataset_6629d819-a54c-440f-be8e-dc6d2b8cb4bb.dat  0:00:01.764     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.774    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.046    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.046    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.212    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.231    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.253    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.255    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.258    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.259    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.268    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.268    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.268    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/9/b/0/dataset_9b04d847-1a13-46af-aaff-8b5379aeaffd.dat  0:00:02.287    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/6/2/dataset_6629d819-a54c-440f-be8e-dc6d2b8cb4bb.dat  0:00:02.306    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.306    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.306    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.316    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.317    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.318    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.326    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.326    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.326    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.326    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/9/b/0/dataset_9b04d847-1a13-46af-aaff-8b5379aeaffd.dat and /galaxy/server/database/objects/6/6/2/dataset_6629d819-a54c-440f-be8e-dc6d2b8cb4bb.dat  0:00:02.387    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.395    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.399    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.436    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.436    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.436    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:02.440    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.108    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.113     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.282   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.289     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.449   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.531     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.531     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.531     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.532     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.533     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.533     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.533     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.006     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.014    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.015    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.178    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.178    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.267    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.268    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.268    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.269    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.269    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.269    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.147     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.160    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.496    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.496    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.667    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.689    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.707    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.707    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.710    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.711    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensi..      : 346)   Closing short gaps  0:00:08.655    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.657    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.657    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.657    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.657    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.657    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.657    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.657    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.657    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.657    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.657    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.657    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.657    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.667    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.668    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.668    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.671    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.671    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.671    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:08.675    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:08.680    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:08.683    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:08.690    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.690    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.690    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.817   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.035   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.805   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.806   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.815    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.958   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.962   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.966   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.969   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.969   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.969   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.983   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.989   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.008    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.008    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.008    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.008    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.009    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.009    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.009    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.009    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.009    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.009    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.009    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.009    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.009    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.009    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.009    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.009    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.009    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.009    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.009    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.010    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.010    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.011    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.011    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.011    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.011    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.011    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.011    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.011    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.011    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.011    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.011    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.011    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.011    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.011    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.011    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.012    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.012    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.012    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.012    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.012    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.012    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.012    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.012    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.012    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.012    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.012    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.012    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.012    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.012    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.012    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.012    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.013    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:11.017    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:11.020    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:11.027    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:11.040    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.042    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="47.58089900016785">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/4/d/5/dataset_4d508897-ee62-444b-b18a-13d3cd200b52.dat--pe1-2fasta:/galaxy/server/database/objects/1/8/9/dataset_18979fb7-02e0-492b-a60e-aa03a258ae19.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/4/d/5/dataset_4d508897-ee62-444b-b18a-13d3cd200b52.dat']      right reads: ['/galaxy/server/database/objects/1/8/9/dataset_18979fb7-02e0-492b-a60e-aa03a258ae19.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.283     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.442   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.538     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.538     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.538     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.539     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.540     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.540     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.540     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.034     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.040    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.040    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.210    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.210    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.293    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.294    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.294    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.295    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.295    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.295    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.156     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.169    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.494    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.494    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.666    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.686    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.706    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:02.706    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.708    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.708    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:02.709    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:02.710    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:02.710    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:02.710    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:02.710    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:02.710    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:02.711    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.729    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:02.729    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:02.736    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:02.744    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:02.744    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:02.744    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:02.744    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:02.744    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:02.786    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.889    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.257    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:03.880    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:05.009    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.857    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:06.858    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:06.858    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:06.858    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:06.858    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:06.858    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:06.858    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:06.858    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:06.858    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:06.858    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:06.860    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:06.860    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:06.861    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:06.861    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:06.861    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:07.752     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:07.761    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:08.104    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:08.104    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:08.287    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:08.308    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:08.331    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:08.331    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:08.332    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:08.334    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:08.334    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:08.336    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:08.336    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:08.336    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:08.336    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.337    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:08.337    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:08.337    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:08.338    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:08.338    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:08.338    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.338 ..indices  0:00:09.815    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.815    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.816    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.816    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.816    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.816    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.816    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.816    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.816    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.816    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.816    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:09.816    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.816    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.816    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.827    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.827    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.827    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.830    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.830    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.830    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:09.835    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:09.839    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:09.842    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:09.848    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.848    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.848    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.848    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.848    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.848    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.970   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.188   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.958   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.959   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:11.970    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:12.105   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:12.108   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.111   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.117   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:12.117   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:12.117   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:12.132   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.140   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.159    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:12.159    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:12.159    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:12.159    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:12.161    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.161    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.161    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.161    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:12.161    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:12.161    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:12.164    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.164    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.164    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:12.164    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:12.164    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.164    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.165    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.165    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:12.165    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:12.165    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:12.165    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:12.166    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:12.166    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:12.166    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:12.166    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:12.166    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.166    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.166    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.166    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.166    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.166    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.166    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:12.166    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.166    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.168    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:12.173    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:12.178    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:12.185    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:12.201    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:12.204    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="47.20496726036072">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/9/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/e/f/b/dataset_efb54a40-d6db-4da7-960e-d2248427fc22.dat--pe1-2fastq.gz:/galaxy/server/database/objects/8/d/a/dataset_8da25597-9526-4937-973e-aab63cf51351.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/9/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/e/f/b/dataset_efb54a40-d6db-4da7-960e-d2248427fc22.dat']      right reads: ['/galaxy/server/database/objects/8/d/a/dataset_8da25597-9526-4937-973e-aab63cf51351.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/f/b/dataset_efb54a40-d6db-4da7-960e-d2248427fc22.dat  0:00:00.996     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/d/a/dataset_8da25597-9526-4937-973e-aab63cf51351.dat  0:00:01.913     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.924    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.212    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.213    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.387    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.409    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.427    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.429    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.432    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.433    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.443    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.443    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.444    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/f/b/dataset_efb54a40-d6db-4da7-960e-d2248427fc22.dat  0:00:02.463    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/d/a/dataset_8da25597-9526-4937-973e-aab63cf51351.dat  0:00:02.482    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.482    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.482    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.498    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.498    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.498    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.499    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.499    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.499    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.499    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.499    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.499    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.499    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.499    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.514    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.515    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.515    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.515    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/e/f/b/dataset_efb54a40-d6db-4da7-960e-d2248427fc22.dat and /galaxy/server/database/objects/8/d/a/dataset_8da25597-9526-4937-973e-aab63cf51351.dat  0:00:02.576    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.581    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.584    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.643    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.643    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.643    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml  0:00:02.647    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.273   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.281     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.442   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.534     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.534     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.534     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.535     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.535     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.535     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.535     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.023     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.031    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.031    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.203    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.203    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.287    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.288    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.288    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.289    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.289    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.289    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.243     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.256    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.594    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.595    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.781    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.804    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.821    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.821    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.826    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.828    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Co..      : 346)   Closing short gaps  0:00:08.768    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.771    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.771    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.771    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.771    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.771    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.771    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.771    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.771    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.771    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.771    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.771    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.771    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.785    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.785    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.785    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.789    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.789    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.789    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:08.794    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:08.798    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta  0:00:08.801    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta  0:00:08.808    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.808    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.808    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.808    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.808    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.808    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.931   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.155   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.921   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.922   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.933    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.068   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.072   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.075   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.077   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.077   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.077   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.092   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.097   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.116    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.116    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.116    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.116    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.117    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.118    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.118    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.118    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.118    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.118    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.118    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.119    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.120    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.120    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.120    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.120    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.120    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.120    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.121    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.121    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.121    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.121    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.121    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.121    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.121    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.121    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.121    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.121    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.121    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.121    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.121    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.123    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:11.127    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:11.131    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths  0:00:11.138    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths  0:00:11.153    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.156    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="12.414218425750732">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 12.414218425750732, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="49.72736883163452">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/14/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/d/d/3/dataset_dd32f79d-ccd2-4d31-acc3-a0e92c13aa27.dat--pe1-2fastq:/galaxy/server/database/objects/e/1/2/dataset_e125f9a6-5389-4cc9-812f-7e539f622674.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/14/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/d/d/3/dataset_dd32f79d-ccd2-4d31-acc3-a0e92c13aa27.dat']      right reads: ['/galaxy/server/database/objects/e/1/2/dataset_e125f9a6-5389-4cc9-812f-7e539f622674.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/14/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/d/3/dataset_dd32f79d-ccd2-4d31-acc3-a0e92c13aa27.dat  0:00:00.898     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/1/2/dataset_e125f9a6-5389-4cc9-812f-7e539f622674.dat  0:00:01.682     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.692    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.982    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.982    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.147    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.165    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.182    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.185    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.187    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.189    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.197    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.198    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.198    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/d/3/dataset_dd32f79d-ccd2-4d31-acc3-a0e92c13aa27.dat  0:00:02.216    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/1/2/dataset_e125f9a6-5389-4cc9-812f-7e539f622674.dat  0:00:02.235    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.236    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.236    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:07.732    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:07.732    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:07.733    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:07.733    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:07.733    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:07.733    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:07.733    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:07.733    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:07.733    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:07.734    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:07.734    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:07.746    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:07.746    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:07.746    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:07.746    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/d/3/dataset_dd32f79d-ccd2-4d31-acc3-a0e92c13aa27.dat and /galaxy/server/database/objects/e/1/2/dataset_e125f9a6-5389-4cc9-812f-7e539f622674.dat  0:00:07.802    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:07.808    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:07.812    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:07.872    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:07.872    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:07.873    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml  0:00:07.877    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/14/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/14/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.111     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.280   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.288     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.451   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.546     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.546     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.546     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.547     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.548     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.548     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.548     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:01.051     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.057    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.057    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.225    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.225    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.309    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.309    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.309    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.310    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.310    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.310    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:02.248     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:02.261    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.574    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:02.575    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.744    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.767    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.784    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:02.784    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.786    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.792    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..osing short gaps  0:00:06.148    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:06.149    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:06.149    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:06.149    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:06.149    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:06.149    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:06.149    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.149    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.149    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.150    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.150    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.150    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.150    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.150    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.150    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:06.150    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:06.150    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:06.150    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:06.150    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:06.150    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:06.150    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.150    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.160    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:06.160    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:06.160    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:06.166    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:06.166    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:06.166    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:06.170    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:06.174    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/simplified_contigs.fasta  0:00:06.177    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/intermediate_contigs.fasta  0:00:06.184    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:06.184    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.184    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.184    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:06.184    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:06.184    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:06.309   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:06.526   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.291   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:08.291   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:08.301    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:08.439   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:08.442   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.447   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:08.464   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.468   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.487    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:08.488    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:08.488    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:08.488    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:08.488    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.489    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.489    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.489    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:08.489    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:08.489    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:08.489    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.492    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.492    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:08.492    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:08.492    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.492    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.492    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.492    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:08.492    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:08.492    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:08.492    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:08.493    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:08.493    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:08.493    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:08.493    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:08.493    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:08.493    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:08.493    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.494    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.494    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.494    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.494    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.494    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.494    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:08.494    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.494    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:08.495    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:08.499    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:08.503    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/final_contigs.paths  0:00:08.511    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/scaffolds.paths  0:00:08.524    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:08.527    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/14/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="50.40235137939453">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/17/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/5/2/a/dataset_52aba888-359e-4bab-a5ec-40a4e5c074f0.dat--pe1-2fastq:/galaxy/server/database/objects/d/0/7/dataset_d0783fcc-c920-4bfe-8b1f-ffbf8953c4d5.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/17/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/5/2/a/dataset_52aba888-359e-4bab-a5ec-40a4e5c074f0.dat']      right reads: ['/galaxy/server/database/objects/d/0/7/dataset_d0783fcc-c920-4bfe-8b1f-ffbf8953c4d5.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/2/a/dataset_52aba888-359e-4bab-a5ec-40a4e5c074f0.dat  0:00:00.905     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/0/7/dataset_d0783fcc-c920-4bfe-8b1f-ffbf8953c4d5.dat  0:00:01.706     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.717    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.996    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.996    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.158    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.180    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.198    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.200    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.204    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.206    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.214    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.215    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.215    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/2/a/dataset_52aba888-359e-4bab-a5ec-40a4e5c074f0.dat  0:00:02.233    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/0/7/dataset_d0783fcc-c920-4bfe-8b1f-ffbf8953c4d5.dat  0:00:02.252    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.253    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.253    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.270    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.271    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.271    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.280    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.281    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.281    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.281    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/5/2/a/dataset_52aba888-359e-4bab-a5ec-40a4e5c074f0.dat and /galaxy/server/database/objects/d/0/7/dataset_d0783fcc-c920-4bfe-8b1f-ffbf8953c4d5.dat  0:00:02.337    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.344    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.347    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.385    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.385    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.385    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml  0:00:02.389    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.113     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.275   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.284     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.447   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.536     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.537     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.537     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.537     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.992     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.001    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.001    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.158    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.158    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.237    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.238    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.238    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.238    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.238    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.238    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.110     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.122    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.473    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.473    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.638    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.662    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.680    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.680    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.683    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.683    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:08.593    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.594    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.594    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.594    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.594    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.594    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.594    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.594    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.594    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.595    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.595    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.595    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.595    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.595    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.595    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.595    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.595    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.595    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.595    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.595    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.595    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.595    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.604    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.605    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.605    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.609    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.609    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.610    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:08.614    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:08.619    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta  0:00:08.623    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta  0:00:08.630    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.630    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.630    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.630    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.630    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.630    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.753   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.969   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.729   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.729   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.740    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.874   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.877   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.881   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.883   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.883   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.883   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.897   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.902   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.921    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.922    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.922    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.922    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.926    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.926    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.926    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.926    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.926    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.926    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.928    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.929    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.929    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.929    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.929    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.929    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.929    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.929    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.929    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.929    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.929    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.931    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.931    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.932    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.932    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.932    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.932    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.932    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.932    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.932    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.932    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.932    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.932    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.932    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.932    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.933    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:10.938    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:10.942    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths  0:00:10.948    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths  0:00:10.962    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.965    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/17/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="47.716665506362915">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/20/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/b/0/c/dataset_b0c72a1c-e4d5-43fa-88e3-b5adf5604840.dat--pe1-2fastq:/galaxy/server/database/objects/0/5/8/dataset_0589c062-2d1d-4e66-b4d4-9ddc0b50c27f.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/20/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/b/0/c/dataset_b0c72a1c-e4d5-43fa-88e3-b5adf5604840.dat']      right reads: ['/galaxy/server/database/objects/0/5/8/dataset_0589c062-2d1d-4e66-b4d4-9ddc0b50c27f.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/0/c/dataset_b0c72a1c-e4d5-43fa-88e3-b5adf5604840.dat  0:00:00.977     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/0/5/8/dataset_0589c062-2d1d-4e66-b4d4-9ddc0b50c27f.dat  0:00:01.796     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.807    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.084    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.084    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.239    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.261    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.275    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.279    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.281    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.289    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.289    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.289    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/0/c/dataset_b0c72a1c-e4d5-43fa-88e3-b5adf5604840.dat  0:00:02.306    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/0/5/8/dataset_0589c062-2d1d-4e66-b4d4-9ddc0b50c27f.dat  0:00:02.321    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.321    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.321    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.336    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.337    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.337    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.337    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.349    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.349    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.349    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.349    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/0/c/dataset_b0c72a1c-e4d5-43fa-88e3-b5adf5604840.dat and /galaxy/server/database/objects/0/5/8/dataset_0589c062-2d1d-4e66-b4d4-9ddc0b50c27f.dat  0:00:02.404    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.410    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.414    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.461    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.461    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.461    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml  0:00:02.465    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.105    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.275   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.283     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.445   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.532     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.532     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.532     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.533     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.534     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.534     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.980     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.986    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.986    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.153    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.153    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.238    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.239    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.239    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.240    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.240    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.240    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.105     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.116    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.460    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.460    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.612    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.632    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.649    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.649    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.653    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.654    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =..sing short gaps  0:00:08.534    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.536    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.536    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.536    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.536    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.536    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.536    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.536    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.536    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.536    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.536    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.536    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.536    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.546    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.546    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.546    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.549    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.549    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.550    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:08.553    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:08.557    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta  0:00:08.561    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta  0:00:08.567    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.567    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.567    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.567    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.567    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.567    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.694   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.910   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.678   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.678   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.689    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.829   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.832   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.834   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.837   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.837   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.837   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.852   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.857   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.878    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.878    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.879    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.879    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.880    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.880    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.880    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.880    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.880    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.880    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.880    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.884    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.884    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.884    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.884    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.884    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.884    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.884    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.884    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.884    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.884    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.885    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.885    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.885    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.885    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.885    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.885    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.885    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.885    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.885    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.886    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.886    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.886    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.886    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.886    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.886    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.886    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.886    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.887    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:10.892    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:10.895    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths  0:00:10.902    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths  0:00:10.916    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.918    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="46.79099774360657">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/23/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/c/c/4/dataset_cc4e9bc1-4a1b-42a1-870a-05f773fe6308.dat--pe1-2fastq.gz:/galaxy/server/database/objects/7/1/0/dataset_710914d1-0c0a-4e4e-a799-ccdc9b274297.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-5.15.107+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/23/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/c/4/dataset_cc4e9bc1-4a1b-42a1-870a-05f773fe6308.dat']      right reads: ['/galaxy/server/database/objects/7/1/0/dataset_710914d1-0c0a-4e4e-a799-ccdc9b274297.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/23/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/c/4/dataset_cc4e9bc1-4a1b-42a1-870a-05f773fe6308.dat  0:00:00.914     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/1/0/dataset_710914d1-0c0a-4e4e-a799-ccdc9b274297.dat  0:00:01.749     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.758    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.047    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.048    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.215    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.237    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.256    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.258    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.261    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.263    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.272    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.272    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.272    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/c/4/dataset_cc4e9bc1-4a1b-42a1-870a-05f773fe6308.dat  0:00:02.293    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/1/0/dataset_710914d1-0c0a-4e4e-a799-ccdc9b274297.dat  0:00:02.312    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.312    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.312    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.324    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.325    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.326    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.326    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.340    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.340    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.340    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.340    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/c/4/dataset_cc4e9bc1-4a1b-42a1-870a-05f773fe6308.dat and /galaxy/server/database/objects/7/1/0/dataset_710914d1-0c0a-4e4e-a799-ccdc9b274297.dat  0:00:02.404    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.410    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.415    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.452    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.452    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.452    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml  0:00:02.456    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/23/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/23/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/23/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.108    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.115     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.276   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.283     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.444   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.536     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.537     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.538     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.013     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.021    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.022    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.180    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.181    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.266    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.267    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.267    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.267    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.267    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.267    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.177     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.190    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.513    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.513    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.676    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.698    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.718    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.718    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.721    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.722    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE..sing short gaps  0:00:08.776    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.777    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.777    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.777    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.777    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.777    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.777    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.777    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.777    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.778    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.778    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.778    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.778    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.778    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.778    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.778    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.787    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.788    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.788    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.791    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.791    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.791    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:08.795    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:08.799    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/simplified_contigs.fasta  0:00:08.804    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/intermediate_contigs.fasta  0:00:08.811    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.811    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.811    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.811    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.811    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.811    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.935   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.150   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.918   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.918   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.930    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.068   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.071   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.074   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.080   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.080   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.080   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.094   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.100   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.119    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.120    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.120    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.120    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.120    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.123    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.124    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.124    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.124    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.124    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.124    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.124    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.124    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.124    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.124    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.124    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.125    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.125    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.125    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.125    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.125    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.125    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.125    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.125    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.125    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.125    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.125    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.125    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.125    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.126    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/23/working//K33/before_rr.fasta  0:00:11.131    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/23/working//K33/assembly_graph.fastg  0:00:11.134    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/final_contigs.paths  0:00:11.145    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/23/working//K33/scaffolds.paths  0:00:11.160    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.162    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/23/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/23/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/23/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/23/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="47.067007541656494">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "cd9761dea4b813a5",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/a/5/7/dataset_a57eb35e-fc1d-44df-a315-007e0060f4bc.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/1/1/8/dataset_11861ed4-c444-4d3b-961e-52d5b7204e3b.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2023-11-20T18:40:43.822630",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-56t62",  "galaxy_version": "23.1",  "history_id": "e1a893b67da1749f",  "id": "4c52d1846d0d5e7e",  "inputs": {   "readtype|fastq_in": {    "id": "cd9761dea4b813a5",    "src": "hda",    "uuid": "a57eb35e-fc1d-44df-a315-007e0060f4bc"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1700505658.0000000",    "title": "Job Start Time",    "value": "2023-11-20 18:40:58"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1700505658.0000000",    "title": "Job End Time",    "value": "2023-11-20 18:40:58"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "b267108bb7032afa",    "src": "hda",    "uuid": "fb3180fd-098f-4bf1-8848-4c50a62ca5cd"   },   "fastq_out": {    "id": "5cba3f5f09f2fede",    "src": "hda",    "uuid": "11861ed4-c444-4d3b-961e-52d5b7204e3b"   },   "log_file": {    "id": "53871cea70ce3efb",    "src": "hda",    "uuid": "8f7a5ca0-836e-4881-9ae5-967ac675c60b"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 80, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2023-11-20T18:41:12.703725",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpx95_5meitrimmomatic_se_out1.err v. /tmp/tmpe3fze3u5trimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 47.067007541656494, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="10.475751399993896">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 10.475751399993896, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="30.35436248779297">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="34.8965950012207">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="34.66818642616272">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/77/configs/tmp0bkpkyum:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="33.25831389427185">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="32.53430700302124">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="33.09554839134216">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="35.34972071647644">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="31.912655115127563">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="33.291327476501465">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="34.527812004089355">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="32.86631226539612">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="39.56226897239685">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>