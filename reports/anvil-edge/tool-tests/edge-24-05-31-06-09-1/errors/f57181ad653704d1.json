{
    "model_class": "Job",
    "id": "f57181ad653704d1",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-05-31T07:22:15.213994",
    "create_time": "2024-05-31T07:21:57.804076",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "756dcf2eb9beb718",
    "external_id": "gxy-s5v6n",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/2/c/d/dataset_2cd57bbd-3836-4980-9159-a60964520463.dat' && cp '/galaxy/server/database/objects/a/4/8/dataset_a4869a18-4f4a-4b78-974c-433865dab266.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/5/3/9/dataset_5390a310-2dc6-4dc2-a1d8-f46e64943be7.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/1/b/f/dataset_1bf5fe92-059d-400b-8336-e561ab1b08bd.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 55: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 345, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 346, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 344, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "285f699f990a5f5b",
            "src": "hda",
            "uuid": "2cd57bbd-3836-4980-9159-a60964520463"
        },
        "pairstraight|file1": {
            "id": "c9afe1ced7170674",
            "src": "hda",
            "uuid": "a4869a18-4f4a-4b78-974c-433865dab266"
        },
        "pairstraight|file2": {
            "id": "321419f829a51f2a",
            "src": "hda",
            "uuid": "5390a310-2dc6-4dc2-a1d8-f46e64943be7"
        },
        "tgmap": {
            "id": "b48bbba12293705f",
            "src": "hda",
            "uuid": "1bf5fe92-059d-400b-8336-e561ab1b08bd"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "8765ff24829162b3",
            "src": "hda",
            "uuid": "a7f60a59-8c23-4e65-a9a7-e10b687ae39a"
        },
        "observed_bias_3p": {
            "id": "58da3278f38d8b5b",
            "src": "hda",
            "uuid": "e09c0a6b-cb8f-467c-932a-888beaa45e1b"
        },
        "observed_bias": {
            "id": "7f3558f89bf60128",
            "src": "hda",
            "uuid": "03caf4c3-f3c4-45b8-a91a-f7bafe608397"
        },
        "expected_bias": {
            "id": "009ff79f59d67b49",
            "src": "hda",
            "uuid": "c96817db-24b7-478d-96c2-aa4b05821ee6"
        },
        "whitelist_txt": {
            "id": "c5e095e35e141969",
            "src": "hda",
            "uuid": "052af0be-7450-41dd-9f06-c6b097cf2103"
        },
        "featureDump_txt": {
            "id": "2f4ed69c1055c96d",
            "src": "hda",
            "uuid": "050f9b38-4041-4d87-adef-f22ea521f9b1"
        },
        "quants_tier_mat": {
            "id": "efc3efccade96a2d",
            "src": "hda",
            "uuid": "f34679fa-8a2d-4e99-ac4e-d61c6643c6d8"
        },
        "quants_mat_rows_txt": {
            "id": "4141047e05a79016",
            "src": "hda",
            "uuid": "e5f35dde-ce40-4e84-84cd-d9441d574949"
        },
        "quants_mat_cols_txt": {
            "id": "cb72e0030d876f88",
            "src": "hda",
            "uuid": "947afda2-483a-479d-a1e9-9d158b769440"
        },
        "raw_cb_frequency_txt": {
            "id": "70be9d13c7db5407",
            "src": "hda",
            "uuid": "c912cbe1-998e-440c-be90-356a19b4e331"
        },
        "quants_mat_mtx": {
            "id": "d1e3c12c02c9cdef",
            "src": "hda",
            "uuid": "51a6c717-428d-4daa-864c-6cee4d3c9064"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
