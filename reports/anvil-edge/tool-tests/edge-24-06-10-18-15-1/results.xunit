<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="7"
           failures="4"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="36.10386943817139">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="22.763211011886597">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "321a997d071b1ed7",   "src": "hda"  },  "output_type": "v",  "sec_filter|select_set_GTs": ".",  "sec_filter|soft_filter": "Modified",  "sec_restrict|exclude": "QUAL==59.2 || (INDEL=0 \u0026 (FMT/GQ=25 | FMT/DP=10))" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/8/5/c/dataset_85cad51b-2eb1-4862-950e-53082d65eab3.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026            bcftools filter  --soft-filter \"Modified\" --set-GTs \".\"             --exclude \u0027QUAL==59.2 || (INDEL=0 \u0026 (FMT/GQ=25 | FMT/DP=10))\u0027    --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  \u003e \u0027/galaxy/server/database/objects/b/6/c/dataset_b6cd28ec-f2ea-49ba-82d9-9dea45d63d3b.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-06-10T19:09:16.346262",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-7794x",  "galaxy_version": "23.1",  "history_id": "39c77153860ac18f",  "id": "6cac4951406997bb",  "inputs": {   "input_file": {    "id": "321a997d071b1ed7",    "src": "hda",    "uuid": "85cad51b-2eb1-4862-950e-53082d65eab3"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "08a42aae841ef995",    "src": "hda",    "uuid": "b6cd28ec-f2ea-49ba-82d9-9dea45d63d3b"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": \".\", \"soft_filter\": \"Modified\"}",   "sec_restrict": "{\"exclude\": \"QUAL==59.2 || (INDEL=0 \u0026 (FMT/GQ=25 | FMT/DP=10))\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-10T19:09:21.388052",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 22.763211011886597, "tool_id": "bcftools_filter", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="30.890995740890503">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="30.15047287940979">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="30.825204610824585">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="32.177653551101685">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="29.16789412498474">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="31.79607892036438">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="30.004661321640015">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="41.193766832351685">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="32.99525237083435">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="40.37073278427124">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="38.96770358085632">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="39.16597270965576">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="67.1991937160492">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="35.356595277786255">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.4329953193664551">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.4329953193664551, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="35.134676933288574">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="30.66668963432312">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="30.737748622894287">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="30.645389318466187">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="28.952131748199463">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="30.232685327529907">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="31.48604130744934">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="31.457893133163452">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="30.197755575180054">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="38.49604392051697">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="29.945866346359253">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="30.449483156204224">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="18.198148488998413">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 18.198148488998413, "tool_id": "mummer_nucmer", "tool_version": "4.0.0beta2+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="68.93363904953003">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="27.88586449623108">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "extension": "pdf",  "input": {   "id": "cdd19d8c7a24bbfd",   "src": "hda"  },  "plot_type": "total_bp" }, "job": {  "command_line": "export MPLBACKEND=\"agg\" \u0026\u0026 poretools occupancy \u0027/galaxy/server/database/objects/f/e/b/dataset_feb0a33f-4525-446d-a413-8b3813c02eda.dat\u0027 --saveas occupancy.pdf --plot-type total_bp \u0026\u0026 mv occupancy.pdf \u0027/galaxy/server/database/objects/b/a/c/dataset_bac32ba5-02b1-4db8-835f-442d08481e62.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-06-10T18:52:36.275731",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-967s5",  "galaxy_version": "23.1",  "history_id": "39c77153860ac18f",  "id": "e83e71843dfbfe3c",  "inputs": {   "input": {    "id": "cdd19d8c7a24bbfd",    "src": "hda",    "uuid": "feb0a33f-4525-446d-a413-8b3813c02eda"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "a7d7b63d1451be6a",    "src": "hda",    "uuid": "bac32ba5-02b1-4db8-835f-442d08481e62"   }  },  "params": {   "__input_ext": "\"fast5.tar\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "extension": "\"pdf\"",   "plot_type": "\"total_bp\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-10T18:52:44.329987",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 27.88586449623108, "tool_id": "poretools_occupancy", "tool_version": "0.6.1a1.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="53.30062556266785">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/2/d/0/dataset_2d048157-24a4-405f-810f-f4d926ab352c.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/8/6/8/dataset_86848a36-da50-4a28-a9b7-a6142883cca2.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/6/f/8/dataset_6f899929-9f61-4b2d-b72e-c60659606c69.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-06-10T19:02:31.060855",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-t58xk",  "galaxy_version": "23.1",  "history_id": "39c77153860ac18f",  "id": "1ae67e23c07749ce",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "21.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "21 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718046176.0000000",    "title": "Job End Time",    "value": "2024-06-10 19:02:56"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718046155.0000000",    "title": "Job Start Time",    "value": "2024-06-10 19:02:35"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "b8fefd64edd7e311",    "src": "hda",    "uuid": "6f899929-9f61-4b2d-b72e-c60659606c69"   },   "design_tsv": {    "id": "c431f26079cf715d",    "src": "hda",    "uuid": "600f7a70-364e-42ca-9eb1-bb1474d39266"   },   "genes_tsv": {    "id": "437b50f374e6571d",    "src": "hda",    "uuid": "86848a36-da50-4a28-a9b7-a6142883cca2"   },   "matrix_mtx": {    "id": "b1ec896102ef22cc",    "src": "hda",    "uuid": "2d048157-24a4-405f-810f-f4d926ab352c"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-06-10 19:02:35--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  188K\n    50K .......... .......... .......... .......... ..........  282K\n   100K .......... .......... .......... .......... ..........  561K\n   150K .......... .......... .......... .......... ..........  384K\n   200K .......... .......... .......... .......... ..........  564K\n   250K .......... .......... .......... .......... ..........  565K\n   300K .......... .......... .......... .......... .......... 1.03M\n   350K .......... .......... .......... .......... ..........  564K\n   400K .......... .......... .......... .......... ..........  564K\n   450K .......... .......... .......... .......... ..........  563K\n   500K .......... .......... .......... .......... .......... 1.18M\n   550K .......... .......... .......... .......... .......... 1.03M\n   600K .......... .......... .......... .......... .......... 1.17M\n   650K .......... .......... .......... .......... .......... 1.03M\n   700K .......... .......... .......... .......... .......... 1.18M\n   750K .......... .......... .......... .......... .......... 1.03M\n   800K .......... .......... .......... .......... ..........  567K\n   850K .......... .......... .......... .......... .......... 81.4M\n   900K .......... .......... .......... .......... .......... 1.18M\n   950K .......... .......... .......... .......... .......... 1.04M\n  1000K .......... .......... .......... .......... .......... 1.17M\n  1050K .......... .......... .......... .......... .......... 1.05M\n  1100K .......... .......... .......... .......... .......... 72.3M\n  1150K .......... .......... .......... .......... .......... 1.17M\n  1200K .......... .......... .......... .......... .......... 1.05M\n  1250K .......... .......... .......... .......... .......... 1.21M\n  1300K .......... .......... .......... .......... .......... 1.03M\n  1350K .......... .......... .......... .......... ..........  122M\n  1400K .......... .......... .......... .......... .......... 1.20M\n  1450K .......... .......... .......... .......... .......... 29.2M\n  1500K .......... .......... .......... .......... .......... 1.06M\n  1550K .......... .......... .......... .......... .......... 1.20M\n  1600K .......... .......... .......... .......... .......... 21.6M\n  1650K .......... .......... .......... .......... .......... 1.07M\n  1700K .......... .......... .......... .......... .......... 1.20M\n  1750K .......... .......... .......... .......... .......... 19.0M\n  1800K .......... .......... .......... .......... .......... 1.07M\n  1850K .......... .......... .......... .......... .......... 63.6M\n  1900K .......... .......... .......... .......... .......... 1.22M\n  1950K .......... .......... .......... .......... .......... 18.3M\n  2000K .......... .......... .......... .......... .......... 1.07M\n  2050K .......... .......... .......... .......... .......... 86.6M\n  2100K .......... .......... .......... .......... .......... 1.17M\n  2150K .......... .......... .......... .......... .......... 73.8M\n  2200K .......... .......... .......... .......... .......... 1.06M\n  2250K .......... .......... .......... .......... ..........  144M\n  2300K .......... .......... .......... .......... .......... 1.22M\n  2350K .......... .......... .......... .......... .......... 11.8M\n  2400K .......... .......... .......... .......... .......... 1.11M\n  2450K .......... .......... .......... .......... ..........  139M\n  2500K .......... .......... .......... .......... .......... 1.22M\n  2550K .......... .......... .......... .......... .......... 19.6M\n  2600K .......... .......... .......... .......... .......... 1.08M\n  2650K .......... .......... .......... .......... ..........  140M\n  2700K .......... .......... .......... .......... ..........  150M\n  2750K .......... .......... .......... .......... .......... 1.16M\n  2800K .......... .......... .......... .......... .......... 21.3M\n  2850K .......... .......... .......... .......... .......... 1.10M\n  2900K .......... .......... .......... .......... ..........  143M\n  2950K .......... .......... .......... .......... .......... 1.24M\n  3000K .......... .......... .......... .......... .......... 17.3M\n  3050K .......... .......... .......... .......... ..........  142M\n  3100K .......... .......... .......... .......... .......... 1.06M\n  3150K .......... .......... .......... .......... ..........  126M\n  3200K .......... .......... .......... .......... .......... 1.24M\n  3250K .......... .......... .......... .......... .......... 18.0M\n  3300K .......... .......... .......... .......... ..........  133M\n  3350K .......... .......... .......... .......... .......... 1.07M\n  3400K .......... .......... .......... .......... ..........  138M\n  3450K .......... .......... .......... .......... ..........  150M\n  3500K .......... .......... .......... .......... .......... 1.24M\n  3550K .......... .......... .......... .......... .......... 19.7M\n  3600K .......... .......... .......... .......... .......... 1.07M\n  3650K .......... .......... .......... .......... ..........  143M\n  3700K .......... .......... .......... .......... ..........  149M\n  3750K .......... .......... .......... .......... .......... 1.23M\n  3800K .......... .......... .......... .......... .......... 20.6M\n  3850K .......... .......... .......... .......... ..........  143M\n  3900K .......... .......... .......... .......... .......... 1.06M\n  3950K .......... .......... .......... .......... ..........  132M\n  4000K .......... .......... .......... .......... ..........  141M\n  4050K .......... .......... .......... .......... .......... 1.24M\n  4100K .......... .......... .......... .......... .......... 22.1M\n  4150K .......... .......... .......... .......... ..........  138M\n  4200K .......... .......... .......... .......... .......... 1.06M\n  4250K .......... .......... .......... .......... ..........  148M\n  4300K .......... .......... .......... .......... ..........  152M\n  4350K .......... .......... .......... .......... .......... 1.23M\n  4400K .......... .......... .......... .......... .......... 25.0M\n  4450K .......... .......... .......... .......... ..........  141M\n  4500K .......... .......... .......... .......... .......... 1.07M\n  4550K .......... .......... .......... .......... .......... 81.7M\n  4600K .......... .......... .......... .......... ..........  136M\n  4650K .......... .......... .......... .......... ..........  138M\n  4700K .......... .......... .......... .......... .......... 1.24M\n  4750K .......... .......... .......... .......... .......... 22.1M\n  4800K .......... .......... .......... .......... ..........  140M\n  4850K .......... .......... .......... .......... .......... 1.07M\n  4900K .......... .......... .......... .......... ..........  141M\n  4950K .......... .......... .......... .......... ..........  143M\n  5000K .......... .......... .......... .......... .......... 87.1M\n  5050K .......... .......... .......... .......... .......... 1.25M\n  5100K .......... .......... .......... .......... .......... 20.4M\n  5150K .......... .......... .......... .......... ..........  113M\n  5200K .......... .......... .......... .......... .......... 1.08M\n  5250K .......... .......... .......... .......... .......... 65.6M\n  5300K .......... .......... .......... .......... ..........  107M\n  5350K .......... .......... .......... .......... .......... 97.9M\n  5400K .......... .......... .......... .......... .......... 1.25M\n  5450K .......... .......... .......... .......... .......... 36.5M\n  5500K .......... .......... .......... .......... .......... 38.2M\n  5550K .......... .......... .......... .......... .......... 21.1M\n  5600K .......... .......... .......... .......... .......... 1.12M\n  5650K .......... .......... .......... .......... ..........  142M\n  5700K .......... .......... .......... .......... ..........  148M\n  5750K .......... .......... .......... .......... .......... 1.24M\n  5800K .......... .......... .......... .......... ..........  116M\n  5850K .......... .......... .......... .......... .......... 34.1M\n  5900K .......... .......... .......... .......... .......... 41.5M\n  5950K .......... .......... .......... .......... .......... 24.5M\n  6000K .......... .......... .......... .......... .......... 1.12M\n  6050K .......... .......... .......... .......... .......... 88.7M\n  6100K .......... .......... .......... .......... ..........  142M\n  6150K .......... .......... .......... .......... ..........  151M\n  6200K .......... .......... .......... .......... .......... 1.24M\n  6250K .......... .......... .......... .......... .......... 36.3M\n  6300K .......... .......... .......... .......... .......... 68.8M\n  6350K .......... .......... .......... .......... .......... 90.5M\n  6400K .......... .......... .......... .......... .......... 1.09M\n  6450K .......... .......... .......... .......... .......... 91.3M\n  6500K .......... .......... .......... .......... ..........  137M\n  6550K .......... .......... .......... .......... ..........  157M\n  6600K .......... .......... .......... .......... .......... 1.23M\n  6650K .......... .......... .......... .......... ..........  139M\n  6700K .......... .......... .......... .......... .......... 26.5M\n  6750K .......... .......... .......... .......... .......... 96.9M\n  6800K .......... .......... .......... .......... ..........  120M\n  6850K .......... .......... .......... .......... .......... 1.10M\n  6900K .......... .......... .......... .......... .......... 82.4M\n  6950K .......... .......... .......... .......... ..........  108M\n  7000K .......... .......... .......... .......... ..........  115M\n  7050K .......... .......... .......... .......... .......... 1.22M\n  7100K .......... .......... .......... .......... ..........  133M\n  7150K .......... .......... .......... .......... .......... 33.3M\n  7200K .......... .......... .......... .......... ..........  111M\n  7250K .......... .......... .......... .......... .......... 90.6M\n  7300K .......... .......... .......... .......... .......... 20.5M\n  7350K .......... .......... .......... .......... .......... 1.15M\n  7400K .......... .......... .......... .......... ..........  102M\n  7450K .......... .......... .......... .......... ..........  143M\n  7500K .......... .......... .......... .......... ..........  127M\n  7550K .......... .......... .......... .......... .......... 1.20M\n  7600K .......... .......... .......... .......... ..........  115M\n  7650K .......... .......... .......... .......... .......... 77.4M\n  7700K .......... .......... .......... .......... ..........  130M\n  7750K .......... .......... .......... .......... .......... 69.6M\n  7800K .......... .......... .......... .......... .......... 16.5M\n  7850K .......... .......... .......... .......... .......... 1.17M\n  7900K .......... .......... .......... .......... ..........  107M\n  7950K .......... .......... .......... .......... ..........  137M\n  8000K .......... .......... .......... .......... ..........  142M\n  8050K .......... .......... .......... .......... .......... 1.20M\n  8100K .......... .......... .......... .......... ..........  145M\n  8150K .......... .......... .......... .......... ..........  130M\n  8200K .......... .......... .......... .......... .......... 62.6M\n  8250K .......... .......... .......... .......... ..........  132M\n  8300K .......... .......... .......... .......... .......... 15.4M\n  8350K .......... .......... .......... .......... .......... 1.17M\n  8400K .......... .......... .......... .......... ..........  103M\n  8450K .......... .......... .......... .......... ..........  140M\n  8500K .......... .......... .......... .......... ..........  148M\n  8550K .......... .......... .......... .......... ..........  154M\n  8600K .......... .......... .......... .......... .......... 1.19M\n  8650K .......... .......... .......... .......... ..........  130M\n  8700K .......... .......... .......... .......... ..........  126M\n  8750K .......... .......... .......... .......... ..........  146M\n  8800K .......... .......... .......... .......... ..........  133M\n  8850K .......... .......... .......... .......... .......... 16.2M\n  8900K .......... .......... .......... .......... .......... 1.17M\n  8950K .......... .......... .......... .......... ..........  122M\n  9000K .......... .......... .......... .......... ..........  134M\n  9050K .......... .......... .......... .......... ..........  149M\n  9100K .......... .......... .......... .......... ..........  140M\n  9150K .......... .......... .......... .......... .......... 1.20M\n  9200K .......... .......... .......... .......... ..........  115M\n  9250K .......... .......... .......... .......... ..........  156M\n  9300K .......... .......... .......... .......... ..........  139M\n  9350K .......... .......... .......... .......... .......... 91.8M\n  9400K .......... .......... .......... .......... .......... 16.7M\n  9450K .......... .......... .......... .......... .......... 1.16M\n  9500K .......... .......... .......... .......... ..........  124M\n  9550K .......... .......... .......... .......... ..........  137M\n  9600K .......... .......... .......... .......... ..........  125M\n  9650K .......... .......... .......... .......... ..........  138M\n  9700K .......... .......... .......... .......... .......... 1.21M\n  9750K .......... .......... .......... .......... ..........  118M\n  9800K .......... .......... .......... .......... ..........  133M\n  9850K .......... .......... .......... .......... ..........  135M\n  9900K .......... .......... .......... .......... .......... 10.7M\n  9950K .......... .......... .......... .......... .......... 4.10M\n 10000K .......... .......... .......... .......... .......... 3.96M\n 10050K .......... .......... .......... .......... .......... 2.95M\n 10100K .......... .......... .......... .......... .......... 4.86M\n 10150K .......... .......... .......... .......... .......... 9.51M\n 10200K .......... .......... .......... .......... .......... 3.76M\n 10250K .......... .......... .......... .......... .......... 4.33M\n 10300K .......... .......... .......... .......... .......... 4.47M\n 10350K .......... .......... .......... .......... .......... 7.95M\n 10400K .......... .......... .......... .......... .......... 3.79M\n 10450K .......... .......... .......... .......... .......... 4.80M\n 10500K .......... .......... .......... .......... .......... 4.01M\n 10550K .......... .......... .......... .......... .......... 8.19M\n 10600K .......... .......... .......... .......... .......... 3.85M\n 10650K .......... .......... .......... .......... .......... 4.48M\n 10700K .......... .......... .......... .......... .......... 3.92M\n 10750K .......... .......... .......... .......... .......... 8.30M\n 10800K .......... .......... .......... .......... .......... 4.08M\n 10850K .......... .......... .......... .......... .......... 4.03M\n 10900K .......... .......... .......... .......... .......... 3.85M\n 10950K .......... .......... .......... .......... .......... 8.18M\n 11000K .......... .......... .......... .......... .......... 3.89M\n 11050K .......... .......... .......... .......... .......... 4.10M\n 11100K .......... .......... .......... .......... .......... 3.79M\n 11150K .......... .......... .......... .......... .......... 8.17M\n 11200K .......... .......... .......... .......... .......... 4.41M\n 11250K .......... .......... .......... .......... .......... 4.18M\n 11300K .......... .......... .......... .......... .......... 4.34M\n 11350K .......... .......... .......... .......... .......... 4.10M\n 11400K .......... .......... .......... .......... .......... 8.00M\n 11450K .......... .......... .......... .......... .......... 4.22M\n 11500K .......... .......... .......... .......... .......... 3.95M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.55M\n 50150K .......... .......... .......... .......... .......... 4.57M\n 50200K .......... .......... .......... .......... .......... 4.47M\n 50250K .......... .......... .......... .......... .......... 9.02M\n 50300K .......... .......... .......... .......... .......... 4.58M\n 50350K .......... .......... .......... .......... .......... 4.14M\n 50400K .......... .......... .......... .......... .......... 5.29M\n 50450K .......... .......... .......... .......... .......... 9.10M\n 50500K .......... .......... .......... .......... .......... 4.50M\n 50550K .......... .......... .......... .......... .......... 4.25M\n 50600K .......... .......... .......... .......... .......... 5.06M\n 50650K .......... .......... .......... .......... .......... 7.28M\n 50700K .......... .......... .......... .......... .......... 4.95M\n 50750K .......... .......... .......... .......... .......... 4.54M\n 50800K .......... .......... .......... .......... .......... 4.35M\n 50850K .......... .......... .......... .......... .......... 8.16M\n 50900K .......... .......... .......... .......... .......... 4.56M\n 50950K .......... .......... .......... .......... .......... 4.15M\n 51000K .......... .......... .......... .......... .......... 5.03M\n 51050K .......... .......... .......... .......... .......... 7.94M\n 51100K .......... .......... .......... .......... .......... 4.39M\n 51150K .......... .......... .......... .......... .......... 4.31M\n 51200K .......... .......... .......... .......... .......... 4.59M\n 51250K .......... .......... .......... .......... .......... 4.60M\n 51300K .......... .......... .......... .......... .......... 8.86M\n 51350K .......... .......... .......... .......... .......... 4.55M\n 51400K .......... .......... .......... .......... .......... 3.78M\n 51450K .......... .......... .......... .......... .......... 5.10M\n 51500K .......... .......... .......... .......... .......... 7.95M\n 51550K .......... .......... .......... .......... .......... 4.56M\n 51600K .......... .......... .......... .......... .......... 4.49M\n 51650K .......... .......... .......... .......... .......... 4.60M\n 51700K .......... .......... .......... .......... .......... 4.12M\n 51750K .......... .......... .......... .......... .......... 11.7M\n 51800K .......... .......... .......... .......... .......... 3.98M\n 51850K .......... .......... .......... .......... .......... 4.52M\n 51900K .......... .......... .......... .......... .......... 4.23M\n 51950K .......... .......... .......... .......... .......... 10.7M\n 52000K .......... .......... .......... .......... .......... 4.13M\n 52050K .......... .......... .......... .......... .......... 4.53M\n 52100K .......... .......... .......... .......... .......... 4.54M\n 52150K .......... .......... .......... .......... .......... 8.57M\n 52200K .......... .......... .......... .......... .......... 4.47M\n 52250K .......... .......... .......... .......... .......... 4.33M\n 52300K .......... .......... .......... .......... .......... 4.47M\n 52350K .......... .......... .......... .......... .......... 8.55M\n 52400K .......... .......... .......... .......... .......... 4.41M\n 52450K .......... .......... .......... .......... .......... 4.59M\n 52500K .......... .......... .......... .......... .......... 4.71M\n 52550K .......... .......... .......... .......... .......... 6.06M\n 52600K .......... .......... .......... .......... .......... 5.68M\n 52650K .......... .......... .......... .......... .......... 4.62M\n 52700K .......... .......... .......... .......... .......... 4.62M\n 52750K .......... .......... .......... .......... .......... 8.88M\n 52800K .......... .......... .......... .......... .......... 4.26M\n 52850K .......... .......... .......... .......... .......... 3.86M\n 52900K .......... .......... .......... .......... .......... 4.66M\n 52950K .......... .......... .......... .......... .......... 8.43M\n 53000K .......... .......... .......... .......... .......... 4.34M\n 53050K .......... .......... .......... .......... .......... 4.43M\n 53100K .......... .......... .......... .......... .......... 4.54M\n 53150K .......... .......... .......... .......... .......... 7.87M\n 53200K .......... .......... .......... .......... .......... 4.29M\n 53250K .......... .......... .......... .......... .......... 4.20M\n 53300K .......... .......... .......... .......... .......... 4.82M\n 53350K .......... .......... .......... .......... .......... 9.30M\n 53400K .......... .......... .......... .......... .......... 4.05M\n 53450K .......... .......... .......... .......... .......... 4.48M\n 53500K .......... .......... .......... .......... .......... 4.47M\n 53550K .......... .......... .......... .......... .......... 8.32M\n 53600K .......... .......... .......... .......... .......... 4.41M\n 53650K .......... .......... .......... .......... .......... 4.10M\n 53700K .......... .......... .......... .......... .......... 4.45M\n 53750K .......... .......... .......... .......... .......... 8.16M\n 53800K .......... .......... .......... .......... .......... 4.95M\n 53850K .......... .......... .......... .......... .......... 4.34M\n 53900K .......... .......... .......... .......... .......... 4.68M\n 53950K .......... .......... .......... .......... .......... 4.49M\n 54000K .......... .......... .......... .......... .......... 8.54M\n 54050K .......... .......... .......... .......... .......... 4.26M\n 54100K .......... .......... .......... .......... .......... 4.37M\n 54150K .......... .......... .......... .......... .......... 4.42M\n 54200K .......... .......... .......... .......... .......... 8.15M\n 54250K .......... .......... .......... .......... .......... 3.83M\n 54300K .......... .......... .......... .......... .......... 5.27M\n 54350K .......... .......... .......... .......... .......... 4.57M\n 54400K .......... .......... .......... .......... .......... 8.51M\n 54450K .......... .......... .......... .......... .......... 4.47M\n 54500K .......... .......... .......... .......... .......... 4.58M\n 54550K .......... .......... .......... .......... .......... 4.63M\n 54600K .......... .......... .......... .......... .......... 8.82M\n 54650K .......... .......... .......... .......... .......... 4.15M\n 54700K .......... .......... .......... .......... .......... 4.51M\n 54750K .......... .......... .......... .......... .......... 4.81M\n 54800K .......... .......... .......... .......... .......... 8.69M\n 54850K .......... .......... .......... .......... .......... 4.65M\n 54900K .......... .......... .......... .......... .......... 4.12M\n 54950K .......... .......... .......... .......... .......... 4.93M\n 55000K .......... .......... .......... .......... .......... 8.88M\n 55050K .......... .......... .......... .......... .......... 4.43M\n 55100K .......... .......... .......... .......... .......... 4.16M\n 55150K .......... .......... .......... .......... .......... 4.54M\n 55200K .......... .......... .......... .......... .......... 4.46M\n 55250K .......... .......... .......... .......... .......... 8.38M\n 55300K .......... .......... .......... .......... .......... 4.34M\n 55350K .......... .......... .......... .......... .......... 4.45M\n 55400K .......... .......... .......... .......... .......... 4.55M\n 55450K .......... .......... .......... .......... .......... 8.47M\n 55500K .......... .......... .......... .......... .......... 4.50M\n 55550K .......... .......... .......... .......... .......... 4.40M\n 55600K .......... .......... .......... .......... .......... 4.45M\n 55650K .......... .......... .......... .......... .......... 7.16M\n 55700K .......... .......... .......... .......... .......... 4.71M\n 55750K .......... .......... .......... .......... .......... 4.41M\n 55800K .......... .......... .......... .......... .......... 4.37M\n 55850K .......... .......... .......... .......... .......... 4.12M\n 55900K .......... .......... .......... .......... .......... 6.63M\n 55950K .......... .......... .......... .......... .......... 4.25M\n 56000K .......... .......... .......... .......... .......... 4.63M\n 56050K .......... .......... .......... .......... .......... 8.62M\n 56100K .......... .......... .......... .......... .......... 4.28M\n 56150K .......... .......... .......... .......... .......... 4.36M\n 56200K .......... .......... .......... .......... .......... 4.32M\n 56250K .......... .......... .......... .......... .......... 7.86M\n 56300K .......... .......... .......... .......... .......... 4.21M\n 56350K .......... .......... .......... .......... .......... 4.09M\n 56400K .......... .......... .......... .......... .......... 4.87M\n 56450K .......... .......... .......... .......... .......... 10.0M\n 56500K .......... .......... .......... .......... .......... 4.73M\n 56550K .......... .......... .......... .......... .......... 4.57M\n 56600K .......... .......... .......... .......... .......... 4.45M\n 56650K .......... .......... .......... .......... .......... 8.46M\n 56700K .......... .......... .......... .......... .......... 4.70M\n 56750K .......... .......... .......... .......... .......... 4.34M\n 56800K .......... .......... .......... .......... .......... 4.39M\n 56850K .......... .......... .......... .......... .......... 4.64M\n 56900K .......... .......... .......... .......... .......... 8.56M\n 56950K .......... .......... .......... .......... .......... 4.46M\n 57000K .......... .......... .......... .......... .......... 4.62M\n 57050K .......... .......... .......... .......... .......... 4.53M\n 57100K .......... .......... .......... .......... .......... 8.16M\n 57150K .......... .......... .......... .......... .......... 4.74M\n 57200K .......... .......... .......... .......... .......... 4.04M\n 57250K .......... .......... .......... .......... .......... 7.19M\n 57300K .......... .......... .......... .......... .......... 3.40M\n 57350K .......... .......... .......... .......... .......... 3.52M\n 57400K .......... .......... .......... .......... .......... 3.83M\n 57450K .......... .......... .......... .......... .......... 5.94M\n 57500K .......... .......... .......... .......... .......... 3.91M\n 57550K .......... .......... .......... .......... .......... 3.60M\n 57600K .......... .......... .......... .......... .......... 3.46M\n 57650K .......... .......... .......... .......... .......... 6.67M\n 57700K .......... .......... .......... .......... .......... 3.58M\n 57750K .......... .......... .......... .......... .......... 3.56M\n 57800K .......... .......... .......... .......... .......... 3.49M\n 57850K .......... .......... .......... .......... .......... 6.71M\n 57900K .......... .......... .......... .......... .......... 3.58M\n 57950K .......... .......... .......... .......... .......... 3.61M\n 58000K .......... .......... .......... .......... .......... 3.41M\n 58050K .......... .......... .......... .......... .......... 6.81M\n 58100K .......... .......... .......... .......... .......... 3.39M\n 58150K .......... .......... .......... .......... .......... 3.84M\n 58200K .......... .......... .......... .......... .......... 3.46M\n 58250K .......... .......... .......... .......... .......... 6.88M\n 58300K .......... .......... .......... .......... .......... 3.58M\n 58350K .......... .......... .......... .......... .......... 3.61M\n 58400K .......... .......... .......... .......... .......... 3.40M\n 58450K .......... .......... .......... .......... .......... 6.83M\n 58500K .......... .......... .......... .......... .......... 3.37M\n 58550K .......... .......... .......... .......... .......... 4.54M\n 58600K .......... .......... .......... .......... .......... 3.65M\n 58650K .......... .......... .......... .......... .......... 8.86M\n 58700K .......... .......... .......... .......... .......... 4.57M\n 58750K .......... .......... .......... .......... .......... 4.32M\n 58800K .......... .......... .......... .......... .......... 4.09M\n 58850K .......... .......... .......... .......... .......... 7.23M\n 58900K .......... .......... .......... .......... .......... 4.45M\n 58950K .......... .......... .......... .......... .......... 4.62M\n 59000K .......... .......... .......... .......... .......... 4.47M\n 59050K .......... .......... .......... .......... .......... 4.57M\n 59100K .......... .......... .......... .......... .......... 9.10M\n 59150K .......... .......... .......... .......... .......... 4.53M\n 59200K .......... .......... .......... .......... .......... 4.46M\n 59250K .......... .......... .......... .......... .......... 3.69M\n 59300K .......... .......... .......... .......... .......... 5.27M\n 59350K .......... .......... .......... .......... .......... 8.47M\n 59400K .......... .......... .......... .......... .......... 4.30M\n 59450K .......... .......... .......... .......... .......... 4.46M\n 59500K .......... .......... .......... .......... .......... 4.43M\n 59550K .......... .......... .......... .......... .......... 7.63M\n 59600K .......... .......... .......... .......... .......... 4.95M\n 59650K .......... .......... .......... .......... .......... 4.44M\n 59700K .......... .......... .......... .......... .......... 4.58M\n 59750K .......... .......... .......... .......... .......... 8.30M\n 59800K .......... .......... .......... .......... .......... 4.42M\n 59850K .......... .......... .......... .......... .......... 4.14M\n 59900K .......... .......... .......... .......... .......... 4.18M\n 59950K .......... .......... .......... .......... .......... 8.53M\n 60000K .......... .......... .......... .......... .......... 4.55M\n 60050K .......... .......... .......... .......... .......... 4.43M\n 60100K .......... .......... .......... .......... .......... 4.56M\n 60150K .......... .......... .......... .......... .......... 7.34M\n 60200K .......... .......... .......... .......... .......... 5.29M\n 60250K .......... .......... .......... .......... .......... 4.58M\n 60300K .......... .......... .......... .......... .......... 4.04M\n 60350K .......... .......... .......... .......... .......... 12.2M\n 60400K .......... .......... .......... .......... .......... 4.51M\n 60450K .......... .......... .......... .......... .......... 4.49M\n 60500K .......... .......... .......... .......... .......... 4.73M\n 60550K .......... .......... .......... .......... .......... 8.24M\n 60600K .......... .......... .......... .......... ..........  670K\n 60650K .......... .........                                   91.6M=15s\n\n2024-06-10 19:02:50 (4.07 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-06-10 19:02:54--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  188K 4s\n    50K .......... .......... .......... .......... .......... 12%  282K 3s\n   100K .......... .......... .......... .......... .......... 18%  564K 2s\n   150K .......... .......... .......... .......... .......... 24%  560K 2s\n   200K .......... .......... .......... .......... .......... 30%  388K 2s\n   250K .......... .......... .......... .......... .......... 36% 1023K 1s\n   300K .......... .......... .......... .......... .......... 42%  564K 1s\n   350K .......... .......... .......... .......... .......... 48%  565K 1s\n   400K .......... .......... .......... .......... .......... 54%  563K 1s\n   450K .......... .......... .......... .......... .......... 60%  564K 1s\n   500K .......... .......... .......... .......... .......... 66%  564K 1s\n   550K .......... .......... .......... .......... .......... 72% 1.23M 0s\n   600K .......... .......... .......... .......... .......... 78% 1017K 0s\n   650K .......... .......... .......... .......... .......... 84%  564K 0s\n   700K .......... .......... .......... .......... .......... 90% 4.54M 0s\n   750K .......... .......... .......... .......... .......... 96%  643K 0s\n   800K .......... .......... .......                         100% 10.8M=1.5s\n\n2024-06-10 19:02:56 (548 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-06-10 19:02:35--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  188K\n    50K .......... .......... .......... .......... ..........  282K\n   100K .......... .......... .......... .......... ..........  561K\n   150K .......... .......... .......... .......... ..........  384K\n   200K .......... .......... .......... .......... ..........  564K\n   250K .......... .......... .......... .......... ..........  565K\n   300K .......... .......... .......... .......... .......... 1.03M\n   350K .......... .......... .......... .......... ..........  564K\n   400K .......... .......... .......... .......... ..........  564K\n   450K .......... .......... .......... .......... ..........  563K\n   500K .......... .......... .......... .......... .......... 1.18M\n   550K .......... .......... .......... .......... .......... 1.03M\n   600K .......... .......... .......... .......... .......... 1.17M\n   650K .......... .......... .......... .......... .......... 1.03M\n   700K .......... .......... .......... .......... .......... 1.18M\n   750K .......... .......... .......... .......... .......... 1.03M\n   800K .......... .......... .......... .......... ..........  567K\n   850K .......... .......... .......... .......... .......... 81.4M\n   900K .......... .......... .......... .......... .......... 1.18M\n   950K .......... .......... .......... .......... .......... 1.04M\n  1000K .......... .......... .......... .......... .......... 1.17M\n  1050K .......... .......... .......... .......... .......... 1.05M\n  1100K .......... .......... .......... .......... .......... 72.3M\n  1150K .......... .......... .......... .......... .......... 1.17M\n  1200K .......... .......... .......... .......... .......... 1.05M\n  1250K .......... .......... .......... .......... .......... 1.21M\n  1300K .......... .......... .......... .......... .......... 1.03M\n  1350K .......... .......... .......... .......... ..........  122M\n  1400K .......... .......... .......... .......... .......... 1.20M\n  1450K .......... .......... .......... .......... .......... 29.2M\n  1500K .......... .......... .......... .......... .......... 1.06M\n  1550K .......... .......... .......... .......... .......... 1.20M\n  1600K .......... .......... .......... .......... .......... 21.6M\n  1650K .......... .......... .......... .......... .......... 1.07M\n  1700K .......... .......... .......... .......... .......... 1.20M\n  1750K .......... .......... .......... .......... .......... 19.0M\n  1800K .......... .......... .......... .......... .......... 1.07M\n  1850K .......... .......... .......... .......... .......... 63.6M\n  1900K .......... .......... .......... .......... .......... 1.22M\n  1950K .......... .......... .......... .......... .......... 18.3M\n  2000K .......... .......... .......... .......... .......... 1.07M\n  2050K .......... .......... .......... .......... .......... 86.6M\n  2100K .......... .......... .......... .......... .......... 1.17M\n  2150K .......... .......... .......... .......... .......... 73.8M\n  2200K .......... .......... .......... .......... .......... 1.06M\n  2250K .......... .......... .......... .......... ..........  144M\n  2300K .......... .......... .......... .......... .......... 1.22M\n  2350K .......... .......... .......... .......... .......... 11.8M\n  2400K .......... .......... .......... .......... .......... 1.11M\n  2450K .......... .......... .......... .......... ..........  139M\n  2500K .......... .......... .......... .......... .......... 1.22M\n  2550K .......... .......... .......... .......... .......... 19.6M\n  2600K .......... .......... .......... .......... .......... 1.08M\n  2650K .......... .......... .......... .......... ..........  140M\n  2700K .......... .......... .......... .......... ..........  150M\n  2750K .......... .......... .......... .......... .......... 1.16M\n  2800K .......... .......... .......... .......... .......... 21.3M\n  2850K .......... .......... .......... .......... .......... 1.10M\n  2900K .......... .......... .......... .......... ..........  143M\n  2950K .......... .......... .......... .......... .......... 1.24M\n  3000K .......... .......... .......... .......... .......... 17.3M\n  3050K .......... .......... .......... .......... ..........  142M\n  3100K .......... .......... .......... .......... .......... 1.06M\n  3150K .......... .......... .......... .......... ..........  126M\n  3200K .......... .......... .......... .......... .......... 1.24M\n  3250K .......... .......... .......... .......... .......... 18.0M\n  3300K .......... .......... .......... .......... ..........  133M\n  3350K .......... .......... .......... .......... .......... 1.07M\n  3400K .......... .......... .......... .......... ..........  138M\n  3450K .......... .......... .......... .......... ..........  150M\n  3500K .......... .......... .......... .......... .......... 1.24M\n  3550K .......... .......... .......... .......... .......... 19.7M\n  3600K .......... .......... .......... .......... .......... 1.07M\n  3650K .......... .......... .......... .......... ..........  143M\n  3700K .......... .......... .......... .......... ..........  149M\n  3750K .......... .......... .......... .......... .......... 1.23M\n  3800K .......... .......... .......... .......... .......... 20.6M\n  3850K .......... .......... .......... .......... ..........  143M\n  3900K .......... .......... .......... .......... .......... 1.06M\n  3950K .......... .......... .......... .......... ..........  132M\n  4000K .......... .......... .......... .......... ..........  141M\n  4050K .......... .......... .......... .......... .......... 1.24M\n  4100K .......... .......... .......... .......... .......... 22.1M\n  4150K .......... .......... .......... .......... ..........  138M\n  4200K .......... .......... .......... .......... .......... 1.06M\n  4250K .......... .......... .......... .......... ..........  148M\n  4300K .......... .......... .......... .......... ..........  152M\n  4350K .......... .......... .......... .......... .......... 1.23M\n  4400K .......... .......... .......... .......... .......... 25.0M\n  4450K .......... .......... .......... .......... ..........  141M\n  4500K .......... .......... .......... .......... .......... 1.07M\n  4550K .......... .......... .......... .......... .......... 81.7M\n  4600K .......... .......... .......... .......... ..........  136M\n  4650K .......... .......... .......... .......... ..........  138M\n  4700K .......... .......... .......... .......... .......... 1.24M\n  4750K .......... .......... .......... .......... .......... 22.1M\n  4800K .......... .......... .......... .......... ..........  140M\n  4850K .......... .......... .......... .......... .......... 1.07M\n  4900K .......... .......... .......... .......... ..........  141M\n  4950K .......... .......... .......... .......... ..........  143M\n  5000K .......... .......... .......... .......... .......... 87.1M\n  5050K .......... .......... .......... .......... .......... 1.25M\n  5100K .......... .......... .......... .......... .......... 20.4M\n  5150K .......... .......... .......... .......... ..........  113M\n  5200K .......... .......... .......... .......... .......... 1.08M\n  5250K .......... .......... .......... .......... .......... 65.6M\n  5300K .......... .......... .......... .......... ..........  107M\n  5350K .......... .......... .......... .......... .......... 97.9M\n  5400K .......... .......... .......... .......... .......... 1.25M\n  5450K .......... .......... .......... .......... .......... 36.5M\n  5500K .......... .......... .......... .......... .......... 38.2M\n  5550K .......... .......... .......... .......... .......... 21.1M\n  5600K .......... .......... .......... .......... .......... 1.12M\n  5650K .......... .......... .......... .......... ..........  142M\n  5700K .......... .......... .......... .......... ..........  148M\n  5750K .......... .......... .......... .......... .......... 1.24M\n  5800K .......... .......... .......... .......... ..........  116M\n  5850K .......... .......... .......... .......... .......... 34.1M\n  5900K .......... .......... .......... .......... .......... 41.5M\n  5950K .......... .......... .......... .......... .......... 24.5M\n  6000K .......... .......... .......... .......... .......... 1.12M\n  6050K .......... .......... .......... .......... .......... 88.7M\n  6100K .......... .......... .......... .......... ..........  142M\n  6150K .......... .......... .......... .......... ..........  151M\n  6200K .......... .......... .......... .......... .......... 1.24M\n  6250K .......... .......... .......... .......... .......... 36.3M\n  6300K .......... .......... .......... .......... .......... 68.8M\n  6350K .......... .......... .......... .......... .......... 90.5M\n  6400K .......... .......... .......... .......... .......... 1.09M\n  6450K .......... .......... .......... .......... .......... 91.3M\n  6500K .......... .......... .......... .......... ..........  137M\n  6550K .......... .......... .......... .......... ..........  157M\n  6600K .......... .......... .......... .......... .......... 1.23M\n  6650K .......... .......... .......... .......... ..........  139M\n  6700K .......... .......... .......... .......... .......... 26.5M\n  6750K .......... .......... .......... .......... .......... 96.9M\n  6800K .......... .......... .......... .......... ..........  120M\n  6850K .......... .......... .......... .......... .......... 1.10M\n  6900K .......... .......... .......... .......... .......... 82.4M\n  6950K .......... .......... .......... .......... ..........  108M\n  7000K .......... .......... .......... .......... ..........  115M\n  7050K .......... .......... .......... .......... .......... 1.22M\n  7100K .......... .......... .......... .......... ..........  133M\n  7150K .......... .......... .......... .......... .......... 33.3M\n  7200K .......... .......... .......... .......... ..........  111M\n  7250K .......... .......... .......... .......... .......... 90.6M\n  7300K .......... .......... .......... .......... .......... 20.5M\n  7350K .......... .......... .......... .......... .......... 1.15M\n  7400K .......... .......... .......... .......... ..........  102M\n  7450K .......... .......... .......... .......... ..........  143M\n  7500K .......... .......... .......... .......... ..........  127M\n  7550K .......... .......... .......... .......... .......... 1.20M\n  7600K .......... .......... .......... .......... ..........  115M\n  7650K .......... .......... .......... .......... .......... 77.4M\n  7700K .......... .......... .......... .......... ..........  130M\n  7750K .......... .......... .......... .......... .......... 69.6M\n  7800K .......... .......... .......... .......... .......... 16.5M\n  7850K .......... .......... .......... .......... .......... 1.17M\n  7900K .......... .......... .......... .......... ..........  107M\n  7950K .......... .......... .......... .......... ..........  137M\n  8000K .......... .......... .......... .......... ..........  142M\n  8050K .......... .......... .......... .......... .......... 1.20M\n  8100K .......... .......... .......... .......... ..........  145M\n  8150K .......... .......... .......... .......... ..........  130M\n  8200K .......... .......... .......... .......... .......... 62.6M\n  8250K .......... .......... .......... .......... ..........  132M\n  8300K .......... .......... .......... .......... .......... 15.4M\n  8350K .......... .......... .......... .......... .......... 1.17M\n  8400K .......... .......... .......... .......... ..........  103M\n  8450K .......... .......... .......... .......... ..........  140M\n  8500K .......... .......... .......... .......... ..........  148M\n  8550K .......... .......... .......... .......... ..........  154M\n  8600K .......... .......... .......... .......... .......... 1.19M\n  8650K .......... .......... .......... .......... ..........  130M\n  8700K .......... .......... .......... .......... ..........  126M\n  8750K .......... .......... .......... .......... ..........  146M\n  8800K .......... .......... .......... .......... ..........  133M\n  8850K .......... .......... .......... .......... .......... 16.2M\n  8900K .......... .......... .......... .......... .......... 1.17M\n  8950K .......... .......... .......... .......... ..........  122M\n  9000K .......... .......... .......... .......... ..........  134M\n  9050K .......... .......... .......... .......... ..........  149M\n  9100K .......... .......... .......... .......... ..........  140M\n  9150K .......... .......... .......... .......... .......... 1.20M\n  9200K .......... .......... .......... .......... ..........  115M\n  9250K .......... .......... .......... .......... ..........  156M\n  9300K .......... .......... .......... .......... ..........  139M\n  9350K .......... .......... .......... .......... .......... 91.8M\n  9400K .......... .......... .......... .......... .......... 16.7M\n  9450K .......... .......... .......... .......... .......... 1.16M\n  9500K .......... .......... .......... .......... ..........  124M\n  9550K .......... .......... .......... .......... ..........  137M\n  9600K .......... .......... .......... .......... ..........  125M\n  9650K .......... .......... .......... .......... ..........  138M\n  9700K .......... .......... .......... .......... .......... 1.21M\n  9750K .......... .......... .......... .......... ..........  118M\n  9800K .......... .......... .......... .......... ..........  133M\n  9850K .......... .......... .......... .......... ..........  135M\n  9900K .......... .......... .......... .......... .......... 10.7M\n  9950K .......... .......... .......... .......... .......... 4.10M\n 10000K .......... .......... .......... .......... .......... 3.96M\n 10050K .......... .......... .......... .......... .......... 2.95M\n 10100K .......... .......... .......... .......... .......... 4.86M\n 10150K .......... .......... .......... .......... .......... 9.51M\n 10200K .......... .......... .......... .......... .......... 3.76M\n 10250K .......... .......... .......... .......... .......... 4.33M\n 10300K .......... .......... .......... .......... .......... 4.47M\n 10350K .......... .......... .......... .......... .......... 7.95M\n 10400K .......... .......... .......... .......... .......... 3.79M\n 10450K .......... .......... .......... .......... .......... 4.80M\n 10500K .......... .......... .......... .......... .......... 4.01M\n 10550K .......... .......... .......... .......... .......... 8.19M\n 10600K .......... .......... .......... .......... .......... 3.85M\n 10650K .......... .......... .......... .......... .......... 4.48M\n 10700K .......... .......... .......... .......... .......... 3.92M\n 10750K .......... .......... .......... .......... .......... 8.30M\n 10800K .......... .......... .......... .......... .......... 4.08M\n 10850K .......... .......... .......... .......... .......... 4.03M\n 10900K .......... .......... .......... .......... .......... 3.85M\n 10950K .......... .......... .......... .......... .......... 8.18M\n 11000K .......... .......... .......... .......... .......... 3.89M\n 11050K .......... .......... .......... .......... .......... 4.10M\n 11100K .......... .......... .......... .......... .......... 3.79M\n 11150K .......... .......... .......... .......... .......... 8.17M\n 11200K .......... .......... .......... .......... .......... 4.41M\n 11250K .......... .......... .......... .......... .......... 4.18M\n 11300K .......... .......... .......... .......... .......... 4.34M\n 11350K .......... .......... .......... .......... .......... 4.10M\n 11400K .......... .......... .......... .......... .......... 8.00M\n 11450K .......... .......... .......... .......... .......... 4.22M\n 11500K .......... .......... .......... .......... .......... 3.95M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.55M\n 50150K .......... .......... .......... .......... .......... 4.57M\n 50200K .......... .......... .......... .......... .......... 4.47M\n 50250K .......... .......... .......... .......... .......... 9.02M\n 50300K .......... .......... .......... .......... .......... 4.58M\n 50350K .......... .......... .......... .......... .......... 4.14M\n 50400K .......... .......... .......... .......... .......... 5.29M\n 50450K .......... .......... .......... .......... .......... 9.10M\n 50500K .......... .......... .......... .......... .......... 4.50M\n 50550K .......... .......... .......... .......... .......... 4.25M\n 50600K .......... .......... .......... .......... .......... 5.06M\n 50650K .......... .......... .......... .......... .......... 7.28M\n 50700K .......... .......... .......... .......... .......... 4.95M\n 50750K .......... .......... .......... .......... .......... 4.54M\n 50800K .......... .......... .......... .......... .......... 4.35M\n 50850K .......... .......... .......... .......... .......... 8.16M\n 50900K .......... .......... .......... .......... .......... 4.56M\n 50950K .......... .......... .......... .......... .......... 4.15M\n 51000K .......... .......... .......... .......... .......... 5.03M\n 51050K .......... .......... .......... .......... .......... 7.94M\n 51100K .......... .......... .......... .......... .......... 4.39M\n 51150K .......... .......... .......... .......... .......... 4.31M\n 51200K .......... .......... .......... .......... .......... 4.59M\n 51250K .......... .......... .......... .......... .......... 4.60M\n 51300K .......... .......... .......... .......... .......... 8.86M\n 51350K .......... .......... .......... .......... .......... 4.55M\n 51400K .......... .......... .......... .......... .......... 3.78M\n 51450K .......... .......... .......... .......... .......... 5.10M\n 51500K .......... .......... .......... .......... .......... 7.95M\n 51550K .......... .......... .......... .......... .......... 4.56M\n 51600K .......... .......... .......... .......... .......... 4.49M\n 51650K .......... .......... .......... .......... .......... 4.60M\n 51700K .......... .......... .......... .......... .......... 4.12M\n 51750K .......... .......... .......... .......... .......... 11.7M\n 51800K .......... .......... .......... .......... .......... 3.98M\n 51850K .......... .......... .......... .......... .......... 4.52M\n 51900K .......... .......... .......... .......... .......... 4.23M\n 51950K .......... .......... .......... .......... .......... 10.7M\n 52000K .......... .......... .......... .......... .......... 4.13M\n 52050K .......... .......... .......... .......... .......... 4.53M\n 52100K .......... .......... .......... .......... .......... 4.54M\n 52150K .......... .......... .......... .......... .......... 8.57M\n 52200K .......... .......... .......... .......... .......... 4.47M\n 52250K .......... .......... .......... .......... .......... 4.33M\n 52300K .......... .......... .......... .......... .......... 4.47M\n 52350K .......... .......... .......... .......... .......... 8.55M\n 52400K .......... .......... .......... .......... .......... 4.41M\n 52450K .......... .......... .......... .......... .......... 4.59M\n 52500K .......... .......... .......... .......... .......... 4.71M\n 52550K .......... .......... .......... .......... .......... 6.06M\n 52600K .......... .......... .......... .......... .......... 5.68M\n 52650K .......... .......... .......... .......... .......... 4.62M\n 52700K .......... .......... .......... .......... .......... 4.62M\n 52750K .......... .......... .......... .......... .......... 8.88M\n 52800K .......... .......... .......... .......... .......... 4.26M\n 52850K .......... .......... .......... .......... .......... 3.86M\n 52900K .......... .......... .......... .......... .......... 4.66M\n 52950K .......... .......... .......... .......... .......... 8.43M\n 53000K .......... .......... .......... .......... .......... 4.34M\n 53050K .......... .......... .......... .......... .......... 4.43M\n 53100K .......... .......... .......... .......... .......... 4.54M\n 53150K .......... .......... .......... .......... .......... 7.87M\n 53200K .......... .......... .......... .......... .......... 4.29M\n 53250K .......... .......... .......... .......... .......... 4.20M\n 53300K .......... .......... .......... .......... .......... 4.82M\n 53350K .......... .......... .......... .......... .......... 9.30M\n 53400K .......... .......... .......... .......... .......... 4.05M\n 53450K .......... .......... .......... .......... .......... 4.48M\n 53500K .......... .......... .......... .......... .......... 4.47M\n 53550K .......... .......... .......... .......... .......... 8.32M\n 53600K .......... .......... .......... .......... .......... 4.41M\n 53650K .......... .......... .......... .......... .......... 4.10M\n 53700K .......... .......... .......... .......... .......... 4.45M\n 53750K .......... .......... .......... .......... .......... 8.16M\n 53800K .......... .......... .......... .......... .......... 4.95M\n 53850K .......... .......... .......... .......... .......... 4.34M\n 53900K .......... .......... .......... .......... .......... 4.68M\n 53950K .......... .......... .......... .......... .......... 4.49M\n 54000K .......... .......... .......... .......... .......... 8.54M\n 54050K .......... .......... .......... .......... .......... 4.26M\n 54100K .......... .......... .......... .......... .......... 4.37M\n 54150K .......... .......... .......... .......... .......... 4.42M\n 54200K .......... .......... .......... .......... .......... 8.15M\n 54250K .......... .......... .......... .......... .......... 3.83M\n 54300K .......... .......... .......... .......... .......... 5.27M\n 54350K .......... .......... .......... .......... .......... 4.57M\n 54400K .......... .......... .......... .......... .......... 8.51M\n 54450K .......... .......... .......... .......... .......... 4.47M\n 54500K .......... .......... .......... .......... .......... 4.58M\n 54550K .......... .......... .......... .......... .......... 4.63M\n 54600K .......... .......... .......... .......... .......... 8.82M\n 54650K .......... .......... .......... .......... .......... 4.15M\n 54700K .......... .......... .......... .......... .......... 4.51M\n 54750K .......... .......... .......... .......... .......... 4.81M\n 54800K .......... .......... .......... .......... .......... 8.69M\n 54850K .......... .......... .......... .......... .......... 4.65M\n 54900K .......... .......... .......... .......... .......... 4.12M\n 54950K .......... .......... .......... .......... .......... 4.93M\n 55000K .......... .......... .......... .......... .......... 8.88M\n 55050K .......... .......... .......... .......... .......... 4.43M\n 55100K .......... .......... .......... .......... .......... 4.16M\n 55150K .......... .......... .......... .......... .......... 4.54M\n 55200K .......... .......... .......... .......... .......... 4.46M\n 55250K .......... .......... .......... .......... .......... 8.38M\n 55300K .......... .......... .......... .......... .......... 4.34M\n 55350K .......... .......... .......... .......... .......... 4.45M\n 55400K .......... .......... .......... .......... .......... 4.55M\n 55450K .......... .......... .......... .......... .......... 8.47M\n 55500K .......... .......... .......... .......... .......... 4.50M\n 55550K .......... .......... .......... .......... .......... 4.40M\n 55600K .......... .......... .......... .......... .......... 4.45M\n 55650K .......... .......... .......... .......... .......... 7.16M\n 55700K .......... .......... .......... .......... .......... 4.71M\n 55750K .......... .......... .......... .......... .......... 4.41M\n 55800K .......... .......... .......... .......... .......... 4.37M\n 55850K .......... .......... .......... .......... .......... 4.12M\n 55900K .......... .......... .......... .......... .......... 6.63M\n 55950K .......... .......... .......... .......... .......... 4.25M\n 56000K .......... .......... .......... .......... .......... 4.63M\n 56050K .......... .......... .......... .......... .......... 8.62M\n 56100K .......... .......... .......... .......... .......... 4.28M\n 56150K .......... .......... .......... .......... .......... 4.36M\n 56200K .......... .......... .......... .......... .......... 4.32M\n 56250K .......... .......... .......... .......... .......... 7.86M\n 56300K .......... .......... .......... .......... .......... 4.21M\n 56350K .......... .......... .......... .......... .......... 4.09M\n 56400K .......... .......... .......... .......... .......... 4.87M\n 56450K .......... .......... .......... .......... .......... 10.0M\n 56500K .......... .......... .......... .......... .......... 4.73M\n 56550K .......... .......... .......... .......... .......... 4.57M\n 56600K .......... .......... .......... .......... .......... 4.45M\n 56650K .......... .......... .......... .......... .......... 8.46M\n 56700K .......... .......... .......... .......... .......... 4.70M\n 56750K .......... .......... .......... .......... .......... 4.34M\n 56800K .......... .......... .......... .......... .......... 4.39M\n 56850K .......... .......... .......... .......... .......... 4.64M\n 56900K .......... .......... .......... .......... .......... 8.56M\n 56950K .......... .......... .......... .......... .......... 4.46M\n 57000K .......... .......... .......... .......... .......... 4.62M\n 57050K .......... .......... .......... .......... .......... 4.53M\n 57100K .......... .......... .......... .......... .......... 8.16M\n 57150K .......... .......... .......... .......... .......... 4.74M\n 57200K .......... .......... .......... .......... .......... 4.04M\n 57250K .......... .......... .......... .......... .......... 7.19M\n 57300K .......... .......... .......... .......... .......... 3.40M\n 57350K .......... .......... .......... .......... .......... 3.52M\n 57400K .......... .......... .......... .......... .......... 3.83M\n 57450K .......... .......... .......... .......... .......... 5.94M\n 57500K .......... .......... .......... .......... .......... 3.91M\n 57550K .......... .......... .......... .......... .......... 3.60M\n 57600K .......... .......... .......... .......... .......... 3.46M\n 57650K .......... .......... .......... .......... .......... 6.67M\n 57700K .......... .......... .......... .......... .......... 3.58M\n 57750K .......... .......... .......... .......... .......... 3.56M\n 57800K .......... .......... .......... .......... .......... 3.49M\n 57850K .......... .......... .......... .......... .......... 6.71M\n 57900K .......... .......... .......... .......... .......... 3.58M\n 57950K .......... .......... .......... .......... .......... 3.61M\n 58000K .......... .......... .......... .......... .......... 3.41M\n 58050K .......... .......... .......... .......... .......... 6.81M\n 58100K .......... .......... .......... .......... .......... 3.39M\n 58150K .......... .......... .......... .......... .......... 3.84M\n 58200K .......... .......... .......... .......... .......... 3.46M\n 58250K .......... .......... .......... .......... .......... 6.88M\n 58300K .......... .......... .......... .......... .......... 3.58M\n 58350K .......... .......... .......... .......... .......... 3.61M\n 58400K .......... .......... .......... .......... .......... 3.40M\n 58450K .......... .......... .......... .......... .......... 6.83M\n 58500K .......... .......... .......... .......... .......... 3.37M\n 58550K .......... .......... .......... .......... .......... 4.54M\n 58600K .......... .......... .......... .......... .......... 3.65M\n 58650K .......... .......... .......... .......... .......... 8.86M\n 58700K .......... .......... .......... .......... .......... 4.57M\n 58750K .......... .......... .......... .......... .......... 4.32M\n 58800K .......... .......... .......... .......... .......... 4.09M\n 58850K .......... .......... .......... .......... .......... 7.23M\n 58900K .......... .......... .......... .......... .......... 4.45M\n 58950K .......... .......... .......... .......... .......... 4.62M\n 59000K .......... .......... .......... .......... .......... 4.47M\n 59050K .......... .......... .......... .......... .......... 4.57M\n 59100K .......... .......... .......... .......... .......... 9.10M\n 59150K .......... .......... .......... .......... .......... 4.53M\n 59200K .......... .......... .......... .......... .......... 4.46M\n 59250K .......... .......... .......... .......... .......... 3.69M\n 59300K .......... .......... .......... .......... .......... 5.27M\n 59350K .......... .......... .......... .......... .......... 8.47M\n 59400K .......... .......... .......... .......... .......... 4.30M\n 59450K .......... .......... .......... .......... .......... 4.46M\n 59500K .......... .......... .......... .......... .......... 4.43M\n 59550K .......... .......... .......... .......... .......... 7.63M\n 59600K .......... .......... .......... .......... .......... 4.95M\n 59650K .......... .......... .......... .......... .......... 4.44M\n 59700K .......... .......... .......... .......... .......... 4.58M\n 59750K .......... .......... .......... .......... .......... 8.30M\n 59800K .......... .......... .......... .......... .......... 4.42M\n 59850K .......... .......... .......... .......... .......... 4.14M\n 59900K .......... .......... .......... .......... .......... 4.18M\n 59950K .......... .......... .......... .......... .......... 8.53M\n 60000K .......... .......... .......... .......... .......... 4.55M\n 60050K .......... .......... .......... .......... .......... 4.43M\n 60100K .......... .......... .......... .......... .......... 4.56M\n 60150K .......... .......... .......... .......... .......... 7.34M\n 60200K .......... .......... .......... .......... .......... 5.29M\n 60250K .......... .......... .......... .......... .......... 4.58M\n 60300K .......... .......... .......... .......... .......... 4.04M\n 60350K .......... .......... .......... .......... .......... 12.2M\n 60400K .......... .......... .......... .......... .......... 4.51M\n 60450K .......... .......... .......... .......... .......... 4.49M\n 60500K .......... .......... .......... .......... .......... 4.73M\n 60550K .......... .......... .......... .......... .......... 8.24M\n 60600K .......... .......... .......... .......... ..........  670K\n 60650K .......... .........                                   91.6M=15s\n\n2024-06-10 19:02:50 (4.07 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-06-10 19:02:54--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  188K 4s\n    50K .......... .......... .......... .......... .......... 12%  282K 3s\n   100K .......... .......... .......... .......... .......... 18%  564K 2s\n   150K .......... .......... .......... .......... .......... 24%  560K 2s\n   200K .......... .......... .......... .......... .......... 30%  388K 2s\n   250K .......... .......... .......... .......... .......... 36% 1023K 1s\n   300K .......... .......... .......... .......... .......... 42%  564K 1s\n   350K .......... .......... .......... .......... .......... 48%  565K 1s\n   400K .......... .......... .......... .......... .......... 54%  563K 1s\n   450K .......... .......... .......... .......... .......... 60%  564K 1s\n   500K .......... .......... .......... .......... .......... 66%  564K 1s\n   550K .......... .......... .......... .......... .......... 72% 1.23M 0s\n   600K .......... .......... .......... .......... .......... 78% 1017K 0s\n   650K .......... .......... .......... .......... .......... 84%  564K 0s\n   700K .......... .......... .......... .......... .......... 90% 4.54M 0s\n   750K .......... .......... .......... .......... .......... 96%  643K 0s\n   800K .......... .......... .......                         100% 10.8M=1.5s\n\n2024-06-10 19:02:56 (548 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2024-06-10T19:03:10.329565",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 53.30062556266785, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-06-10 19:02:35--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  188K    50K .......... .......... .......... .......... ..........  282K   100K .......... .......... .......... .......... ..........  561K   150K .......... .......... .......... .......... ..........  384K   200K .......... .......... .......... .......... ..........  564K   250K .......... .......... .......... .......... ..........  565K   300K .......... .......... .......... .......... .......... 1.03M   350K .......... .......... .......... .......... ..........  564K   400K .......... .......... .......... .......... ..........  564K   450K .......... .......... .......... .......... ..........  563K   500K .......... .......... .......... .......... .......... 1.18M   550K .......... .......... .......... .......... .......... 1.03M   600K .......... .......... .......... .......... .......... 1.17M   650K .......... .......... .......... .......... .......... 1.03M   700K .......... .......... .......... .......... .......... 1.18M   750K .......... .......... .......... .......... .......... 1.03M   800K .......... .......... .......... .......... ..........  567K   850K .......... .......... .......... .......... .......... 81.4M   900K .......... .......... .......... .......... .......... 1.18M   950K .......... .......... .......... .......... .......... 1.04M  1000K .......... .......... .......... .......... .......... 1.17M  1050K .......... .......... .......... .......... .......... 1.05M  1100K .......... .......... .......... .......... .......... 72.3M  1150K .......... .......... .......... .......... .......... 1.17M  1200K .......... .......... .......... .......... .......... 1.05M  1250K .......... .......... .......... .......... .......... 1.21M  1300K .......... .......... .......... .......... .......... 1.03M  1350K .......... .......... .......... .......... ..........  122M  1400K .......... .......... .......... .......... .......... 1.20M  1450K .......... .......... .......... .......... .......... 29.2M  1500K .......... .......... .......... .......... .......... 1.06M  1550K .......... .......... .......... .......... .......... 1.20M  1600K .......... .......... .......... .......... .......... 21.6M  1650K .......... .......... .......... .......... .......... 1.07M  1700K .......... .......... .......... .......... .......... 1.20M  1750K .......... .......... .......... .......... .......... 19.0M  1800K .......... .......... .......... .......... .......... 1.07M  1850K .......... .......... .......... .......... .......... 63.6M  1900K .......... .......... .......... .......... .......... 1.22M  1950K .......... .......... .......... .......... .......... 18.3M  2000K .......... .......... .......... .......... .......... 1.07M  2050K .......... .......... .......... .......... .......... 86.6M  2100K .......... .......... .......... .......... .......... 1.17M  2150K .......... .......... .......... .......... .......... 73.8M  2200K .......... .......... .......... .......... .......... 1.06M  2250K .......... .......... .......... .......... ..........  144M  2300K .......... .......... .......... .......... .......... 1.22M  2350K .......... .......... .......... .......... .......... 11.8M  2400K .......... .......... .......... .......... .......... 1.11M  2450K .......... .......... .......... .......... ..........  139M  2500K .......... .......... .......... .......... .......... 1.22M  2550K .......... .......... .......... .......... .......... 19.6M  2600K .......... .......... .......... .......... .......... 1.08M  2650K .......... .......... .......... .......... ..........  140M  2700K .......... .......... .......... .......... ..........  150M  2750K .......... .......... .......... .......... .......... 1.16M  2800K .......... .......... .......... .......... .......... 21.3M  2850K .......... .......... .......... .......... .......... 1.10M  2900K .......... .......... .......... .......... ..........  143M  2950K .......... .......... .......... .......... .......... 1.24M  3000K .......... .......... .......... .......... .......... 17.3M  3050K .......... .......... .......... .......... ..........  142M  3100K .......... .......... .......... .......... .......... 1.06M  3150K .......... .......... .......... .......... ..........  126M  3200K .......... .......... .......... .......... .......... 1.24M  3250K .......... .......... .......... .......... .......... 18.0M  3300K .......... .......... .......... .......... ..........  133M  3350K .......... .......... .......... .......... .......... 1.07M  3400K .......... .......... .......... .......... ..........  138M  3450K .......... .......... .......... .......... ..........  150M  3500K .......... .......... .......... .......... .......... 1.24M  3550K .......... .......... .......... .......... .......... 19.7M  3600K .......... .......... .......... .......... .......... 1.07M  3650K .......... .......... .......... .......... ..........  143M  3700K .......... .......... .......... .......... ..........  149M  3750K .......... .......... .......... .......... .......... 1.23M  3800K .......... .......... .......... .......... .......... 20.6M  3850K .......... .......... .......... .......... ..........  143M  3900K .......... .......... .......... .......... .......... 1.06M  3950K .......... .......... .......... .......... ..........  132M  4000K .......... .......... .......... .......... ..........  141M  4050K .......... .......... .......... .......... .......... 1.24M  4100K .......... .......... .......... .......... .......... 22.1M  4150K .......... .......... .......... .......... ..........  138M  4200K .......... .......... .......... .......... .......... 1.06M  4250K .......... .......... .......... .......... ..........  148M  4300K .......... .......... .......... .......... ..........  152M  4350K .......... .......... .......... .......... .......... 1.23M  4400K .......... .......... .......... .......... .......... 25.0M  4450K .......... .......... .......... .......... ..........  141M  4500K .......... .......... .......... .......... .......... 1.07M  4550K .......... .......... .......... .......... .......... 81.7M  4600K .......... .......... .......... .......... ..........  136M  4650K .......... .......... .......... .......... ..........  138M  4700K .......... .......... .......... .......... .......... 1.24M  4750K .......... .......... .......... .......... .......... 22.1M  4800K .......... .......... .......... .......... ..........  140M  4850K .......... .......... .......... .......... .......... 1.07M  4900K .......... .......... .......... .......... ..........  141M  4950K .......... .......... .......... .......... ..........  143M  5000K .......... .......... .......... .......... .......... 87.1M  5050K .......... .......... .......... .......... .......... 1.25M  5100K .......... .......... .......... .......... .......... 20.4M  5150K .......... .......... .......... .......... ..........  113M  5200K .......... .......... .......... .......... .......... 1.08M  5250K .......... .......... .......... .......... .......... 65.6M  5300K .......... .......... .......... .......... ..........  107M  5350K .......... .......... .......... .......... .......... 97.9M  5400K .......... .......... .......... .......... .......... 1.25M  5450K .......... .......... .......... .......... .......... 36.5M  5500K .......... .......... .......... .......... .......... 38.2M  5550K .......... .......... .......... .......... .......... 21.1M  5600K .......... .......... .......... .......... .......... 1.12M  5650K .......... .......... .......... .......... ..........  142M  5700K .......... .......... .......... .......... ..........  148M  5750K .......... .......... .......... .......... .......... 1.24M  5800K .......... .......... .......... .......... ..........  116M  5850K .......... .......... .......... .......... .......... 34.1M  5900K .......... .......... .......... .......... .......... 41.5M  5950K .......... .......... .......... .......... .......... 24.5M  6000K .......... .......... .......... .......... .......... 1.12M  6050K .......... .......... .......... .......... .......... 88.7M  6100K .......... .......... .......... .......... ..........  142M  6150K .......... .......... .......... .......... ..........  151M  6200K .......... .......... .......... .......... .......... 1.24M  6250K .......... .......... .......... .......... .......... 36.3M  6300K .......... .......... .......... .......... .......... 68.8M  6350K .......... .......... .......... .......... .......... 90.5M  6400K .......... .......... .......... .......... .......... 1.09M  6450K .......... .......... .......... .......... .......... 91.3M  6500K .......... .......... .......... .......... ..........  137M  6550K .......... .......... .......... .......... ..........  157M  6600K .......... .......... .......... .......... .......... 1.23M  6650K .......... .......... .......... .......... ..........  139M  6700K .......... .......... .......... .......... .......... 26.5M  6750K .......... .......... .......... .......... .......... 96.9M  6800K .......... .......... .......... .......... ..........  120M  6850K .......... .......... .......... .......... .......... 1.10M  6900K .......... .......... .......... .......... .......... 82.4M  6950K .......... .......... .......... .......... ..........  108M  7000K .......... .......... .......... .......... ..........  115M  7050K .......... .......... .......... .......... .......... 1.22M  7100K .......... .......... .......... .......... ..........  133M  7150K .......... .......... .......... .......... .......... 33.3M  7200K .......... .......... .......... .......... ..........  111M  7250K .......... .......... .......... .......... .......... 90.6M  7300K .......... .......... .......... .......... .......... 20.5M  7350K .......... .......... .......... .......... .......... 1.15M  7400K .......... .......... .......... .......... ..........  102M  7450K .......... .......... .......... .......... ..........  143M  7500K .......... .......... .......... .......... ..........  127M  7550K .......... .......... .......... .......... .......... 1.20M  7600K .......... .......... .......... .......... ..........  115M  7650K .......... .......... .......... .......... .......... 77.4M  7700K .......... .......... .......... .......... ..........  130M  7750K .......... .......... .......... .......... .......... 69.6M  7800K .......... .......... .......... .......... .......... 16.5M  7850K .......... .......... .......... .......... .......... 1.17M  7900K .......... .......... .......... .......... ..........  107M  7950K .......... .......... .......... .......... ..........  137M  8000K .......... .......... .......... .......... ..........  142M  8050K .......... .......... .......... .......... .......... 1.20M  8100K .......... .......... .......... .......... ..........  145M  8150K .......... .......... .......... .......... ..........  130M  8200K .......... .......... .......... .......... .......... 62.6M  8250K .......... .......... .......... .......... ..........  132M  8300K .......... .......... .......... .......... .......... 15.4M  8350K .......... .......... .......... .......... .......... 1.17M  8400K .......... .......... .......... .......... ..........  103M  8450K .......... .......... .......... .......... ..........  140M  8500K .......... .......... .......... .......... ..........  148M  8550K .......... .......... .......... .......... ..........  154M  8600K .......... .......... .......... .......... .......... 1.19M  8650K .......... .......... .......... .......... ..........  130M  8700K .......... .......... .......... .......... ..........  126M  8750K .......... .......... .......... .......... ..........  146M  8800K .......... .......... .......... .......... ..........  133M  8850K .......... .......... .......... .......... .......... 16.2M  8900K .......... .......... .......... .......... .......... 1.17M  8950K .......... .......... .......... .......... ..........  122M  9000K .......... .......... .......... .......... ..........  134M  9050K .......... .......... .......... .......... ..........  149M  9100K .......... .......... .......... .......... ..........  140M  9150K .......... .......... .......... .......... .......... 1.20M  9200K .......... .......... .......... .......... ..........  115M  9250K .......... .......... .......... .......... ..........  156M  9300K .......... .......... .......... .......... ..........  139M  9350K .......... .......... .......... .......... .......... 91.8M  9400K .......... .......... .......... .......... .......... 16.7M  9450K .......... .......... .......... .......... .......... 1.16M  9500K .......... .......... .......... .......... ..........  124M  9550K .......... .......... .......... .......... ..........  137M  9600K .......... .......... .......... .......... ..........  125M  9650K .......... .......... .......... .......... ..........  138M  9700K .......... .......... .......... .......... .......... 1.21M  9750K .......... .......... .......... .......... ..........  118M  9800K .......... .......... .......... .......... ..........  133M  9850K .......... .......... .......... .......... ..........  135M  9900K .......... .......... .......... .......... .......... 10.7M  9950K .......... .......... .......... .......... .......... 4.10M 10000K .......... .......... .......... .......... .......... 3.96M 10050K .......... .......... .......... .......... .......... 2.95M 10100K .......... .......... .......... .......... .......... 4.86M 10150K .......... .......... .......... .......... .......... 9.51M 10200K .......... .......... .......... .......... .......... 3.76M 10250K .......... .......... .......... .......... .......... 4.33M 10300K .......... .......... .......... .......... .......... 4.47M 10350K .......... .......... .......... .......... .......... 7.95M 10400K .......... .......... .......... .......... .......... 3.79M 10450K .......... .......... .......... .......... .......... 4.80M 10500K .......... .......... .......... .......... .......... 4.01M 10550K .......... .......... .......... .......... .......... 8.19M 10600K .......... .......... .......... .......... .......... 3.85M 10650K .......... .......... .......... .......... .......... 4.48M 10700K .......... .......... .......... .......... .......... 3.92M 10750K .......... .......... .......... .......... .......... 8.30M 10800K .......... .......... .......... .......... .......... 4.08M 10850K .......... .......... .......... .......... .......... 4.03M 10900K .......... .......... .......... .......... .......... 3.85M 10950K .......... .......... .......... .......... .......... 8.18M 11000K .......... .......... .......... .......... .......... 3.89M 11050K .......... .......... .......... .......... .......... 4.10M 11100K .......... .......... .......... .......... .......... 3.79M 11150K .......... .......... .......... .......... .......... 8.17M 11200K .......... .......... .......... .......... .......... 4.41M 11250K .......... .......... .......... .......... .......... 4.18M 11300K .......... .......... .......... .......... .......... 4.34M 11350K .......... .......... .......... .......... .......... 4.10M 11400K .......... .......... .......... .......... .......... 8.00M 11450K .......... .......... .......... .......... .......... 4.22M 11500K .......... .......... .......... .......... .......... 3.95M 11550K .......... .......... .......... .......... .................. 4.55M 50150K .......... .......... .......... .......... .......... 4.57M 50200K .......... .......... .......... .......... .......... 4.47M 50250K .......... .......... .......... .......... .......... 9.02M 50300K .......... .......... .......... .......... .......... 4.58M 50350K .......... .......... .......... .......... .......... 4.14M 50400K .......... .......... .......... .......... .......... 5.29M 50450K .......... .......... .......... .......... .......... 9.10M 50500K .......... .......... .......... .......... .......... 4.50M 50550K .......... .......... .......... .......... .......... 4.25M 50600K .......... .......... .......... .......... .......... 5.06M 50650K .......... .......... .......... .......... .......... 7.28M 50700K .......... .......... .......... .......... .......... 4.95M 50750K .......... .......... .......... .......... .......... 4.54M 50800K .......... .......... .......... .......... .......... 4.35M 50850K .......... .......... .......... .......... .......... 8.16M 50900K .......... .......... .......... .......... .......... 4.56M 50950K .......... .......... .......... .......... .......... 4.15M 51000K .......... .......... .......... .......... .......... 5.03M 51050K .......... .......... .......... .......... .......... 7.94M 51100K .......... .......... .......... .......... .......... 4.39M 51150K .......... .......... .......... .......... .......... 4.31M 51200K .......... .......... .......... .......... .......... 4.59M 51250K .......... .......... .......... .......... .......... 4.60M 51300K .......... .......... .......... .......... .......... 8.86M 51350K .......... .......... .......... .......... .......... 4.55M 51400K .......... .......... .......... .......... .......... 3.78M 51450K .......... .......... .......... .......... .......... 5.10M 51500K .......... .......... .......... .......... .......... 7.95M 51550K .......... .......... .......... .......... .......... 4.56M 51600K .......... .......... .......... .......... .......... 4.49M 51650K .......... .......... .......... .......... .......... 4.60M 51700K .......... .......... .......... .......... .......... 4.12M 51750K .......... .......... .......... .......... .......... 11.7M 51800K .......... .......... .......... .......... .......... 3.98M 51850K .......... .......... .......... .......... .......... 4.52M 51900K .......... .......... .......... .......... .......... 4.23M 51950K .......... .......... .......... .......... .......... 10.7M 52000K .......... .......... .......... .......... .......... 4.13M 52050K .......... .......... .......... .......... .......... 4.53M 52100K .......... .......... .......... .......... .......... 4.54M 52150K .......... .......... .......... .......... .......... 8.57M 52200K .......... .......... .......... .......... .......... 4.47M 52250K .......... .......... .......... .......... .......... 4.33M 52300K .......... .......... .......... .......... .......... 4.47M 52350K .......... .......... .......... .......... .......... 8.55M 52400K .......... .......... .......... .......... .......... 4.41M 52450K .......... .......... .......... .......... .......... 4.59M 52500K .......... .......... .......... .......... .......... 4.71M 52550K .......... .......... .......... .......... .......... 6.06M 52600K .......... .......... .......... .......... .......... 5.68M 52650K .......... .......... .......... .......... .......... 4.62M 52700K .......... .......... .......... .......... .......... 4.62M 52750K .......... .......... .......... .......... .......... 8.88M 52800K .......... .......... .......... .......... .......... 4.26M 52850K .......... .......... .......... .......... .......... 3.86M 52900K .......... .......... .......... .......... .......... 4.66M 52950K .......... .......... .......... .......... .......... 8.43M 53000K .......... .......... .......... .......... .......... 4.34M 53050K .......... .......... .......... .......... .......... 4.43M 53100K .......... .......... .......... .......... .......... 4.54M 53150K .......... .......... .......... .......... .......... 7.87M 53200K .......... .......... .......... .......... .......... 4.29M 53250K .......... .......... .......... .......... .......... 4.20M 53300K .......... .......... .......... .......... .......... 4.82M 53350K .......... .......... .......... .......... .......... 9.30M 53400K .......... .......... .......... .......... .......... 4.05M 53450K .......... .......... .......... .......... .......... 4.48M 53500K .......... .......... .......... .......... .......... 4.47M 53550K .......... .......... .......... .......... .......... 8.32M 53600K .......... .......... .......... .......... .......... 4.41M 53650K .......... .......... .......... .......... .......... 4.10M 53700K .......... .......... .......... .......... .......... 4.45M 53750K .......... .......... .......... .......... .......... 8.16M 53800K .......... .......... .......... .......... .......... 4.95M 53850K .......... .......... .......... .......... .......... 4.34M 53900K .......... .......... .......... .......... .......... 4.68M 53950K .......... .......... .......... .......... .......... 4.49M 54000K .......... .......... .......... .......... .......... 8.54M 54050K .......... .......... .......... .......... .......... 4.26M 54100K .......... .......... .......... .......... .......... 4.37M 54150K .......... .......... .......... .......... .......... 4.42M 54200K .......... .......... .......... .......... .......... 8.15M 54250K .......... .......... .......... .......... .......... 3.83M 54300K .......... .......... .......... .......... .......... 5.27M 54350K .......... .......... .......... .......... .......... 4.57M 54400K .......... .......... .......... .......... .......... 8.51M 54450K .......... .......... .......... .......... .......... 4.47M 54500K .......... .......... .......... .......... .......... 4.58M 54550K .......... .......... .......... .......... .......... 4.63M 54600K .......... .......... .......... .......... .......... 8.82M 54650K .......... .......... .......... .......... .......... 4.15M 54700K .......... .......... .......... .......... .......... 4.51M 54750K .......... .......... .......... .......... .......... 4.81M 54800K .......... .......... .......... .......... .......... 8.69M 54850K .......... .......... .......... .......... .......... 4.65M 54900K .......... .......... .......... .......... .......... 4.12M 54950K .......... .......... .......... .......... .......... 4.93M 55000K .......... .......... .......... .......... .......... 8.88M 55050K .......... .......... .......... .......... .......... 4.43M 55100K .......... .......... .......... .......... .......... 4.16M 55150K .......... .......... .......... .......... .......... 4.54M 55200K .......... .......... .......... .......... .......... 4.46M 55250K .......... .......... .......... .......... .......... 8.38M 55300K .......... .......... .......... .......... .......... 4.34M 55350K .......... .......... .......... .......... .......... 4.45M 55400K .......... .......... .......... .......... .......... 4.55M 55450K .......... .......... .......... .......... .......... 8.47M 55500K .......... .......... .......... .......... .......... 4.50M 55550K .......... .......... .......... .......... .......... 4.40M 55600K .......... .......... .......... .......... .......... 4.45M 55650K .......... .......... .......... .......... .......... 7.16M 55700K .......... .......... .......... .......... .......... 4.71M 55750K .......... .......... .......... .......... .......... 4.41M 55800K .......... .......... .......... .......... .......... 4.37M 55850K .......... .......... .......... .......... .......... 4.12M 55900K .......... .......... .......... .......... .......... 6.63M 55950K .......... .......... .......... .......... .......... 4.25M 56000K .......... .......... .......... .......... .......... 4.63M 56050K .......... .......... .......... .......... .......... 8.62M 56100K .......... .......... .......... .......... .......... 4.28M 56150K .......... .......... .......... .......... .......... 4.36M 56200K .......... .......... .......... .......... .......... 4.32M 56250K .......... .......... .......... .......... .......... 7.86M 56300K .......... .......... .......... .......... .......... 4.21M 56350K .......... .......... .......... .......... .......... 4.09M 56400K .......... .......... .......... .......... .......... 4.87M 56450K .......... .......... .......... .......... .......... 10.0M 56500K .......... .......... .......... .......... .......... 4.73M 56550K .......... .......... .......... .......... .......... 4.57M 56600K .......... .......... .......... .......... .......... 4.45M 56650K .......... .......... .......... .......... .......... 8.46M 56700K .......... .......... .......... .......... .......... 4.70M 56750K .......... .......... .......... .......... .......... 4.34M 56800K .......... .......... .......... .......... .......... 4.39M 56850K .......... .......... .......... .......... .......... 4.64M 56900K .......... .......... .......... .......... .......... 8.56M 56950K .......... .......... .......... .......... .......... 4.46M 57000K .......... .......... .......... .......... .......... 4.62M 57050K .......... .......... .......... .......... .......... 4.53M 57100K .......... .......... .......... .......... .......... 8.16M 57150K .......... .......... .......... .......... .......... 4.74M 57200K .......... .......... .......... .......... .......... 4.04M 57250K .......... .......... .......... .......... .......... 7.19M 57300K .......... .......... .......... .......... .......... 3.40M 57350K .......... .......... .......... .......... .......... 3.52M 57400K .......... .......... .......... .......... .......... 3.83M 57450K .......... .......... .......... .......... .......... 5.94M 57500K .......... .......... .......... .......... .......... 3.91M 57550K .......... .......... .......... .......... .......... 3.60M 57600K .......... .......... .......... .......... .......... 3.46M 57650K .......... .......... .......... .......... .......... 6.67M 57700K .......... .......... .......... .......... .......... 3.58M 57750K .......... .......... .......... .......... .......... 3.56M 57800K .......... .......... .......... .......... .......... 3.49M 57850K .......... .......... .......... .......... .......... 6.71M 57900K .......... .......... .......... .......... .......... 3.58M 57950K .......... .......... .......... .......... .......... 3.61M 58000K .......... .......... .......... .......... .......... 3.41M 58050K .......... .......... .......... .......... .......... 6.81M 58100K .......... .......... .......... .......... .......... 3.39M 58150K .......... .......... .......... .......... .......... 3.84M 58200K .......... .......... .......... .......... .......... 3.46M 58250K .......... .......... .......... .......... .......... 6.88M 58300K .......... .......... .......... .......... .......... 3.58M 58350K .......... .......... .......... .......... .......... 3.61M 58400K .......... .......... .......... .......... .......... 3.40M 58450K .......... .......... .......... .......... .......... 6.83M 58500K .......... .......... .......... .......... .......... 3.37M 58550K .......... .......... .......... .......... .......... 4.54M 58600K .......... .......... .......... .......... .......... 3.65M 58650K .......... .......... .......... .......... .......... 8.86M 58700K .......... .......... .......... .......... .......... 4.57M 58750K .......... .......... .......... .......... .......... 4.32M 58800K .......... .......... .......... .......... .......... 4.09M 58850K .......... .......... .......... .......... .......... 7.23M 58900K .......... .......... .......... .......... .......... 4.45M 58950K .......... .......... .......... .......... .......... 4.62M 59000K .......... .......... .......... .......... .......... 4.47M 59050K .......... .......... .......... .......... .......... 4.57M 59100K .......... .......... .......... .......... .......... 9.10M 59150K .......... .......... .......... .......... .......... 4.53M 59200K .......... .......... .......... .......... .......... 4.46M 59250K .......... .......... .......... .......... .......... 3.69M 59300K .......... .......... .......... .......... .......... 5.27M 59350K .......... .......... .......... .......... .......... 8.47M 59400K .......... .......... .......... .......... .......... 4.30M 59450K .......... .......... .......... .......... .......... 4.46M 59500K .......... .......... .......... .......... .......... 4.43M 59550K .......... .......... .......... .......... .......... 7.63M 59600K .......... .......... .......... .......... .......... 4.95M 59650K .......... .......... .......... .......... .......... 4.44M 59700K .......... .......... .......... .......... .......... 4.58M 59750K .......... .......... .......... .......... .......... 8.30M 59800K .......... .......... .......... .......... .......... 4.42M 59850K .......... .......... .......... .......... .......... 4.14M 59900K .......... .......... .......... .......... .......... 4.18M 59950K .......... .......... .......... .......... .......... 8.53M 60000K .......... .......... .......... .......... .......... 4.55M 60050K .......... .......... .......... .......... .......... 4.43M 60100K .......... .......... .......... .......... .......... 4.56M 60150K .......... .......... .......... .......... .......... 7.34M 60200K .......... .......... .......... .......... .......... 5.29M 60250K .......... .......... .......... .......... .......... 4.58M 60300K .......... .......... .......... .......... .......... 4.04M 60350K .......... .......... .......... .......... .......... 12.2M 60400K .......... .......... .......... .......... .......... 4.51M 60450K .......... .......... .......... .......... .......... 4.49M 60500K .......... .......... .......... .......... .......... 4.73M 60550K .......... .......... .......... .......... .......... 8.24M 60600K .......... .......... .......... .......... ..........  670K 60650K .......... .........                                   91.6M=15s2024-06-10 19:02:50 (4.07 MB/s) - 'exp_quant.zip' saved [62125370]--2024-06-10 19:02:54--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  188K 4s    50K .......... .......... .......... .......... .......... 12%  282K 3s   100K .......... .......... .......... .......... .......... 18%  564K 2s   150K .......... .......... .......... .......... .......... 24%  560K 2s   200K .......... .......... .......... .......... .......... 30%  388K 2s   250K .......... .......... .......... .......... .......... 36% 1023K 1s   300K .......... .......... .......... .......... .......... 42%  564K 1s   350K .......... .......... .......... .......... .......... 48%  565K 1s   400K .......... .......... .......... .......... .......... 54%  563K 1s   450K .......... .......... .......... .......... .......... 60%  564K 1s   500K .......... .......... .......... .......... .......... 66%  564K 1s   550K .......... .......... .......... .......... .......... 72% 1.23M 0s   600K .......... .......... .......... .......... .......... 78% 1017K 0s   650K .......... .......... .......... .......... .......... 84%  564K 0s   700K .......... .......... .......... .......... .......... 90% 4.54M 0s   750K .......... .......... .......... .......... .......... 96%  643K 0s   800K .......... .......... .......                         100% 10.8M=1.5s2024-06-10 19:02:56 (548 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="48.326943159103394">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-06-10 18:53:18.442] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-06-10 18:53:18.443] [jLog] [info] building indexout : ./index[2024-06-10 18:53:18.444] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-06-10 18:53:18.451] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-06-10 18:53:18.451] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-06-10 18:53:18.476] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-06-10 18:53:18.478] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-06-10 18:53:18.536] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-06-10 18:53:18.536] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 817.96 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 687.47 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-06-10 18:53:18.537] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-06-10 18:53:18.537] [puff::index::jointLog] [info] contig count for validation: 23[2024-06-10 18:53:18.538] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-06-10 18:53:18.538] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-06-10 18:53:18.538] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-06-10 18:53:18.538] [puff::index::jointLog] [info] bits per offset entry 6[2024-06-10 18:53:18.538] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-06-10 18:53:18.548] [puff::index::jointLog] [info] # segments = 23[2024-06-10 18:53:18.548] [puff::index::jointLog] [info] total length = 19592[2024-06-10 18:53:18.548] [puff::index::jointLog] [info] Reading the reference files ...[2024-06-10 18:53:18.558] [puff::index::jointLog] [info] positional integer width = 15[2024-06-10 18:53:18.558] [puff::index::jointLog] [info] seqSize = 19592[2024-06-10 18:53:18.558] [puff::index::jointLog] [info] rankSize = 19592[2024-06-10 18:53:18.558] [puff::index::jointLog] [info] edgeVecSize = 0[2024-06-10 18:53:18.558] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela.. 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-06-10 18:53:18.632] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-06-10 18:53:18.632] [puff::index::jointLog] [info] chunk size = 9796[2024-06-10 18:53:18.632] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-06-10 18:53:18.632] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-06-10 18:53:18.634] [puff::index::jointLog] [info] finished populating pos vector[2024-06-10 18:53:18.634] [puff::index::jointLog] [info] writing index components[2024-06-10 18:53:18.647] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-06-10 18:53:18.652] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-06-10 18:53:19.783] [jointLog] [info] setting maxHashResizeThreads to 6[2024-06-10 18:53:19.783] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-06-10 18:53:19.783] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-06-10 18:53:19.783] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-06-10 18:53:19.783] [jointLog] [info] parsing read library format[2024-06-10 18:53:19.783] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 697.11 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0158 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 397.39 us----------------------------------------------------------------------------------| Loading mphf table | Time = 570.21 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 844 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 598.67 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 977.77 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 753.04 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 442.53 us-----------------------------------------[2024-06-10 18:53:20.033] [jointLog] [info] Loading pufferfish index[2024-06-10 18:53:20.034] [jointLog] [info] Loading dense pufferfish index.[2024-06-10 18:53:20.042] [jointLog] [info] done[2024-06-10 18:53:20.042] [jointLog] [info] Index contained 15 targets[2024-06-10 18:53:20.042] [jointLog] [info] Number of decoys : 0[2024-06-10 18:53:20.111] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-06-10 18:53:20.111] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-06-10 18:53:20.113] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-06-10 18:53:20.113] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-06-10 18:53:20.113] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-06-10 18:53:20.113] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-06-10 18:53:20.113] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-06-10 18:53:20.113] [jointLog] [info] Mapping rate = 100%[2024-06-10 18:53:20.113] [jointLog] [info] finished quantifyLibrary()[2024-06-10 18:53:20.118] [jointLog] [info] Starting optimizer[2024-06-10 18:53:20.118] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-06-10 18:53:20.118] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-06-10 18:53:20.119] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-06-10 18:53:20.119] [jointLog] [info] Finished optimizer[2024-06-10 18:53:20.119] [jointLog] [info] writing output [2024-06-10 18:53:20.125] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="32.30806016921997">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-06-10 18:53:55.122] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-06-10 18:53:55.122] [jLog] [info] building indexout : ./index[2024-06-10 18:53:55.123] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-06-10 18:53:55.130] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-06-10 18:53:55.130] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-06-10 18:53:55.142] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-06-10 18:53:55.144] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-06-10 18:53:55.205] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-06-10 18:53:55.205] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 922.88 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 762.91 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-06-10 18:53:55.206] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-06-10 18:53:55.206] [puff::index::jointLog] [info] contig count for validation: 23[2024-06-10 18:53:55.207] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-06-10 18:53:55.207] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-06-10 18:53:55.207] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-06-10 18:53:55.207] [puff::index::jointLog] [info] bits per offset entry 6[2024-06-10 18:53:55.207] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-06-10 18:53:55.218] [puff::index::jointLog] [info] # segments = 23[2024-06-10 18:53:55.218] [puff::index::jointLog] [info] total length = 19592[2024-06-10 18:53:55.218] [puff::index::jointLog] [info] Reading the reference files ...[2024-06-10 18:53:55.227] [puff::index::jointLog] [info] positional integer width = 15[2024-06-10 18:53:55.227] [puff::index::jointLog] [info] seqSize = 19592[2024-06-10 18:53:55.227] [puff::index::jointLog] [info] rankSize = 19592[2024-06-10 18:53:55.227] [puff::index::jointLog] [info] edgeVecSize = 0[2024-06-10 18:53:55.227] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-06-10 18:53:55.301] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-06-10 18:53:55.301] [puff::index::jointLog] [info] chunk size = 9796[2024-06-10 18:53:55.301] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-06-10 18:53:55.301] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-06-10 18:53:55.302] [puff::index::jointLog] [info] finished populating pos vector[2024-06-10 18:53:55.302] [puff::index::jointLog] [info] writing index components[2024-06-10 18:53:55.315] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-06-10 18:53:55.320] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-06-10 18:53:55.410] [jointLog] [info] setting maxHashResizeThreads to 6[2024-06-10 18:53:55.410] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-06-10 18:53:55.410] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-06-10 18:53:55.410] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-06-10 18:53:55.410] [jointLog] [info] parsing read library format[2024-06-10 18:53:55.410] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 688.44 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.2131 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 494.18 us----------------------------------------------------------------------------------| Loading mphf table | Time = 717.05 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 777.25 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 734.16 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.143 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 369.56 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 445.81 us-----------------------------------------[2024-06-10 18:53:55.536] [jointLog] [info] Loading pufferfish index[2024-06-10 18:53:55.537] [jointLog] [info] Loading dense pufferfish index.[2024-06-10 18:53:55.545] [jointLog] [info] done[2024-06-10 18:53:55.545] [jointLog] [info] Index contained 15 targets[2024-06-10 18:53:55.545] [jointLog] [info] Number of decoys : 0[2024-06-10 18:53:55.615] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-06-10 18:53:55.615] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-06-10 18:53:55.617] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-06-10 18:53:55.617] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-06-10 18:53:55.617] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-06-10 18:53:55.617] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-06-10 18:53:55.617] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-06-10 18:53:55.617] [jointLog] [info] Mapping rate = 100%[2024-06-10 18:53:55.617] [jointLog] [info] finished quantifyLibrary()[2024-06-10 18:53:55.622] [jointLog] [info] Starting optimizer[2024-06-10 18:53:55.623] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-06-10 18:53:55.623] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-06-10 18:53:55.623] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-06-10 18:53:55.624] [jointLog] [info] Finished optimizer[2024-06-10 18:53:55.624] [jointLog] [info] writing output [2024-06-10 18:53:55.629] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="32.17757701873779">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 1True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-06-10 18:54:26.949] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-06-10 18:54:26.949] [jLog] [info] building indexout : ./index[2024-06-10 18:54:26.950] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-06-10 18:54:26.958] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-06-10 18:54:26.958] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-06-10 18:54:26.970] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-06-10 18:54:26.972] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-06-10 18:54:27.037] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-06-10 18:54:27.037] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 978.92 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 769.7 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-06-10 18:54:27.039] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-06-10 18:54:27.039] [puff::index::jointLog] [info] contig count for validation: 23[2024-06-10 18:54:27.039] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-06-10 18:54:27.039] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-06-10 18:54:27.040] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-06-10 18:54:27.040] [puff::index::jointLog] [info] bits per offset entry 6[2024-06-10 18:54:27.040] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-06-10 18:54:27.053] [puff::index::jointLog] [info] # segments = 23[2024-06-10 18:54:27.053] [puff::index::jointLog] [info] total length = 19592[2024-06-10 18:54:27.053] [puff::index::jointLog] [info] Reading the reference files ...[2024-06-10 18:54:27.066] [puff::index::jointLog] [info] positional integer width = 15[2024-06-10 18:54:27.066] [puff::index::jointLog] [info] seqSize = 19592[2024-06-10 18:54:27.066] [puff::index::jointLog] [info] rankSize = 19592[2024-06-10 18:54:27.066] [puff::index::jointLog] [info] edgeVecSize = 0[2024-06-10 18:54:27.066] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elap..  elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-06-10 18:54:27.150] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-06-10 18:54:27.150] [puff::index::jointLog] [info] chunk size = 9796[2024-06-10 18:54:27.150] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-06-10 18:54:27.150] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-06-10 18:54:27.151] [puff::index::jointLog] [info] finished populating pos vector[2024-06-10 18:54:27.151] [puff::index::jointLog] [info] writing index components[2024-06-10 18:54:27.165] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-06-10 18:54:27.170] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-06-10 18:54:27.264] [jointLog] [info] setting maxHashResizeThreads to 6[2024-06-10 18:54:27.264] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-06-10 18:54:27.264] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-06-10 18:54:27.264] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-06-10 18:54:27.264] [jointLog] [info] parsing read library format[2024-06-10 18:54:27.264] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 766.72 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.0789 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 412.32 us----------------------------------------------------------------------------------| Loading mphf table | Time = 944.81 us-----------------------------------------[2024-06-10 18:54:27.379] [jointLog] [info] Loading pufferfish index[2024-06-10 18:54:27.380] [jointLog] [info] Loading dense pufferfish index.size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 818.96 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 839.08 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.1138 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 610.57 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 500.72 us-----------------------------------------[2024-06-10 18:54:27.389] [jointLog] [info] done[2024-06-10 18:54:27.389] [jointLog] [info] Index contained 15 targets[2024-06-10 18:54:27.389] [jointLog] [info] Number of decoys : 0[2024-06-10 18:54:27.459] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-06-10 18:54:27.459] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-06-10 18:54:27.461] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-06-10 18:54:27.461] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-06-10 18:54:27.461] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-06-10 18:54:27.461] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-06-10 18:54:27.461] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-06-10 18:54:27.461] [jointLog] [info] Mapping rate = 100%[2024-06-10 18:54:27.461] [jointLog] [info] finished quantifyLibrary()[2024-06-10 18:54:27.466] [jointLog] [info] Starting optimizer[2024-06-10 18:54:27.467] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-06-10 18:54:27.467] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-06-10 18:54:27.468] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-06-10 18:54:27.468] [jointLog] [info] Finished optimizer[2024-06-10 18:54:27.468] [jointLog] [info] writing output [2024-06-10 18:54:27.473] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="36.486215353012085">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "1bb7e9f93caed271",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "793946602419c280",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/3/3/0/dataset_33033fc4-e759-45b3-bde6-2c82d2edf7d0.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-06-10T18:55:00.096740",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-24gd7",  "galaxy_version": "23.1",  "history_id": "39c77153860ac18f",  "id": "59362d73a881f92b",  "inputs": {   "quant_type|afile": {    "id": "1bb7e9f93caed271",    "src": "hda",    "uuid": "032ca876-9556-4269-baa8-a5130ec4b597"   },   "quant_type|transcript": {    "id": "793946602419c280",    "src": "hda",    "uuid": "33033fc4-e759-45b3-bde6-2c82d2edf7d0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1718045704.0000000",    "title": "Job End Time",    "value": "2024-06-10 18:55:04"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1718045702.0000000",    "title": "Job Start Time",    "value": "2024-06-10 18:55:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "8a4f8a7e20b0005b",    "src": "hda",    "uuid": "9f476bce-910f-43f7-ac99-139aedccb615"   },   "postSample": {    "id": "4d819672caaf860b",    "src": "hda",    "uuid": "251f4162-3609-4747-84aa-97fce4d1616e"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 147, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/3/3/0/dataset_33033fc4-e759-45b3-bde6-2c82d2edf7d0.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-06-10 18:55:02.196] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-10 18:55:02.196] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-06-10 18:55:02.197] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat\", fasta = \"/galaxy/server/database/objects/3/3/0/dataset_33033fc4-e759-45b3-bde6-2c82d2edf7d0.dat\" . . .done\n[2024-06-10 18:55:02.856] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-06-10 18:55:03.109] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-06-10 18:55:03.117] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-06-10 18:55:03.117] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-06-10 18:55:03.118] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-10 18:55:03.119] [jointLog] [info] starting optimizer\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-06-10 18:55:03.120] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-10 18:55:03.120] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-06-10 18:55:03.121] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-10 18:55:03.121] [jointLog] [info] finished optimizer\n[2024-06-10 18:55:03.121] [jointLog] [info] writing output\n[2024-06-10 18:55:03.126] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/3/3/0/dataset_33033fc4-e759-45b3-bde6-2c82d2edf7d0.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-06-10 18:55:02.196] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-06-10 18:55:02.196] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-06-10 18:55:02.197] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat\", fasta = \"/galaxy/server/database/objects/3/3/0/dataset_33033fc4-e759-45b3-bde6-2c82d2edf7d0.dat\" . . .done\n[2024-06-10 18:55:02.856] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-06-10 18:55:03.109] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-06-10 18:55:03.117] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-06-10 18:55:03.117] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-06-10 18:55:03.118] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-06-10 18:55:03.119] [jointLog] [info] starting optimizer\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-06-10 18:55:03.120] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-06-10 18:55:03.120] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-06-10 18:55:03.121] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-06-10 18:55:03.121] [jointLog] [info] finished optimizer\n[2024-06-10 18:55:03.121] [jointLog] [info] writing output\n[2024-06-10 18:55:03.126] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-06-10T18:55:14.276604",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_ezrlrm1o.sam v. /tmp/history_bam_converted_to_sam_gq0qnygy.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -13014,8 +13015,8 @@\n 6453:NM_014620:1998:186\t99\tNM_014620\t1999\t1\t50M\t=\t2135\t186\tGTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAG\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 428:NM_153633:1236:178\t83\tNM_014620\t1999\t1\t50M\t=\t1871\t-178\tGTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAG\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 4517:NM_014620:1999:178\t163\tNM_014620\t2000\t1\t50M\t=\t2128\t178\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n+8069:NM_014620:1862:187\t147\tNM_014620\t2000\t1\t50M\t=\t1863\t-187\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 6736:NM_014620:1871:178\t147\tNM_014620\t2000\t1\t50M\t=\t1872\t-178\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n-8069:NM_014620:1862:187\t147\tNM_014620\t2000\t1\t50M\t=\t1863\t-187\tTTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 3725:NM_153633:1366:190\t163\tNM_014620\t2001\t1\t50M\t=\t2141\t190\tTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGAC\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 6899:NM_153633:1366:184\t163\tNM_014620\t2001\t1\t50M\t=\t2135\t184\tTCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGAC\t*\tNH:i:2\tHI:i:1\tAS:i:0\n 5648:NM_014620:1876:175\t83\tNM_014620\t2002\t1\t50M\t=\t1877\t-175\tCTTTTGTATTATTGTTGGGGGGGGGTGTGGGAGGAGAGGGGGCGAAGACA\t*\tNH:i:2\tHI:i:1\tAS:i:0\n@@ -23013,10 +23014,10 @@\n 1776:NM_022658:1915:185\t147\tNM_022658\t2051\t1\t50M\t=\t1916\t-185\tTAACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1065:NM_022658:1903:198\t83\tNM_022658\t2052\t1\t50M\t=\t1904\t-198\tAACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2296:NM_022658:2052:188\t99\tNM_022658\t2053\t1\t50M\t=\t2191\t188\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+2417:NM_022658:1907:195\t83\tNM_022658\t2053\t1\t50M\t=\t1908\t-195\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+4610:NM_022658:1910:192\t83\tNM_022658\t2053\t1\t50M\t=\t1911\t-192\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 108:NM_022658:1901:201\t147\tNM_022658\t2053\t1\t50M\t=\t1902\t-201\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1092:NM_022658:1909:193\t147\tNM_022658\t2053\t1\t50M\t=\t1910\t-193\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-2417:NM_022658:1907:195\t83\tNM_022658\t2053\t1\t50M\t=\t1908\t-195\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-4610:NM_022658:1910:192\t83\tNM_022658\t2053\t1\t50M\t=\t1911\t-192\tACCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7619:NM_022658:2053:198\t99\tNM_022658\t2054\t1\t50M\t=\t2202\t198\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1801:NM_022658:1928:175\t83\tNM_022658\t2054\t1\t50M\t=\t1929\t-175\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3189:NM_022658:1932:171\t83\tNM_022658\t2054\t1\t50M\t=\t1933\t-171\tCCCCAGTAGAGTAGAACTAAATTGCACTGAATGTATAGTTAACTCTGTCT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 36.486215353012085, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/3/3/0/dataset_33033fc4-e759-45b3-bde6-2c82d2edf7d0.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-06-10 18:55:02.196] [jointLog] [info] setting maxHashResizeThreads to 6[2024-06-10 18:55:02.196] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2024-06-10 18:55:02.197] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat", fasta = "/galaxy/server/database/objects/3/3/0/dataset_33033fc4-e759-45b3-bde6-2c82d2edf7d0.dat" . . .done[2024-06-10 18:55:02.856] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2024-06-10 18:55:03.109] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2024-06-10 18:55:03.117] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-06-10 18:55:03.117] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-06-10 18:55:03.118] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-06-10 18:55:03.119] [jointLog] [info] starting optimizerResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2024-06-10 18:55:03.120] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-06-10 18:55:03.120] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2024-06-10 18:55:03.121] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-06-10 18:55:03.121] [jointLog] [info] finished optimizer[2024-06-10 18:55:03.121] [jointLog] [info] writing output[2024-06-10 18:55:03.126] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/0/3/2/dataset_032ca876-9556-4269-baa8-a5130ec4b597.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="32.89088153839111">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-06-10 18:55:36.140] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-06-10 18:55:36.140] [jLog] [info] building indexout : ./index[2024-06-10 18:55:36.141] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-06-10 18:55:36.149] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-06-10 18:55:36.149] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-06-10 18:55:36.161] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-06-10 18:55:36.163] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-06-10 18:55:36.222] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-06-10 18:55:36.222] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 922.05 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 812.82 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-06-10 18:55:36.224] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-06-10 18:55:36.224] [puff::index::jointLog] [info] contig count for validation: 23[2024-06-10 18:55:36.224] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-06-10 18:55:36.224] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-06-10 18:55:36.225] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-06-10 18:55:36.225] [puff::index::jointLog] [info] bits per offset entry 6[2024-06-10 18:55:36.225] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-06-10 18:55:36.236] [puff::index::jointLog] [info] # segments = 23[2024-06-10 18:55:36.236] [puff::index::jointLog] [info] total length = 19592[2024-06-10 18:55:36.236] [puff::index::jointLog] [info] Reading the reference files ...[2024-06-10 18:55:36.246] [puff::index::jointLog] [info] positional integer width = 15[2024-06-10 18:55:36.246] [puff::index::jointLog] [info] seqSize = 19592[2024-06-10 18:55:36.246] [puff::index::jointLog] [info] rankSize = 19592[2024-06-10 18:55:36.246] [puff::index::jointLog] [info] edgeVecSize = 0[2024-06-10 18:55:36.246] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela.. sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-06-10 18:55:36.322] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-06-10 18:55:36.322] [puff::index::jointLog] [info] chunk size = 9796[2024-06-10 18:55:36.322] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-06-10 18:55:36.322] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-06-10 18:55:36.323] [puff::index::jointLog] [info] finished populating pos vector[2024-06-10 18:55:36.323] [puff::index::jointLog] [info] writing index components[2024-06-10 18:55:36.335] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-06-10 18:55:36.340] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-06-10 18:55:36.431] [jointLog] [info] setting maxHashResizeThreads to 6[2024-06-10 18:55:36.431] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-06-10 18:55:36.431] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-06-10 18:55:36.431] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-06-10 18:55:36.431] [jointLog] [info] parsing read library format[2024-06-10 18:55:36.431] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 690.58 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 1.2442 ms----------------------------------------------------------------------------------| Loading reference lengths | Time = 498.31 us----------------------------------------------------------------------------------| Loading mphf table | Time = 622.56 us-----------------------------------------size = 19592[2024-06-10 18:55:36.546] [jointLog] [info] Loading pufferfish index[2024-06-10 18:55:36.546] [jointLog] [info] Loading dense pufferfish index.Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 724.5 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 652.69 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 1.4282 ms-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 776.5 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 361.12 us-----------------------------------------[2024-06-10 18:55:36.555] [jointLog] [info] done[2024-06-10 18:55:36.555] [jointLog] [info] Index contained 15 targets[2024-06-10 18:55:36.555] [jointLog] [info] Number of decoys : 0[2024-06-10 18:55:36.624] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-06-10 18:55:36.624] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-06-10 18:55:36.625] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-06-10 18:55:36.625] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-06-10 18:55:36.625] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-06-10 18:55:36.625] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-06-10 18:55:36.626] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-06-10 18:55:36.626] [jointLog] [info] Mapping rate = 100%[2024-06-10 18:55:36.626] [jointLog] [info] finished quantifyLibrary()[2024-06-10 18:55:36.630] [jointLog] [info] Starting optimizer[2024-06-10 18:55:36.631] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-06-10 18:55:36.631] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-06-10 18:55:36.632] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-06-10 18:55:36.632] [jointLog] [info] Finished optimizer[2024-06-10 18:55:36.632] [jointLog] [info] writing output [2024-06-10 18:55:36.637] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="30.847809076309204">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-06-10 18:56:08.192] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-06-10 18:56:08.193] [jLog] [info] building indexout : ./index[2024-06-10 18:56:08.193] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-06-10 18:56:08.202] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-06-10 18:56:08.202] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-06-10 18:56:08.215] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-06-10 18:56:08.216] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-06-10 18:56:08.276] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-06-10 18:56:08.276] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 969.21 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 793.93 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-06-10 18:56:08.278] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-06-10 18:56:08.278] [puff::index::jointLog] [info] contig count for validation: 23[2024-06-10 18:56:08.279] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-06-10 18:56:08.279] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-06-10 18:56:08.279] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-06-10 18:56:08.279] [puff::index::jointLog] [info] bits per offset entry 6[2024-06-10 18:56:08.279] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-06-10 18:56:08.290] [puff::index::jointLog] [info] # segments = 23[2024-06-10 18:56:08.290] [puff::index::jointLog] [info] total length = 19592[2024-06-10 18:56:08.290] [puff::index::jointLog] [info] Reading the reference files ...[2024-06-10 18:56:08.299] [puff::index::jointLog] [info] positional integer width = 15[2024-06-10 18:56:08.299] [puff::index::jointLog] [info] seqSize = 19592[2024-06-10 18:56:08.299] [puff::index::jointLog] [info] rankSize = 19592[2024-06-10 18:56:08.299] [puff::index::jointLog] [info] edgeVecSize = 0[2024-06-10 18:56:08.299] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   ela.. 90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-06-10 18:56:08.374] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-06-10 18:56:08.374] [puff::index::jointLog] [info] chunk size = 9796[2024-06-10 18:56:08.374] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-06-10 18:56:08.374] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-06-10 18:56:08.375] [puff::index::jointLog] [info] finished populating pos vector[2024-06-10 18:56:08.375] [puff::index::jointLog] [info] writing index components[2024-06-10 18:56:08.388] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-06-10 18:56:08.393] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-06-10 18:56:08.484] [jointLog] [info] setting maxHashResizeThreads to 6[2024-06-10 18:56:08.485] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-06-10 18:56:08.485] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-06-10 18:56:08.485] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-06-10 18:56:08.485] [jointLog] [info] parsing read library format[2024-06-10 18:56:08.485] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 612.81 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 919.28 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 360.54 us----------------------------------------------------------------------------------| Loading mphf table | Time = 627.41 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 642.87 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 517.09 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 808.09 us-----------------------------------------size = 28562[2024-06-10 18:56:08.598] [jointLog] [info] Loading pufferfish index-----------------------------------------| Loading reference sequence | Time = 575.17 us-----------------------------------------[2024-06-10 18:56:08.599] [jointLog] [info] Loading dense pufferfish index.-----------------------------------------| Loading reference accumulative lengths | Time = 351.65 us-----------------------------------------[2024-06-10 18:56:08.606] [jointLog] [info] done[2024-06-10 18:56:08.606] [jointLog] [info] Index contained 15 targets[2024-06-10 18:56:08.606] [jointLog] [info] Number of decoys : 0[2024-06-10 18:56:08.606] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-06-10 18:56:08.675] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-06-10 18:56:08.675] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-06-10 18:56:08.677] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-06-10 18:56:08.677] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-06-10 18:56:08.677] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-06-10 18:56:08.677] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-06-10 18:56:08.677] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-06-10 18:56:08.677] [jointLog] [info] Mapping rate = 100%[2024-06-10 18:56:08.677] [jointLog] [info] finished quantifyLibrary()[2024-06-10 18:56:08.682] [jointLog] [info] Starting optimizer[2024-06-10 18:56:08.683] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-06-10 18:56:08.683] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-06-10 18:56:08.683] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-06-10 18:56:08.687] [jointLog] [info] Computed expected counts (for bias correction)[2024-06-10 18:56:08.689] [jointLog] [info] processed bias for 26.7% of the transcripts[2024-06-10 18:56:08.689] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-06-10 18:56:08.689] [jointLog] [info] processed bias for 33.3% of the transcripts[2024-06-10 18:56:08.689] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-06-10 18:56:08.689] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-06-10 18:56:08.689] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-06-10 18:56:08.690] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-06-10 18:56:08.690] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-06-10 18:56:08.690] [jointLog] [info] processed bias for 73.3% of the transcripts[2024-06-10 18:56:08.692] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-06-10 18:56:08.692] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-06-10 18:56:08.692] [jointLog] [info] Finished optimizer[2024-06-10 18:56:08.692] [jointLog] [info] writing output [2024-06-10 18:56:08.697] [jointLog] [info] writing equivalence class counts.[2024-06-10 18:56:08.698] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-06-10 18:56:08.698] [jointLog] [info] done.[2024-06-10 18:56:08.701] [jointLog] [info] done writing equivalence class counts.[2024-06-10 18:56:08.701] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="11.626709938049316">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.626709938049316, "tool_id": "samtools_bedcov", "tool_version": "2.0.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="37.29109334945679">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="32.63302803039551">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="35.1617374420166">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="35.07727026939392">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="33.25757193565369">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="11.108837842941284">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.108837842941284, "tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="42.18039417266846">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="79.6512017250061">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="42.94102501869202">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="40.65330147743225">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 40.65330147743225, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="78.49583268165588">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/5/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/d/9/4/dataset_d947557a-adcf-4012-855d-730e1fefd4c6.dat--pe1-2fasta:/galaxy/server/database/objects/1/a/2/dataset_1a268f29-dd10-4a5d-a4ed-6769145efd3c.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.75+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/5/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/d/9/4/dataset_d947557a-adcf-4012-855d-730e1fefd4c6.dat']      right reads: ['/galaxy/server/database/objects/1/a/2/dataset_1a268f29-dd10-4a5d-a4ed-6769145efd3c.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/5/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/5/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/5/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/5/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.114    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.120     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.344   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.352     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.535   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.637     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.637     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.637     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.638     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.638     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.638     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.638     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.151     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.160    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.160    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.342    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.342    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.453    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.454    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.454    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.454    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.454    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.454    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.429     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.444    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.772    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.772    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.991    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.011    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.031    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:03.031    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.033    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.034    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:03.035    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:03.035    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:03.035    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:03.036    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:03.036    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:03.036    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:03.036    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.049    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:03.049    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:03.055    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:03.063    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:03.063    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:03.063    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:03.063    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:03.063    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:03.105    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:03.209    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.575    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:04.199    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:05.329    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:07.182    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:07.183    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:07.183    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:07.183    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:07.183    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:07.183    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:07.183    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:07.183    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:07.183    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:07.183    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:07.185    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:07.185    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:07.186    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:07.186    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:07.186    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:08.161     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:08.173    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:08.573    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:08.573    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:08.813    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:08.838    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:08.866    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:08.866    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:08.868    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:08.871    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:08.871    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:08.874    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:08.874    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:08.874    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:08.874    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.876    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:08.876    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:08.876    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:08.876    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:08.876    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:08.876    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:08.876    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.876   ..indices  0:00:10.687    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:10.687    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:10.689    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:10.689    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:10.689    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:10.689    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:10.689    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:10.689    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:10.689    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:10.689    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:10.689    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:10.689    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:10.689    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.689    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.702    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:10.702    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:10.702    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:10.709    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.709    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.709    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/before_rr.fasta  0:00:10.714    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph.fastg  0:00:10.718    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/simplified_contigs.fasta  0:00:10.721    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/intermediate_contigs.fasta  0:00:10.729    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:10.729    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:10.729    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:10.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:10.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:10.729    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:10.872   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.091   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.859   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:12.859   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:12.872    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:13.061   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:13.066   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.069   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.073   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:13.073   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:13.073   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:13.100   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:13.106   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:13.129    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:13.129    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:13.129    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:13.129    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:13.129    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.129    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.129    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.129    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:13.129    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:13.129    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:13.130    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.130    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:13.130    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:13.130    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:13.130    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:13.130    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:13.130    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:13.130    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:13.130    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:13.130    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:13.130    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:13.131    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.131    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:13.131    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:13.131    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:13.131    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.131    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.131    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.131    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.131    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.131    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.131    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.131    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.131    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:13.131    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:13.132    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:13.132    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:13.132    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:13.132    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:13.132    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:13.132    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:13.132    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:13.132    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:13.132    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:13.132    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:13.132    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:13.132    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:13.132    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:13.132    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:13.132    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:13.132    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph_with_scaffolds.gfa  0:00:13.133    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/5/working//K33/before_rr.fasta  0:00:13.138    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/5/working//K33/assembly_graph.fastg  0:00:13.142    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/5/working//K33/final_contigs.paths  0:00:13.150    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/5/working//K33/scaffolds.paths  0:00:13.165    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:13.169    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 13 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/5/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/5/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/5/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/5/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/5/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/5/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/5/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="49.15925693511963">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/8/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/4/9/4/dataset_494b6baf-eff8-42ed-b01f-f31c39748128.dat--pe1-2fastq.gz:/galaxy/server/database/objects/b/6/5/dataset_b65d7f74-8a7d-4b49-a274-563ec54d725b.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.75+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/8/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/4/9/4/dataset_494b6baf-eff8-42ed-b01f-f31c39748128.dat']      right reads: ['/galaxy/server/database/objects/b/6/5/dataset_b65d7f74-8a7d-4b49-a274-563ec54d725b.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/8/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/8/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/8/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/8/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/9/4/dataset_494b6baf-eff8-42ed-b01f-f31c39748128.dat  0:00:01.032     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/6/5/dataset_b65d7f74-8a7d-4b49-a274-563ec54d725b.dat  0:00:01.982     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.995    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.307    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.307    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.550    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.575    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.603    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.606    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.610    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.611    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.621    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.621    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.621    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/9/4/dataset_494b6baf-eff8-42ed-b01f-f31c39748128.dat  0:00:02.642    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/6/5/dataset_b65d7f74-8a7d-4b49-a274-563ec54d725b.dat  0:00:02.662    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.662    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.662    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.675    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.676    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.676    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.693    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.693    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.693    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.693    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/9/4/dataset_494b6baf-eff8-42ed-b01f-f31c39748128.dat and /galaxy/server/database/objects/b/6/5/dataset_b65d7f74-8a7d-4b49-a274-563ec54d725b.dat  0:00:02.765    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.769    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.773    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.812    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.812    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.812    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/8/working/corrected/corrected.yaml  0:00:02.816    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/8/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/8/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/8/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.112    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.119     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.298   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.307     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.478   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.580     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.580     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.580     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.581     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.581     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.581     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.581     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.117     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.126    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.126    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.310    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.310    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.418    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.419    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.419    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.420    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.420    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.420    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.463     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.477    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.855    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.855    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.143    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.172    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.199    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.199    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.201    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.202    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Cond..      : 346)   Closing short gaps  0:00:09.818    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.819    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.819    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.819    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.819    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.819    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.819    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.819    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.819    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.820    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.820    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.820    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.820    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.820    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.820    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.820    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.820    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.820    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.820    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:09.820    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.820    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.820    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.832    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.832    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.832    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.836    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.836    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.837    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/before_rr.fasta  0:00:09.842    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph.fastg  0:00:09.846    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/simplified_contigs.fasta  0:00:09.850    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/intermediate_contigs.fasta  0:00:09.856    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.856    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.856    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.856    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.856    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.856    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.991   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.207   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.977   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.977   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.991    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:12.150   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:12.154   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.157   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.160   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:12.160   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:12.160   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:12.175   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:12.181   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:12.202    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:12.202    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:12.202    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:12.202    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:12.202    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.202    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.202    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.202    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:12.202    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:12.202    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:12.202    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.203    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:12.203    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:12.203    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:12.203    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:12.203    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:12.203    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:12.203    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:12.203    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:12.203    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:12.203    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:12.204    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.204    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:12.204    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:12.204    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:12.204    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.204    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.204    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:12.204    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:12.204    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:12.204    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:12.204    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:12.204    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:12.204    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph_with_scaffolds.gfa  0:00:12.205    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/8/working//K33/before_rr.fasta  0:00:12.210    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/8/working//K33/assembly_graph.fastg  0:00:12.213    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working//K33/final_contigs.paths  0:00:12.220    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/8/working//K33/scaffolds.paths  0:00:12.234    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:12.237    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/8/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/8/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/8/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/8/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/8/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/8/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/8/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="57.65889930725098">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/11/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/4/6/7/dataset_467dd624-f5a1-4f34-8ac3-e38638c09a06.dat--pe1-2fastq:/galaxy/server/database/objects/a/7/8/dataset_a78b7ecb-5c59-4233-a851-65e31c0fc52e.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.75+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/11/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/4/6/7/dataset_467dd624-f5a1-4f34-8ac3-e38638c09a06.dat']      right reads: ['/galaxy/server/database/objects/a/7/8/dataset_a78b7ecb-5c59-4233-a851-65e31c0fc52e.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/11/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/11/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.005     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.005     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.006     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.006     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/6/7/dataset_467dd624-f5a1-4f34-8ac3-e38638c09a06.dat  0:00:00.999     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/7/8/dataset_a78b7ecb-5c59-4233-a851-65e31c0fc52e.dat  0:00:01.837     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.849    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.141    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.141    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.359    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.381    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.405    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.408    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.412    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.413    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.426    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/6/7/dataset_467dd624-f5a1-4f34-8ac3-e38638c09a06.dat  0:00:02.444    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/7/8/dataset_a78b7ecb-5c59-4233-a851-65e31c0fc52e.dat  0:00:02.460    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.460    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.460    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.473    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.474    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.474    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.483    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.483    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.483    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.483    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/4/6/7/dataset_467dd624-f5a1-4f34-8ac3-e38638c09a06.dat and /galaxy/server/database/objects/a/7/8/dataset_a78b7ecb-5c59-4233-a851-65e31c0fc52e.dat  0:00:02.544    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.549    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.552    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.594    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.594    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.595    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml  0:00:02.600    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/11/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/11/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/11/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.113    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.119     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.291   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.300     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.468   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.574     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.574     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.574     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.575     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.576     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.576     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.576     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:01.122     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.131    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.131    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.334    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.334    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.459    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.460    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.460    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.460    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.460    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.460    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:02.490     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:02.504    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.873    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.873    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:03.076    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.096    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.117    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:03.117    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.119    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.121    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:03.121    32M / 8G    INFO    General                 (construction.cpp          : 253)   Earl.. short gaps  0:00:06.275    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:06.277    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:06.277    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:06.277    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:06.277    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:06.277    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.277    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:06.277    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:06.277    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:06.277    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:06.277    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:06.277    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.277    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.288    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:06.288    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:06.288    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:06.295    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:06.295    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:06.295    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:06.300    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:06.303    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/simplified_contigs.fasta  0:00:06.307    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/intermediate_contigs.fasta  0:00:06.314    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:06.314    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.314    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.314    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:06.314    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:06.314    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:06.453   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:06.671   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.446   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:08.446   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:08.459    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:08.606   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:08.610   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.612   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.616   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:08.616   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:08.616   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:08.631   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.636   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.658    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:08.658    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:08.658    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:08.658    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:08.658    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.658    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.658    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.658    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:08.658    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:08.658    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:08.658    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.658    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.658    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:08.658    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:08.659    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.659    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.659    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.659    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:08.659    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:08.659    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:08.659    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:08.660    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:08.660    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:08.660    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:08.660    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:08.660    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.660    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.660    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.660    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.660    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.660    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.660    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:08.660    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.660    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph_with_scaffolds.gfa  0:00:08.662    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/11/working//K55/before_rr.fasta  0:00:08.665    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/11/working//K55/assembly_graph.fastg  0:00:08.670    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/final_contigs.paths  0:00:08.679    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/11/working//K55/scaffolds.paths  0:00:08.693    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:08.695    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/11/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/11/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/11/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/11/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/11/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="44.53605270385742">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/14/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/2/f/1/dataset_2f1523ae-b008-479d-89fc-e82a66f9f966.dat--pe1-2fastq:/galaxy/server/database/objects/7/e/3/dataset_7e3b2e5f-da56-4e31-9e5c-087ffcc45711.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.75+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/14/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/2/f/1/dataset_2f1523ae-b008-479d-89fc-e82a66f9f966.dat']      right reads: ['/galaxy/server/database/objects/7/e/3/dataset_7e3b2e5f-da56-4e31-9e5c-087ffcc45711.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/14/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/14/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.007     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/2/f/1/dataset_2f1523ae-b008-479d-89fc-e82a66f9f966.dat  0:00:00.984     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/e/3/dataset_7e3b2e5f-da56-4e31-9e5c-087ffcc45711.dat  0:00:01.811     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.824    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.113    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.113    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.327    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.349    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.372    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.375    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.378    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.380    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.389    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.389    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.389    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/2/f/1/dataset_2f1523ae-b008-479d-89fc-e82a66f9f966.dat  0:00:02.407    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/e/3/dataset_7e3b2e5f-da56-4e31-9e5c-087ffcc45711.dat  0:00:02.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.426    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.426    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.435    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.436    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.436    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.449    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.449    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.449    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.449    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/2/f/1/dataset_2f1523ae-b008-479d-89fc-e82a66f9f966.dat and /galaxy/server/database/objects/7/e/3/dataset_7e3b2e5f-da56-4e31-9e5c-087ffcc45711.dat  0:00:02.514    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.520    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.523    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.561    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.561    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.562    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml  0:00:02.566    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/14/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/14/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/14/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.112    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.121     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.291   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.299     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.469   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.564     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.564     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.564     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.565     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.566     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.566     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.566     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:01.028     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.037    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.037    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.215    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.215    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.316    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.316    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.316    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.317    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.317    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.317    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:02.319     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:02.333    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.685    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:02.685    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.894    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.916    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.939    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:02.939    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.941    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.942    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..osing short gaps  0:00:06.566    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:06.568    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:06.568    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:06.568    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:06.568    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:06.568    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:06.568    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:06.568    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:06.568    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:06.568    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:06.568    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:06.568    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.568    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.578    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:06.578    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:06.578    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:06.583    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:06.583    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:06.584    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:06.588    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:06.591    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/simplified_contigs.fasta  0:00:06.595    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/intermediate_contigs.fasta  0:00:06.603    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:06.603    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:06.603    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:06.603    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:06.603    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:06.603    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:06.738   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:06.955   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.727   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:08.727   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:08.741    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:08.891   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:08.895   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.898   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.901   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:08.901   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:08.901   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:08.917   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.922   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:08.946    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:08.946    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:08.946    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:08.946    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:08.946    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.946    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.946    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.946    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:08.946    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:08.946    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:08.947    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.947    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:08.947    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:08.947    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:08.947    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:08.947    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:08.947    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:08.947    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:08.947    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:08.947    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:08.947    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:08.948    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:08.948    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:08.948    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:08.948    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:08.948    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.948    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.948    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:08.948    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:08.948    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:08.949    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:08.949    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:08.949    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:08.949    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:08.949    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:08.949    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:08.949    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:08.949    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.949    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph_with_scaffolds.gfa  0:00:08.950    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/14/working//K77/before_rr.fasta  0:00:08.955    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/14/working//K77/assembly_graph.fastg  0:00:08.959    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/final_contigs.paths  0:00:08.966    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/14/working//K77/scaffolds.paths  0:00:08.980    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:08.983    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/14/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/14/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/14/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/14/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/14/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="50.95183539390564">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/17/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/c/6/2/dataset_c629255f-3071-415c-9b7d-a5fd2b4d8a7f.dat--pe1-2fastq:/galaxy/server/database/objects/e/5/a/dataset_e5a2968e-b214-4812-a5b8-7c11957ef5f5.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.75+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/17/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/6/2/dataset_c629255f-3071-415c-9b7d-a5fd2b4d8a7f.dat']      right reads: ['/galaxy/server/database/objects/e/5/a/dataset_e5a2968e-b214-4812-a5b8-7c11957ef5f5.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/17/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/17/working/corrected/configs/config.info  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.002     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.003     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.003     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.006     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.006     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.007     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.007     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.009     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/6/2/dataset_c629255f-3071-415c-9b7d-a5fd2b4d8a7f.dat  0:00:01.241     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/5/a/dataset_e5a2968e-b214-4812-a5b8-7c11957ef5f5.dat  0:00:02.275     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:02.288    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.601    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.601    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.836    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.859    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.885    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.888    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.890    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.892    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.901    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.901    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.901    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/6/2/dataset_c629255f-3071-415c-9b7d-a5fd2b4d8a7f.dat  0:00:02.917    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/5/a/dataset_e5a2968e-b214-4812-a5b8-7c11957ef5f5.dat  0:00:02.933    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.933    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.933    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.943    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.944    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.944    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.952    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.952    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.952    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.952    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/6/2/dataset_c629255f-3071-415c-9b7d-a5fd2b4d8a7f.dat and /galaxy/server/database/objects/e/5/a/dataset_e5a2968e-b214-4812-a5b8-7c11957ef5f5.dat  0:00:03.014    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:03.020    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:03.024    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:03.062    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:03.062    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:03.063    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml  0:00:03.066    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/17/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/17/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/17/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.112    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.119     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.302   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.311     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.483   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.579     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.579     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.579     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.580     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.581     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.581     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.581     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.068     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.077    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.077    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.253    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.253    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.356    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.357    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.357    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.358    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.358    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.358    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.366     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.380    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.764    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.764    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.989    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:03.011    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.036    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.036    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.039    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.040    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..sing short gaps  0:00:09.562    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.564    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.564    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.564    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.564    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.564    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.564    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.564    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.564    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.564    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:09.564    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.564    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.564    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.578    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.578    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.578    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.584    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.584    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.585    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:09.590    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:09.595    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/simplified_contigs.fasta  0:00:09.599    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/intermediate_contigs.fasta  0:00:09.606    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.606    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.606    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.606    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.606    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.606    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.739   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.957   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.732   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.732   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.746    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.895   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.900   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.903   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.907   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.907   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.907   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.925   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.931   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.955    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.955    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.955    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.955    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.955    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.955    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.955    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.955    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.955    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.955    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.955    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.955    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.955    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.957    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.957    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.957    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.957    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.957    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.957    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.957    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.957    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.957    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.957    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.957    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.957    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.957    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.958    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/17/working//K33/before_rr.fasta  0:00:11.963    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/17/working//K33/assembly_graph.fastg  0:00:11.968    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/final_contigs.paths  0:00:11.976    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/17/working//K33/scaffolds.paths  0:00:11.992    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.994    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/17/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/17/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/17/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/17/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/17/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="48.2118935585022">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/20/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/3/0/6/dataset_3066e857-68f9-4af2-a6a6-46dbe783df35.dat--pe1-2fastq:/galaxy/server/database/objects/d/0/2/dataset_d02f6230-d1ea-40ad-b5c6-8e5364c5a824.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.75+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/20/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/3/0/6/dataset_3066e857-68f9-4af2-a6a6-46dbe783df35.dat']      right reads: ['/galaxy/server/database/objects/d/0/2/dataset_d02f6230-d1ea-40ad-b5c6-8e5364c5a824.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/20/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/20/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.005     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.005     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.008     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/0/6/dataset_3066e857-68f9-4af2-a6a6-46dbe783df35.dat  0:00:01.013     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/0/2/dataset_d02f6230-d1ea-40ad-b5c6-8e5364c5a824.dat  0:00:01.941     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.954    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.248    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:02.248    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.448    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.468    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.486    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.489    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.492    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.493    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.502    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.502    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.502    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/0/6/dataset_3066e857-68f9-4af2-a6a6-46dbe783df35.dat  0:00:02.521    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/0/2/dataset_d02f6230-d1ea-40ad-b5c6-8e5364c5a824.dat  0:00:02.540    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.540    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.540    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.550    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.551    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.551    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.560    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.560    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.560    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.560    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/0/6/dataset_3066e857-68f9-4af2-a6a6-46dbe783df35.dat and /galaxy/server/database/objects/d/0/2/dataset_d02f6230-d1ea-40ad-b5c6-8e5364c5a824.dat  0:00:02.622    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.628    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.631    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.669    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.669    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.669    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml  0:00:02.673    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/20/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/20/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/20/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.111    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.117     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.291   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.300     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.470   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.562     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.562     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.562     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.563     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.564     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.564     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.564     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.057     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.066    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.066    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.238    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.238    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.341    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.342    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.342    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.342    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.342    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.342    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.391     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.405    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.753    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.753    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.973    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.996    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:03.019    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:03.019    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:03.021    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:03.022    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..sing short gaps  0:00:09.322    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.324    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.324    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.324    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.324    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.324    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.324    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.324    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.324    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.324    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:09.324    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.324    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.324    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.337    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.337    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.337    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.341    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.341    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.342    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:09.346    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:09.350    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/simplified_contigs.fasta  0:00:09.353    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/intermediate_contigs.fasta  0:00:09.359    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.359    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.359    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.359    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.359    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.359    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.495   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.714   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.483   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.483   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:11.497    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:11.648   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.653   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.656   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.659   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.659   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.659   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.676   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.681   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.704    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.705    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.705    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.705    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.705    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.705    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.705    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.705    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.705    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.705    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.705    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.705    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.705    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.706    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.706    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.706    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:11.706    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.706    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.706    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.706    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.707    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.707    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.707    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.707    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.707    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.707    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.707    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.707    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.708    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/20/working//K33/before_rr.fasta  0:00:11.712    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/20/working//K33/assembly_graph.fastg  0:00:11.716    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/final_contigs.paths  0:00:11.724    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/20/working//K33/scaffolds.paths  0:00:11.740    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.742    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 11 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/20/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/20/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/20/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/20/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/20/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="19.082380294799805">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 19.082380294799805, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="10.783288478851318">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 10.783288478851318, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="48.083048820495605">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="31.6258761882782">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="35.08301019668579">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/usr/local/share/trimmomatic-0.38-1/adapters/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="34.307074785232544">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/77/configs/tmpv8e5affe:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="34.22515511512756">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="35.52932810783386">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="34.21914076805115">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="34.61769485473633">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="30.605854034423828">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="33.868224143981934">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="33.064189195632935">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="30.762101888656616">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="37.205119609832764">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>