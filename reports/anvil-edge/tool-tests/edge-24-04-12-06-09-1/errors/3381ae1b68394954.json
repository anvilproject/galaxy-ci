{
    "model_class": "Job",
    "id": "3381ae1b68394954",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-04-12T07:12:50.498136",
    "create_time": "2024-04-12T07:12:19.492675",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "42b12369363b53d9",
    "external_id": "gxy-645dv",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/9/6/9/dataset_969c9458-ce12-46af-9c8a-34a7273085dd.dat' && cp '/galaxy/server/database/objects/4/3/7/dataset_43719265-93ac-4781-957d-67e0e51cf0d4.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/a/c/8/dataset_ac822677-4b6e-4797-b4de-4835dc4ba7eb.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/6/3/b/dataset_63b8adbf-29c7-4ef4-8411-b74bb50af928.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 28: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 308, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 309, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 307, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "02e1538b89bab7ae",
            "src": "hda",
            "uuid": "63b8adbf-29c7-4ef4-8411-b74bb50af928"
        },
        "pairstraight|file2": {
            "id": "4148c038983b41a3",
            "src": "hda",
            "uuid": "ac822677-4b6e-4797-b4de-4835dc4ba7eb"
        },
        "pairstraight|file1": {
            "id": "230dd4ef8ed907d6",
            "src": "hda",
            "uuid": "43719265-93ac-4781-957d-67e0e51cf0d4"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "583e935789e51932",
            "src": "hda",
            "uuid": "969c9458-ce12-46af-9c8a-34a7273085dd"
        }
    },
    "outputs": {
        "quants_mat_rows_txt": {
            "id": "438450d67cfd7c2e",
            "src": "hda",
            "uuid": "807888ea-6d1d-4818-9f06-41e242161828"
        },
        "whitelist_txt": {
            "id": "3cec1af7fb9a11d9",
            "src": "hda",
            "uuid": "1dc46d9b-efef-47c9-b0eb-c6ac2dac26db"
        },
        "quants_mat_cols_txt": {
            "id": "15c4b9de996ef46b",
            "src": "hda",
            "uuid": "5136ae02-4e8e-435f-81bc-73afd42d4b1f"
        },
        "observed_bias_3p": {
            "id": "b27605dc9ae02f7b",
            "src": "hda",
            "uuid": "4d976b82-9b12-4554-974c-35f42b3a1322"
        },
        "quants_tier_mat": {
            "id": "18e653c68e70a746",
            "src": "hda",
            "uuid": "f3e01499-411c-4ebc-af35-22cae70c2cce"
        },
        "raw_cb_frequency_txt": {
            "id": "ac5ae105d480abb1",
            "src": "hda",
            "uuid": "e8ae926a-27ad-41a3-adbd-2e72c56bcd7e"
        },
        "featureDump_txt": {
            "id": "a245aa113351f3d3",
            "src": "hda",
            "uuid": "02a5372d-fdff-411c-9fe8-a09dc8d6d609"
        },
        "flenDist_txt": {
            "id": "0ca1ef6aebdc0c5a",
            "src": "hda",
            "uuid": "e13585c2-15f0-4805-8f80-4624b54e8aa4"
        },
        "quants_mat_mtx": {
            "id": "fc2f63fdfec5005a",
            "src": "hda",
            "uuid": "4b76b036-b8a5-4437-8605-624d7634ffee"
        },
        "expected_bias": {
            "id": "bc3fe099acfe2bcb",
            "src": "hda",
            "uuid": "af0092a0-2ef5-4dd5-aa37-ca8fdba52af5"
        },
        "observed_bias": {
            "id": "efbe02322ca5b22d",
            "src": "hda",
            "uuid": "be9066de-af92-497a-9f5c-f61e223dec29"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
