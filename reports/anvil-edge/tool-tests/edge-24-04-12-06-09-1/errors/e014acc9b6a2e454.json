{
    "model_class": "Job",
    "id": "e014acc9b6a2e454",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-04-12T07:14:13.805073",
    "create_time": "2024-04-12T07:13:57.685198",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "42b12369363b53d9",
    "external_id": "gxy-w7wlk",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/a/4/b/dataset_a4b78664-f80a-4cb4-ac7d-9c68b2882dc7.dat' && cp '/galaxy/server/database/objects/6/5/3/dataset_653f46e1-42d2-4e1d-a963-aa308a43b5dd.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/f/1/a/dataset_f1a472ef-e531-4081-a33f-f4b2b855fe1b.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/7/4/1/dataset_741131e6-68f4-44dd-970b-b7742442f549.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 10: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 341, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 342, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 340, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "c7f95def0e9d3114",
            "src": "hda",
            "uuid": "741131e6-68f4-44dd-970b-b7742442f549"
        },
        "pairstraight|file2": {
            "id": "23f67c16d3da6311",
            "src": "hda",
            "uuid": "f1a472ef-e531-4081-a33f-f4b2b855fe1b"
        },
        "pairstraight|file1": {
            "id": "fe0f1b82c27ae9fa",
            "src": "hda",
            "uuid": "653f46e1-42d2-4e1d-a963-aa308a43b5dd"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "770a69fd92193651",
            "src": "hda",
            "uuid": "a4b78664-f80a-4cb4-ac7d-9c68b2882dc7"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "c703ab61e84e5527",
            "src": "hda",
            "uuid": "a4d905ee-bb57-4766-b825-d62b4d67ef4a"
        },
        "quants_tier_mat": {
            "id": "6f4374e8271de9d7",
            "src": "hda",
            "uuid": "f7a280ba-3c07-478e-ac18-ec6c84e81dfb"
        },
        "quants_mat_cols_txt": {
            "id": "36a7df97f962ed85",
            "src": "hda",
            "uuid": "da6739ff-2175-4d65-b584-1a7a4d8d588c"
        },
        "raw_cb_frequency_txt": {
            "id": "4682d57ea8a489be",
            "src": "hda",
            "uuid": "30aa4669-4d65-4cf2-b23a-a0360b2bacfe"
        },
        "quants_mat_mtx": {
            "id": "68ee16e99145602c",
            "src": "hda",
            "uuid": "40282661-2aa3-4ee2-a938-af6805d2052e"
        },
        "observed_bias_3p": {
            "id": "975ed296b767d5fb",
            "src": "hda",
            "uuid": "5ba63a0c-c82e-403f-8506-f1badba20f83"
        },
        "observed_bias": {
            "id": "ef771fce5a5e5d0f",
            "src": "hda",
            "uuid": "658df268-bd6b-4ec5-9288-2cc8b46afbcc"
        },
        "expected_bias": {
            "id": "c22426e6de790550",
            "src": "hda",
            "uuid": "e5fa0c99-8fcb-40de-a692-ff27bea50e2d"
        },
        "whitelist_txt": {
            "id": "b946f0181cab3d7c",
            "src": "hda",
            "uuid": "d388e2ec-abbf-4493-9175-87b9b27d332e"
        },
        "featureDump_txt": {
            "id": "da32dfcc5aaef848",
            "src": "hda",
            "uuid": "843ca5a1-d84a-43ef-b32c-5ad3b96ef66c"
        },
        "quants_mat_rows_txt": {
            "id": "734109142dae1b7c",
            "src": "hda",
            "uuid": "90557f59-3404-4631-a01b-6e42e665a6ce"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
