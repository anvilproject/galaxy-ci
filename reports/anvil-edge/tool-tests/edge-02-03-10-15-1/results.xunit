<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="110"
           errors="7"
           failures="17"
           skip="0">
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.052446842193603516">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.052446842193603516, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "0.0.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.06106066703796387">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.06106066703796387, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "1.6.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/gtf2gene_list/_ensembl_gtf2gene_list (Test #1)" name="0" time="64.49831700325012">
        
            
            <system-out><![CDATA[
            [1] "Reading input.gtf elements of type gene"[1] "Found 10 features"[1] "Storing output to annotation.txt"
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa (Test #1)" name="0" time="52.29422998428345">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/e/3/1/dataset_e316ebb6-eb26-434a-9390-9b6a589876c2.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/c/9/a/dataset_c9a54205-d9ed-47ca-86a0-c59a64ca129c.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/1/5/6/dataset_156cc14c-27dd-4996-ab55-f37658f4a849.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "create_time": "2023-02-03T10:56:34.220013",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-7p8hx",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "f8dfa8720e138800",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "22.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "22 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421820.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:57:00"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421798.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:56:38"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "234973b6abc89121",    "src": "hda",    "uuid": "156cc14c-27dd-4996-ab55-f37658f4a849"   },   "design_tsv": {    "id": "31267cdeb4fd9d7b",    "src": "hda",    "uuid": "a958ea55-a8aa-431f-8e23-67935ae71ede"   },   "genes_tsv": {    "id": "2753bcaef7b3cab1",    "src": "hda",    "uuid": "c9a54205-d9ed-47ca-86a0-c59a64ca129c"   },   "matrix_mtx": {    "id": "f1f039349c70c75d",    "src": "hda",    "uuid": "e316ebb6-eb26-434a-9390-9b6a589876c2"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-02-03 10:56:38--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  258K\n    50K .......... .......... .......... .......... ..........  190K\n   100K .......... .......... .......... .......... ..........  484K\n   150K .......... .......... .......... .......... ..........  292K\n   200K .......... .......... .......... .......... ..........  547K\n   250K .......... .......... .......... .......... ..........  482K\n   300K .......... .......... .......... .......... ..........  548K\n   350K .......... .......... .......... .......... ..........  549K\n   400K .......... .......... .......... .......... ..........  549K\n   450K .......... .......... .......... .......... ..........  636K\n   500K .......... .......... .......... .......... ..........  805K\n   550K .......... .......... .......... .......... .......... 1.16M\n   600K .......... .......... .......... .......... ..........  635K\n   650K .......... .......... .......... .......... ..........  897K\n   700K .......... .......... .......... .......... .......... 1.01M\n   750K .......... .......... .......... .......... ..........  638K\n   800K .......... .......... .......... .......... .......... 3.17M\n   850K .......... .......... .......... .......... ..........  655K\n   900K .......... .......... .......... .......... .......... 3.72M\n   950K .......... .......... .......... .......... ..........  650K\n  1000K .......... .......... .......... .......... .......... 3.46M\n  1050K .......... .......... .......... .......... .......... 1019K\n  1100K .......... .......... .......... .......... .......... 1.65M\n  1150K .......... .......... .......... .......... ..........  888K\n  1200K .......... .......... .......... .......... .......... 1.43M\n  1250K .......... .......... .......... .......... .......... 3.70M\n  1300K .......... .......... .......... .......... .......... 1.12M\n  1350K .......... .......... .......... .......... .......... 1.43M\n  1400K .......... .......... .......... .......... .......... 3.73M\n  1450K .......... .......... .......... .......... .......... 19.9M\n  1500K .......... .......... .......... .......... ..........  963K\n  1550K .......... .......... .......... .......... .......... 1.35M\n  1600K .......... .......... .......... .......... .......... 22.2M\n  1650K .......... .......... .......... .......... .......... 1.02M\n  1700K .......... .......... .......... .......... .......... 1.66M\n  1750K .......... .......... .......... .......... .......... 4.26M\n  1800K .......... .......... .......... .......... .......... 19.7M\n  1850K .......... .......... .......... .......... .......... 1.03M\n  1900K .......... .......... .......... .......... .......... 1.67M\n  1950K .......... .......... .......... .......... .......... 3.98M\n  2000K .......... .......... .......... .......... .......... 22.0M\n  2050K .......... .......... .......... .......... .......... 1.03M\n  2100K .......... .......... .......... .......... .......... 1.66M\n  2150K .......... .......... .......... .......... .......... 39.0M\n  2200K .......... .......... .......... .......... .......... 4.24M\n  2250K .......... .......... .......... .......... .......... 32.0M\n  2300K .......... .......... .......... .......... .......... 1.02M\n  2350K .......... .......... .......... .......... .......... 1.63M\n  2400K .......... .......... .......... .......... .......... 4.50M\n  2450K .......... .......... .......... .......... .......... 54.1M\n  2500K .......... .......... .......... .......... .......... 28.8M\n  2550K .......... .......... .......... .......... .......... 1.02M\n  2600K .......... .......... .......... .......... .......... 1.64M\n  2650K .......... .......... .......... .......... .......... 42.9M\n  2700K .......... .......... .......... .......... .......... 4.45M\n  2750K .......... .......... .......... .......... .......... 43.2M\n  2800K .......... .......... .......... .......... .......... 1.14M\n  2850K .......... .......... .......... .......... .......... 5.26M\n  2900K .......... .......... .......... .......... .......... 1.86M\n  2950K .......... .......... .......... .......... .......... 13.1M\n  3000K .......... .......... .......... .......... .......... 6.24M\n  3050K .......... .......... .......... .......... .......... 87.7M\n  3100K .......... .......... .......... .......... .......... 1.11M\n  3150K .......... .......... .......... .......... .......... 5.66M\n  3200K .......... .......... .......... .......... .......... 1.86M\n  3250K .......... .......... .......... .......... .......... 32.7M\n  3300K .......... .......... .......... .......... .......... 4.44M\n  3350K .......... .......... .......... .......... ..........  143M\n  3400K .......... .......... .......... .......... .......... 16.2M\n  3450K .......... .......... .......... .......... .......... 1.07M\n  3500K .......... .......... .......... .......... .......... 15.2M\n  3550K .......... .......... .......... .......... .......... 1.74M\n  3600K .......... .......... .......... .......... .......... 15.0M\n  3650K .......... .......... .......... .......... .......... 5.93M\n  3700K .......... .......... .......... .......... ..........  134M\n  3750K .......... .......... .......... .......... .......... 1.12M\n  3800K .......... .......... .......... .......... .......... 9.98M\n  3850K .......... .......... .......... .......... .......... 9.73M\n  3900K .......... .......... .......... .......... .......... 2.01M\n  3950K .......... .......... .......... .......... .......... 9.21M\n  4000K .......... .......... .......... .......... .......... 6.44M\n  4050K .......... .......... .......... .......... .......... 93.3M\n  4100K .......... .......... .......... .......... .......... 22.7M\n  4150K .......... .......... .......... .......... .......... 1.07M\n  4200K .......... .......... .......... .......... .......... 32.9M\n  4250K .......... .......... .......... .......... .......... 1.72M\n  4300K .......... .......... .......... .......... .......... 10.8M\n  4350K .......... .......... .......... .......... .......... 5.85M\n  4400K .......... .......... .......... .......... .......... 45.7M\n  4450K .......... .......... .......... .......... .......... 96.0M\n  4500K .......... .......... .......... .......... .......... 26.7M\n  4550K .......... .......... .......... .......... .......... 1.08M\n  4600K .......... .......... .......... .......... .......... 28.4M\n  4650K .......... .......... .......... .......... .......... 5.17M\n  4700K .......... .......... .......... .......... .......... 2.42M\n  4750K .......... .......... .......... .......... .......... 11.6M\n  4800K .......... .......... .......... .......... .......... 1.15M\n  4850K .......... .......... .......... .......... .......... 3.98M\n  4900K .......... .......... .......... .......... .......... 67.2M\n  4950K .......... .......... .......... .......... ..........  574K\n  5000K .......... .......... .......... .......... ..........  529K\n  5050K .......... .......... .......... .......... .......... 18.0M\n  5100K .......... .......... .......... .......... .......... 16.3M\n  5150K .......... .......... .......... .......... .......... 91.6M\n  5200K .......... .......... .......... .......... .......... 1.13M\n  5250K .......... .......... .......... .......... .......... 85.7M\n  5300K .......... .......... .......... .......... .......... 1.03M\n  5350K .......... .......... .......... .......... .......... 1.81M\n  5400K .......... .......... .......... .......... .......... 23.3M\n  5450K .......... .......... .......... .......... ..........  117M\n  5500K .......... .......... .......... .......... ..........  113M\n  5550K .......... .......... .......... .......... .......... 85.0M\n  5600K .......... .......... .......... .......... .......... 2.20M\n  5650K .......... .......... .......... .......... .......... 32.8M\n  5700K .......... .......... .......... .......... .......... 1.33M\n  5750K .......... .......... .......... .......... .......... 1.85M\n  5800K .......... .......... .......... .......... .......... 20.0M\n  5850K .......... .......... .......... .......... .......... 63.0M\n  5900K .......... .......... .......... .......... ..........  106M\n  5950K .......... .......... .......... .......... ..........  125M\n  6000K .......... .......... .......... .......... .......... 50.6M\n  6050K .......... .......... .......... .......... .......... 2.27M\n  6100K .......... .......... .......... .......... .......... 36.5M\n  6150K .......... .......... .......... .......... .......... 3.22M\n  6200K .......... .......... .......... .......... .......... 2.02M\n  6250K .......... .......... .......... .......... .......... 1.95M\n  6300K .......... .......... .......... .......... .......... 22.6M\n  6350K .......... .......... .......... .......... .......... 97.3M\n  6400K .......... .......... .......... .......... ..........  139M\n  6450K .......... .......... .......... .......... ..........  148M\n  6500K .......... .......... .......... .......... .......... 6.49M\n  6550K .......... .......... .......... .......... .......... 3.21M\n  6600K .......... .......... .......... .......... .......... 27.4M\n  6650K .......... .......... .......... .......... .......... 3.39M\n  6700K .......... .......... .......... .......... .......... 2.04M\n  6750K .......... .......... .......... .......... .......... 1.88M\n  6800K .......... .......... .......... .......... .......... 55.3M\n  6850K .......... .......... .......... .......... .......... 77.2M\n  6900K .......... .......... .......... .......... .......... 96.6M\n  6950K .......... .......... .......... .......... ..........  109M\n  7000K .......... .......... .......... .......... ..........  107M\n  7050K .......... .......... .......... .......... .......... 1.30M\n  7100K .......... .......... .......... .......... .......... 1.19M\n  7150K .......... .......... .......... .......... .......... 16.2M\n  7200K .......... .......... .......... .......... .......... 83.3M\n  7250K .......... .......... .......... .......... .......... 10.1M\n  7300K .......... .......... .......... .......... .......... 26.9M\n  7350K .......... .......... .......... .......... .......... 58.7M\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  152M\n  7500K .......... .......... .......... .......... .......... 34.5M\n  7550K .......... .......... .......... .......... .......... 2.34M\n  7600K .......... .......... .......... .......... .......... 2.54M\n  7650K .......... .......... .......... .......... .......... 1.28M\n  7700K .......... .......... .......... .......... .......... 15.3M\n  7750K .......... .......... .......... .......... .......... 2.23M\n  7800K .......... .......... .......... .......... .......... 47.4M\n  7850K .......... .......... .......... .......... .......... 96.4M\n  7900K .......... .......... .......... .......... .......... 11.6M\n  7950K .......... .......... .......... .......... ..........  135M\n  8000K .......... .......... .......... .......... ..........  117M\n  8050K .......... .......... .......... .......... ..........  144M\n  8100K .......... .......... .......... .......... .......... 21.7M\n  8150K .......... .......... .......... .......... .......... 2.76M\n  8200K .......... .......... .......... .......... .......... 4.32M\n  8250K .......... .......... .......... .......... .......... 1.56M\n  8300K .......... .......... .......... .......... .......... 2.27M\n  8350K .......... .......... .......... .......... .......... 30.4M\n  8400K .......... .......... .......... .......... .......... 75.7M\n  8450K .......... .......... .......... .......... .......... 4.19M\n  8500K .......... .......... .......... .......... .......... 92.5M\n  8550K .......... .......... .......... .......... ..........  143M\n  8600K .......... .......... .......... .......... .......... 54.2M\n  8650K .......... .......... .......... .......... .......... 61.8M\n  8700K .......... .......... .......... .......... .......... 1.57M\n  8750K .......... .......... .......... .......... .......... 73.6M\n  8800K .......... .......... .......... .......... .......... 2.48M\n  8850K .......... .......... .......... .......... .......... 22.7M\n  8900K .......... .......... .......... .......... .......... 2.26M\n  8950K .......... .......... .......... .......... .......... 34.6M\n  9000K .......... .......... .......... .......... .......... 5.07M\n  9050K .......... .......... .......... .......... .......... 20.5M\n  9100K .......... .......... .......... .......... ..........  122M\n  9150K .......... .......... .......... .......... .......... 51.9M\n  9200K .......... .......... .......... .......... .......... 98.0M\n  9250K .......... .......... .......... .......... .......... 8.40M\n  9300K .......... .......... .......... .......... .......... 1.97M\n  9350K .......... .......... .......... .......... .......... 39.2M\n  9400K .......... .......... .......... .......... .......... 5.10M\n  9450K .......... .......... .......... .......... .......... 4.00M\n  9500K .......... .......... .......... .......... .......... 7.78M\n  9550K .......... .......... .......... .......... .......... 3.02M\n  9600K .......... .......... .......... .......... .......... 5.79M\n  9650K .......... .......... .......... .......... .......... 4.30M\n  9700K .......... .......... .......... .......... .......... 8.79M\n  9750K .......... .......... .......... .......... .......... 3.91M\n  9800K .......... .......... .......... .......... .......... 3.47M\n  9850K .......... .......... .......... .......... .......... 5.66M\n  9900K .......... .......... .......... .......... .......... 6.95M\n  9950K .......... .......... .......... .......... .......... 4.66M\n 10000K .......... .......... .......... .......... .......... 2.90M\n 10050K .......... .......... .......... .......... .......... 5.16M\n 10100K .......... .......... .......... .......... .......... 5.43M\n 10150K .......... .......... .......... .......... .......... 6.62M\n 10200K .......... .......... .......... .......... .......... 4.62M\n 10250K .......... .......... .......... .......... .......... 2.98M\n 10300K .......... .......... .......... .......... .......... 3.83M\n 10350K .......... .......... .......... .......... .......... 21.5M\n 10400K .......... .......... .......... .......... .......... 3.85M\n 10450K .......... .......... .......... .......... .......... 4.38M\n 10500K .......... .......... .......... .......... .......... 3.45M\n 10550K .......... .......... .......... .......... .......... 9.81M\n 10600K .......... .......... .......... .......... .......... 4.51M\n 10650K .......... .......... .......... .......... .......... 3.98M\n 10700K .......... .......... .......... .......... .......... 4.16M\n 10750K .......... .......... .......... .......... .......... 7.73M\n 10800K .......... .......... .......... .......... .......... 3.62M\n 10850K .......... .......... .......... .......... .......... 4.32M\n 10900K .......... .......... .......... .......... .......... 5.28M\n 10950K .......... .......... .......... .......... .......... 7.41M\n 11000K .......... .......... .......... .......... .......... 4.35M\n 11050K .......... .......... .......... .......... .......... 4.20M\n 11100K .......... .......... .......... .......... .......... 4.19M\n 11150K .......... .......... .......... .......... .......... 7.33M\n 11200K .......... .......... .......... .......... .......... 4.23M\n 11250K .......... .......... .......... .......... .......... 3.77M\n 11300K .......... .......... .......... .......... .......... 4.88M\n 11350K .......... .......... .......... .......... .......... 3.79M\n 11400K .......... .......... .......... .......... .......... 5.90M\n 11450K .......... .......... .......... .......... .......... 3.91M\n 11500K .......... .......... .......... .......... .......... 4.16M\n 11550K .......... .......... .......... .......... ..........\n..\n........ .......... .......... .......... 8.56M\n 49900K .......... .......... .......... .......... .......... 4.29M\n 49950K .......... .......... .......... .......... .......... 4.40M\n 50000K .......... .......... .......... .......... .......... 4.63M\n 50050K .......... .......... .......... .......... .......... 8.06M\n 50100K .......... .......... .......... .......... .......... 4.49M\n 50150K .......... .......... .......... .......... .......... 4.52M\n 50200K .......... .......... .......... .......... .......... 4.58M\n 50250K .......... .......... .......... .......... .......... 7.47M\n 50300K .......... .......... .......... .......... .......... 4.84M\n 50350K .......... .......... .......... .......... .......... 4.41M\n 50400K .......... .......... .......... .......... .......... 4.65M\n 50450K .......... .......... .......... .......... .......... 8.58M\n 50500K .......... .......... .......... .......... .......... 4.39M\n 50550K .......... .......... .......... .......... .......... 4.43M\n 50600K .......... .......... .......... .......... .......... 4.62M\n 50650K .......... .......... .......... .......... .......... 8.06M\n 50700K .......... .......... .......... .......... .......... 4.53M\n 50750K .......... .......... .......... .......... .......... 4.46M\n 50800K .......... .......... .......... .......... .......... 4.55M\n 50850K .......... .......... .......... .......... .......... 7.96M\n 50900K .......... .......... .......... .......... .......... 4.60M\n 50950K .......... .......... .......... .......... .......... 4.57M\n 51000K .......... .......... .......... .......... .......... 4.43M\n 51050K .......... .......... .......... .......... .......... 7.71M\n 51100K .......... .......... .......... .......... .......... 4.62M\n 51150K .......... .......... .......... .......... .......... 4.03M\n 51200K .......... .......... .......... .......... .......... 3.47M\n 51250K .......... .......... .......... .......... .......... 4.07M\n 51300K .......... .......... .......... .......... .......... 8.52M\n 51350K .......... .......... .......... .......... .......... 4.34M\n 51400K .......... .......... .......... .......... .......... 4.58M\n 51450K .......... .......... .......... .......... .......... 4.16M\n 51500K .......... .......... .......... .......... .......... 8.67M\n 51550K .......... .......... .......... .......... .......... 4.49M\n 51600K .......... .......... .......... .......... .......... 4.08M\n 51650K .......... .......... .......... .......... .......... 4.34M\n 51700K .......... .......... .......... .......... .......... 4.11M\n 51750K .......... .......... .......... .......... .......... 8.42M\n 51800K .......... .......... .......... .......... .......... 4.24M\n 51850K .......... .......... .......... .......... .......... 4.50M\n 51900K .......... .......... .......... .......... .......... 4.28M\n 51950K .......... .......... .......... .......... .......... 8.15M\n 52000K .......... .......... .......... .......... .......... 3.91M\n 52050K .......... .......... .......... .......... .......... 4.70M\n 52100K .......... .......... .......... .......... .......... 4.62M\n 52150K .......... .......... .......... .......... .......... 7.40M\n 52200K .......... .......... .......... .......... .......... 4.02M\n 52250K .......... .......... .......... .......... .......... 4.58M\n 52300K .......... .......... .......... .......... .......... 4.61M\n 52350K .......... .......... .......... .......... .......... 8.54M\n 52400K .......... .......... .......... .......... .......... 4.39M\n 52450K .......... .......... .......... .......... .......... 4.45M\n 52500K .......... .......... .......... .......... .......... 4.20M\n 52550K .......... .......... .......... .......... .......... 7.73M\n 52600K .......... .......... .......... .......... .......... 4.20M\n 52650K .......... .......... .......... .......... .......... 4.66M\n 52700K .......... .......... .......... .......... .......... 4.60M\n 52750K .......... .......... .......... .......... .......... 8.22M\n 52800K .......... .......... .......... .......... .......... 4.58M\n 52850K .......... .......... .......... .......... .......... 4.68M\n 52900K .......... .......... .......... .......... .......... 4.62M\n 52950K .......... .......... .......... .......... .......... 8.61M\n 53000K .......... .......... .......... .......... .......... 4.56M\n 53050K .......... .......... .......... .......... .......... 4.48M\n 53100K .......... .......... .......... .......... .......... 4.36M\n 53150K .......... .......... .......... .......... .......... 6.40M\n 53200K .......... .......... .......... .......... .......... 3.79M\n 53250K .......... .......... .......... .......... .......... 3.43M\n 53300K .......... .......... .......... .......... .......... 3.50M\n 53350K .......... .......... .......... .......... .......... 6.80M\n 53400K .......... .......... .......... .......... .......... 3.55M\n 53450K .......... .......... .......... .......... .......... 3.12M\n 53500K .......... .......... .......... .......... .......... 3.96M\n 53550K .......... .......... .......... .......... .......... 6.32M\n 53600K .......... .......... .......... .......... .......... 3.58M\n 53650K .......... .......... .......... .......... .......... 3.42M\n 53700K .......... .......... .......... .......... .......... 3.42M\n 53750K .......... .......... .......... .......... .......... 6.63M\n 53800K .......... .......... .......... .......... .......... 5.00M\n 53850K .......... .......... .......... .......... .......... 4.40M\n 53900K .......... .......... .......... .......... .......... 4.61M\n 53950K .......... .......... .......... .......... .......... 4.68M\n 54000K .......... .......... .......... .......... .......... 8.46M\n 54050K .......... .......... .......... .......... .......... 4.43M\n 54100K .......... .......... .......... .......... .......... 4.60M\n 54150K .......... .......... .......... .......... .......... 4.66M\n 54200K .......... .......... .......... .......... .......... 8.46M\n 54250K .......... .......... .......... .......... .......... 4.40M\n 54300K .......... .......... .......... .......... .......... 4.72M\n 54350K .......... .......... .......... .......... .......... 4.66M\n 54400K .......... .......... .......... .......... .......... 8.64M\n 54450K .......... .......... .......... .......... .......... 4.49M\n 54500K .......... .......... .......... .......... .......... 4.25M\n 54550K .......... .......... .......... .......... .......... 5.00M\n 54600K .......... .......... .......... .......... .......... 8.30M\n 54650K .......... .......... .......... .......... .......... 4.45M\n 54700K .......... .......... .......... .......... .......... 4.53M\n 54750K .......... .......... .......... .......... .......... 4.93M\n 54800K .......... .......... .......... .......... .......... 8.68M\n 54850K .......... .......... .......... .......... .......... 4.63M\n 54900K .......... .......... .......... .......... .......... 4.33M\n 54950K .......... .......... .......... .......... .......... 4.67M\n 55000K .......... .......... .......... .......... .......... 7.04M\n 55050K .......... .......... .......... .......... .......... 3.54M\n 55100K .......... .......... .......... .......... .......... 7.61M\n 55150K .......... .......... .......... .......... .......... 4.05M\n 55200K .......... .......... .......... .......... .......... 5.26M\n 55250K .......... .......... .......... .......... .......... 7.83M\n 55300K .......... .......... .......... .......... .......... 4.14M\n 55350K .......... .......... .......... .......... .......... 5.21M\n 55400K .......... .......... .......... .......... .......... 4.61M\n 55450K .......... .......... .......... .......... .......... 9.03M\n 55500K .......... .......... .......... .......... .......... 4.10M\n 55550K .......... .......... .......... .......... .......... 4.45M\n 55600K .......... .......... .......... .......... .......... 4.64M\n 55650K .......... .......... .......... .......... .......... 8.76M\n 55700K .......... .......... .......... .......... .......... 4.09M\n 55750K .......... .......... .......... .......... .......... 4.74M\n 55800K .......... .......... .......... .......... .......... 4.42M\n 55850K .......... .......... .......... .......... .......... 7.98M\n 55900K .......... .......... .......... .......... .......... 4.47M\n 55950K .......... .......... .......... .......... .......... 4.67M\n 56000K .......... .......... .......... .......... .......... 4.48M\n 56050K .......... .......... .......... .......... .......... 8.30M\n 56100K .......... .......... .......... .......... .......... 4.60M\n 56150K .......... .......... .......... .......... .......... 4.62M\n 56200K .......... .......... .......... .......... .......... 4.46M\n 56250K .......... .......... .......... .......... .......... 9.17M\n 56300K .......... .......... .......... .......... .......... 4.58M\n 56350K .......... .......... .......... .......... .......... 4.25M\n 56400K .......... .......... .......... .......... .......... 4.64M\n 56450K .......... .......... .......... .......... .......... 8.69M\n 56500K .......... .......... .......... .......... .......... 4.24M\n 56550K .......... .......... .......... .......... .......... 4.56M\n 56600K .......... .......... .......... .......... .......... 4.75M\n 56650K .......... .......... .......... .......... .......... 8.45M\n 56700K .......... .......... .......... .......... .......... 4.49M\n 56750K .......... .......... .......... .......... .......... 3.94M\n 56800K .......... .......... .......... .......... .......... 4.55M\n 56850K .......... .......... .......... .......... .......... 4.73M\n 56900K .......... .......... .......... .......... .......... 8.36M\n 56950K .......... .......... .......... .......... .......... 4.30M\n 57000K .......... .......... .......... .......... .......... 4.40M\n 57050K .......... .......... .......... .......... .......... 5.00M\n 57100K .......... .......... .......... .......... .......... 9.04M\n 57150K .......... .......... .......... .......... .......... 4.48M\n 57200K .......... .......... .......... .......... .......... 4.43M\n 57250K .......... .......... .......... .......... .......... 9.93M\n 57300K .......... .......... .......... .......... .......... 4.50M\n 57350K .......... .......... .......... .......... .......... 4.43M\n 57400K .......... .......... .......... .......... .......... 4.68M\n 57450K .......... .......... .......... .......... .......... 8.99M\n 57500K .......... .......... .......... .......... .......... 4.50M\n 57550K .......... .......... .......... .......... .......... 4.44M\n 57600K .......... .......... .......... .......... .......... 4.58M\n 57650K .......... .......... .......... .......... .......... 8.56M\n 57700K .......... .......... .......... .......... .......... 4.37M\n 57750K .......... .......... .......... .......... .......... 4.35M\n 57800K .......... .......... .......... .......... .......... 4.42M\n 57850K .......... .......... .......... .......... .......... 8.51M\n 57900K .......... .......... .......... .......... .......... 4.40M\n 57950K .......... .......... .......... .......... .......... 4.42M\n 58000K .......... .......... .......... .......... .......... 4.40M\n 58050K .......... .......... .......... .......... .......... 8.06M\n 58100K .......... .......... .......... .......... .......... 4.71M\n 58150K .......... .......... .......... .......... .......... 3.88M\n 58200K .......... .......... .......... .......... .......... 4.33M\n 58250K .......... .......... .......... .......... .......... 8.79M\n 58300K .......... .......... .......... .......... .......... 4.52M\n 58350K .......... .......... .......... .......... .......... 4.57M\n 58400K .......... .......... .......... .......... .......... 4.58M\n 58450K .......... .......... .......... .......... .......... 7.67M\n 58500K .......... .......... .......... .......... .......... 4.59M\n 58550K .......... .......... .......... .......... .......... 4.64M\n 58600K .......... .......... .......... .......... .......... 4.22M\n 58650K .......... .......... .......... .......... .......... 7.92M\n 58700K .......... .......... .......... .......... .......... 4.41M\n 58750K .......... .......... .......... .......... .......... 4.43M\n 58800K .......... .......... .......... .......... .......... 4.24M\n 58850K .......... .......... .......... .......... .......... 7.43M\n 58900K .......... .......... .......... .......... .......... 4.26M\n 58950K .......... .......... .......... .......... .......... 3.42M\n 59000K .......... .......... .......... .......... .......... 6.80M\n 59050K .......... .......... .......... .......... .......... 4.25M\n 59100K .......... .......... .......... .......... .......... 8.61M\n 59150K .......... .......... .......... .......... .......... 4.52M\n 59200K .......... .......... .......... .......... .......... 4.60M\n 59250K .......... .......... .......... .......... .......... 3.97M\n 59300K .......... .......... .......... .......... .......... 5.24M\n 59350K .......... .......... .......... .......... .......... 5.63M\n 59400K .......... .......... .......... .......... .......... 6.57M\n 59450K .......... .......... .......... .......... .......... 4.41M\n 59500K .......... .......... .......... .......... .......... 4.60M\n 59550K .......... .......... .......... .......... .......... 8.71M\n 59600K .......... .......... .......... .......... .......... 4.53M\n 59650K .......... .......... .......... .......... .......... 4.47M\n 59700K .......... .......... .......... .......... .......... 4.59M\n 59750K .......... .......... .......... .......... .......... 8.84M\n 59800K .......... .......... .......... .......... .......... 4.46M\n 59850K .......... .......... .......... .......... .......... 4.14M\n 59900K .......... .......... .......... .......... .......... 4.43M\n 59950K .......... .......... .......... .......... .......... 7.97M\n 60000K .......... .......... .......... .......... .......... 4.65M\n 60050K .......... .......... .......... .......... .......... 4.05M\n 60100K .......... .......... .......... .......... .......... 3.51M\n 60150K .......... .......... .......... .......... .......... 23.2M\n 60200K .......... .......... .......... .......... .......... 4.17M\n 60250K .......... .......... .......... .......... .......... 4.86M\n 60300K .......... .......... .......... .......... .......... 4.50M\n 60350K .......... .......... .......... .......... .......... 8.34M\n 60400K .......... .......... .......... .......... .......... 4.47M\n 60450K .......... .......... .......... .......... .......... 4.86M\n 60500K .......... .......... .......... .......... .......... 4.22M\n 60550K .......... .......... .......... .......... .......... 9.12M\n 60600K .......... .......... .......... .......... ..........  916K\n 60650K .......... .........                                   96.5M=15s\n\n2023-02-03 10:56:54 (4.03 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-02-03 10:56:58--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 567421 (554K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  9%  181K 3s\n    50K .......... .......... .......... .......... .......... 18%  183K 2s\n   100K .......... .......... .......... .......... .......... 27%  542K 2s\n   150K .......... .......... .......... .......... .......... 36%  274K 1s\n   200K .......... .......... .......... .......... .......... 45%  543K 1s\n   250K .......... .......... .......... .......... .......... 54%  545K 1s\n   300K .......... .......... .......... .......... .......... 63%  547K 1s\n   350K .......... .......... .......... .......... .......... 72%  273K 0s\n   400K .......... .......... .......... .......... .......... 81%  548K 0s\n   450K .......... .......... .......... .......... .......... 90%  547K 0s\n   500K .......... .......... .......... .......... .......... 99% 62.7M 0s\n   550K ....                                                  100% 52.5M=1.5s\n\n2023-02-03 10:57:00 (378 KB/s) - \u0027exp_design.tsv\u0027 saved [567421/567421]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-02-03 10:56:38--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  258K\n    50K .......... .......... .......... .......... ..........  190K\n   100K .......... .......... .......... .......... ..........  484K\n   150K .......... .......... .......... .......... ..........  292K\n   200K .......... .......... .......... .......... ..........  547K\n   250K .......... .......... .......... .......... ..........  482K\n   300K .......... .......... .......... .......... ..........  548K\n   350K .......... .......... .......... .......... ..........  549K\n   400K .......... .......... .......... .......... ..........  549K\n   450K .......... .......... .......... .......... ..........  636K\n   500K .......... .......... .......... .......... ..........  805K\n   550K .......... .......... .......... .......... .......... 1.16M\n   600K .......... .......... .......... .......... ..........  635K\n   650K .......... .......... .......... .......... ..........  897K\n   700K .......... .......... .......... .......... .......... 1.01M\n   750K .......... .......... .......... .......... ..........  638K\n   800K .......... .......... .......... .......... .......... 3.17M\n   850K .......... .......... .......... .......... ..........  655K\n   900K .......... .......... .......... .......... .......... 3.72M\n   950K .......... .......... .......... .......... ..........  650K\n  1000K .......... .......... .......... .......... .......... 3.46M\n  1050K .......... .......... .......... .......... .......... 1019K\n  1100K .......... .......... .......... .......... .......... 1.65M\n  1150K .......... .......... .......... .......... ..........  888K\n  1200K .......... .......... .......... .......... .......... 1.43M\n  1250K .......... .......... .......... .......... .......... 3.70M\n  1300K .......... .......... .......... .......... .......... 1.12M\n  1350K .......... .......... .......... .......... .......... 1.43M\n  1400K .......... .......... .......... .......... .......... 3.73M\n  1450K .......... .......... .......... .......... .......... 19.9M\n  1500K .......... .......... .......... .......... ..........  963K\n  1550K .......... .......... .......... .......... .......... 1.35M\n  1600K .......... .......... .......... .......... .......... 22.2M\n  1650K .......... .......... .......... .......... .......... 1.02M\n  1700K .......... .......... .......... .......... .......... 1.66M\n  1750K .......... .......... .......... .......... .......... 4.26M\n  1800K .......... .......... .......... .......... .......... 19.7M\n  1850K .......... .......... .......... .......... .......... 1.03M\n  1900K .......... .......... .......... .......... .......... 1.67M\n  1950K .......... .......... .......... .......... .......... 3.98M\n  2000K .......... .......... .......... .......... .......... 22.0M\n  2050K .......... .......... .......... .......... .......... 1.03M\n  2100K .......... .......... .......... .......... .......... 1.66M\n  2150K .......... .......... .......... .......... .......... 39.0M\n  2200K .......... .......... .......... .......... .......... 4.24M\n  2250K .......... .......... .......... .......... .......... 32.0M\n  2300K .......... .......... .......... .......... .......... 1.02M\n  2350K .......... .......... .......... .......... .......... 1.63M\n  2400K .......... .......... .......... .......... .......... 4.50M\n  2450K .......... .......... .......... .......... .......... 54.1M\n  2500K .......... .......... .......... .......... .......... 28.8M\n  2550K .......... .......... .......... .......... .......... 1.02M\n  2600K .......... .......... .......... .......... .......... 1.64M\n  2650K .......... .......... .......... .......... .......... 42.9M\n  2700K .......... .......... .......... .......... .......... 4.45M\n  2750K .......... .......... .......... .......... .......... 43.2M\n  2800K .......... .......... .......... .......... .......... 1.14M\n  2850K .......... .......... .......... .......... .......... 5.26M\n  2900K .......... .......... .......... .......... .......... 1.86M\n  2950K .......... .......... .......... .......... .......... 13.1M\n  3000K .......... .......... .......... .......... .......... 6.24M\n  3050K .......... .......... .......... .......... .......... 87.7M\n  3100K .......... .......... .......... .......... .......... 1.11M\n  3150K .......... .......... .......... .......... .......... 5.66M\n  3200K .......... .......... .......... .......... .......... 1.86M\n  3250K .......... .......... .......... .......... .......... 32.7M\n  3300K .......... .......... .......... .......... .......... 4.44M\n  3350K .......... .......... .......... .......... ..........  143M\n  3400K .......... .......... .......... .......... .......... 16.2M\n  3450K .......... .......... .......... .......... .......... 1.07M\n  3500K .......... .......... .......... .......... .......... 15.2M\n  3550K .......... .......... .......... .......... .......... 1.74M\n  3600K .......... .......... .......... .......... .......... 15.0M\n  3650K .......... .......... .......... .......... .......... 5.93M\n  3700K .......... .......... .......... .......... ..........  134M\n  3750K .......... .......... .......... .......... .......... 1.12M\n  3800K .......... .......... .......... .......... .......... 9.98M\n  3850K .......... .......... .......... .......... .......... 9.73M\n  3900K .......... .......... .......... .......... .......... 2.01M\n  3950K .......... .......... .......... .......... .......... 9.21M\n  4000K .......... .......... .......... .......... .......... 6.44M\n  4050K .......... .......... .......... .......... .......... 93.3M\n  4100K .......... .......... .......... .......... .......... 22.7M\n  4150K .......... .......... .......... .......... .......... 1.07M\n  4200K .......... .......... .......... .......... .......... 32.9M\n  4250K .......... .......... .......... .......... .......... 1.72M\n  4300K .......... .......... .......... .......... .......... 10.8M\n  4350K .......... .......... .......... .......... .......... 5.85M\n  4400K .......... .......... .......... .......... .......... 45.7M\n  4450K .......... .......... .......... .......... .......... 96.0M\n  4500K .......... .......... .......... .......... .......... 26.7M\n  4550K .......... .......... .......... .......... .......... 1.08M\n  4600K .......... .......... .......... .......... .......... 28.4M\n  4650K .......... .......... .......... .......... .......... 5.17M\n  4700K .......... .......... .......... .......... .......... 2.42M\n  4750K .......... .......... .......... .......... .......... 11.6M\n  4800K .......... .......... .......... .......... .......... 1.15M\n  4850K .......... .......... .......... .......... .......... 3.98M\n  4900K .......... .......... .......... .......... .......... 67.2M\n  4950K .......... .......... .......... .......... ..........  574K\n  5000K .......... .......... .......... .......... ..........  529K\n  5050K .......... .......... .......... .......... .......... 18.0M\n  5100K .......... .......... .......... .......... .......... 16.3M\n  5150K .......... .......... .......... .......... .......... 91.6M\n  5200K .......... .......... .......... .......... .......... 1.13M\n  5250K .......... .......... .......... .......... .......... 85.7M\n  5300K .......... .......... .......... .......... .......... 1.03M\n  5350K .......... .......... .......... .......... .......... 1.81M\n  5400K .......... .......... .......... .......... .......... 23.3M\n  5450K .......... .......... .......... .......... ..........  117M\n  5500K .......... .......... .......... .......... ..........  113M\n  5550K .......... .......... .......... .......... .......... 85.0M\n  5600K .......... .......... .......... .......... .......... 2.20M\n  5650K .......... .......... .......... .......... .......... 32.8M\n  5700K .......... .......... .......... .......... .......... 1.33M\n  5750K .......... .......... .......... .......... .......... 1.85M\n  5800K .......... .......... .......... .......... .......... 20.0M\n  5850K .......... .......... .......... .......... .......... 63.0M\n  5900K .......... .......... .......... .......... ..........  106M\n  5950K .......... .......... .......... .......... ..........  125M\n  6000K .......... .......... .......... .......... .......... 50.6M\n  6050K .......... .......... .......... .......... .......... 2.27M\n  6100K .......... .......... .......... .......... .......... 36.5M\n  6150K .......... .......... .......... .......... .......... 3.22M\n  6200K .......... .......... .......... .......... .......... 2.02M\n  6250K .......... .......... .......... .......... .......... 1.95M\n  6300K .......... .......... .......... .......... .......... 22.6M\n  6350K .......... .......... .......... .......... .......... 97.3M\n  6400K .......... .......... .......... .......... ..........  139M\n  6450K .......... .......... .......... .......... ..........  148M\n  6500K .......... .......... .......... .......... .......... 6.49M\n  6550K .......... .......... .......... .......... .......... 3.21M\n  6600K .......... .......... .......... .......... .......... 27.4M\n  6650K .......... .......... .......... .......... .......... 3.39M\n  6700K .......... .......... .......... .......... .......... 2.04M\n  6750K .......... .......... .......... .......... .......... 1.88M\n  6800K .......... .......... .......... .......... .......... 55.3M\n  6850K .......... .......... .......... .......... .......... 77.2M\n  6900K .......... .......... .......... .......... .......... 96.6M\n  6950K .......... .......... .......... .......... ..........  109M\n  7000K .......... .......... .......... .......... ..........  107M\n  7050K .......... .......... .......... .......... .......... 1.30M\n  7100K .......... .......... .......... .......... .......... 1.19M\n  7150K .......... .......... .......... .......... .......... 16.2M\n  7200K .......... .......... .......... .......... .......... 83.3M\n  7250K .......... .......... .......... .......... .......... 10.1M\n  7300K .......... .......... .......... .......... .......... 26.9M\n  7350K .......... .......... .......... .......... .......... 58.7M\n  7400K .......... .......... .......... .......... ..........  128M\n  7450K .......... .......... .......... .......... ..........  152M\n  7500K .......... .......... .......... .......... .......... 34.5M\n  7550K .......... .......... .......... .......... .......... 2.34M\n  7600K .......... .......... .......... .......... .......... 2.54M\n  7650K .......... .......... .......... .......... .......... 1.28M\n  7700K .......... .......... .......... .......... .......... 15.3M\n  7750K .......... .......... .......... .......... .......... 2.23M\n  7800K .......... .......... .......... .......... .......... 47.4M\n  7850K .......... .......... .......... .......... .......... 96.4M\n  7900K .......... .......... .......... .......... .......... 11.6M\n  7950K .......... .......... .......... .......... ..........  135M\n  8000K .......... .......... .......... .......... ..........  117M\n  8050K .......... .......... .......... .......... ..........  144M\n  8100K .......... .......... .......... .......... .......... 21.7M\n  8150K .......... .......... .......... .......... .......... 2.76M\n  8200K .......... .......... .......... .......... .......... 4.32M\n  8250K .......... .......... .......... .......... .......... 1.56M\n  8300K .......... .......... .......... .......... .......... 2.27M\n  8350K .......... .......... .......... .......... .......... 30.4M\n  8400K .......... .......... .......... .......... .......... 75.7M\n  8450K .......... .......... .......... .......... .......... 4.19M\n  8500K .......... .......... .......... .......... .......... 92.5M\n  8550K .......... .......... .......... .......... ..........  143M\n  8600K .......... .......... .......... .......... .......... 54.2M\n  8650K .......... .......... .......... .......... .......... 61.8M\n  8700K .......... .......... .......... .......... .......... 1.57M\n  8750K .......... .......... .......... .......... .......... 73.6M\n  8800K .......... .......... .......... .......... .......... 2.48M\n  8850K .......... .......... .......... .......... .......... 22.7M\n  8900K .......... .......... .......... .......... .......... 2.26M\n  8950K .......... .......... .......... .......... .......... 34.6M\n  9000K .......... .......... .......... .......... .......... 5.07M\n  9050K .......... .......... .......... .......... .......... 20.5M\n  9100K .......... .......... .......... .......... ..........  122M\n  9150K .......... .......... .......... .......... .......... 51.9M\n  9200K .......... .......... .......... .......... .......... 98.0M\n  9250K .......... .......... .......... .......... .......... 8.40M\n  9300K .......... .......... .......... .......... .......... 1.97M\n  9350K .......... .......... .......... .......... .......... 39.2M\n  9400K .......... .......... .......... .......... .......... 5.10M\n  9450K .......... .......... .......... .......... .......... 4.00M\n  9500K .......... .......... .......... .......... .......... 7.78M\n  9550K .......... .......... .......... .......... .......... 3.02M\n  9600K .......... .......... .......... .......... .......... 5.79M\n  9650K .......... .......... .......... .......... .......... 4.30M\n  9700K .......... .......... .......... .......... .......... 8.79M\n  9750K .......... .......... .......... .......... .......... 3.91M\n  9800K .......... .......... .......... .......... .......... 3.47M\n  9850K .......... .......... .......... .......... .......... 5.66M\n  9900K .......... .......... .......... .......... .......... 6.95M\n  9950K .......... .......... .......... .......... .......... 4.66M\n 10000K .......... .......... .......... .......... .......... 2.90M\n 10050K .......... .......... .......... .......... .......... 5.16M\n 10100K .......... .......... .......... .......... .......... 5.43M\n 10150K .......... .......... .......... .......... .......... 6.62M\n 10200K .......... .......... .......... .......... .......... 4.62M\n 10250K .......... .......... .......... .......... .......... 2.98M\n 10300K .......... .......... .......... .......... .......... 3.83M\n 10350K .......... .......... .......... .......... .......... 21.5M\n 10400K .......... .......... .......... .......... .......... 3.85M\n 10450K .......... .......... .......... .......... .......... 4.38M\n 10500K .......... .......... .......... .......... .......... 3.45M\n 10550K .......... .......... .......... .......... .......... 9.81M\n 10600K .......... .......... .......... .......... .......... 4.51M\n 10650K .......... .......... .......... .......... .......... 3.98M\n 10700K .......... .......... .......... .......... .......... 4.16M\n 10750K .......... .......... .......... .......... .......... 7.73M\n 10800K .......... .......... .......... .......... .......... 3.62M\n 10850K .......... .......... .......... .......... .......... 4.32M\n 10900K .......... .......... .......... .......... .......... 5.28M\n 10950K .......... .......... .......... .......... .......... 7.41M\n 11000K .......... .......... .......... .......... .......... 4.35M\n 11050K .......... .......... .......... .......... .......... 4.20M\n 11100K .......... .......... .......... .......... .......... 4.19M\n 11150K .......... .......... .......... .......... .......... 7.33M\n 11200K .......... .......... .......... .......... .......... 4.23M\n 11250K .......... .......... .......... .......... .......... 3.77M\n 11300K .......... .......... .......... .......... .......... 4.88M\n 11350K .......... .......... .......... .......... .......... 3.79M\n 11400K .......... .......... .......... .......... .......... 5.90M\n 11450K .......... .......... .......... .......... .......... 3.91M\n 11500K .......... .......... .......... .......... .......... 4.16M\n 11550K .......... .......... .......... .......... ..........\n..\n........ .......... .......... .......... 8.56M\n 49900K .......... .......... .......... .......... .......... 4.29M\n 49950K .......... .......... .......... .......... .......... 4.40M\n 50000K .......... .......... .......... .......... .......... 4.63M\n 50050K .......... .......... .......... .......... .......... 8.06M\n 50100K .......... .......... .......... .......... .......... 4.49M\n 50150K .......... .......... .......... .......... .......... 4.52M\n 50200K .......... .......... .......... .......... .......... 4.58M\n 50250K .......... .......... .......... .......... .......... 7.47M\n 50300K .......... .......... .......... .......... .......... 4.84M\n 50350K .......... .......... .......... .......... .......... 4.41M\n 50400K .......... .......... .......... .......... .......... 4.65M\n 50450K .......... .......... .......... .......... .......... 8.58M\n 50500K .......... .......... .......... .......... .......... 4.39M\n 50550K .......... .......... .......... .......... .......... 4.43M\n 50600K .......... .......... .......... .......... .......... 4.62M\n 50650K .......... .......... .......... .......... .......... 8.06M\n 50700K .......... .......... .......... .......... .......... 4.53M\n 50750K .......... .......... .......... .......... .......... 4.46M\n 50800K .......... .......... .......... .......... .......... 4.55M\n 50850K .......... .......... .......... .......... .......... 7.96M\n 50900K .......... .......... .......... .......... .......... 4.60M\n 50950K .......... .......... .......... .......... .......... 4.57M\n 51000K .......... .......... .......... .......... .......... 4.43M\n 51050K .......... .......... .......... .......... .......... 7.71M\n 51100K .......... .......... .......... .......... .......... 4.62M\n 51150K .......... .......... .......... .......... .......... 4.03M\n 51200K .......... .......... .......... .......... .......... 3.47M\n 51250K .......... .......... .......... .......... .......... 4.07M\n 51300K .......... .......... .......... .......... .......... 8.52M\n 51350K .......... .......... .......... .......... .......... 4.34M\n 51400K .......... .......... .......... .......... .......... 4.58M\n 51450K .......... .......... .......... .......... .......... 4.16M\n 51500K .......... .......... .......... .......... .......... 8.67M\n 51550K .......... .......... .......... .......... .......... 4.49M\n 51600K .......... .......... .......... .......... .......... 4.08M\n 51650K .......... .......... .......... .......... .......... 4.34M\n 51700K .......... .......... .......... .......... .......... 4.11M\n 51750K .......... .......... .......... .......... .......... 8.42M\n 51800K .......... .......... .......... .......... .......... 4.24M\n 51850K .......... .......... .......... .......... .......... 4.50M\n 51900K .......... .......... .......... .......... .......... 4.28M\n 51950K .......... .......... .......... .......... .......... 8.15M\n 52000K .......... .......... .......... .......... .......... 3.91M\n 52050K .......... .......... .......... .......... .......... 4.70M\n 52100K .......... .......... .......... .......... .......... 4.62M\n 52150K .......... .......... .......... .......... .......... 7.40M\n 52200K .......... .......... .......... .......... .......... 4.02M\n 52250K .......... .......... .......... .......... .......... 4.58M\n 52300K .......... .......... .......... .......... .......... 4.61M\n 52350K .......... .......... .......... .......... .......... 8.54M\n 52400K .......... .......... .......... .......... .......... 4.39M\n 52450K .......... .......... .......... .......... .......... 4.45M\n 52500K .......... .......... .......... .......... .......... 4.20M\n 52550K .......... .......... .......... .......... .......... 7.73M\n 52600K .......... .......... .......... .......... .......... 4.20M\n 52650K .......... .......... .......... .......... .......... 4.66M\n 52700K .......... .......... .......... .......... .......... 4.60M\n 52750K .......... .......... .......... .......... .......... 8.22M\n 52800K .......... .......... .......... .......... .......... 4.58M\n 52850K .......... .......... .......... .......... .......... 4.68M\n 52900K .......... .......... .......... .......... .......... 4.62M\n 52950K .......... .......... .......... .......... .......... 8.61M\n 53000K .......... .......... .......... .......... .......... 4.56M\n 53050K .......... .......... .......... .......... .......... 4.48M\n 53100K .......... .......... .......... .......... .......... 4.36M\n 53150K .......... .......... .......... .......... .......... 6.40M\n 53200K .......... .......... .......... .......... .......... 3.79M\n 53250K .......... .......... .......... .......... .......... 3.43M\n 53300K .......... .......... .......... .......... .......... 3.50M\n 53350K .......... .......... .......... .......... .......... 6.80M\n 53400K .......... .......... .......... .......... .......... 3.55M\n 53450K .......... .......... .......... .......... .......... 3.12M\n 53500K .......... .......... .......... .......... .......... 3.96M\n 53550K .......... .......... .......... .......... .......... 6.32M\n 53600K .......... .......... .......... .......... .......... 3.58M\n 53650K .......... .......... .......... .......... .......... 3.42M\n 53700K .......... .......... .......... .......... .......... 3.42M\n 53750K .......... .......... .......... .......... .......... 6.63M\n 53800K .......... .......... .......... .......... .......... 5.00M\n 53850K .......... .......... .......... .......... .......... 4.40M\n 53900K .......... .......... .......... .......... .......... 4.61M\n 53950K .......... .......... .......... .......... .......... 4.68M\n 54000K .......... .......... .......... .......... .......... 8.46M\n 54050K .......... .......... .......... .......... .......... 4.43M\n 54100K .......... .......... .......... .......... .......... 4.60M\n 54150K .......... .......... .......... .......... .......... 4.66M\n 54200K .......... .......... .......... .......... .......... 8.46M\n 54250K .......... .......... .......... .......... .......... 4.40M\n 54300K .......... .......... .......... .......... .......... 4.72M\n 54350K .......... .......... .......... .......... .......... 4.66M\n 54400K .......... .......... .......... .......... .......... 8.64M\n 54450K .......... .......... .......... .......... .......... 4.49M\n 54500K .......... .......... .......... .......... .......... 4.25M\n 54550K .......... .......... .......... .......... .......... 5.00M\n 54600K .......... .......... .......... .......... .......... 8.30M\n 54650K .......... .......... .......... .......... .......... 4.45M\n 54700K .......... .......... .......... .......... .......... 4.53M\n 54750K .......... .......... .......... .......... .......... 4.93M\n 54800K .......... .......... .......... .......... .......... 8.68M\n 54850K .......... .......... .......... .......... .......... 4.63M\n 54900K .......... .......... .......... .......... .......... 4.33M\n 54950K .......... .......... .......... .......... .......... 4.67M\n 55000K .......... .......... .......... .......... .......... 7.04M\n 55050K .......... .......... .......... .......... .......... 3.54M\n 55100K .......... .......... .......... .......... .......... 7.61M\n 55150K .......... .......... .......... .......... .......... 4.05M\n 55200K .......... .......... .......... .......... .......... 5.26M\n 55250K .......... .......... .......... .......... .......... 7.83M\n 55300K .......... .......... .......... .......... .......... 4.14M\n 55350K .......... .......... .......... .......... .......... 5.21M\n 55400K .......... .......... .......... .......... .......... 4.61M\n 55450K .......... .......... .......... .......... .......... 9.03M\n 55500K .......... .......... .......... .......... .......... 4.10M\n 55550K .......... .......... .......... .......... .......... 4.45M\n 55600K .......... .......... .......... .......... .......... 4.64M\n 55650K .......... .......... .......... .......... .......... 8.76M\n 55700K .......... .......... .......... .......... .......... 4.09M\n 55750K .......... .......... .......... .......... .......... 4.74M\n 55800K .......... .......... .......... .......... .......... 4.42M\n 55850K .......... .......... .......... .......... .......... 7.98M\n 55900K .......... .......... .......... .......... .......... 4.47M\n 55950K .......... .......... .......... .......... .......... 4.67M\n 56000K .......... .......... .......... .......... .......... 4.48M\n 56050K .......... .......... .......... .......... .......... 8.30M\n 56100K .......... .......... .......... .......... .......... 4.60M\n 56150K .......... .......... .......... .......... .......... 4.62M\n 56200K .......... .......... .......... .......... .......... 4.46M\n 56250K .......... .......... .......... .......... .......... 9.17M\n 56300K .......... .......... .......... .......... .......... 4.58M\n 56350K .......... .......... .......... .......... .......... 4.25M\n 56400K .......... .......... .......... .......... .......... 4.64M\n 56450K .......... .......... .......... .......... .......... 8.69M\n 56500K .......... .......... .......... .......... .......... 4.24M\n 56550K .......... .......... .......... .......... .......... 4.56M\n 56600K .......... .......... .......... .......... .......... 4.75M\n 56650K .......... .......... .......... .......... .......... 8.45M\n 56700K .......... .......... .......... .......... .......... 4.49M\n 56750K .......... .......... .......... .......... .......... 3.94M\n 56800K .......... .......... .......... .......... .......... 4.55M\n 56850K .......... .......... .......... .......... .......... 4.73M\n 56900K .......... .......... .......... .......... .......... 8.36M\n 56950K .......... .......... .......... .......... .......... 4.30M\n 57000K .......... .......... .......... .......... .......... 4.40M\n 57050K .......... .......... .......... .......... .......... 5.00M\n 57100K .......... .......... .......... .......... .......... 9.04M\n 57150K .......... .......... .......... .......... .......... 4.48M\n 57200K .......... .......... .......... .......... .......... 4.43M\n 57250K .......... .......... .......... .......... .......... 9.93M\n 57300K .......... .......... .......... .......... .......... 4.50M\n 57350K .......... .......... .......... .......... .......... 4.43M\n 57400K .......... .......... .......... .......... .......... 4.68M\n 57450K .......... .......... .......... .......... .......... 8.99M\n 57500K .......... .......... .......... .......... .......... 4.50M\n 57550K .......... .......... .......... .......... .......... 4.44M\n 57600K .......... .......... .......... .......... .......... 4.58M\n 57650K .......... .......... .......... .......... .......... 8.56M\n 57700K .......... .......... .......... .......... .......... 4.37M\n 57750K .......... .......... .......... .......... .......... 4.35M\n 57800K .......... .......... .......... .......... .......... 4.42M\n 57850K .......... .......... .......... .......... .......... 8.51M\n 57900K .......... .......... .......... .......... .......... 4.40M\n 57950K .......... .......... .......... .......... .......... 4.42M\n 58000K .......... .......... .......... .......... .......... 4.40M\n 58050K .......... .......... .......... .......... .......... 8.06M\n 58100K .......... .......... .......... .......... .......... 4.71M\n 58150K .......... .......... .......... .......... .......... 3.88M\n 58200K .......... .......... .......... .......... .......... 4.33M\n 58250K .......... .......... .......... .......... .......... 8.79M\n 58300K .......... .......... .......... .......... .......... 4.52M\n 58350K .......... .......... .......... .......... .......... 4.57M\n 58400K .......... .......... .......... .......... .......... 4.58M\n 58450K .......... .......... .......... .......... .......... 7.67M\n 58500K .......... .......... .......... .......... .......... 4.59M\n 58550K .......... .......... .......... .......... .......... 4.64M\n 58600K .......... .......... .......... .......... .......... 4.22M\n 58650K .......... .......... .......... .......... .......... 7.92M\n 58700K .......... .......... .......... .......... .......... 4.41M\n 58750K .......... .......... .......... .......... .......... 4.43M\n 58800K .......... .......... .......... .......... .......... 4.24M\n 58850K .......... .......... .......... .......... .......... 7.43M\n 58900K .......... .......... .......... .......... .......... 4.26M\n 58950K .......... .......... .......... .......... .......... 3.42M\n 59000K .......... .......... .......... .......... .......... 6.80M\n 59050K .......... .......... .......... .......... .......... 4.25M\n 59100K .......... .......... .......... .......... .......... 8.61M\n 59150K .......... .......... .......... .......... .......... 4.52M\n 59200K .......... .......... .......... .......... .......... 4.60M\n 59250K .......... .......... .......... .......... .......... 3.97M\n 59300K .......... .......... .......... .......... .......... 5.24M\n 59350K .......... .......... .......... .......... .......... 5.63M\n 59400K .......... .......... .......... .......... .......... 6.57M\n 59450K .......... .......... .......... .......... .......... 4.41M\n 59500K .......... .......... .......... .......... .......... 4.60M\n 59550K .......... .......... .......... .......... .......... 8.71M\n 59600K .......... .......... .......... .......... .......... 4.53M\n 59650K .......... .......... .......... .......... .......... 4.47M\n 59700K .......... .......... .......... .......... .......... 4.59M\n 59750K .......... .......... .......... .......... .......... 8.84M\n 59800K .......... .......... .......... .......... .......... 4.46M\n 59850K .......... .......... .......... .......... .......... 4.14M\n 59900K .......... .......... .......... .......... .......... 4.43M\n 59950K .......... .......... .......... .......... .......... 7.97M\n 60000K .......... .......... .......... .......... .......... 4.65M\n 60050K .......... .......... .......... .......... .......... 4.05M\n 60100K .......... .......... .......... .......... .......... 3.51M\n 60150K .......... .......... .......... .......... .......... 23.2M\n 60200K .......... .......... .......... .......... .......... 4.17M\n 60250K .......... .......... .......... .......... .......... 4.86M\n 60300K .......... .......... .......... .......... .......... 4.50M\n 60350K .......... .......... .......... .......... .......... 8.34M\n 60400K .......... .......... .......... .......... .......... 4.47M\n 60450K .......... .......... .......... .......... .......... 4.86M\n 60500K .......... .......... .......... .......... .......... 4.22M\n 60550K .......... .......... .......... .......... .......... 9.12M\n 60600K .......... .......... .......... .......... ..........  916K\n 60650K .......... .........                                   96.5M=15s\n\n2023-02-03 10:56:54 (4.03 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-02-03 10:56:58--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 567421 (554K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  9%  181K 3s\n    50K .......... .......... .......... .......... .......... 18%  183K 2s\n   100K .......... .......... .......... .......... .......... 27%  542K 2s\n   150K .......... .......... .......... .......... .......... 36%  274K 1s\n   200K .......... .......... .......... .......... .......... 45%  543K 1s\n   250K .......... .......... .......... .......... .......... 54%  545K 1s\n   300K .......... .......... .......... .......... .......... 63%  547K 1s\n   350K .......... .......... .......... .......... .......... 72%  273K 0s\n   400K .......... .......... .......... .......... .......... 81%  548K 0s\n   450K .......... .......... .......... .......... .......... 90%  547K 0s\n   500K .......... .......... .......... .......... .......... 99% 62.7M 0s\n   550K ....                                                  100% 52.5M=1.5s\n\n2023-02-03 10:57:00 (378 KB/s) - \u0027exp_design.tsv\u0027 saved [567421/567421]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-02-03T10:57:13.669468",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 52.29422998428345, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-02-03 10:56:38--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  258K    50K .......... .......... .......... .......... ..........  190K   100K .......... .......... .......... .......... ..........  484K   150K .......... .......... .......... .......... ..........  292K   200K .......... .......... .......... .......... ..........  547K   250K .......... .......... .......... .......... ..........  482K   300K .......... .......... .......... .......... ..........  548K   350K .......... .......... .......... .......... ..........  549K   400K .......... .......... .......... .......... ..........  549K   450K .......... .......... .......... .......... ..........  636K   500K .......... .......... .......... .......... ..........  805K   550K .......... .......... .......... .......... .......... 1.16M   600K .......... .......... .......... .......... ..........  635K   650K .......... .......... .......... .......... ..........  897K   700K .......... .......... .......... .......... .......... 1.01M   750K .......... .......... .......... .......... ..........  638K   800K .......... .......... .......... .......... .......... 3.17M   850K .......... .......... .......... .......... ..........  655K   900K .......... .......... .......... .......... .......... 3.72M   950K .......... .......... .......... .......... ..........  650K  1000K .......... .......... .......... .......... .......... 3.46M  1050K .......... .......... .......... .......... .......... 1019K  1100K .......... .......... .......... .......... .......... 1.65M  1150K .......... .......... .......... .......... ..........  888K  1200K .......... .......... .......... .......... .......... 1.43M  1250K .......... .......... .......... .......... .......... 3.70M  1300K .......... .......... .......... .......... .......... 1.12M  1350K .......... .......... .......... .......... .......... 1.43M  1400K .......... .......... .......... .......... .......... 3.73M  1450K .......... .......... .......... .......... .......... 19.9M  1500K .......... .......... .......... .......... ..........  963K  1550K .......... .......... .......... .......... .......... 1.35M  1600K .......... .......... .......... .......... .......... 22.2M  1650K .......... .......... .......... .......... .......... 1.02M  1700K .......... .......... .......... .......... .......... 1.66M  1750K .......... .......... .......... .......... .......... 4.26M  1800K .......... .......... .......... .......... .......... 19.7M  1850K .......... .......... .......... .......... .......... 1.03M  1900K .......... .......... .......... .......... .......... 1.67M  1950K .......... .......... .......... .......... .......... 3.98M  2000K .......... .......... .......... .......... .......... 22.0M  2050K .......... .......... .......... .......... .......... 1.03M  2100K .......... .......... .......... .......... .......... 1.66M  2150K .......... .......... .......... .......... .......... 39.0M  2200K .......... .......... .......... .......... .......... 4.24M  2250K .......... .......... .......... .......... .......... 32.0M  2300K .......... .......... .......... .......... .......... 1.02M  2350K .......... .......... .......... .......... .......... 1.63M  2400K .......... .......... .......... .......... .......... 4.50M  2450K .......... .......... .......... .......... .......... 54.1M  2500K .......... .......... .......... .......... .......... 28.8M  2550K .......... .......... .......... .......... .......... 1.02M  2600K .......... .......... .......... .......... .......... 1.64M  2650K .......... .......... .......... .......... .......... 42.9M  2700K .......... .......... .......... .......... .......... 4.45M  2750K .......... .......... .......... .......... .......... 43.2M  2800K .......... .......... .......... .......... .......... 1.14M  2850K .......... .......... .......... .......... .......... 5.26M  2900K .......... .......... .......... .......... .......... 1.86M  2950K .......... .......... .......... .......... .......... 13.1M  3000K .......... .......... .......... .......... .......... 6.24M  3050K .......... .......... .......... .......... .......... 87.7M  3100K .......... .......... .......... .......... .......... 1.11M  3150K .......... .......... .......... .......... .......... 5.66M  3200K .......... .......... .......... .......... .......... 1.86M  3250K .......... .......... .......... .......... .......... 32.7M  3300K .......... .......... .......... .......... .......... 4.44M  3350K .......... .......... .......... .......... ..........  143M  3400K .......... .......... .......... .......... .......... 16.2M  3450K .......... .......... .......... .......... .......... 1.07M  3500K .......... .......... .......... .......... .......... 15.2M  3550K .......... .......... .......... .......... .......... 1.74M  3600K .......... .......... .......... .......... .......... 15.0M  3650K .......... .......... .......... .......... .......... 5.93M  3700K .......... .......... .......... .......... ..........  134M  3750K .......... .......... .......... .......... .......... 1.12M  3800K .......... .......... .......... .......... .......... 9.98M  3850K .......... .......... .......... .......... .......... 9.73M  3900K .......... .......... .......... .......... .......... 2.01M  3950K .......... .......... .......... .......... .......... 9.21M  4000K .......... .......... .......... .......... .......... 6.44M  4050K .......... .......... .......... .......... .......... 93.3M  4100K .......... .......... .......... .......... .......... 22.7M  4150K .......... .......... .......... .......... .......... 1.07M  4200K .......... .......... .......... .......... .......... 32.9M  4250K .......... .......... .......... .......... .......... 1.72M  4300K .......... .......... .......... .......... .......... 10.8M  4350K .......... .......... .......... .......... .......... 5.85M  4400K .......... .......... .......... .......... .......... 45.7M  4450K .......... .......... .......... .......... .......... 96.0M  4500K .......... .......... .......... .......... .......... 26.7M  4550K .......... .......... .......... .......... .......... 1.08M  4600K .......... .......... .......... .......... .......... 28.4M  4650K .......... .......... .......... .......... .......... 5.17M  4700K .......... .......... .......... .......... .......... 2.42M  4750K .......... .......... .......... .......... .......... 11.6M  4800K .......... .......... .......... .......... .......... 1.15M  4850K .......... .......... .......... .......... .......... 3.98M  4900K .......... .......... .......... .......... .......... 67.2M  4950K .......... .......... .......... .......... ..........  574K  5000K .......... .......... .......... .......... ..........  529K  5050K .......... .......... .......... .......... .......... 18.0M  5100K .......... .......... .......... .......... .......... 16.3M  5150K .......... .......... .......... .......... .......... 91.6M  5200K .......... .......... .......... .......... .......... 1.13M  5250K .......... .......... .......... .......... .......... 85.7M  5300K .......... .......... .......... .......... .......... 1.03M  5350K .......... .......... .......... .......... .......... 1.81M  5400K .......... .......... .......... .......... .......... 23.3M  5450K .......... .......... .......... .......... ..........  117M  5500K .......... .......... .......... .......... ..........  113M  5550K .......... .......... .......... .......... .......... 85.0M  5600K .......... .......... .......... .......... .......... 2.20M  5650K .......... .......... .......... .......... .......... 32.8M  5700K .......... .......... .......... .......... .......... 1.33M  5750K .......... .......... .......... .......... .......... 1.85M  5800K .......... .......... .......... .......... .......... 20.0M  5850K .......... .......... .......... .......... .......... 63.0M  5900K .......... .......... .......... .......... ..........  106M  5950K .......... .......... .......... .......... ..........  125M  6000K .......... .......... .......... .......... .......... 50.6M  6050K .......... .......... .......... .......... .......... 2.27M  6100K .......... .......... .......... .......... .......... 36.5M  6150K .......... .......... .......... .......... .......... 3.22M  6200K .......... .......... .......... .......... .......... 2.02M  6250K .......... .......... .......... .......... .......... 1.95M  6300K .......... .......... .......... .......... .......... 22.6M  6350K .......... .......... .......... .......... .......... 97.3M  6400K .......... .......... .......... .......... ..........  139M  6450K .......... .......... .......... .......... ..........  148M  6500K .......... .......... .......... .......... .......... 6.49M  6550K .......... .......... .......... .......... .......... 3.21M  6600K .......... .......... .......... .......... .......... 27.4M  6650K .......... .......... .......... .......... .......... 3.39M  6700K .......... .......... .......... .......... .......... 2.04M  6750K .......... .......... .......... .......... .......... 1.88M  6800K .......... .......... .......... .......... .......... 55.3M  6850K .......... .......... .......... .......... .......... 77.2M  6900K .......... .......... .......... .......... .......... 96.6M  6950K .......... .......... .......... .......... ..........  109M  7000K .......... .......... .......... .......... ..........  107M  7050K .......... .......... .......... .......... .......... 1.30M  7100K .......... .......... .......... .......... .......... 1.19M  7150K .......... .......... .......... .......... .......... 16.2M  7200K .......... .......... .......... .......... .......... 83.3M  7250K .......... .......... .......... .......... .......... 10.1M  7300K .......... .......... .......... .......... .......... 26.9M  7350K .......... .......... .......... .......... .......... 58.7M  7400K .......... .......... .......... .......... ..........  128M  7450K .......... .......... .......... .......... ..........  152M  7500K .......... .......... .......... .......... .......... 34.5M  7550K .......... .......... .......... .......... .......... 2.34M  7600K .......... .......... .......... .......... .......... 2.54M  7650K .......... .......... .......... .......... .......... 1.28M  7700K .......... .......... .......... .......... .......... 15.3M  7750K .......... .......... .......... .......... .......... 2.23M  7800K .......... .......... .......... .......... .......... 47.4M  7850K .......... .......... .......... .......... .......... 96.4M  7900K .......... .......... .......... .......... .......... 11.6M  7950K .......... .......... .......... .......... ..........  135M  8000K .......... .......... .......... .......... ..........  117M  8050K .......... .......... .......... .......... ..........  144M  8100K .......... .......... .......... .......... .......... 21.7M  8150K .......... .......... .......... .......... .......... 2.76M  8200K .......... .......... .......... .......... .......... 4.32M  8250K .......... .......... .......... .......... .......... 1.56M  8300K .......... .......... .......... .......... .......... 2.27M  8350K .......... .......... .......... .......... .......... 30.4M  8400K .......... .......... .......... .......... .......... 75.7M  8450K .......... .......... .......... .......... .......... 4.19M  8500K .......... .......... .......... .......... .......... 92.5M  8550K .......... .......... .......... .......... ..........  143M  8600K .......... .......... .......... .......... .......... 54.2M  8650K .......... .......... .......... .......... .......... 61.8M  8700K .......... .......... .......... .......... .......... 1.57M  8750K .......... .......... .......... .......... .......... 73.6M  8800K .......... .......... .......... .......... .......... 2.48M  8850K .......... .......... .......... .......... .......... 22.7M  8900K .......... .......... .......... .......... .......... 2.26M  8950K .......... .......... .......... .......... .......... 34.6M  9000K .......... .......... .......... .......... .......... 5.07M  9050K .......... .......... .......... .......... .......... 20.5M  9100K .......... .......... .......... .......... ..........  122M  9150K .......... .......... .......... .......... .......... 51.9M  9200K .......... .......... .......... .......... .......... 98.0M  9250K .......... .......... .......... .......... .......... 8.40M  9300K .......... .......... .......... .......... .......... 1.97M  9350K .......... .......... .......... .......... .......... 39.2M  9400K .......... .......... .......... .......... .......... 5.10M  9450K .......... .......... .......... .......... .......... 4.00M  9500K .......... .......... .......... .......... .......... 7.78M  9550K .......... .......... .......... .......... .......... 3.02M  9600K .......... .......... .......... .......... .......... 5.79M  9650K .......... .......... .......... .......... .......... 4.30M  9700K .......... .......... .......... .......... .......... 8.79M  9750K .......... .......... .......... .......... .......... 3.91M  9800K .......... .......... .......... .......... .......... 3.47M  9850K .......... .......... .......... .......... .......... 5.66M  9900K .......... .......... .......... .......... .......... 6.95M  9950K .......... .......... .......... .......... .......... 4.66M 10000K .......... .......... .......... .......... .......... 2.90M 10050K .......... .......... .......... .......... .......... 5.16M 10100K .......... .......... .......... .......... .......... 5.43M 10150K .......... .......... .......... .......... .......... 6.62M 10200K .......... .......... .......... .......... .......... 4.62M 10250K .......... .......... .......... .......... .......... 2.98M 10300K .......... .......... .......... .......... .......... 3.83M 10350K .......... .......... .......... .......... .......... 21.5M 10400K .......... .......... .......... .......... .......... 3.85M 10450K .......... .......... .......... .......... .......... 4.38M 10500K .......... .......... .......... .......... .......... 3.45M 10550K .......... .......... .......... .......... .......... 9.81M 10600K .......... .......... .......... .......... .......... 4.51M 10650K .......... .......... .......... .......... .......... 3.98M 10700K .......... .......... .......... .......... .......... 4.16M 10750K .......... .......... .......... .......... .......... 7.73M 10800K .......... .......... .......... .......... .......... 3.62M 10850K .......... .......... .......... .......... .......... 4.32M 10900K .......... .......... .......... .......... .......... 5.28M 10950K .......... .......... .......... .......... .......... 7.41M 11000K .......... .......... .......... .......... .......... 4.35M 11050K .......... .......... .......... .......... .......... 4.20M 11100K .......... .......... .......... .......... .......... 4.19M 11150K .......... .......... .......... .......... .......... 7.33M 11200K .......... .......... .......... .......... .......... 4.23M 11250K .......... .......... .......... .......... .......... 3.77M 11300K .......... .......... .......... .......... .......... 4.88M 11350K .......... .......... .......... .......... .......... 3.79M 11400K .......... .......... .......... .......... .......... 5.90M 11450K .......... .......... .......... .......... .......... 3.91M 11500K .......... .......... .......... .......... .......... 4.16M 11550K .......... .......... .......... .......... .................... .......... .......... .......... 8.56M 49900K .......... .......... .......... .......... .......... 4.29M 49950K .......... .......... .......... .......... .......... 4.40M 50000K .......... .......... .......... .......... .......... 4.63M 50050K .......... .......... .......... .......... .......... 8.06M 50100K .......... .......... .......... .......... .......... 4.49M 50150K .......... .......... .......... .......... .......... 4.52M 50200K .......... .......... .......... .......... .......... 4.58M 50250K .......... .......... .......... .......... .......... 7.47M 50300K .......... .......... .......... .......... .......... 4.84M 50350K .......... .......... .......... .......... .......... 4.41M 50400K .......... .......... .......... .......... .......... 4.65M 50450K .......... .......... .......... .......... .......... 8.58M 50500K .......... .......... .......... .......... .......... 4.39M 50550K .......... .......... .......... .......... .......... 4.43M 50600K .......... .......... .......... .......... .......... 4.62M 50650K .......... .......... .......... .......... .......... 8.06M 50700K .......... .......... .......... .......... .......... 4.53M 50750K .......... .......... .......... .......... .......... 4.46M 50800K .......... .......... .......... .......... .......... 4.55M 50850K .......... .......... .......... .......... .......... 7.96M 50900K .......... .......... .......... .......... .......... 4.60M 50950K .......... .......... .......... .......... .......... 4.57M 51000K .......... .......... .......... .......... .......... 4.43M 51050K .......... .......... .......... .......... .......... 7.71M 51100K .......... .......... .......... .......... .......... 4.62M 51150K .......... .......... .......... .......... .......... 4.03M 51200K .......... .......... .......... .......... .......... 3.47M 51250K .......... .......... .......... .......... .......... 4.07M 51300K .......... .......... .......... .......... .......... 8.52M 51350K .......... .......... .......... .......... .......... 4.34M 51400K .......... .......... .......... .......... .......... 4.58M 51450K .......... .......... .......... .......... .......... 4.16M 51500K .......... .......... .......... .......... .......... 8.67M 51550K .......... .......... .......... .......... .......... 4.49M 51600K .......... .......... .......... .......... .......... 4.08M 51650K .......... .......... .......... .......... .......... 4.34M 51700K .......... .......... .......... .......... .......... 4.11M 51750K .......... .......... .......... .......... .......... 8.42M 51800K .......... .......... .......... .......... .......... 4.24M 51850K .......... .......... .......... .......... .......... 4.50M 51900K .......... .......... .......... .......... .......... 4.28M 51950K .......... .......... .......... .......... .......... 8.15M 52000K .......... .......... .......... .......... .......... 3.91M 52050K .......... .......... .......... .......... .......... 4.70M 52100K .......... .......... .......... .......... .......... 4.62M 52150K .......... .......... .......... .......... .......... 7.40M 52200K .......... .......... .......... .......... .......... 4.02M 52250K .......... .......... .......... .......... .......... 4.58M 52300K .......... .......... .......... .......... .......... 4.61M 52350K .......... .......... .......... .......... .......... 8.54M 52400K .......... .......... .......... .......... .......... 4.39M 52450K .......... .......... .......... .......... .......... 4.45M 52500K .......... .......... .......... .......... .......... 4.20M 52550K .......... .......... .......... .......... .......... 7.73M 52600K .......... .......... .......... .......... .......... 4.20M 52650K .......... .......... .......... .......... .......... 4.66M 52700K .......... .......... .......... .......... .......... 4.60M 52750K .......... .......... .......... .......... .......... 8.22M 52800K .......... .......... .......... .......... .......... 4.58M 52850K .......... .......... .......... .......... .......... 4.68M 52900K .......... .......... .......... .......... .......... 4.62M 52950K .......... .......... .......... .......... .......... 8.61M 53000K .......... .......... .......... .......... .......... 4.56M 53050K .......... .......... .......... .......... .......... 4.48M 53100K .......... .......... .......... .......... .......... 4.36M 53150K .......... .......... .......... .......... .......... 6.40M 53200K .......... .......... .......... .......... .......... 3.79M 53250K .......... .......... .......... .......... .......... 3.43M 53300K .......... .......... .......... .......... .......... 3.50M 53350K .......... .......... .......... .......... .......... 6.80M 53400K .......... .......... .......... .......... .......... 3.55M 53450K .......... .......... .......... .......... .......... 3.12M 53500K .......... .......... .......... .......... .......... 3.96M 53550K .......... .......... .......... .......... .......... 6.32M 53600K .......... .......... .......... .......... .......... 3.58M 53650K .......... .......... .......... .......... .......... 3.42M 53700K .......... .......... .......... .......... .......... 3.42M 53750K .......... .......... .......... .......... .......... 6.63M 53800K .......... .......... .......... .......... .......... 5.00M 53850K .......... .......... .......... .......... .......... 4.40M 53900K .......... .......... .......... .......... .......... 4.61M 53950K .......... .......... .......... .......... .......... 4.68M 54000K .......... .......... .......... .......... .......... 8.46M 54050K .......... .......... .......... .......... .......... 4.43M 54100K .......... .......... .......... .......... .......... 4.60M 54150K .......... .......... .......... .......... .......... 4.66M 54200K .......... .......... .......... .......... .......... 8.46M 54250K .......... .......... .......... .......... .......... 4.40M 54300K .......... .......... .......... .......... .......... 4.72M 54350K .......... .......... .......... .......... .......... 4.66M 54400K .......... .......... .......... .......... .......... 8.64M 54450K .......... .......... .......... .......... .......... 4.49M 54500K .......... .......... .......... .......... .......... 4.25M 54550K .......... .......... .......... .......... .......... 5.00M 54600K .......... .......... .......... .......... .......... 8.30M 54650K .......... .......... .......... .......... .......... 4.45M 54700K .......... .......... .......... .......... .......... 4.53M 54750K .......... .......... .......... .......... .......... 4.93M 54800K .......... .......... .......... .......... .......... 8.68M 54850K .......... .......... .......... .......... .......... 4.63M 54900K .......... .......... .......... .......... .......... 4.33M 54950K .......... .......... .......... .......... .......... 4.67M 55000K .......... .......... .......... .......... .......... 7.04M 55050K .......... .......... .......... .......... .......... 3.54M 55100K .......... .......... .......... .......... .......... 7.61M 55150K .......... .......... .......... .......... .......... 4.05M 55200K .......... .......... .......... .......... .......... 5.26M 55250K .......... .......... .......... .......... .......... 7.83M 55300K .......... .......... .......... .......... .......... 4.14M 55350K .......... .......... .......... .......... .......... 5.21M 55400K .......... .......... .......... .......... .......... 4.61M 55450K .......... .......... .......... .......... .......... 9.03M 55500K .......... .......... .......... .......... .......... 4.10M 55550K .......... .......... .......... .......... .......... 4.45M 55600K .......... .......... .......... .......... .......... 4.64M 55650K .......... .......... .......... .......... .......... 8.76M 55700K .......... .......... .......... .......... .......... 4.09M 55750K .......... .......... .......... .......... .......... 4.74M 55800K .......... .......... .......... .......... .......... 4.42M 55850K .......... .......... .......... .......... .......... 7.98M 55900K .......... .......... .......... .......... .......... 4.47M 55950K .......... .......... .......... .......... .......... 4.67M 56000K .......... .......... .......... .......... .......... 4.48M 56050K .......... .......... .......... .......... .......... 8.30M 56100K .......... .......... .......... .......... .......... 4.60M 56150K .......... .......... .......... .......... .......... 4.62M 56200K .......... .......... .......... .......... .......... 4.46M 56250K .......... .......... .......... .......... .......... 9.17M 56300K .......... .......... .......... .......... .......... 4.58M 56350K .......... .......... .......... .......... .......... 4.25M 56400K .......... .......... .......... .......... .......... 4.64M 56450K .......... .......... .......... .......... .......... 8.69M 56500K .......... .......... .......... .......... .......... 4.24M 56550K .......... .......... .......... .......... .......... 4.56M 56600K .......... .......... .......... .......... .......... 4.75M 56650K .......... .......... .......... .......... .......... 8.45M 56700K .......... .......... .......... .......... .......... 4.49M 56750K .......... .......... .......... .......... .......... 3.94M 56800K .......... .......... .......... .......... .......... 4.55M 56850K .......... .......... .......... .......... .......... 4.73M 56900K .......... .......... .......... .......... .......... 8.36M 56950K .......... .......... .......... .......... .......... 4.30M 57000K .......... .......... .......... .......... .......... 4.40M 57050K .......... .......... .......... .......... .......... 5.00M 57100K .......... .......... .......... .......... .......... 9.04M 57150K .......... .......... .......... .......... .......... 4.48M 57200K .......... .......... .......... .......... .......... 4.43M 57250K .......... .......... .......... .......... .......... 9.93M 57300K .......... .......... .......... .......... .......... 4.50M 57350K .......... .......... .......... .......... .......... 4.43M 57400K .......... .......... .......... .......... .......... 4.68M 57450K .......... .......... .......... .......... .......... 8.99M 57500K .......... .......... .......... .......... .......... 4.50M 57550K .......... .......... .......... .......... .......... 4.44M 57600K .......... .......... .......... .......... .......... 4.58M 57650K .......... .......... .......... .......... .......... 8.56M 57700K .......... .......... .......... .......... .......... 4.37M 57750K .......... .......... .......... .......... .......... 4.35M 57800K .......... .......... .......... .......... .......... 4.42M 57850K .......... .......... .......... .......... .......... 8.51M 57900K .......... .......... .......... .......... .......... 4.40M 57950K .......... .......... .......... .......... .......... 4.42M 58000K .......... .......... .......... .......... .......... 4.40M 58050K .......... .......... .......... .......... .......... 8.06M 58100K .......... .......... .......... .......... .......... 4.71M 58150K .......... .......... .......... .......... .......... 3.88M 58200K .......... .......... .......... .......... .......... 4.33M 58250K .......... .......... .......... .......... .......... 8.79M 58300K .......... .......... .......... .......... .......... 4.52M 58350K .......... .......... .......... .......... .......... 4.57M 58400K .......... .......... .......... .......... .......... 4.58M 58450K .......... .......... .......... .......... .......... 7.67M 58500K .......... .......... .......... .......... .......... 4.59M 58550K .......... .......... .......... .......... .......... 4.64M 58600K .......... .......... .......... .......... .......... 4.22M 58650K .......... .......... .......... .......... .......... 7.92M 58700K .......... .......... .......... .......... .......... 4.41M 58750K .......... .......... .......... .......... .......... 4.43M 58800K .......... .......... .......... .......... .......... 4.24M 58850K .......... .......... .......... .......... .......... 7.43M 58900K .......... .......... .......... .......... .......... 4.26M 58950K .......... .......... .......... .......... .......... 3.42M 59000K .......... .......... .......... .......... .......... 6.80M 59050K .......... .......... .......... .......... .......... 4.25M 59100K .......... .......... .......... .......... .......... 8.61M 59150K .......... .......... .......... .......... .......... 4.52M 59200K .......... .......... .......... .......... .......... 4.60M 59250K .......... .......... .......... .......... .......... 3.97M 59300K .......... .......... .......... .......... .......... 5.24M 59350K .......... .......... .......... .......... .......... 5.63M 59400K .......... .......... .......... .......... .......... 6.57M 59450K .......... .......... .......... .......... .......... 4.41M 59500K .......... .......... .......... .......... .......... 4.60M 59550K .......... .......... .......... .......... .......... 8.71M 59600K .......... .......... .......... .......... .......... 4.53M 59650K .......... .......... .......... .......... .......... 4.47M 59700K .......... .......... .......... .......... .......... 4.59M 59750K .......... .......... .......... .......... .......... 8.84M 59800K .......... .......... .......... .......... .......... 4.46M 59850K .......... .......... .......... .......... .......... 4.14M 59900K .......... .......... .......... .......... .......... 4.43M 59950K .......... .......... .......... .......... .......... 7.97M 60000K .......... .......... .......... .......... .......... 4.65M 60050K .......... .......... .......... .......... .......... 4.05M 60100K .......... .......... .......... .......... .......... 3.51M 60150K .......... .......... .......... .......... .......... 23.2M 60200K .......... .......... .......... .......... .......... 4.17M 60250K .......... .......... .......... .......... .......... 4.86M 60300K .......... .......... .......... .......... .......... 4.50M 60350K .......... .......... .......... .......... .......... 8.34M 60400K .......... .......... .......... .......... .......... 4.47M 60450K .......... .......... .......... .......... .......... 4.86M 60500K .......... .......... .......... .......... .......... 4.22M 60550K .......... .......... .......... .......... .......... 9.12M 60600K .......... .......... .......... .......... ..........  916K 60650K .......... .........                                   96.5M=15s2023-02-03 10:56:54 (4.03 MB/s) - 'exp_quant.zip' saved [62125370]--2023-02-03 10:56:58--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 567421 (554K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  9%  181K 3s    50K .......... .......... .......... .......... .......... 18%  183K 2s   100K .......... .......... .......... .......... .......... 27%  542K 2s   150K .......... .......... .......... .......... .......... 36%  274K 1s   200K .......... .......... .......... .......... .......... 45%  543K 1s   250K .......... .......... .......... .......... .......... 54%  545K 1s   300K .......... .......... .......... .......... .......... 63%  547K 1s   350K .......... .......... .......... .......... .......... 72%  273K 0s   400K .......... .......... .......... .......... .......... 81%  548K 0s   450K .......... .......... .......... .......... .......... 90%  547K 0s   500K .......... .......... .......... .......... .......... 99% 62.7M 0s   550K ....                                                  100% 52.5M=1.5s2023-02-03 10:57:00 (378 KB/s) - 'exp_design.tsv' saved [567421/567421]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator (Test #1)" name="0" time="58.06053423881531">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_type|input_values": "1, 5, 10",  "input_type|parameter_values": "list_comma_separated_values",  "parameter_name": "perplexity" }, "job": {  "command_line": "mkdir outputs; for param in $(echo \u00271, 5, 10\u0027 | sed \u0027s/,/ /g\u0027); do echo $param \u003e outputs/\u0027perplexity\u0027_$param\\.txt; done",  "command_version": null,  "create_time": "2023-02-03T10:56:54.310349",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-ztcvn",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "ad57dbfd7c05321e",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421857.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:57:37"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421857.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:57:37"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "parameter_iteration": {    "id": "b81041a90329dc00",    "src": "hdca"   }  },  "outputs": {   "__new_primary_file_parameter_iteration|perplexity_10__": {    "id": "c1b89534f256f5ac",    "src": "hda",    "uuid": "aad3da5f-b6a6-470c-b884-e333a2680f1c"   },   "__new_primary_file_parameter_iteration|perplexity_1__": {    "id": "67dc74001e0929c9",    "src": "hda",    "uuid": "4a7b0046-e8ed-402e-9904-c0bdb26e5c59"   },   "__new_primary_file_parameter_iteration|perplexity_5__": {    "id": "3986265cc2cb9549",    "src": "hda",    "uuid": "57259dde-1546-49be-b30a-d4d5c10abbc3"   }  },  "params": {   "__input_ext": "\"data\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input_type": "{\"__current_case__\": 0, \"input_values\": \"1, 5, 10\", \"parameter_values\": \"list_comma_separated_values\"}",   "parameter_name": "\"perplexity\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator/0.0.1+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-03T10:57:51.738744",  "user_email": "tests@fake.org" }, "output_problems": [  "Collection element perplexity_1 of collection parameter_iteration: Test output file (perplexity_1.txt) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 58.06053423881531, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator", "tool_version": "0.0.1+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.05177712440490723">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.05177712440490723, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.4.3+galaxy10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.05653071403503418">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.05653071403503418, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.6.0+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert (Test #1)" name="0" time="0.05395770072937012">
        
            <error type="error" message="Input staging problem: Test input file (input.loom) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (input.loom) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.05395770072937012, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert", "tool_version": "0.0.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #1)" name="0" time="84.74325656890869">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    louvain[uns]-    iroot-    neighbors-    louvain[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #2)" name="1" time="66.73718237876892">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    leiden[uns]-    iroot-    neighbors-    leiden[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #3)" name="2" time="41.91207456588745">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #4)" name="3" time="47.07148241996765">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #5)" name="4" time="35.29246664047241">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    diffmap_evals[obsm]-    X_pca-    X_diffmap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #6)" name="5" time="40.12180423736572">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_tsne
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: Consider installing the package MulticoreTSNE (https://github.com/DmitryUlyanov/Multicore-TSNE). Even for n_jobs=1 this speeds up the computation considerably and might yield better converged results.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #7)" name="6" time="53.81768822669983">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    umap[obsm]-    X_pca-    X_umap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #8)" name="7" time="36.92757773399353">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    draw_graph[obsm]-    X_pca-    X_draw_graph_fr[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Package 'fa2' is not installed, falling back to layout 'fr'.To use the faster and better ForceAtlas2 layout, install package 'fa2' (`pip install fa2`).
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #9)" name="8" time="36.93706512451172">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    paga-    paul15_clusters_sizes[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #10)" name="9" time="35.72220754623413">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    dpt_groups-    dpt_order-    dpt_order_indices[uns]-    diffmap_evals-    iroot-    neighbors-    dpt_changepoints-    dpt_grouptips[obsm]-    X_diffmap-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #1)" name="0" time="75.59840655326843">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    336 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #2)" name="1" time="63.816612005233765">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_genes[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #3)" name="2" time="62.765724658966064">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #4)" name="3" time="57.38875389099121">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs[var]-    highly_variable-    means-    dispersions-    dispersions_norm[uns]-    hvg
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'blobs' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #5)" name="4" time="13.472091913223267">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 13.472091913223267, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter", "tool_version": "1.7.1+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #6)" name="5" time="43.26498198509216">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    320 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #7)" name="6" time="43.23770713806152">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    10 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #8)" name="7" time="52.42117524147034">
        
            
                <error type="error" message="Tool exit code: 137"><![CDATA[
                    { "inputs": {  "adata": {   "id": "6771cdb9b08eb2c0",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "pp.downsample_counts",  "method|random_state": "0",  "method|replace": false,  "method|total_counts": "20000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/2/d/dataset_d2db280a-27cb-4de0-83af-7dfa0e366e74.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w\u0027 \u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.7.1",  "create_time": "2023-02-03T10:42:31.690836",  "dependencies": [],  "exit_code": 137,  "external_id": "gxy-6sdjv",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "b6af85dd4add19e4",  "inputs": {   "adata": {    "id": "6771cdb9b08eb2c0",    "src": "hda",    "uuid": "d2db280a-27cb-4de0-83af-7dfa0e366e74"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 137 ()",    "error_level": 3,    "exit_code": 137,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675420956.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:42:36"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675420966.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:42:46"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "10.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "10 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "2c0a65d109ff1a64",    "src": "hda",    "uuid": "1212359b-932a-4ecb-bd8b-1b03a9f4dedd"   },   "hidden_output": {    "id": "f3b6b7159f2ae2de",    "src": "hda",    "uuid": "7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 5, \"counts_per_cell\": \"\", \"method\": \"pp.downsample_counts\", \"random_state\": \"0\", \"replace\": \"false\", \"total_counts\": \"20000\"}"  },  "state": "error",  "stderr": "/galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0",  "tool_stderr": "/galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-03T10:42:57.377541",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0, exit_code: 137, stderr: /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0, exit_code: 137, stderr: /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0, exit_code: 137, stderr: /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat\u0027\n." ], "status": "failure", "test_index": 7, "time_seconds": 52.42117524147034, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter", "tool_version": "1.7.1+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python '/galaxy/server/database/jobs_directory/000/62/configs/tmp_9t3uy0w' >> '/galaxy/server/database/objects/7/e/2/dataset_7e2afdfa-3347-4a8a-9aed-d0ab1e45cb3d.dat'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #1)" name="0" time="57.0705783367157">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1000[obs]-    n_genes_by_counts-    log1p_n_genes_by_counts-    total_counts-    log1p_total_counts-    pct_counts_in_top_50_genes-    pct_counts_in_top_100_genes-    pct_counts_in_top_200_genes-    pct_counts_in_top_500_genes-    total_counts_mito-    log1p_total_counts_mito-    pct_counts_mito-    total_counts_negative-    log1p_total_counts_negative-    pct_counts_negative[var]-    mito-    negative-    n_cells_by_counts-    mean_counts-    log1p_mean_counts-    pct_dropout_by_counts-    total_counts-    log1p_total_counts
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #2)" name="1" time="67.85048651695251">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #11)" name="10" time="41.74361848831177">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    mean-    std[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #12)" name="11" time="40.53457832336426">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #3)" name="2" time="69.1666944026947">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #4)" name="3" time="63.32507514953613">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    score[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #5)" name="4" time="45.2687406539917">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    S_score-    G2M_score-    phase[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'phase' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #6)" name="5" time="46.88581442832947">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    rank_genes_groups
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #7)" name="6" time="94.12621450424194">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #8)" name="7" time="38.05443811416626">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #9)" name="8" time="44.32642221450806">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #10)" name="9" time="44.923383712768555">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    mean-    std[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #1)" name="0" time="39.292988300323486">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #2)" name="1" time="46.16945838928223">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #3)" name="2" time="42.3109016418457">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #4)" name="3" time="41.473106145858765">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some cells have total count of genes equal to zero
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="90.98344707489014">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        basis='umap',    color=['HES4'],    use_raw=True,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='inferno',    palette='inferno',    frameon=True,                    size=1.0,        )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="90.71918654441833">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        x='EKLF',    y='Cebpa',    use_raw=False,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='',    palette='bwr',    frameon=False,        title='A title',                size=1.0,        )anndata.h5adscatter.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file scatter.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="42.62786626815796">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca(        adata,    save='.pdf',    show=False,            color=['CD3D', 'CD79A'],        use_raw=False,    sort_order=True,                components=['1,2', '1,3'],                projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=2,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adpca.pdf
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="43.29287338256836">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_loadings(        adata,    save='.png',    show=False,        components=[1, 2, 3])anndata.h5adpca_loadings.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="55.91828632354736">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_variance_ratio(        adata,    save='.png',    show=False,        n_pcs=5,    log=False)anndata.h5adpca_variance_ratio.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="47.92855215072632">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_overview(        adata,    save='.png',    show=False,                use_raw=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adpca.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="47.960615158081055">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.tsne(        adata,    save='.png',    show=False,                use_raw=False,        edges=False,            arrows=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adtsne.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file tsne.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="44.01031708717346">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.umap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,        edges=True,    edges_width=0.1,    edges_color='AliceBlue',            arrows=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="44.83611536026001">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.diffmap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addiffmap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="41.85388112068176">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.draw_graph(        adata,    save='.png',    show=False,                use_raw=False,    edges=True,    edges_width=0.1,    edges_color='Crimson',    arrows=False,    sort_order=False,                            projection='2d',    legend_loc='right margin',                legend_fontweight='normal',                palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addraw_graph_fr.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="68.39359951019287">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dpt_timeseries(        adata,    save='.png',    show=False,        color_map='viridis',    as_heatmap=True)anndata.h5addpt_timeseries.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="41.83647036552429">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "0168c0ebfc4575d7",   "src": "hda"  },  "format": "png",  "method|fontsize": "8",  "method|method": "pl.rank_genes_groups",  "method|n_genes": "10",  "method|ncols": "4",  "method|sharey": true }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/a/6/3/dataset_a63eecfb-9729-4296-acd8-48ab4c3984b1.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/189/configs/tmp2gidhit4\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/189/configs/tmp2gidhit4\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:55:09.709520",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-bghhm",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "1ec4541f81a25ec4",  "inputs": {   "adata": {    "id": "0168c0ebfc4575d7",    "src": "hda",    "uuid": "a63eecfb-9729-4296-acd8-48ab4c3984b1"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421719.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:55:19"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421714.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:55:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "98c4d7b099a352a1",    "src": "hda",    "uuid": "84470d3b-78fe-4000-801f-001935c6901a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 22, \"fontsize\": \"8\", \"gene_symbols\": \"\", \"groups\": \"\", \"method\": \"pl.rank_genes_groups\", \"n_genes\": \"10\", \"ncols\": \"4\", \"sharey\": \"true\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/189/configs/tmp2gidhit4\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    fontsize=8,\n    ncols=4,\n    sharey=True)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/189/configs/tmp2gidhit4\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    fontsize=8,\n    ncols=4,\n    sharey=True)\n\n",  "traceback": null,  "update_time": "2023-02-03T10:55:30.049400",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/189/configs/tmp2gidhit4\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/189/configs/tmp2gidhit4\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 19, "time_seconds": 41.83647036552429, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups(        adata,    save='.png',    show=False,                n_genes=10,    fontsize=8,    ncols=4,    sharey=True)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/189/configs/tmp2gidhit4", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="87.95480442047119">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.heatmap(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    figsize=(10, 3),            swap_axes=True,    show_gene_labels=False,    cmap='YlGnBu',    origin='upper'        )anndata.h5adheatmap.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="9.35080099105835">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 20, "time_seconds": 9.35080099105835, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="52.9972128868103">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "e5b0047924c335f7",   "src": "hda"  },  "format": "png",  "method|color_map": "viridis",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_scatter|edgecolors": "face",  "method|matplotlib_pyplot_scatter|linewidths": "0",  "method|method": "pl.rank_genes_groups_dotplot",  "method|n_genes": "10",  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/8/d/dataset_d8db8285-a1f8-479a-916d-4a3a8452c7d1.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/194/configs/tmpnq_xsdrv\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/194/configs/tmpnq_xsdrv\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:55:49.698021",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-8fzrp",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "eb18da3c165c1b8f",  "inputs": {   "adata": {    "id": "e5b0047924c335f7",    "src": "hda",    "uuid": "d8db8285-a1f8-479a-916d-4a3a8452c7d1"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421765.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:56:05"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421759.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:55:59"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "f87c5b55e3726a86",    "src": "hda",    "uuid": "2e810ed3-2d09-45be-be0c-80046b22317f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 24, \"color_map\": \"viridis\", \"dendrogram\": \"false\", \"dot_max\": \"\", \"dot_min\": \"\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_dotplot\", \"n_genes\": \"10\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpnq_xsdrv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpnq_xsdrv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-03T10:56:17.371574",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpnq_xsdrv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpnq_xsdrv\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 21, "time_seconds": 52.9972128868103, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_dotplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            color_map='viridis',        linewidths=0.0,    edgecolors='face'            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/194/configs/tmpnq_xsdrv", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="48.55817437171936">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "e5b0047924c335f7",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_imshow|cmap": "viridis",  "method|matplotlib_pyplot_imshow|interpolation": "None",  "method|matplotlib_pyplot_imshow|origin": "upper",  "method|method": "pl.rank_genes_groups_heatmap",  "method|n_genes": "10",  "method|show_gene_labels": false,  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/8/d/dataset_d8db8285-a1f8-479a-916d-4a3a8452c7d1.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/195/configs/tmpahe22zez\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/195/configs/tmpahe22zez\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:55:53.298967",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-n5tvf",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "5232eb5b6506ec19",  "inputs": {   "adata": {    "id": "e5b0047924c335f7",    "src": "hda",    "uuid": "d8db8285-a1f8-479a-916d-4a3a8452c7d1"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421766.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:56:06"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421760.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:56:00"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "d22f36e463441950",    "src": "hda",    "uuid": "542a797c-95ba-4513-a6a4-24c754a0ea93"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 25, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_imshow\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"interpolation\": \"None\", \"origin\": \"upper\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_heatmap\", \"n_genes\": \"10\", \"show_gene_labels\": \"false\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpahe22zez\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_heatmap(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    show_gene_labels=False,\n    cmap=\u0027viridis\u0027,\n    origin=\u0027upper\u0027\n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpahe22zez\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_heatmap(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    show_gene_labels=False,\n    cmap=\u0027viridis\u0027,\n    origin=\u0027upper\u0027\n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-03T10:56:18.487601",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpahe22zez\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/195/configs/tmpahe22zez\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 22, "time_seconds": 48.55817437171936, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_heatmap(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            swap_axes=False,    show_gene_labels=False,    cmap='viridis',    origin='upper'        )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/195/configs/tmpahe22zez", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="59.1712532043457">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "ea0d0170aa7c348a",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_pcolor|cmap": "viridis",  "method|matplotlib_pyplot_pcolor|edgecolors": "face",  "method|matplotlib_pyplot_pcolor|snap": false,  "method|method": "pl.rank_genes_groups_matrixplot",  "method|n_genes": "10",  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/6/7/dataset_4670d0a3-111d-4cce-882b-97d62d869e33.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/197/configs/tmpak3vg81c\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/197/configs/tmpak3vg81c\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:55:56.501503",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-48t49",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "08edec0a18e25f43",  "inputs": {   "adata": {    "id": "ea0d0170aa7c348a",    "src": "hda",    "uuid": "4670d0a3-111d-4cce-882b-97d62d869e33"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421778.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:56:18"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421773.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:56:13"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "7d1303875af91491",    "src": "hda",    "uuid": "7eb47af8-cbea-4b5c-b56f-00e23d00e8b9"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 26, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_pcolor\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"edgecolors\": \"face\", \"snap\": \"false\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_matrixplot\", \"n_genes\": \"10\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmpak3vg81c\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmpak3vg81c\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-03T10:56:31.644079",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmpak3vg81c\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmpak3vg81c\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 23, "time_seconds": 59.1712532043457, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_matrixplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            swap_axes=False,    cmap='viridis',    edgecolors='face',    snap=False        )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/197/configs/tmpak3vg81c", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="40.47477173805237">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "ea0d0170aa7c348a",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|log": false,  "method|method": "pl.rank_genes_groups_stacked_violin",  "method|n_genes": "10",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/6/7/dataset_4670d0a3-111d-4cce-882b-97d62d869e33.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/198/configs/tmpc9xqnmrz\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/198/configs/tmpc9xqnmrz\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:56:11.957965",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-lswlz",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "aacfe7415e4450be",  "inputs": {   "adata": {    "id": "ea0d0170aa7c348a",    "src": "hda",    "uuid": "4670d0a3-111d-4cce-882b-97d62d869e33"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421780.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:56:20"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421774.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:56:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "69313bdb64851ebc",    "src": "hda",    "uuid": "1469c0d4-98bb-4f0e-a7ad-616ca8c7d97c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 27, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.rank_genes_groups_stacked_violin\", \"n_genes\": \"10\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmpc9xqnmrz\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmpc9xqnmrz\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-03T10:56:33.372428",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmpc9xqnmrz\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmpc9xqnmrz\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 24, "time_seconds": 40.47477173805237, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_stacked_violin(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,        stripplot=True,    jitter=True,    size=1.0,        scale='width',    row_palette='muted',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/198/configs/tmpc9xqnmrz", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="60.69955277442932">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dotplot(        adata,    save='.png',    show=False,            var_names=['CD79A', 'MS4A1', 'CD8A', 'CD8B', 'LYZ', 'GNLY', 'NKG7', 'RP3-467N11.1', 'FCGR3A', 'FCER1A', 'CST3', 'POU2AF1', 'LINC00402'],    groupby='louvain',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    var_group_positions=[(0, 1), (11, 12)],    var_group_labels=['B cells', 'dendritic'],            color_map='hot',    dot_max=0.7,    dot_min=0.1,        linewidths=0.0,    edgecolors='face'            )anndata.h5addotplot.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="46.616652488708496">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "19085c18c3733f2c",   "src": "hda"  },  "format": "png",  "method|key_variables|keys": "n_genes, percent_mito, n_counts",  "method|key_variables|type": "custom",  "method|log": false,  "method|method": "pl.violin",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|use_raw": false,  "method|violin_plot|multi_panel|height": "20",  "method|violin_plot|multi_panel|multi_panel": "True",  "method|violin_plot|multi_panel|width": "20",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/7/5/f/dataset_75f55fc4-1dfc-4ace-9a77-877f442f8e6d.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/164/configs/tmp1a04lenh\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/164/configs/tmp1a04lenh\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:52:52.082847",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-78hbj",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "d1d4bdf73d2e19a5",  "inputs": {   "adata": {    "id": "19085c18c3733f2c",    "src": "hda",    "uuid": "75f55fc4-1dfc-4ace-9a77-877f442f8e6d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421580.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:53:00"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421574.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:52:54"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "9868f61c613b3f5d",    "src": "hda",    "uuid": "da68dd1b-e42d-40f8-9474-a48924702f69"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 3, \"groupby\": \"\", \"key_variables\": {\"__current_case__\": 2, \"keys\": \"n_genes, percent_mito, n_counts\", \"type\": \"custom\"}, \"log\": \"false\", \"method\": \"pl.violin\", \"rotation\": \"\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"use_raw\": \"false\", \"violin_plot\": {\"multi_panel\": {\"__current_case__\": 0, \"height\": \"20\", \"multi_panel\": \"True\", \"width\": \"20\"}, \"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}, \"xlabel\": \"\"}"  },  "state": "ok",  "stderr": "WARNING: saving figure to file violin.png\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    keys=[\u0027n_genes\u0027, \u0027percent_mito\u0027, \u0027n_counts\u0027],\n    log=False,\n    use_raw=False,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    multi_panel=True, \n    figsize=(20, 20),\n    scale=\u0027width\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    )\n\nanndata.h5ad\nviolin.png\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "WARNING: saving figure to file violin.png\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    keys=[\u0027n_genes\u0027, \u0027percent_mito\u0027, \u0027n_counts\u0027],\n    log=False,\n    use_raw=False,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    multi_panel=True, \n    figsize=(20, 20),\n    scale=\u0027width\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    )\n\nanndata.h5ad\nviolin.png\n",  "traceback": null,  "update_time": "2023-02-03T10:53:13.473816",  "user_email": "tests@fake.org" }, "output_problems": [  "Output out_png:  different than expected, difference (using sim_size):\n( /tmp/tmptf146a9mpl.violin.pbmc68k_reduced_custom.png v. /tmp/tmptoqij089pl.violin.pbmc68k_reduced_custom.png )\nFiles /tmp/tmptf146a9mpl.violin.pbmc68k_reduced_custom.png=90967b but /tmp/tmptoqij089pl.violin.pbmc68k_reduced_custom.png=54342b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 4, "time_seconds": 46.616652488708496, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.violin(        adata,    save='.png',    show=False,        keys=['n_genes', 'percent_mito', 'n_counts'],    log=False,    use_raw=False,        stripplot=True,    jitter=True,    size=1.0,        multi_panel=True,     figsize=(20, 20),    scale='width',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,    )anndata.h5adviolin.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="53.91862177848816">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "ac9e7c6951598921",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|figsize|test": "no",  "method|groupby": "cell_type",  "method|log": false,  "method|method": "pl.stacked_violin",  "method|num_categories": "7",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|var_names|type": "all",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/c/2/dataset_4c2fa092-12a7-4542-a340-c937131e863e.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmpyttk2340\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/163/configs/tmpyttk2340\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:52:50.946268",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-98tsm",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "79ade2886af47a53",  "inputs": {   "adata": {    "id": "ac9e7c6951598921",    "src": "hda",    "uuid": "4c2fa092-12a7-4542-a340-c937131e863e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "8 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421590.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:53:10"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421582.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:53:02"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "795d0279f04268f3",    "src": "hda",    "uuid": "1c4feb62-8ab4-4f0f-a73c-5b6e449178c6"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 4, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groupby\": \"cell_type\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.stacked_violin\", \"num_categories\": \"7\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"var_names\": {\"__current_case__\": 0, \"type\": \"all\"}, \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\nWARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.\nWARNING: saving figure to file stacked_violin.png\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    var_names=adata.var_names,\n    groupby=\u0027cell_type\u0027,\n    num_categories=7,\n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\nanndata.h5ad\nstacked_violin.png\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\nWARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.\nWARNING: saving figure to file stacked_violin.png\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    var_names=adata.var_names,\n    groupby=\u0027cell_type\u0027,\n    num_categories=7,\n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\nanndata.h5ad\nstacked_violin.png\n",  "traceback": null,  "update_time": "2023-02-03T10:53:20.663674",  "user_email": "tests@fake.org" }, "output_problems": [  "Output out_png:  different than expected, difference (using sim_size):\n( /tmp/tmpc4x059k5pl.stacked_violin.krumsiek11.png v. /tmp/tmpuixa2n4dpl.stacked_violin.krumsiek11.png )\nFiles /tmp/tmpc4x059k5pl.stacked_violin.krumsiek11.png=25327b but /tmp/tmpuixa2n4dpl.stacked_violin.krumsiek11.png=37304b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 53.91862177848816, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.stacked_violin(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,        stripplot=True,    jitter=True,    size=1.0,        scale='width',    row_palette='muted',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,            )anndata.h5adstacked_violin.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="46.72162866592407">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.matrixplot(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,    cmap='viridis',    edgecolors='face',    snap=False        )anndata.h5admatrixplot.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="38.10775685310364">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "ac9e7c6951598921",   "src": "hda"  },  "format": "png",  "method|method": "pl.clustermap",  "method|seaborn_clustermap|col_cluster": false,  "method|seaborn_clustermap|method": "single",  "method|seaborn_clustermap|metric": "euclidean",  "method|seaborn_clustermap|row_cluster": false,  "method|seaborn_clustermap|standard_scale": "None",  "method|seaborn_clustermap|z_score": "None",  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/4/c/2/dataset_4c2fa092-12a7-4542-a340-c937131e863e.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/165/configs/tmpqxjf7k2o\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/165/configs/tmpqxjf7k2o\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-02-03T10:52:53.771959",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-q9s8s",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "6c0200db6a8a771e",  "inputs": {   "adata": {    "id": "ac9e7c6951598921",    "src": "hda",    "uuid": "4c2fa092-12a7-4542-a340-c937131e863e"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "fbd6aa6a09bbb4f3",    "src": "hda",    "uuid": "e1636ea1-8c78-47f7-8e4b-9c2f5d261da7"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 6, \"method\": \"pl.clustermap\", \"obs_keys\": \"\", \"seaborn_clustermap\": {\"col_cluster\": \"false\", \"method\": \"single\", \"metric\": \"euclidean\", \"row_cluster\": \"false\", \"standard_scale\": \"None\", \"z_score\": \"None\"}, \"use_raw\": \"false\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-03T10:53:08.557310",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Standard output of the job different than expected\nExpected text matching expression \u0027sc.pl.clustermap\u0027 in output (\u0027\u0027)" ], "status": "failure", "test_index": 7, "time_seconds": 38.10775685310364, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="35.13385486602783">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "ff4a5e345a309b35",   "src": "hda"  },  "format": "png",  "method|gene_symbols": "means",  "method|method": "pl.highest_expr_genes",  "method|n_top": "30",  "method|setseaborn_boxplot|color": "blue",  "method|setseaborn_boxplot|saturation": "0.5" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/1/0/5/dataset_1053ed35-c237-4ba0-b988-ab0db9a689f4.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/170/configs/tmp7a1o2cvc\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/170/configs/tmp7a1o2cvc\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:53:25.349651",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-wzn75",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "7c84799beb58b24e",  "inputs": {   "adata": {    "id": "ff4a5e345a309b35",    "src": "hda",    "uuid": "1053ed35-c237-4ba0-b988-ab0db9a689f4"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421612.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:53:32"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421607.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:53:27"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "6d119a7c3aa63853",    "src": "hda",    "uuid": "ff7295d1-1c1c-48ca-b8a4-7189f547df99"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 8, \"gene_symbols\": \"means\", \"method\": \"pl.highest_expr_genes\", \"n_top\": \"30\", \"setseaborn_boxplot\": {\"color\": \"blue\", \"palette\": null, \"saturation\": \"0.5\"}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmp7a1o2cvc\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmp7a1o2cvc\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "traceback": null,  "update_time": "2023-02-03T10:53:43.584287",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmp7a1o2cvc\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmp7a1o2cvc\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 8, "time_seconds": 35.13385486602783, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highest_expr_genes(        adata,    save='.png',    show=False,        n_top=30,    gene_symbols='means',    color='blue',    saturation=0.5)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/170/configs/tmp7a1o2cvc", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="39.535146951675415">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "8a948a846910c21a",   "src": "hda"  },  "format": "png",  "method|highly_variable_genes": true,  "method|log": false,  "method|method": "pl.highly_variable_genes" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/a/5/a/dataset_a5a92be0-a04e-4834-abd0-f3a6cdac7c6a.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/171/configs/tmp_27gplcl\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/171/configs/tmp_27gplcl\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-03T10:53:31.015798",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-6jh9w",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "2b57e4d714f0110c",  "inputs": {   "adata": {    "id": "8a948a846910c21a",    "src": "hda",    "uuid": "a5a92be0-a04e-4834-abd0-f3a6cdac7c6a"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "5.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "5 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675421618.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:53:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675421613.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:53:33"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "085bba3093b9792d",    "src": "hda",    "uuid": "10b3a61e-2eee-4569-ad7c-8897856208b9"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 7, \"highly_variable_genes\": \"true\", \"log\": \"false\", \"method\": \"pl.highly_variable_genes\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/171/configs/tmp_27gplcl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/171/configs/tmp_27gplcl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "traceback": null,  "update_time": "2023-02-03T10:53:52.628298",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/171/configs/tmp_27gplcl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/171/configs/tmp_27gplcl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 9, "time_seconds": 39.535146951675415, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highly_variable_genes(    adata_or_result=adata,    log=False,    save='.png',    show=False,    highly_variable_genes=True)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/171/configs/tmp_27gplcl", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="36.43983197212219">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="39.37413835525513">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file scatter.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="40.5279860496521">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="41.37690615653992">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="34.05221080780029">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file highest_expr_genes.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="39.179450035095215">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file filter_genes_dispersion.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="39.53853368759155">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="38.33366394042969">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="44.09127449989319">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="40.777769804000854">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="39.50342869758606">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file tsne.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="41.21169304847717">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="38.656752586364746">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="37.471187353134155">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="37.77052307128906">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="62.49339032173157">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="38.87944984436035">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file rank_genes_groups_cell_type.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="50.600863218307495">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #26)" name="25" time="46.704739570617676">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #27)" name="26" time="41.738165855407715">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #28)" name="27" time="51.73055720329285">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="41.16161489486694">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="49.2001633644104">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="38.776145696640015">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="40.16009068489075">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="40.970112562179565">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="42.55675482749939">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="47.844653606414795">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #1)" name="0" time="36.03264403343201">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #2)" name="1" time="39.13849711418152">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'blobs' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="159.64606070518494">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "After filtering out unexpressed features:  40 cells and 1733 features."[1] "After filtering out low library counts:  39 cells and 1733 features."[1] "After filtering out low expressed:  39 cells and 1733 features."[1] "After filtering out high MT gene counts:  34 cells and 1733 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filter
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="65.74453449249268">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "Ending with 40 cells and 2000 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: sgeostatRegistered S3 method overwritten by 'GGally':  method from     +.gg   ggplot2sROC 0.1-2 loaded
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="120.36185574531555">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "filter_type|detection_limit": "4",  "filter_type|filter_type_selector": "manual",  "filter_type|library_size": "100000",  "filter_type|min_cells_expressed": "3",  "filter_type|percent_counts_MT": "33.0",  "input_loom": {   "id": "c8a3b9d268c0b64f",   "src": "hda"  } }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/652923ce664f/scater_filter/scater-manual-filter.R\u0027 -i \u0027/galaxy/server/database/objects/f/f/b/dataset_ffbc2dbb-d30e-4c28-9724-cd37dd029685.dat\u0027 --library-size 100000 --percent-counts-MT 33.0 --expressed-features 100 --detection-limit 4.0 --min-cells-expressed 3 -o \u0027/galaxy/server/database/objects/d/3/8/dataset_d382f67d-ac07-4a86-8e33-430bba216562.dat\u0027",  "command_version": "",  "create_time": "2023-02-03T10:34:17.916866",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-4m22p",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "88c7b4849503ba41",  "inputs": {   "input_loom": {    "id": "c8a3b9d268c0b64f",    "src": "hda",    "uuid": "ffbc2dbb-d30e-4c28-9724-cd37dd029685"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "11.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "11 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675420533.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:35:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675420522.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:35:22"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_loom": {    "id": "88c7b4849503ba41",    "src": "hda",    "uuid": "d382f67d-ac07-4a86-8e33-430bba216562"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_type": "{\"__current_case__\": 0, \"detection_limit\": \"4.0\", \"expressed_features\": \"100\", \"filter_type_selector\": \"manual\", \"library_size\": \"100000\", \"min_cells_expressed\": \"3\", \"percent_counts_MT\": \"33.0\"}"  },  "state": "error",  "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in assay(x, exprs_values) : \n  \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: nexprs -\u003e nexprs -\u003e .local -\u003e .nexprs -\u003e assay -\u003e assay\nExecution halted\n",  "stdout": "[1] \"Starting with 40 cells and 2000 features.\"\n[1] \"After filtering out low library counts:  0 cells and 2000 features.\"\n[1] \"After filtering out high MT gene counts:  0 cells and 2000 features.\"\n[1] \"After filtering out cells with low feature counts:  0 cells and 2000 features.\"\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0",  "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in assay(x, exprs_values) : \n  \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: nexprs -\u003e nexprs -\u003e .local -\u003e .nexprs -\u003e assay -\u003e assay\nExecution halted\n",  "tool_stdout": "[1] \"Starting with 40 cells and 2000 features.\"\n[1] \"After filtering out low library counts:  0 cells and 2000 features.\"\n[1] \"After filtering out high MT gene counts:  0 cells and 2000 features.\"\n[1] \"After filtering out cells with low feature counts:  0 cells and 2000 features.\"\n",  "traceback": null,  "update_time": "2023-02-03T10:35:56.530205",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in assay(x, exprs_values) : \n  \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: nexprs -\u003e nexprs -\u003e .local -\u003e .nexprs -\u003e assay -\u003e assay\nExecution halted\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in assay(x, exprs_values) : \n  \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: nexprs -\u003e nexprs -\u003e .local -\u003e .nexprs -\u003e assay -\u003e assay\nExecution halted\n." ], "status": "failure", "test_index": 0, "time_seconds": 120.36185574531555, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "After filtering out low library counts:  0 cells and 2000 features."[1] "After filtering out high MT gene counts:  0 cells and 2000 features."[1] "After filtering out cells with low feature counts:  0 cells and 2000 features."
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Error in assay(x, exprs_values) :   'assay(<SingleCellLoomExperiment>, i="character", ...)' invalid subscript 'i''counts' not in names(assays(<SingleCellLoomExperiment>))Calls: nexprs -> nexprs -> .local -> .nexprs -> assay -> assayExecution halted
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="134.42584371566772">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "filter_type|filter_type_selector": "pca",  "input_loom": {   "id": "c8a3b9d268c0b64f",   "src": "hda"  } }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/652923ce664f/scater_filter/scater-pca-filter.R\u0027 -i \u0027/galaxy/server/database/objects/f/f/b/dataset_ffbc2dbb-d30e-4c28-9724-cd37dd029685.dat\u0027 -o \u0027/galaxy/server/database/objects/8/4/f/dataset_84f2cb6f-09a5-4fc9-a61b-2c25d117d101.dat\u0027",  "command_version": "",  "create_time": "2023-02-03T10:34:21.050675",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-b7bft",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "d3c1e3ccf6b9c474",  "inputs": {   "input_loom": {    "id": "c8a3b9d268c0b64f",    "src": "hda",    "uuid": "ffbc2dbb-d30e-4c28-9724-cd37dd029685"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "10.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "10 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675420556.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:35:56"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675420546.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:35:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_loom": {    "id": "d3c1e3ccf6b9c474",    "src": "hda",    "uuid": "84f2cb6f-09a5-4fc9-a61b-2c25d117d101"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_type": "{\"__current_case__\": 1, \"filter_type_selector\": \"pca\"}"  },  "state": "error",  "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n",  "stdout": "[1] \"Starting with 40 cells\"\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0",  "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n",  "tool_stdout": "[1] \"Starting with 40 cells\"\n",  "traceback": null,  "update_time": "2023-02-03T10:36:10.546633",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n." ], "status": "failure", "test_index": 1, "time_seconds": 134.42584371566772, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells"
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Attaching package: ‘robustbase’The following object is masked from ‘package:Biobase’:    rowMediansThe following objects are masked from ‘package:MatrixGenerics’:    colMedians, rowMediansThe following objects are masked from ‘package:matrixStats’:    colMedians, rowMediansError in retrieveCellInfo(x, variables[[it]], search = "colData") :   cannot find 'sum'Calls: runColDataPCA -> retrieveCellInfoExecution halted
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/scater_normalize (Test #1)" name="0" time="103.36261916160583">
        
            
            <system-out><![CDATA[
            [1] "Normalising...."[1] "Finished normalising"[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factors
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="76.35693693161011">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="66.5796320438385">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 6 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="81.55717849731445">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="57.09503483772278">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "input_loom": {   "id": "a215fe3fa2b97a32",   "src": "hda"  },  "plot_log": true }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R\u0027 -i \u0027/galaxy/server/database/objects/d/3/9/dataset_d393ad9d-8d74-441a-b31a-9ae4eff077eb.dat\u0027 -o \u0027/galaxy/server/database/objects/e/8/2/dataset_e82fac40-ee5c-4c43-99ea-0c31dc9bf6ea.dat\u0027 --log-scale",  "command_version": "",  "create_time": "2023-02-03T10:37:44.742960",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-n9g89",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "2edb91c9fd7d7006",  "inputs": {   "input_loom": {    "id": "a215fe3fa2b97a32",    "src": "hda",    "uuid": "d393ad9d-8d74-441a-b31a-9ae4eff077eb"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675420684.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:38:04"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675420694.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:38:14"   },   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "10.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "10 seconds"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_plot": {    "id": "2edb91c9fd7d7006",    "src": "hda",    "uuid": "e82fac40-ee5c-4c43-99ea-0c31dc9bf6ea"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "plot_log": "\"true\""  },  "state": "error",  "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nWarning message:\nIn max(total_counts/1e+06) :\n  no non-missing arguments to max; returning -Inf\nWarning message:\nIn max(total_features) : no non-missing arguments to max; returning -Inf\nError in retrieveCellInfo(object, y, search = \"colData\") : \n  cannot find \u0027subsets_Mito_percent\u0027\nCalls: plotColData -\u003e retrieveCellInfo\nExecution halted\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0",  "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nWarning message:\nIn max(total_counts/1e+06) :\n  no non-missing arguments to max; returning -Inf\nWarning message:\nIn max(total_features) : no non-missing arguments to max; returning -Inf\nError in retrieveCellInfo(object, y, search = \"colData\") : \n  cannot find \u0027subsets_Mito_percent\u0027\nCalls: plotColData -\u003e retrieveCellInfo\nExecution halted\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-03T10:38:24.199220",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nWarning message:\nIn max(total_counts/1e+06) :\n  no non-missing arguments to max; returning -Inf\nWarning message:\nIn max(total_features) : no non-missing arguments to max; returning -Inf\nError in retrieveCellInfo(object, y, search = \"colData\") : \n  cannot find \u0027subsets_Mito_percent\u0027\nCalls: plotColData -\u003e retrieveCellInfo\nExecution halted\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nWarning message:\nIn max(total_counts/1e+06) :\n  no non-missing arguments to max; returning -Inf\nWarning message:\nIn max(total_features) : no non-missing arguments to max; returning -Inf\nError in retrieveCellInfo(object, y, search = \"colData\") : \n  cannot find \u0027subsets_Mito_percent\u0027\nCalls: plotColData -\u003e retrieveCellInfo\nExecution halted\n." ], "status": "failure", "test_index": 1, "time_seconds": 57.09503483772278, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning message:In max(total_counts/1e+06) :  no non-missing arguments to max; returning -InfWarning message:In max(total_features) : no non-missing arguments to max; returning -InfError in retrieveCellInfo(object, y, search = "colData") :   cannot find 'subsets_Mito_percent'Calls: plotColData -> retrieveCellInfoExecution halted
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_exprs_freq/scater_plot_exprs_freq (Test #1)" name="0" time="91.07912397384644">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterSaving 7 x 7 in image`geom_smooth()` using method = 'loess' and formula 'y ~ x'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="50.74453520774841">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factorsWarning message:In sweep(mat, MARGIN = 2, STATS = sqrt(vars), FUN = "/", check.margin = FALSE) :  'check.margin' is ignored when 'x' is a DelayedArray object or  derivativeSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="74.33334684371948">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE,  :  You're computing too large a percentage of total singular values, use a standard svd instead.Warning message:In check_numbers(k = k, nu = nu, nv = nv, limit = min(dim(x)) -  :  more singular values/vectors requested than availableSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne (Test #1)" name="0" time="134.38610124588013">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "colour_by": "Treatment",  "input_loom": {   "id": "c8a3b9d268c0b64f",   "src": "hda"  },  "shape_by": "Mutation_Status" }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/99f912d5af9f/scater_plot_tsne/scater-plot-tsne.R\u0027 -i \u0027/galaxy/server/database/objects/f/f/b/dataset_ffbc2dbb-d30e-4c28-9724-cd37dd029685.dat\u0027 --colour-by \u0027Treatment\u0027 --shape-by \u0027Mutation_Status\u0027 -o \u0027/galaxy/server/database/objects/6/5/5/dataset_65515a03-4a7d-476a-a040-4a8567882437.dat\u0027",  "command_version": "",  "create_time": "2023-02-03T10:34:22.103225",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-pj6kt",  "galaxy_version": "22.05",  "history_id": "b81041a90329dc00",  "id": "f31877c0a0dd3cef",  "inputs": {   "input_loom": {    "id": "c8a3b9d268c0b64f",    "src": "hda",    "uuid": "ffbc2dbb-d30e-4c28-9724-cd37dd029685"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "10.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "10 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1675420556.0000000",    "title": "Job End Time",    "value": "2023-02-03 10:35:56"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1675420546.0000000",    "title": "Job Start Time",    "value": "2023-02-03 10:35:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_plot": {    "id": "f31877c0a0dd3cef",    "src": "hda",    "uuid": "65515a03-4a7d-476a-a040-4a8567882437"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "colour_by": "\"Treatment\"",   "dbkey": "\"?\"",   "shape_by": "\"Mutation_Status\"",   "size_by": null  },  "state": "error",  "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in h(simpleError(msg, call)) : \n  error in evaluating the argument \u0027x\u0027 in selecting a method for function \u0027colSums\u0027: \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: logNormCounts ... .local -\u003e .library_size_factors -\u003e colSums -\u003e assay -\u003e assay\nExecution halted\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne/1.22.0",  "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in h(simpleError(msg, call)) : \n  error in evaluating the argument \u0027x\u0027 in selecting a method for function \u0027colSums\u0027: \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: logNormCounts ... .local -\u003e .library_size_factors -\u003e colSums -\u003e assay -\u003e assay\nExecution halted\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-03T10:36:10.464329",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in h(simpleError(msg, call)) : \n  error in evaluating the argument \u0027x\u0027 in selecting a method for function \u0027colSums\u0027: \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: logNormCounts ... .local -\u003e .library_size_factors -\u003e colSums -\u003e assay -\u003e assay\nExecution halted\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\nError in h(simpleError(msg, call)) : \n  error in evaluating the argument \u0027x\u0027 in selecting a method for function \u0027colSums\u0027: \u0027assay(\u003cSingleCellLoomExperiment\u003e, i=\"character\", ...)\u0027 invalid subscript \u0027i\u0027\n\u0027counts\u0027 not in names(assays(\u003cSingleCellLoomExperiment\u003e))\nCalls: logNormCounts ... .local -\u003e .library_size_factors -\u003e colSums -\u003e assay -\u003e assay\nExecution halted\n." ], "status": "failure", "test_index": 0, "time_seconds": 134.38610124588013, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Error in h(simpleError(msg, call)) :   error in evaluating the argument 'x' in selecting a method for function 'colSums': 'assay(<SingleCellLoomExperiment>, i="character", ...)' invalid subscript 'i''counts' not in names(assays(<SingleCellLoomExperiment>))Calls: logNormCounts ... .local -> .library_size_factors -> colSums -> assay -> assayExecution halted
            ]]></system-err>
        
    </testcase>
    
</testsuite>