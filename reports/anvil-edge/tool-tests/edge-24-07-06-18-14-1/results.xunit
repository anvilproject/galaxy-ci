<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="106"
           errors="54"
           failures="10"
           skip="0">
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="19.420583724975586">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 19.420583724975586, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="17.377974271774292">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 17.377974271774292, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="18.105476140975952">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 18.105476140975952, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="20.675809383392334">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 20.675809383392334, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="17.33545732498169">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 17.33545732498169, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="11.730766534805298">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.730766534805298, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="17.37566089630127">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 17.37566089630127, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="10.02948522567749">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 10.02948522567749, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="17.663866758346558">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 17.663866758346558, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="18.202531576156616">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 18.202531576156616, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="17.915749073028564">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 17.915749073028564, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="18.28337860107422">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 18.28337860107422, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="18.0451021194458">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 18.0451021194458, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="18.07009506225586">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 18.07009506225586, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="17.036514043807983">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 17.036514043807983, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="18.19850468635559">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 13, "time_seconds": 18.19850468635559, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="9.876588821411133">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 13, "time_seconds": 9.876588821411133, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="18.5442214012146">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 13, "time_seconds": 18.5442214012146, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="10.882765293121338">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 14, "time_seconds": 10.882765293121338, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="17.83924674987793">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 14, "time_seconds": 17.83924674987793, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="18.231887102127075">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 14, "time_seconds": 18.231887102127075, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="17.668800592422485">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 15, "time_seconds": 17.668800592422485, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="17.373528003692627">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 15, "time_seconds": 17.373528003692627, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="17.722559690475464">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 15, "time_seconds": 17.722559690475464, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="20.41964054107666">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 20.41964054107666, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="17.366400003433228">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 17.366400003433228, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="17.652003288269043">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 17.652003288269043, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="16.802919387817383">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 16.802919387817383, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="17.971873998641968">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 17.971873998641968, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="17.38246250152588">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 17.38246250152588, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="18.006216049194336">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 18.006216049194336, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="17.31473970413208">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 17.31473970413208, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="18.080174922943115">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 18.080174922943115, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="17.63918900489807">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 17.63918900489807, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="10.765917778015137">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 10.765917778015137, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="10.715167760848999">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 10.715167760848999, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="18.9203941822052">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 18.9203941822052, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="17.470240831375122">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 17.470240831375122, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="16.78979802131653">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 16.78979802131653, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="17.816849946975708">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 17.816849946975708, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="18.620231866836548">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 18.620231866836548, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="18.188756465911865">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 18.188756465911865, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="18.437055587768555">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 18.437055587768555, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="18.157139539718628">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 18.157139539718628, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="17.348793029785156">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 17.348793029785156, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="17.037748098373413">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 17.037748098373413, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="17.688361644744873">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 17.688361644744873, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="16.984842777252197">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 16.984842777252197, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #1)" name="0" time="35.23852205276489">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #2)" name="1" time="24.2959041595459">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_files": [   {    "id": "76ba5a3ca24b4853",    "src": "hda"   },   {    "id": "b90003e81bba0034",    "src": "hda"   }  ],  "output_type": "v",  "sec_merge|force_samples": true,  "sec_merge|merge": "none" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/4/0/8/dataset_408d19b4-140f-48ef-9371-4cb9558485fc.dat\u0027 \u003e input0.vcf.gz \u0026\u0026 bcftools index input0.vcf.gz \u0026\u0026 echo \u0027input0.vcf.gz\u0027 \u003e\u003e vcfs_list \u0026\u0026  bgzip -c \u0027/galaxy/server/database/objects/c/f/6/dataset_cf642a3f-e8f9-45ed-bff8-86c2ffa4ffc7.dat\u0027 \u003e input1.vcf.gz \u0026\u0026 bcftools index input1.vcf.gz \u0026\u0026 echo \u0027input1.vcf.gz\u0027 \u003e\u003e vcfs_list \u0026\u0026         bcftools merge    --force-samples   --merge \"none\"          --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input0.vcf.gz input1.vcf.gz  \u003e \u0027/galaxy/server/database/objects/0/a/b/dataset_0ab212fa-59d1-473e-8251-d3d2c0f73662.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-06T19:13:06.642984",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-s8tp4",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "8667ae032374a4d5",  "inputs": {   "input_files": {    "id": "76ba5a3ca24b4853",    "src": "hda",    "uuid": "408d19b4-140f-48ef-9371-4cb9558485fc"   },   "input_files1": {    "id": "76ba5a3ca24b4853",    "src": "hda",    "uuid": "408d19b4-140f-48ef-9371-4cb9558485fc"   },   "input_files2": {    "id": "b90003e81bba0034",    "src": "hda",    "uuid": "cf642a3f-e8f9-45ed-bff8-86c2ffa4ffc7"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "3638a5672e959b9b",    "src": "hda",    "uuid": "0ab212fa-59d1-473e-8251-d3d2c0f73662"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_header": "{\"print_header\": false, \"use_header\": null}",   "sec_merge": "{\"force_samples\": true, \"info_rules\": null, \"merge\": \"none\"}",   "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T19:13:12.450389",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 24.2959041595459, "tool_id": "bcftools_merge", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #3)" name="2" time="25.641395807266235">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_files": [   {    "id": "2e64c1f23446c847",    "src": "hda"   },   {    "id": "abe14366c7e5982b",    "src": "hda"   }  ],  "output_type": "v",  "sec_merge|force_samples": true,  "sec_merge|merge": "both" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/2/7/7/dataset_277c8d4a-ada3-47fb-a3f8-3e70f7e4b536.dat\u0027 \u003e input0.vcf.gz \u0026\u0026 bcftools index input0.vcf.gz \u0026\u0026 echo \u0027input0.vcf.gz\u0027 \u003e\u003e vcfs_list \u0026\u0026  bgzip -c \u0027/galaxy/server/database/objects/1/6/e/dataset_16e1335b-5a95-46a7-b6c9-3139680d8e4b.dat\u0027 \u003e input1.vcf.gz \u0026\u0026 bcftools index input1.vcf.gz \u0026\u0026 echo \u0027input1.vcf.gz\u0027 \u003e\u003e vcfs_list \u0026\u0026         bcftools merge    --force-samples   --merge \"both\"          --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input0.vcf.gz input1.vcf.gz  \u003e \u0027/galaxy/server/database/objects/8/a/f/dataset_8afaf325-af61-4722-ad2e-f22e052bd06c.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-06T19:13:32.339895",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-mmwhf",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "f7d8b313894eee0e",  "inputs": {   "input_files": {    "id": "2e64c1f23446c847",    "src": "hda",    "uuid": "277c8d4a-ada3-47fb-a3f8-3e70f7e4b536"   },   "input_files1": {    "id": "2e64c1f23446c847",    "src": "hda",    "uuid": "277c8d4a-ada3-47fb-a3f8-3e70f7e4b536"   },   "input_files2": {    "id": "abe14366c7e5982b",    "src": "hda",    "uuid": "16e1335b-5a95-46a7-b6c9-3139680d8e4b"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "806370dc608b922a",    "src": "hda",    "uuid": "8afaf325-af61-4722-ad2e-f22e052bd06c"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_header": "{\"print_header\": false, \"use_header\": null}",   "sec_merge": "{\"force_samples\": true, \"info_rules\": null, \"merge\": \"both\"}",   "sec_restrict": "{\"apply_filters\": \"\", \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T19:13:38.213311",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_merge/bcftools_merge/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 25.641395807266235, "tool_id": "bcftools_merge", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #4)" name="3" time="32.42712688446045">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #5)" name="4" time="31.623703479766846">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #6)" name="5" time="32.41707706451416">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_missing2ref (Test #1)" name="0" time="35.34740400314331">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Filled 44 REF alleles
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #1)" name="0" time="19.079888582229614">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 19.079888582229614, "tool_id": "bwameth", "tool_version": "0.2.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bwameth (Test #2)" name="1" time="19.75845766067505">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 19.75845766067505, "tool_id": "bwameth", "tool_version": "0.2.2"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #1)" name="0" time="85.36717700958252">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #2)" name="1" time="30.452457904815674">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #3)" name="2" time="29.628010988235474">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #4)" name="3" time="23.3006911277771">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "grouping": "2",  "header_in": true,  "in_file": {   "id": "12f787391c2cbaf3",   "src": "hda"  },  "narm": true,  "need_sort": true,  "operations_0|op_column": "3",  "operations_0|op_name": "mean",  "print_full_line": false }, "job": {  "command_line": "datamash --header-in  --sort   --narm   --group \u00272\u0027 mean 3 \u003c /galaxy/server/database/objects/c/6/9/dataset_c69e24a1-23c0-4e6d-8e2a-ca55c5b80e86.dat \u003e \u0027/galaxy/server/database/objects/2/e/7/dataset_2e736d1b-c97b-4e3f-ba95-eb5caa7bdb61.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-06T18:33:21.275346",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-7kk4h",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "bb65726036189314",  "inputs": {   "in_file": {    "id": "12f787391c2cbaf3",    "src": "hda",    "uuid": "c69e24a1-23c0-4e6d-8e2a-ca55c5b80e86"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file": {    "id": "bb65726036189314",    "src": "hda",    "uuid": "2e736d1b-c97b-4e3f-ba95-eb5caa7bdb61"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "grouping": "\"2\"",   "header_in": "true",   "header_out": "false",   "ignore_case": "false",   "narm": "true",   "need_sort": "true",   "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"mean\"}]",   "print_full_line": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T18:33:26.964596",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 23.3006911277771, "tool_id": "datamash_ops", "tool_version": "1.1.0+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #1)" name="0" time="63.759098291397095">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #2)" name="1" time="11.258469581604004">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 11.258469581604004, "tool_id": "deeptools_plot_pca", "tool_version": "3.3.2.0.0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #1)" name="0" time="36.78096008300781">
        
            
            <system-out><![CDATA[
            A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.A reference sequence has not been supplied. Amino acid translation will not be done.
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #1)" name="0" time="39.256017208099365">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "b2921273d6c38cfe",   "src": "hda"  },  "reference_source|ref": {   "id": "2f224aa35f6f6bb3",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/e/8/dataset_9e86e6d8-bb33-454a-8d1e-8b1710864320.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/5/6/3/dataset_56396c41-cdf3-49f9-bb4d-07151c231338.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/1/9/2/dataset_1922dcf0-c648-41d8-ae8f-9babafb127bc.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-06T19:09:07.126634",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-4574r",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "f4b2de4874546237",  "inputs": {   "reads": {    "id": "b2921273d6c38cfe",    "src": "hda",    "uuid": "56396c41-cdf3-49f9-bb4d-07151c231338"   },   "reference_source|ref": {    "id": "2f224aa35f6f6bb3",    "src": "hda",    "uuid": "9e86e6d8-bb33-454a-8d1e-8b1710864320"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1720292955.0000000",    "title": "Job End Time",    "value": "2024-07-06 19:09:15"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1720292954.0000000",    "title": "Job Start Time",    "value": "2024-07-06 19:09:14"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "8a088b17ab0ce299",    "src": "hda",    "uuid": "1922dcf0-c648-41d8-ae8f-9babafb127bc"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 197, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T19:09:26.608253",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpagppdbnlalnqual-out1.bam v. /tmp/tmpzj4bcqrdalnqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 39.256017208099365, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #2)" name="1" time="30.515329122543335">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-B",  "reads": {   "id": "44f508f6deca45c9",   "src": "hda"  },  "reference_source|ref": {   "id": "16ea2cdfdb5ace0f",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/f/8/9/dataset_f8985c3a-e087-4eb6-a59b-ebecd1942f6d.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -B  \u0027/galaxy/server/database/objects/6/9/e/dataset_69e830d0-757c-4cc6-a7cb-a844a58724dd.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/f/5/0/dataset_f504ef60-9329-4108-aa38-4bb6596e66b2.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-06T19:09:45.394408",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-grpmm",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "b807f757e769d07d",  "inputs": {   "reads": {    "id": "44f508f6deca45c9",    "src": "hda",    "uuid": "69e830d0-757c-4cc6-a7cb-a844a58724dd"   },   "reference_source|ref": {    "id": "16ea2cdfdb5ace0f",    "src": "hda",    "uuid": "f8985c3a-e087-4eb6-a59b-ebecd1942f6d"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1720292987.0000000",    "title": "Job End Time",    "value": "2024-07-06 19:09:47"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1720292987.0000000",    "title": "Job Start Time",    "value": "2024-07-06 19:09:47"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "633e03c9b657670e",    "src": "hda",    "uuid": "f504ef60-9329-4108-aa38-4bb6596e66b2"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 0, \"alnquals_to_use\": \"-B\", \"extended_baq\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 200, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T19:09:57.260501",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmp3ilauopealnqual-out2.bam v. /tmp/tmp62zukq5calnqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 30.515329122543335, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #3)" name="2" time="33.667983055114746">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-A",  "reads": {   "id": "5a73b878c9cc594f",   "src": "hda"  },  "reference_source|ref": {   "id": "7564f24270ebfeac",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/8/9/dataset_589bfb7c-7a05-4bc4-9e8c-7ecd0e987fd3.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -A  \u0027/galaxy/server/database/objects/9/d/c/dataset_9dc54311-dcd9-4f26-88eb-065440a2379f.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/4/b/7/dataset_4b7baa67-1938-4790-bb2f-4d6f3f08d63a.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-06T19:10:17.717523",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rg5lq",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "a0913bfe997572ed",  "inputs": {   "reads": {    "id": "5a73b878c9cc594f",    "src": "hda",    "uuid": "9dc54311-dcd9-4f26-88eb-065440a2379f"   },   "reference_source|ref": {    "id": "7564f24270ebfeac",    "src": "hda",    "uuid": "589bfb7c-7a05-4bc4-9e8c-7ecd0e987fd3"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1720293020.0000000",    "title": "Job End Time",    "value": "2024-07-06 19:10:20"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1720293019.0000000",    "title": "Job Start Time",    "value": "2024-07-06 19:10:19"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "804866345a0ae2cb",    "src": "hda",    "uuid": "4b7baa67-1938-4790-bb2f-4d6f3f08d63a"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 2, \"alnquals_to_use\": \"-A\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 203, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T19:10:30.979541",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpbku82lk3alnqual-out3.bam v. /tmp/tmpf62l_c0malnqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 33.667983055114746, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #4)" name="3" time="32.52725696563721">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|extended_baq": false,  "reads": {   "id": "420ac45953368bea",   "src": "hda"  },  "reference_source|ref": {   "id": "cc3c27801529cba7",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/f/1/2/dataset_f1291900-f3f3-42d1-bcc1-3ce5543b1f78.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b -e   \u0027/galaxy/server/database/objects/6/c/0/dataset_6c0176af-661f-4a29-a15e-f9f593c5b53e.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/8/3/c/dataset_83cc3b60-4761-4758-9a08-f8fd1f7f6a27.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-06T19:10:51.406474",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-vjkln",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "63fa248e6228fc23",  "inputs": {   "reads": {    "id": "420ac45953368bea",    "src": "hda",    "uuid": "6c0176af-661f-4a29-a15e-f9f593c5b53e"   },   "reference_source|ref": {    "id": "cc3c27801529cba7",    "src": "hda",    "uuid": "f1291900-f3f3-42d1-bcc1-3ce5543b1f78"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1720293053.0000000",    "title": "Job End Time",    "value": "2024-07-06 19:10:53"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1720293053.0000000",    "title": "Job Start Time",    "value": "2024-07-06 19:10:53"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "4b4d779b65f6d3f8",    "src": "hda",    "uuid": "83cc3b60-4761-4758-9a08-f8fd1f7f6a27"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 206, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T19:11:03.479986",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpzews_9b6alnqual-out4.bam v. /tmp/tmpufjfkra9alnqual-out4.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 3, "time_seconds": 32.52725696563721, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #5)" name="4" time="31.860685110092163">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "e686a804aca8640c",   "src": "hda"  },  "reference_source|ref": {   "id": "7736df27c77a0e6f",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/a/e/8/dataset_ae86ad95-1d68-4e77-8b38-fb3cdf80873e.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/c/2/7/dataset_c2728e4d-0830-4d14-93b0-ff5a635b2df9.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/1/a/8/dataset_1a8c16f3-d1b1-4182-b570-df4d34b11f71.dat\u0027",  "command_version": "2.1.5",  "copied_from_job_id": null,  "create_time": "2024-07-06T19:11:23.006809",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-rrj26",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "4d0ec486bdc95c3e",  "inputs": {   "reads": {    "id": "e686a804aca8640c",    "src": "hda",    "uuid": "c2728e4d-0830-4d14-93b0-ff5a635b2df9"   },   "reference_source|ref": {    "id": "7736df27c77a0e6f",    "src": "hda",    "uuid": "ae86ad95-1d68-4e77-8b38-fb3cdf80873e"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1720293085.0000000",    "title": "Job End Time",    "value": "2024-07-06 19:11:25"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1720293085.0000000",    "title": "Job Start Time",    "value": "2024-07-06 19:11:25"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "fb979d8f1ca4e59e",    "src": "hda",    "uuid": "1a8c16f3-d1b1-4182-b570-df4d34b11f71"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 209, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T19:11:35.403574",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmprin5_unialnqual-out5.bam v. /tmp/tmpae3m5xr5alnqual-out5.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 4, "time_seconds": 31.860685110092163, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #1)" name="0" time="64.18781638145447">
        
            
            <system-out><![CDATA[
            [18:39:12 - Predict] Processing region(s): ref:0-30[18:39:12 - DataStore] Writing sample registry.[18:39:12 - Predict] Setting tensorflow threads to 1.2024-07-06 18:39:12.238901: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA2024-07-06 18:39:12.243862: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2200190000 Hz2024-07-06 18:39:12.245834: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5cca4de3f350 executing computations on platform Host. Devices:2024-07-06 18:39:12.245874: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>[18:39:12 - Predict] Processing 1 long region(s) with batching.[18:39:12 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_prom_high_g360_model.hdf5.[18:39:12 - ModelLoad] Building model with cudnn optimization: False2024-07-06 18:39:13.350757: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.[18:39:13 - DLoader] Initializing data loader[18:39:13 - DLoader] Submitting ref:0-30.[18:39:13 - Sampler] Initializing sampler for consensus of region ref:0-30.[18:39:13 - PWorker] Running inference for 0.0M draft bases.[18:39:13 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[18:39:13 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:39:13 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[18:39:13 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:39:13 - Sampler] Took 0.00s to make features.[18:39:13 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 10000, quarantining.[18:39:13 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 10000, quarantining.[18:39:13 - DataStore] Writing sample registry.[18:39:13 - PWorker] All done, 2 remainder regions.[18:39:13 - Predict] Processing 2 short region(s).[18:39:13 - ModelLoad] Building model with cudnn optimization: False[18:39:14 - DLoader] Initializing data loader[18:39:14 - DLoader] Submitting ref:0-10.[18:39:14 - Sampler] Initializing sampler for consensus of region ref:0-10.[18:39:14 - PWorker] Running inference for 0.0M draft bases.[18:39:14 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:39:14 - Sampler] Took 0.00s to make features.[18:39:14 - Sampler] Pileup for ref:0.0-9.0 is of width 10[18:39:15 - DataStore] Writing sample registry.[18:39:15 - PWorker] All done, 0 remainder regions.[18:39:15 - DLoader] Initializing data loader[18:39:15 - DLoader] Submitting ref:14-30.[18:39:15 - PWorker] Running inference for 0.0M draft bases.[18:39:15 - Sampler] Initializing sampler for consensus of region ref:14-30.[18:39:15 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:39:15 - Sampler] Took 0.00s to make features.[18:39:15 - Sampler] Pileup for ref:14.0-29.0 is of width 16[18:39:15 - DataStore] Writing sample registry.[18:39:15 - PWorker] All done, 0 remainder regions.[18:39:15 - Predict] Finished processing all regions.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #2)" name="1" time="38.286620140075684">
        
            
            <system-out><![CDATA[
            [18:39:57 - Predict] Processing region(s): ref:0-30[18:39:57 - DataStore] Writing sample registry.[18:39:57 - Predict] Setting tensorflow threads to 1.2024-07-06 18:39:57.258696: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA2024-07-06 18:39:57.263691: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2200190000 Hz2024-07-06 18:39:57.265371: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x58c559031cb0 executing computations on platform Host. Devices:2024-07-06 18:39:57.265409: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>[18:39:57 - Predict] Processing 1 long region(s) with batching.[18:39:57 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.[18:39:57 - ModelLoad] Building model with cudnn optimization: False2024-07-06 18:39:58.313404: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.[18:39:58 - DLoader] Initializing data loader[18:39:58 - DLoader] Submitting ref:0-30.[18:39:58 - Sampler] Initializing sampler for consensus of region ref:0-30.[18:39:58 - PWorker] Running inference for 0.0M draft bases.[18:39:58 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[18:39:58 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:39:58 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[18:39:58 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:39:58 - Sampler] Took 0.01s to make features.[18:39:58 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 9999, quarantining.[18:39:58 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 9999, quarantining.[18:39:58 - DataStore] Writing sample registry.[18:39:58 - PWorker] All done, 2 remainder regions.[18:39:58 - Predict] Processing 2 short region(s).[18:39:58 - ModelLoad] Building model with cudnn optimization: False[18:39:59 - DLoader] Initializing data loader[18:39:59 - DLoader] Submitting ref:0-10.[18:39:59 - PWorker] Running inference for 0.0M draft bases.[18:39:59 - Sampler] Initializing sampler for consensus of region ref:0-10.[18:39:59 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:39:59 - Sampler] Took 0.00s to make features.[18:39:59 - Sampler] Pileup for ref:0.0-9.0 is of width 10[18:40:00 - DataStore] Writing sample registry.[18:40:00 - PWorker] All done, 0 remainder regions.[18:40:00 - DLoader] Initializing data loader[18:40:00 - DLoader] Submitting ref:14-30.[18:40:00 - Sampler] Initializing sampler for consensus of region ref:14-30.[18:40:00 - PWorker] Running inference for 0.0M draft bases.[18:40:00 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:40:00 - Sampler] Took 0.00s to make features.[18:40:00 - Sampler] Pileup for ref:14.0-29.0 is of width 16[18:40:00 - DataStore] Writing sample registry.[18:40:00 - PWorker] All done, 0 remainder regions.[18:40:00 - Predict] Finished processing all regions.[18:40:00 - Predict] Validating and finalising output data.[18:40:00 - DataStore] Writing sample registry.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #1)" name="0" time="55.78680872917175">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #2)" name="1" time="31.303901195526123">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #1)" name="0" time="33.7117235660553">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #2)" name="1" time="31.707661151885986">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #11)" name="10" time="34.22786855697632">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #12)" name="11" time="32.48057270050049">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #13)" name="12" time="33.875059604644775">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #14)" name="13" time="32.42920970916748">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #15)" name="14" time="32.532846212387085">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #16)" name="15" time="32.2381534576416">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #17)" name="16" time="31.547672748565674">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #18)" name="17" time="34.22164034843445">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #3)" name="2" time="32.70121145248413">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #4)" name="3" time="24.46139407157898">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input": {   "id": "d7b29f7a45075bd9",   "src": "hda"  },  "output_fmt_cond|output_fmt_select": "fasta.gz",  "outputs": "other" }, "job": {  "command_line": "addthreads=${GALAXY_SLOTS:-1} \u0026\u0026 (( addthreads-- )) \u0026\u0026  samtools sort -@ $addthreads -n \u0027/galaxy/server/database/objects/0/3/b/dataset_03bb353f-4369-41e4-b40d-a9559a138dbe.dat\u0027 \u003e input \u0026\u0026   samtools fasta    input  | gzip - \u003e output.fasta.gz \u0026\u0026 ln -s output.fasta.gz output",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-06T18:43:39.166926",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-whglh",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "8cac7d456a268371",  "inputs": {   "input": {    "id": "d7b29f7a45075bd9",    "src": "hda",    "uuid": "03bb353f-4369-41e4-b40d-a9559a138dbe"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "870c2ff7c4e5facb",    "src": "hda",    "uuid": "f2e3bd91-42c1-4001-af6b-00d5507accc5"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "copy_arb_tags": null,   "copy_tags": "false",   "dbkey": "\"?\"",   "exclusive_filter": null,   "exclusive_filter_all": null,   "idxout_cond": "{\"__current_case__\": 0, \"idxout_select\": \"no\"}",   "inclusive_filter": null,   "output_fmt_cond": "{\"__current_case__\": 3, \"output_fmt_select\": \"fasta.gz\"}",   "outputs": "\"other\"",   "read_numbering": "\"\""  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T18:43:44.770698",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_fastx/samtools_fastx/1.9+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 3, "time_seconds": 24.46139407157898, "tool_id": "samtools_fastx", "tool_version": "1.9+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #5)" name="4" time="32.37343788146973">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #6)" name="5" time="31.57533836364746">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #7)" name="6" time="32.494469165802">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #8)" name="7" time="32.92621994018555">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #9)" name="8" time="31.22215247154236">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 1 singletons[M::bam2fq_mainloop] processed 37 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #10)" name="9" time="32.50551700592041">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #1)" name="0" time="35.738837242126465">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #2)" name="1" time="32.07172179222107">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #3)" name="2" time="25.32197332382202">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_bam": {   "id": "a5cab7eaf2cfabe9",   "src": "hda"  },  "slice_method|regions_0|chrom": "chrM",  "slice_method|regions_0|end": "1000",  "slice_method|regions_0|start": "1",  "slice_method|slice_method_selector": "man" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/f/f/c/dataset_ffc345f1-43f1-4087-a9c9-c5941cf2f90e.dat\u0027 temp_input.bam \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/f/3/9/metadata_f392aa36-69e6-49a0-bed4-26589f836ada.dat\u0027 temp_input.bam.bai \u0026\u0026  samtools view -@ ${GALAXY_SLOTS:-1} -b -o unsorted_output.bam temp_input.bam  \"chrM:1-1000\" \u0026\u0026  samtools sort -O bam -T sorted -@ ${GALAXY_SLOTS:-1} -o \u0027/galaxy/server/database/objects/8/c/7/dataset_8c71f500-29f2-42e2-a32a-6453931ad5d1.dat\u0027 unsorted_output.bam",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-06T18:52:49.980905",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-w7gkr",  "galaxy_version": "23.1",  "history_id": "d622e3736cd871d5",  "id": "f80a5b2c6fca7879",  "inputs": {   "input_bam": {    "id": "a5cab7eaf2cfabe9",    "src": "hda",    "uuid": "ffc345f1-43f1-4087-a9c9-c5941cf2f90e"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_bam": {    "id": "64f9c7afa2761b95",    "src": "hda",    "uuid": "8c71f500-29f2-42e2-a32a-6453931ad5d1"   }  },  "params": {   "__input_ext": "\"bam\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "slice_method": "{\"__current_case__\": 2, \"regions\": [{\"__index__\": 0, \"chrom\": \"chrM\", \"end\": \"1000\", \"start\": \"1\"}], \"slice_method_selector\": \"man\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_slice_bam/samtools_slice_bam/2.0.1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-06T18:52:56.436209",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_slice_bam/samtools_slice_bam/2.0.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_slice_bam/samtools_slice_bam/2.0.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 2, "time_seconds": 25.32197332382202, "tool_id": "samtools_slice_bam", "tool_version": "2.0.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.20764875411987305">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.20764875411987305, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.2123408317565918">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.2123408317565918, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="74.04893827438354">
        
            
            <system-out><![CDATA[
            [1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minLoading required package: S4VectorsAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: scuttleLoading required package: ggplot2Loading required package: rhdf5Loading required package: BiocIOWarning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="45.51436448097229">
        
            
            <system-out><![CDATA[
            [1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minLoading required package: S4VectorsAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: scuttleLoading required package: ggplot2Loading required package: rhdf5Loading required package: BiocIOWarning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #1)" name="0" time="11.71006441116333">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 11.71006441116333, "tool_id": "seq_filter_by_id", "tool_version": "0.2.7"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #2)" name="1" time="45.858649492263794">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some of your identifiers had white space in them, using first word only. e.g.:gi|16127999|ref|NP_414546.1| hypothetical protein b0005 [Escherichia coli str. K-12 substr. MG1655]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #3)" name="2" time="29.732884168624878">
        
            
            <system-out><![CDATA[
            Have 1 unique identifiers from listGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #4)" name="3" time="31.27146291732788">
        
            
            <system-out><![CDATA[
            Have 2 unique identifiers from listGenerating matching FASTQ file
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #5)" name="4" time="32.5617835521698">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/c/b/8/dataset_cb863330-afb9-45c1-983c-e5b4d11686e2.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03WTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04WTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04WTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05WTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05WTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07WTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08WTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09WTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09WTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10WTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10WTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11WTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11WTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12WTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12WTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14WTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14WTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15WTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16WTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16WTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17WTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18WTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18WTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20WTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20WTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21WTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22WTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22WTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23WTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24WTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01WTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01WTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02WTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02WTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03WTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04WTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06WTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07WTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07WTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08WTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09WTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10WTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10WTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11WTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12WTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12WTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13WTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14WTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15WTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16WTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16WTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17WTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17WTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18WTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20WTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20WTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21WTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21WTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22WTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23WTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23WTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01WTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04WTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04WTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05WTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05WTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06WTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06WTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07WTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08WTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08WTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09WTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09WTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10WTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10WTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11WTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11WTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12WTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12WTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13WTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14WTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14WTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15WTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15WTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16WTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17WTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17WTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19WTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20WTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20WTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22WTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22WTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24WTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01WTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01WTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02WTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02WTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03WTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04WTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06WTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07WTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08WTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08WTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09WTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09WTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10WTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11WTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12WTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13WTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14WTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14WTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15WTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15WTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16WTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16WTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17WTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17WTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18WTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19WTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19WTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20WTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20WTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21WTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22WTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23WTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24WTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24WTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01WTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01WTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02WTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03WTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03WTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04WTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04WTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05WTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06WTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06WTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07WTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07WTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08WTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08WTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09WTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10WTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10WTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11WTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12WTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12WTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13WTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13WTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14WTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14WTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15WTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15WTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16WTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17WTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17WTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18WTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18WTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21WTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21WTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22WTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22WTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23WTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23WTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24WTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24WTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01WTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01WTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02WTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03WTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04WTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05WTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06WTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08WTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09WTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09WTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10WTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10WTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11WTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12WTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14WTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14WTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15WTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16WTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17WTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18WTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18WTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19WTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19WTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20WTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20WTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21WTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21WTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22WTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22WTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23WTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24WTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01WTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01WTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #6)" name="5" time="32.097445487976074">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/2/7/2/dataset_272a937f-8d4a-4da9-a0d1-bfaddb9eca17.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03.p1kpIBFWTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04.p1kpIBFWTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04.q1kpIBRWTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05.p1kpIBFWTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05.q1kpIBRWTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07.p1kpIBFWTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08.p1kpIBFWTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09.p1kpIBFWTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09.q1kpIBRWTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10.p1kpIBFWTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10.q1kpIBRWTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11.p1kpIBFWTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11.q1kpIBRWTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12.p1kpIBFWTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12.q1kpIBRWTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14.p1kpIBFWTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14.q1kpIBRWTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15.p1kpIBFWTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16.p1kpIBFWTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16.q1kpIBRWTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17.p1kpIBFWTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18.p1kpIBFWTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18.q1kpIBRWTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20.p1kpIBFWTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20.q1kpIBRWTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21.q1kpIBRWTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22.p1kpIBFWTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22.q1kpIBRWTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23.p1kpIBFWTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24.q1kpIBRWTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01.p1kpIBFWTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01.q1kpIBRWTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02.p1kpIBFWTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02.q1kpIBRWTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03.q1kpIBRWTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04.p1kpIBFWTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06.p1kpIBFWTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07.p1kpIBFWTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07.q1kpIBRWTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08.p1kpIBFWTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09.p1kpIBFWTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10.p1kpIBFWTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10.q1kpIBRWTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11.q1kpIBRWTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12.p1kpIBFWTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12.q1kpIBRWTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13.p1kpIBFWTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14.p1kpIBFWTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15.q1kpIBRWTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16.p1kpIBFWTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16.q1kpIBRWTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17.p1kpIBFWTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17.q1kpIBRWTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18.p1kpIBFWTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20.p1kpIBFWTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20.q1kpIBRWTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21.p1kpIBFWTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21.q1kpIBRWTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22.p1kpIBFWTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23.p1kpIBFWTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23.q1kpIBRWTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01.q1kpIBRWTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04.p1kpIBFWTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04.q1kpIBRWTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05.p1kpIBFWTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05.q1kpIBRWTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06.p1kpIBFWTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06.q1kpIBRWTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07.p1kpIBFWTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08.p1kpIBFWTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08.q1kpIBRWTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09.p1kpIBFWTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09.q1kpIBRWTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10.p1kpIBFWTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10.q1kpIBRWTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11.p1kpIBFWTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11.q1kpIBRWTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12.p1kpIBFWTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12.q1kpIBRWTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13.p1kpIBFWTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14.p1kpIBFWTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14.q1kpIBRWTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15.p1kpIBFWTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15.q1kpIBRWTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16.p1kpIBFWTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17.p1kpIBFWTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17.q1kpIBRWTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19.p1kpIBFWTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20.p1kpIBFWTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20.q1kpIBRWTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22.p1kpIBFWTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22.q1kpIBRWTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24.p1kpIBFWTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01.p1kpIBFWTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01.q1kpIBRWTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02.p1kpIBFWTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02.q1kpIBRWTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03.p1kpIBFWTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04.p1kpIBFWTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06.p1kpIBFWTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07.p1kpIBFWTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08.p1kpIBFWTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08.q1kpIBRWTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09.p1kpIBFWTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09.q1kpIBRWTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10.p1kpIBFWTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11.p1kpIBFWTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12.p1kpIBFWTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13.p1kpIBFWTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14.p1kpIBFWTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14.q1kpIBRWTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15.p1kpIBFWTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15.q1kpIBRWTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16.p1kpIBFWTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16.q1kpIBRWTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17.p1kpIBFWTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17.q1kpIBRWTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18.p1kpIBFWTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19.p1kpIBFWTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19.q1kpIBRWTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20.p1kpIBFWTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20.q1kpIBRWTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21.p1kpIBFWTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22.p1kpIBFWTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23.p1kpIBFWTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24.p1kpIBFWTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24.q1kpIBRWTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01.p1kpIBFWTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01.q1kpIBRWTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02.p1kpIBFWTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03.p1kpIBFWTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03.q1kpIBRWTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04.p1kpIBFWTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04.q1kpIBRWTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05.p1kpIBFWTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06.p1kpIBFWTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06.q1kpIBRWTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07.p1kpIBFWTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07.q1kpIBRWTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08.p1kpIBFWTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08.q1kpIBRWTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09.p1kpIBFWTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10.p1kpIBFWTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10.q1kpIBRWTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11.p1kpIBFWTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12.p1kpIBFWTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12.q1kpIBRWTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13.p1kpIBFWTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13.q1kpIBRWTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14.p1kpIBFWTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14.q1kpIBRWTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15.p1kpIBFWTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15.q1kpIBRWTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16.p1kpIBFWTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17.p1kpIBFWTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17.q1kpIBRWTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18.p1kpIBFWTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18.q1kpIBRWTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21.p1kpIBFWTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21.q1kpIBRWTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22.p1kpIBFWTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22.q1kpIBRWTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23.p1kpIBFWTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23.q1kpIBRWTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24.p1kpIBFWTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24.q1kpIBRWTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01.p1kpIBFWTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01.q1kpIBRWTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02.p1kpIBFWTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03.p1kpIBFWTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04.q1kpIBRWTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05.p1kpIBFWTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06.p1kpIBFWTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08.p1kpIBFWTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09.p1kpIBFWTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09.q1kpIBRWTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10.p1kpIBFWTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10.q1kpIBRWTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11.p1kpIBFWTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12.p1kpIBFWTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14.p1kpIBFWTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14.q1kpIBRWTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15.p1kpIBFWTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16.p1kpIBFWTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17.p1kpIBFWTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18.p1kpIBFWTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18.q1kpIBRWTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19.p1kpIBFWTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19.q1kpIBRWTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20.p1kpIBFWTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20.q1kpIBRWTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21.p1kpIBFWTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21.q1kpIBRWTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22.p1kpIBFWTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22.q1kpIBRWTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23.p1kpIBFWTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24.q1kpIBRWTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01.p1kpIBFWTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01.q1kpIBRWTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02.p1kpIBF
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfannotategenotypes (Test #1)" name="0" time="36.296873569488525">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfsort (Test #1)" name="0" time="30.61576199531555">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>