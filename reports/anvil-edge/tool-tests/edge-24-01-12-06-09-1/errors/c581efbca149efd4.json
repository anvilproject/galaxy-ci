{
    "model_class": "Job",
    "id": "c581efbca149efd4",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-01-12T07:21:20.289481",
    "create_time": "2024-01-12T07:20:47.043859",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "21212e36f7e1385e",
    "external_id": "gxy-fxcf4",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/b/d/8/dataset_bd85970f-e469-482c-b338-9da5e3c4a371.dat' && cp '/galaxy/server/database/objects/2/5/f/dataset_25f214c4-06af-48c1-9aaa-99d4cc7678dd.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/a/6/3/dataset_a63ff346-26a5-40b1-8aee-e8bc3b335d17.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/a/e/d/dataset_aed347a9-8824-47a8-8856-be8568310735.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 1: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 311, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 312, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 310, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "01a1157eebee26be",
            "src": "hda",
            "uuid": "aed347a9-8824-47a8-8856-be8568310735"
        },
        "pairstraight|file2": {
            "id": "8149a746a00e707c",
            "src": "hda",
            "uuid": "a63ff346-26a5-40b1-8aee-e8bc3b335d17"
        },
        "pairstraight|file1": {
            "id": "5fa18d68eb527726",
            "src": "hda",
            "uuid": "25f214c4-06af-48c1-9aaa-99d4cc7678dd"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "bfd0ec3cee13f8ed",
            "src": "hda",
            "uuid": "bd85970f-e469-482c-b338-9da5e3c4a371"
        }
    },
    "outputs": {
        "observed_bias": {
            "id": "f50abe57a9f6f4ef",
            "src": "hda",
            "uuid": "3abd300c-ca73-411f-83c8-cf16281998ed"
        },
        "whitelist_txt": {
            "id": "2331b3145f80d554",
            "src": "hda",
            "uuid": "2e94bef5-c1d2-407b-9b4e-05a3abc9bb12"
        },
        "expected_bias": {
            "id": "44bc4587daac5aed",
            "src": "hda",
            "uuid": "866c3377-8ee7-47a9-8292-ab3d3aca6bd5"
        },
        "featureDump_txt": {
            "id": "78359a626f3a2712",
            "src": "hda",
            "uuid": "5ddd4b8d-b0c1-404b-8969-4ca8cc3be626"
        },
        "observed_bias_3p": {
            "id": "7dd821c2cdb8f5d5",
            "src": "hda",
            "uuid": "71f47822-9067-48fd-b2b5-c1940f1c434d"
        },
        "quants_mat_mtx": {
            "id": "d74cc56fb8d92f0f",
            "src": "hda",
            "uuid": "ab25f12b-18a6-4e8d-9ebf-1f95492fe864"
        },
        "quants_mat_rows_txt": {
            "id": "6d097fd271a306bc",
            "src": "hda",
            "uuid": "f133a301-b2c4-4927-bc1f-9f397931f58b"
        },
        "raw_cb_frequency_txt": {
            "id": "cd2448e69f3e03ff",
            "src": "hda",
            "uuid": "f4c356d8-feda-4995-a853-ee1590117c70"
        },
        "quants_mat_cols_txt": {
            "id": "85a2aa8f75b8eccc",
            "src": "hda",
            "uuid": "40363c55-7922-490f-aa93-81fdc59aa0d5"
        },
        "quants_tier_mat": {
            "id": "baf0f84b5e8c0627",
            "src": "hda",
            "uuid": "9da5aed8-6bb0-43a1-8651-1d8de31c3981"
        },
        "flenDist_txt": {
            "id": "ea3e2f6a8743905e",
            "src": "hda",
            "uuid": "f1f80808-0dd7-4d2b-b28d-33de3c0c7217"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
