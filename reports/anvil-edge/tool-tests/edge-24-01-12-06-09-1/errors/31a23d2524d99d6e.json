{
    "model_class": "Job",
    "id": "31a23d2524d99d6e",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-01-12T07:22:50.353821",
    "create_time": "2024-01-12T07:22:33.001576",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "21212e36f7e1385e",
    "external_id": "gxy-wp55t",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/4/2/5/dataset_425fb327-24df-4553-9066-d7d844716015.dat' && cp '/galaxy/server/database/objects/0/d/d/dataset_0dd20384-c096-49ca-b032-f9406cb3b88a.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/e/9/b/dataset_e9ba95f8-c23c-4618-847f-bc01c25c4ec3.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/c/c/f/dataset_ccf5838a-4685-4d95-a1fa-7fa735c231fe.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 55: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 344, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 345, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 343, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "a3dff791432109e1",
            "src": "hda",
            "uuid": "ccf5838a-4685-4d95-a1fa-7fa735c231fe"
        },
        "pairstraight|file2": {
            "id": "68f71757e55afb5d",
            "src": "hda",
            "uuid": "e9ba95f8-c23c-4618-847f-bc01c25c4ec3"
        },
        "pairstraight|file1": {
            "id": "4cf0f49b00f74e6c",
            "src": "hda",
            "uuid": "0dd20384-c096-49ca-b032-f9406cb3b88a"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "10af77132da4699e",
            "src": "hda",
            "uuid": "425fb327-24df-4553-9066-d7d844716015"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "d8a3f4766d9706b9",
            "src": "hda",
            "uuid": "1f44f996-0ab2-4188-868a-20d498886f08"
        },
        "observed_bias_3p": {
            "id": "b7bfb993a095d856",
            "src": "hda",
            "uuid": "464f9daa-1f13-4f08-99b3-d0622de685ca"
        },
        "observed_bias": {
            "id": "85d51b82b23c5025",
            "src": "hda",
            "uuid": "cfb5a6b7-dd79-4fe7-a8a5-ae7db380765d"
        },
        "expected_bias": {
            "id": "f816f44ae7b134e2",
            "src": "hda",
            "uuid": "9dc07ec7-09b2-42be-b29c-85a878d08994"
        },
        "whitelist_txt": {
            "id": "d1ce5042f2519e0f",
            "src": "hda",
            "uuid": "2e36ef45-856c-4454-aedf-e4e66c749055"
        },
        "featureDump_txt": {
            "id": "a586bf362d272567",
            "src": "hda",
            "uuid": "3a7e619b-88f8-4ed1-a7e4-b6b664324241"
        },
        "quants_tier_mat": {
            "id": "4c6856b754545aa2",
            "src": "hda",
            "uuid": "98148e73-b332-4507-b965-aff68d6bb4b9"
        },
        "quants_mat_rows_txt": {
            "id": "1c448037cd74f7e2",
            "src": "hda",
            "uuid": "4446d5a7-a8cd-46e8-88a4-c45fc52099cd"
        },
        "quants_mat_cols_txt": {
            "id": "5f3c7d0973cfc3dd",
            "src": "hda",
            "uuid": "2db9e0cf-be5d-4646-a02f-fb4da115e8ea"
        },
        "raw_cb_frequency_txt": {
            "id": "1a0a35b7402221b5",
            "src": "hda",
            "uuid": "7c8d8dc6-570b-45e7-bbf5-32c7eb2ed255"
        },
        "quants_mat_mtx": {
            "id": "034301eba83c3279",
            "src": "hda",
            "uuid": "d6ae3c2e-0db8-4aa2-8ea6-9808e0bed45c"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
