{
    "model_class": "Job",
    "id": "e540d1f2e5fc6e77",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-11-17T07:19:19.742201",
    "create_time": "2023-11-17T07:19:01.688459",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "73249822fb24d710",
    "external_id": "gxy-vmh6x",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/a/f/2/dataset_af261601-7cf1-42da-bc32-4219620f62d7.dat' && cp '/galaxy/server/database/objects/6/5/f/dataset_65f8bd4d-8e38-4c59-815a-44be1397a152.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/5/d/7/dataset_5d71c8ce-6731-4a30-8cca-cde562d3f7c9.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/2/2/e/dataset_22e827db-9482-4e9e-9aa3-590ed89282f7.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 1: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 335, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 336, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 334, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "ff22cdd468c8e3e2",
            "src": "hda",
            "uuid": "22e827db-9482-4e9e-9aa3-590ed89282f7"
        },
        "pairstraight|file2": {
            "id": "7d0f643db6d8c521",
            "src": "hda",
            "uuid": "5d71c8ce-6731-4a30-8cca-cde562d3f7c9"
        },
        "pairstraight|file1": {
            "id": "a97794c5602a72c2",
            "src": "hda",
            "uuid": "65f8bd4d-8e38-4c59-815a-44be1397a152"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "f65dbe2cbdd23cd5",
            "src": "hda",
            "uuid": "af261601-7cf1-42da-bc32-4219620f62d7"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "812a0714c0c57d8e",
            "src": "hda",
            "uuid": "8c50bb16-268e-416e-aeb1-5d770623b0ff"
        },
        "observed_bias_3p": {
            "id": "f07c3cb32f254f0e",
            "src": "hda",
            "uuid": "7e477d29-79a4-4161-8d2f-3717392fabd6"
        },
        "observed_bias": {
            "id": "db1ac4dbeac1c615",
            "src": "hda",
            "uuid": "7b6547d8-b73d-48a1-b867-ccdd0dabb699"
        },
        "expected_bias": {
            "id": "729d8f00f42229e8",
            "src": "hda",
            "uuid": "cde49e13-60f0-44eb-9ff5-8e73dbf50a89"
        },
        "whitelist_txt": {
            "id": "c3256f7d0393140b",
            "src": "hda",
            "uuid": "19ea1250-988e-4b27-8bde-fb72345950f2"
        },
        "featureDump_txt": {
            "id": "dc0e4b0be5e77814",
            "src": "hda",
            "uuid": "308a1d81-649a-4260-a5e7-ffc852b40265"
        },
        "quants_tier_mat": {
            "id": "9301798725c21141",
            "src": "hda",
            "uuid": "0a766830-39da-4af9-8b2f-14566e7cef5d"
        },
        "quants_mat_rows_txt": {
            "id": "efe4b723bee91aff",
            "src": "hda",
            "uuid": "8e9eed07-2fc1-479d-a0c3-0318fa4a73a6"
        },
        "quants_mat_cols_txt": {
            "id": "4b6dfb553a7914f7",
            "src": "hda",
            "uuid": "cf361683-83fd-4a76-b6f7-c64e74ae985c"
        },
        "raw_cb_frequency_txt": {
            "id": "c28cfe7897906ade",
            "src": "hda",
            "uuid": "a5ba6f3e-2c25-4ff6-a410-b7821f9cb61f"
        },
        "quants_mat_mtx": {
            "id": "bf76b8a00b66569a",
            "src": "hda",
            "uuid": "9b7ecfdd-c46e-4d31-9b22-64ddc0cefc71"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
