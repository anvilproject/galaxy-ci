{
    "model_class": "Job",
    "id": "630d9f04660fc290",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-11-17T07:17:35.643861",
    "create_time": "2023-11-17T07:16:56.814984",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "73249822fb24d710",
    "external_id": "gxy-hnk5k",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/4/8/4/dataset_484ca16e-1dcd-47f7-af9f-ad594ecede3e.dat' && cp '/galaxy/server/database/objects/d/b/a/dataset_dbac461c-fd1b-4ad8-8407-a19b946b9dd3.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/1/8/8/dataset_18818f8e-f1d8-4018-89f2-d9160d6cb595.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/3/6/5/dataset_365979e7-75e1-4f78-b4f5-6ea06c8103d1.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 302, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 303, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 301, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "9e834539264c0d5d",
            "src": "hda",
            "uuid": "365979e7-75e1-4f78-b4f5-6ea06c8103d1"
        },
        "pairstraight|file2": {
            "id": "18d861446c0ca03f",
            "src": "hda",
            "uuid": "18818f8e-f1d8-4018-89f2-d9160d6cb595"
        },
        "pairstraight|file1": {
            "id": "8b0ddf01f0c0bcb2",
            "src": "hda",
            "uuid": "dbac461c-fd1b-4ad8-8407-a19b946b9dd3"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "011bb7debec1f76d",
            "src": "hda",
            "uuid": "484ca16e-1dcd-47f7-af9f-ad594ecede3e"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "5c7fe5a1716ae3bc",
            "src": "hda",
            "uuid": "46d7b466-d35d-4827-805c-cf17d29c4ace"
        },
        "observed_bias_3p": {
            "id": "77e52578019f9c05",
            "src": "hda",
            "uuid": "96201cb8-74bf-4692-bac8-038d39d2f2d8"
        },
        "observed_bias": {
            "id": "e2db81efdb69f504",
            "src": "hda",
            "uuid": "935377db-7481-4c73-aa08-6947e8ad9088"
        },
        "expected_bias": {
            "id": "87ae2fbcaf003502",
            "src": "hda",
            "uuid": "a6798a21-df0f-4e4a-860c-b511cca3f8c3"
        },
        "whitelist_txt": {
            "id": "4473d5c3e750e5e0",
            "src": "hda",
            "uuid": "1246112a-7b47-49a4-8a10-5dc6a744926d"
        },
        "featureDump_txt": {
            "id": "a6232ccf8d028607",
            "src": "hda",
            "uuid": "6018ce3d-237a-4fa1-9d04-99beab0cbd37"
        },
        "quants_tier_mat": {
            "id": "97cb400f54cfc39a",
            "src": "hda",
            "uuid": "0ad14007-3722-4b5b-815f-fa84565d2d7c"
        },
        "quants_mat_rows_txt": {
            "id": "c82b9f0ddf69859c",
            "src": "hda",
            "uuid": "f0fdd743-5d8a-42c7-a5f6-4287942f0157"
        },
        "quants_mat_cols_txt": {
            "id": "6e2db4d4aec11d7a",
            "src": "hda",
            "uuid": "31b51458-63a9-4e2a-9fdb-78deb93657ed"
        },
        "raw_cb_frequency_txt": {
            "id": "21804dd9a382063e",
            "src": "hda",
            "uuid": "6889472e-8b29-497b-8aa7-a5a788b4e04a"
        },
        "quants_mat_mtx": {
            "id": "a954a8de8bd1d0f2",
            "src": "hda",
            "uuid": "62562eee-05a5-4565-9641-9caf77f9bdf9"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
