{
    "model_class": "Job",
    "id": "4986b785643738c9",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-06-28T07:14:01.800349",
    "create_time": "2024-06-28T07:13:31.290582",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "af0be4c0433138ee",
    "external_id": "gxy-w5plm",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/c/f/d/dataset_cfdaafb8-8779-4add-9d36-d1545330aa43.dat' && cp '/galaxy/server/database/objects/1/c/e/dataset_1ce49aa8-b47c-4790-b695-f4edbb39b68d.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/8/b/5/dataset_8b5db8d6-2d05-4521-89cf-da061929e00c.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/9/9/0/dataset_990250a0-5306-4353-a45f-7b45a66229a5.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 74: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 302, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 303, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 301, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "refTranscriptSource|s_index|fasta": {
            "id": "c7e93aef17a27c55",
            "src": "hda",
            "uuid": "cfdaafb8-8779-4add-9d36-d1545330aa43"
        },
        "pairstraight|file1": {
            "id": "4cdde0acb4875db1",
            "src": "hda",
            "uuid": "1ce49aa8-b47c-4790-b695-f4edbb39b68d"
        },
        "pairstraight|file2": {
            "id": "d5342cd9bfbe056f",
            "src": "hda",
            "uuid": "8b5db8d6-2d05-4521-89cf-da061929e00c"
        },
        "tgmap": {
            "id": "f6984ec685208439",
            "src": "hda",
            "uuid": "990250a0-5306-4353-a45f-7b45a66229a5"
        }
    },
    "outputs": {
        "observed_bias_3p": {
            "id": "95a93f06b9efc4d4",
            "src": "hda",
            "uuid": "75fdeca3-ff15-4bc6-81ad-0d2eb561be64"
        },
        "quants_tier_mat": {
            "id": "7cc0499cf29155f9",
            "src": "hda",
            "uuid": "f7736da6-473b-46c1-8aed-e3e5ae1c5784"
        },
        "quants_mat_rows_txt": {
            "id": "7b9015356b16569e",
            "src": "hda",
            "uuid": "3d40b38c-1e70-41f6-affb-11933ac0fd8a"
        },
        "quants_mat_cols_txt": {
            "id": "8bbad56713bd9d59",
            "src": "hda",
            "uuid": "a0ccc454-dbcd-4ba3-9ecc-c122e1036ed5"
        },
        "featureDump_txt": {
            "id": "fb8efea10b905207",
            "src": "hda",
            "uuid": "4e060ce2-2f07-4a06-a023-0784b6b0204e"
        },
        "whitelist_txt": {
            "id": "46646d7b58023d2e",
            "src": "hda",
            "uuid": "f98354db-30b1-4e3b-8b7c-8d2690869df4"
        },
        "expected_bias": {
            "id": "8c87f8475fa2bfea",
            "src": "hda",
            "uuid": "c377ad40-9852-4d19-bd65-d90d640acf3a"
        },
        "observed_bias": {
            "id": "484fe62df88480d0",
            "src": "hda",
            "uuid": "d0ea2b5e-657d-4368-8f18-7bc00e20ad4a"
        },
        "flenDist_txt": {
            "id": "0e309b767b1662a8",
            "src": "hda",
            "uuid": "eb332f5e-bcae-490d-aa41-352038efdee0"
        },
        "quants_mat_mtx": {
            "id": "32ceee9b814d37e1",
            "src": "hda",
            "uuid": "3b0fb6a8-0dd3-44a4-be0d-ae698e3e3506"
        },
        "raw_cb_frequency_txt": {
            "id": "7b102c3e5f141eba",
            "src": "hda",
            "uuid": "1761fbdb-8997-45b6-a0f1-441bac9029d8"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
