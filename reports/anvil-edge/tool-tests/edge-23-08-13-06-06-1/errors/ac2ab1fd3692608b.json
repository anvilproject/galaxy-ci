{
    "model_class": "Job",
    "id": "ac2ab1fd3692608b",
    "state": "error",
    "exit_code": null,
    "update_time": "2023-08-13T07:00:51.332702",
    "create_time": "2023-08-13T07:00:44.149171",
    "galaxy_version": "23.0",
    "command_version": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/freebayes/freebayes/1.3.6+galaxy0",
    "history_id": "2a24d5429449970c",
    "external_id": "gxy-xbv87",
    "command_line": "ln -s -f '/galaxy/server/database/objects/0/9/7/dataset_097f225e-85a9-42db-a8e5-98c9c51d8732.dat' 'localref.fa' && samtools faidx 'localref.fa' 2>&1 || echo \"Error running samtools faidx for FreeBayes\" >&2 &&   ln -s -f '/galaxy/server/database/objects/7/9/3/dataset_793e4932-3c54-402f-9a54-c58a3c8880ad.dat' 'b_0.bam' && ln -s -f '/galaxy/server/database/objects/_metadata_files/3/6/1/metadata_361a64e4-6463-46dd-ba5e-4df8e9e7adf5.dat' 'b_0.bam.bai' &&   samtools view -H b_0.bam| grep '^@SQ' | cut -f 2- | awk '{ gsub(\"^SN:\",\"\",$1); gsub(\"^LN:\",\"\",$2); print $1\"\\t0\\t\"$2; }' >> regions_all.bed &&  sort -u regions_all.bed > regions_uniq.bed &&  mkdir vcf_output failed_alleles trace &&   for i in `cat regions_uniq.bed | awk '{print $1\":\"$2\"..\"$3}'`; do echo \"   freebayes  --region '$i'  --bam 'b_0.bam' --fasta-reference 'localref.fa'  --vcf './vcf_output/part_$i.vcf'    --theta 0.001 --ploidy 1            \"; done > freebayes_commands.sh &&  cat freebayes_commands.sh | parallel --will-cite -j ${GALAXY_SLOTS:-1} &&  grep \"^#\" \"./vcf_output/part_$i.vcf\" > header.txt &&  for i in `cat regions_uniq.bed | awk '{print $1\":\"$2\"..\"$3}'`; do cat \"./vcf_output/part_$i.vcf\" | grep -v \"^#\" || true ; done | sort -k1,1 -k2,2n -k5,5 -u | cat header.txt - > '/galaxy/server/database/objects/1/7/6/dataset_17637aa2-9e09-4cf4-ad1d-434a108726eb.dat'",
    "traceback": null,
    "params": {
        "__input_ext": "\"bam\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "options_type": "{\"O\": false, \"__current_case__\": 0, \"algorithmic_features\": {\"__current_case__\": 1, \"algorithmic_features_selector\": \"do_not_set\"}, \"allele_scope\": {\"__current_case__\": 1, \"allele_scope_selector\": \"do_not_set\"}, \"genotype_likelihoods\": {\"__current_case__\": 1, \"genotype_likelihoods_selector\": \"do_not_set\"}, \"input_filters\": {\"__current_case__\": 1, \"input_filters_selector\": \"do_not_set\"}, \"optional_inputs\": {\"__current_case__\": 1, \"optional_inputs_selector\": \"do_not_set\"}, \"options_type_selector\": \"full\", \"population_mappability_priors\": {\"__current_case__\": 1, \"population_mappability_priors_selector\": \"do_not_set\"}, \"population_model\": {\"J\": false, \"K\": false, \"P\": \"1\", \"T\": \"0.001\", \"__current_case__\": 0, \"population_model_selector\": \"set\"}, \"reference_allele\": {\"__current_case__\": 1, \"reference_allele_selector\": \"do_not_set\"}, \"reporting\": {\"__current_case__\": 1, \"reporting_selector\": \"do_not_set\"}}",
        "coverage_options": "{\"__current_case__\": 1, \"coverage_options_selector\": \"do_not_set\"}",
        "target_limit_type": "{\"__current_case__\": 0, \"target_limit_type_selector\": \"do_not_limit\"}",
        "reference_source": "{\"__current_case__\": 1, \"batchmode\": {\"__current_case__\": 0, \"input_bams\": {\"values\": [{\"id\": 498, \"src\": \"hda\"}]}, \"processmode\": \"individual\"}, \"ref_file\": {\"values\": [{\"id\": 499, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"
    },
    "inputs": {
        "reference_source|input_bams": {
            "id": "8ead300fab79f102",
            "src": "hda",
            "uuid": "793e4932-3c54-402f-9a54-c58a3c8880ad"
        },
        "ref_file": {
            "id": "42c64d1884e1f743",
            "src": "hda",
            "uuid": "097f225e-85a9-42db-a8e5-98c9c51d8732"
        }
    },
    "outputs": {
        "output_vcf": {
            "id": "a6ae17a001320a90",
            "src": "hda",
            "uuid": "17637aa2-9e09-4cf4-ad1d-434a108726eb"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": null,
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
