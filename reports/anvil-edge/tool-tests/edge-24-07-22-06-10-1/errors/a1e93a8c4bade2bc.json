{
    "model_class": "Job",
    "id": "a1e93a8c4bade2bc",
    "history_id": "4cfa324e95cf8591",
    "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.4.8.0",
    "state": "error",
    "exit_code": null,
    "create_time": "2024-07-22T06:30:13.558985",
    "update_time": "2024-07-22T06:31:53.435671",
    "galaxy_version": "24.1",
    "external_id": "gxy-5tqn2",
    "handler": null,
    "job_runner_name": null,
    "command_line": "ln -s '/galaxy/server/database/objects/b/f/8/dataset_bf82c77a-6d66-41d6-a21e-50f5e902ab27.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/5/6/9/dataset_5692b3dc-f2d0-47d9-af66-83ea5e8ba553.dat' fq2.fastq && pilon=`pilon --jar_dir` && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 --pilon_path $pilon -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --no_correct --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --no_pilon --min_polish_size '1000' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'",
    "user_email": "tests@fake.org",
    "command_version": null,
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"scores\": \"3,-6,-5,-2\"}",
        "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}",
        "pilon": "{\"min_polish_size\": \"1000\", \"no_pilon\": true}",
        "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}",
        "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\", \"no_correct\": true}",
        "min_anchor_seg_len": "\"\"",
        "linear_seqs": "\"0\"",
        "min_fasta_length": "\"100\"",
        "mode": "\"normal\"",
        "long": null,
        "paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}"
    },
    "inputs": {
        "paired_unpaired|fastq_input12": {
            "id": "a1e93a8c4bade2bc",
            "src": "hda",
            "uuid": "5692b3dc-f2d0-47d9-af66-83ea5e8ba553"
        },
        "paired_unpaired|fastq_input11": {
            "id": "ebeffbb0ab45f23a",
            "src": "hda",
            "uuid": "bf82c77a-6d66-41d6-a21e-50f5e902ab27"
        }
    },
    "outputs": {
        "assembly": {
            "id": "20439b416f191707",
            "src": "hda",
            "uuid": "5f066146-b02d-4d44-9e8c-61cc30734402"
        },
        "assembly_graph": {
            "id": "0d20b4fc11da5563",
            "src": "hda",
            "uuid": "e8c2d2dd-23ad-4e8e-b3f3-d933023cff5b"
        }
    },
    "copied_from_job_id": null,
    "output_collections": {},
    "tool_stdout": "\nStarting Unicycler (2024-07-22 06:30:15)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --no_pilon --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/9/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py       3.14.1    good       /usr/local/bin/spades.py  \n  racon                     not used                             \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nChoosing k-mer range for assembly (2024-07-22 06:30:16)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-07-22 06:30:16)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/9/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/9/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-6.1.85+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/9/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/9/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/9/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/9/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.107    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.107    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.110    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.110    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.111    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.140    25M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.153    25M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.153    25M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.153    25M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.155    25M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.157    25M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.157    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.157    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.727    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.727    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.919    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:00.919    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.053    43M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.055    43M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.055    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.056    43M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.056    43M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.057    43M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.163     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.163     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.175   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.544   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.544   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.790   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.819   136M / 136M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.848   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:02.849   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.854   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.855   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:02.856   136M / 136M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:02.856   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:02.863   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:02.864   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:02.864   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:02.864   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:02.867   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:02.870   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:02.872   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:02.875   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.878   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:02.878   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:02.878   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.897   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:02.898   136M / 136M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.967   136M / 136M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:02.969   136M / 136M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:02.975   136M / 136M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.059   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.262   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.746   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.311   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.280   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.280   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.282   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.282   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.282   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.283   136M / 136M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.283   136M / 136M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.283   136M / 136M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.283   136M / 136M  INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:05.283   136M / 136M  INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:0\n..\n5    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.185    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.185    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.185    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.185    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.185    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 439)   Closing gaps in paths\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 467)   Gap closing completed\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 296)   Traversing tandem repeats\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 306)   Traversed 0 loops\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 244)   Finalizing paths\n  0:00:08.187    69M / 172M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:08.187    69M / 172M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:08.187    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.187    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.187    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.187    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.187    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.188    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.188    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.188    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.188    69M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:08.188    69M / 172M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:08.188    64M / 172M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:08.189    64M / 172M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:08.194    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:08.195    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:08.200    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:08.200    64M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:08.205    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:08.209    64M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:08.213    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:08.217    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:08.226    64M / 172M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:08.230    64M / 172M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 8 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:08.182    69M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2024-07-22 06:31:40)\nFilter by read depth        (2024-07-22 06:31:40)\nFilter homopolymer loops    (2024-07-22 06:31:40)\nMerge all possible          (2024-07-22 06:31:40)\nNormalise read depths       (2024-07-22 06:31:40)\nRemove zero length segments (2024-07-22 06:31:40)\nSort link order             (2024-07-22 06:31:40)\nGraph cleaning finished     (2024-07-22 06:31:40)\nSaving /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-07-22 06:31:40)\nFilter by read depth        (2024-07-22 06:31:40)\nFilter homopolymer loops    (2024-07-22 06:31:40)\nMerge all possible          (2024-07-22 06:31:40)\nNormalise read depths       (2024-07-22 06:31:40)\nRemove zero length segments (2024-07-22 06:31:40)\nSort link order             (2024-07-22 06:31:40)\nGraph cleaning finished     (2024-07-22 06:31:40)\nSaving /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-07-22 06:31:40)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-07-22 06:31:40)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/9/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2024-07-22 06:31:40)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/9/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-07-22 06:31:40)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-07-22 06:31:40)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-07-22 06:31:40)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/9/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-07-22 06:31:40)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-07-22 06:31:40)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/9/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-07-22 06:31:40)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-07-22 06:31:50)\nSaving /galaxy/server/database/jobs_directory/000/9/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/9/working/assembly.fasta\n\n",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stdout": "\nStarting Unicycler (2024-07-22 06:30:15)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 --pilon_path /usr/local/share/pilon-1.24-0/pilon.jar -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --no_correct --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --no_pilon --min_polish_size 1000 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2\n\nUnicycler version: v0.4.8\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/9/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program         Version   Status     Path                      \n  spades.py       3.14.1    good       /usr/local/bin/spades.py  \n  racon                     not used                             \n  makeblastdb     2.12.0+   good       /usr/local/bin/makeblastdb\n  tblastn         2.12.0+   good       /usr/local/bin/tblastn    \n  bowtie2-build             not used                             \n  bowtie2                   not used                             \n  samtools                  not used                             \n  java                      not used                             \n  pilon                     not used                             \n  bcftools                  not used                             \n\n\nChoosing k-mer range for assembly (2024-07-22 06:30:16)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-07-22 06:30:16)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\n== Warning ==  No assembly mode was specified! If you intend to assemble high-coverage multi-cell/isolate data, use '--isolate' option.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly -k 27,47,63,77,89,99,107,115,121,127 --threads 8 --only-assembler -1 /galaxy/server/database/jobs_directory/000/9/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/9/working/fq2.fastq\n\nSystem information:\n  SPAdes version: 3.14.1\n  Python version: 3.9.9\n  OS: Linux-6.1.85+-x86_64-with-glibc2.28\nOutput dir: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Standard mode\n  For multi-cell/isolate data we recommend to use '--isolate' option; for single-cell MDA data use '--sc'; for metagenomic data use '--meta'; for RNA-Seq use '--rna'.\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/9/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/9/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27, 47, 63, 77, 89, 99, 107, 115, 121, 127]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 78\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/spades.log\n/galaxy/server/database/jobs_directory/000/9/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/9/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K27/configs/config.info\nWARNING: Try to use logger before create one. Level=INFO. Message=Additional contigs is tmp_contigs.fasta\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  75)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K27/configs/config.info\n  0:00:00.000     5M / 20M   INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 78 Gb\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  85)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  86)   Maximum k-mer length: 128\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  87)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/dataset.info) with K=27\n  0:00:00.000     5M / 20M   INFO    General                 (main.cpp                  :  88)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 194)   SPAdes started\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 201)   Starting from stage: read_conversion\n  0:00:00.000     5M / 20M   INFO    General                 (pipeline.cpp              : 207)   Two-step RR enabled: 0\n  0:00:00.000     5M / 20M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == Binary Read Conversion\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  72)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     5M / 20M   INFO    General                 (read_converter.cpp        :  73)   Converting paired reads\n  0:00:00.107    87M / 87M   INFO    General                 (binary_converter.cpp      : 111)   7925 reads written\n  0:00:00.107    63M / 63M   INFO    General                 (read_converter.cpp        :  81)   Converting single reads\n  0:00:00.110    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.110    73M / 73M   INFO    General                 (read_converter.cpp        :  87)   Converting merged reads\n  0:00:00.111    73M / 73M   INFO    General                 (binary_converter.cpp      : 111)   0 reads written\n  0:00:00.140    25M / 28M   INFO   StageManager             (stage.cpp                 : 166)   STAGE == de Bruijn graph construction\n  0:00:00.153    25M / 28M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.153    25M / 28M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.153    25M / 28M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == k+1-mer counting\n  0:00:00.155    25M / 28M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.157    25M / 28M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.157    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24997 Gb\n  0:00:00.157    25M / 28M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.727    43M / 56M   INFO    General                 (kmer_splitters.hpp        : 293)   Used 31700 reads\n  0:00:00.727    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.919    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 35249 kmers in total.\n  0:00:00.919    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.053    43M / 56M   INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Extension index construction\n  0:00:01.055    43M / 56M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.055    43M / 56M   INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.056    43M / 56M   INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.056    43M / 56M   INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 3.24991 Gb\n  0:00:01.057    43M / 56M   INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:02.163     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 364)   Processed 35249 kmers\n  0:00:02.163     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 369)   Used 35249 kmers.\n  0:00:02.175   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.544   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.544   135M / 135M  INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.790   135M / 135M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.819   136M / 136M  INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.848   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 24880 bytes occupied (5.7676 bits per kmer).\n  0:00:02.849   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.854   136M / 136M  INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.855   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Early tip clipping\n  0:00:02.856   136M / 136M  INFO    General                 (construction.cpp          : 293)   Early tip clipper length bound set as (RL - K)\n  0:00:02.856   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  28)   Early tip clipping\n  0:00:02.863   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  63)   #tipped junctions: 404\n  0:00:02.864   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  74)   Clipped tips: 413\n  0:00:02.864   136M / 136M  INFO   Early tip clipping       (early_simplification.hpp  :  30)   7414 28-mers were removed by early tip clipper\n  0:00:02.864   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Condensing graph\n  0:00:02.867   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 354)   Extracting unbranching paths\n  0:00:02.870   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 373)   Extracting unbranching paths finished. 2055 sequences extracted\n  0:00:02.872   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 309)   Collecting perfect loops\n  0:00:02.875   136M / 136M  INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 342)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.878   136M / 136M  INFO    General                 (stage.cpp                 : 113)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:02.878   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:02.878   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.897   136M / 136M  INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 20768 bytes occupied (4.71344 bits per kmer).\n  0:00:02.898   136M / 136M  INFO    General                 (construction.cpp          : 429)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.967   136M / 136M  INFO    General                 (construction.cpp          : 549)   Filling coverage and flanking coverage from PHM\n  0:00:02.969   136M / 136M  INFO    General                 (construction.cpp          : 505)   Processed 4110 edges\n  0:00:02.975   136M / 136M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == EC Threshold Finding\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 7\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 695\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.976   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:03.059   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:03.262   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:03.746   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:04.311   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:05.280   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:05.280   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 1\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 275\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 275\n  0:00:05.282   136M / 136M  INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 5132\n  0:00:05.282   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  53)   Mean coverage was calculated as 671.577\n  0:00:05.282   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  68)   EC coverage threshold value was calculated as 275\n  0:00:05.282   136M / 136M  INFO    General                 (genomic_info_filler.cpp   :  69)   Trusted kmer low bound: 0\n  0:00:05.283   136M / 136M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Raw Simplification\n  0:00:05.283   136M / 136M  INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:05.283   136M / 136M  INFO    General                 (graph_simplification.hpp  : 671)   Flanking coverage based disconnection disabled\n  0:00:05.283   136M / 136M  INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:05.283   136M / 136M  INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:0\n..\n5    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.185    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.185    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.185    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.185    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.185    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 439)   Closing gaps in paths\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 467)   Gap closing completed\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 296)   Traversing tandem repeats\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 306)   Traversed 0 loops\n  0:00:08.186    69M / 172M  INFO    General                 (launcher.cpp              : 244)   Finalizing paths\n  0:00:08.187    69M / 172M  INFO    General                 (launcher.cpp              : 246)   Deduplicating paths\n  0:00:08.187    69M / 172M  INFO    General                 (launcher.cpp              : 250)   Paths deduplicated\n  0:00:08.187    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.187    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.187    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.187    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.187    69M / 172M  INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.188    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.188    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.188    69M / 172M  INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.188    69M / 172M  INFO    General                 (launcher.cpp              : 267)   Paths finalized\n  0:00:08.188    69M / 172M  INFO    General                 (launcher.cpp              : 596)   ExSPAnder repeat resolving tool finished\n  0:00:08.188    64M / 172M  INFO   StageManager             (stage.cpp                 : 166)   STAGE == Contig Output\n  0:00:08.189    64M / 172M  INFO    General                 (contig_output.hpp         :  21)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/before_rr.fasta\n  0:00:08.194    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 146)   Writing GFA graph to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa\n  0:00:08.195    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 160)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph.fastg\n  0:00:08.200    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 190)   Breaking scaffolds\n  0:00:08.200    64M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.fasta\n  0:00:08.205    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.paths\n  0:00:08.209    64M / 172M  INFO    General                 (contig_output_stage.cpp   :  95)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.fasta\n  0:00:08.213    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 101)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.paths\n  0:00:08.217    64M / 172M  INFO    General                 (contig_output_stage.cpp   : 108)   Populating GFA with scaffold paths\n  0:00:08.226    64M / 172M  INFO    General                 (pipeline.cpp              : 259)   SPAdes finished\n  0:00:08.230    64M / 172M  INFO    General                 (main.cpp                  : 107)   Assembling time: 0 hours 0 minutes 8 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished WITH WARNINGS!\n=== Error correction and assembling warnings:\n * 0:00:08.182    69M / 172M  WARN    General                 (launcher.cpp              : 172)   Your data seems to have high uniform coverage depth. It is strongly recommended to use --isolate option.\n======= Warnings saved to /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/warnings.log\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/assembly/spades.log\nThank you for using SPAdes!\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k127 graph\nRepair multi way junctions  (2024-07-22 06:31:40)\nFilter by read depth        (2024-07-22 06:31:40)\nFilter homopolymer loops    (2024-07-22 06:31:40)\nMerge all possible          (2024-07-22 06:31:40)\nNormalise read depths       (2024-07-22 06:31:40)\nRemove zero length segments (2024-07-22 06:31:40)\nSort link order             (2024-07-22 06:31:40)\nGraph cleaning finished     (2024-07-22 06:31:40)\nSaving /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-07-22 06:31:40)\nFilter by read depth        (2024-07-22 06:31:40)\nFilter homopolymer loops    (2024-07-22 06:31:40)\nMerge all possible          (2024-07-22 06:31:40)\nNormalise read depths       (2024-07-22 06:31:40)\nRemove zero length segments (2024-07-22 06:31:40)\nSort link order             (2024-07-22 06:31:40)\nGraph cleaning finished     (2024-07-22 06:31:40)\nSaving /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/k127_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-07-22 06:31:40)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27                                                                                 \n   47                                                                                 \n   63                                                                                 \n   77                                                                                 \n   89                                                                                 \n   99                                                                                 \n  107                                                                                 \n  115                                                                                 \n  121                                                                                 \n  127         1       1          5,513   5,513            5,513           0   5.00e-01 <-best\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/9/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-07-22 06:31:40)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/9/working/001_best_spades_graph.gfa\n\n\nCleaning graph (2024-07-22 06:31:40)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        63        64\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/9/working/002_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-07-22 06:31:40)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-07-22 06:31:40)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-07-22 06:31:40)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/9/working/003_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-07-22 06:31:40)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-07-22 06:31:40)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/9/working/004_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-07-22 06:31:40)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.9/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-07-22 06:31:50)\nSaving /galaxy/server/database/jobs_directory/000/9/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/9/working/assembly.fasta\n\n",
    "stderr": "",
    "job_messages": null,
    "dependencies": [],
    "job_metrics": []
}
