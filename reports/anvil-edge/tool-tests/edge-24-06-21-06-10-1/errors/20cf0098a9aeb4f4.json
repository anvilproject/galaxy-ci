{
    "model_class": "Job",
    "id": "20cf0098a9aeb4f4",
    "state": "error",
    "exit_code": null,
    "update_time": "2024-06-21T07:13:27.561357",
    "create_time": "2024-06-21T07:13:12.657173",
    "galaxy_version": "23.1",
    "command_version": null,
    "copied_from_job_id": null,
    "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/alevin/alevin/1.5.1+galaxy0",
    "history_id": "cd2218f4700ea0f6",
    "external_id": "gxy-8hsqd",
    "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/e/2/a/dataset_e2a058b0-22b8-4987-9008-f7feb3b26f40.dat' && cp '/galaxy/server/database/objects/d/9/0/dataset_d90959c4-64f2-4e84-b96e-16504ab8c8fe.dat' ./mate1.fastq.gz && gunzip ./mate1.fastq.gz && cp '/galaxy/server/database/objects/a/1/4/dataset_a14e9b9b-ea68-40ff-847e-076d5312d5ca.dat' ./mate2.fastq.gz && gunzip ./mate2.fastq.gz  && ln -s '/galaxy/server/database/objects/c/0/1/dataset_c01e089f-ab5c-4b19-bf25-e2eb66469a9a.dat' ./alevinmap.tsv && salmon alevin -l A -i ./index -1 ./mate1.fastq -2 ./mate2.fastq -o ./output -p \"${GALAXY_SLOTS:-4}\" --chromium --tgMap ./alevinmap.tsv --keepCBFraction '1.0'   --dumpFeatures  --dumpMtx --freqThreshold '5'  && gunzip output/alevin/quants_mat.mtx.gz  && gunzip output/alevin/quants_tier_mat.gz  && gunzip output/aux_info/fld.gz && gunzip output/aux_info/observed_bias.gz && gunzip output/aux_info/observed_bias_3p.gz",
    "traceback": "Traceback (most recent call last):\n  File \"/galaxy/server/lib/galaxy/jobs/runners/__init__.py\", line 649, in _finish_or_resubmit_job\n    job_wrapper.finish(\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1961, in finish\n    self._finish_dataset(output_name, dataset, job, context, final_job_state, remote_metadata_directory)\n  File \"/galaxy/server/lib/galaxy/jobs/__init__.py\", line 1778, in _finish_dataset\n    dataset.datatype.set_meta(dataset, overwrite=False)\n  File \"/galaxy/server/lib/galaxy/datatypes/tabular.py\", line 1689, in set_meta\n    for line in dataset_fh:\n  File \"/usr/local/lib/python3.10/codecs.py\", line 322, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 19: invalid start byte\n",
    "params": {
        "__input_ext": "\"input\"",
        "dbkey": "\"?\"",
        "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
        "optional": "{\"dumpBfh\": false, \"dumpFeatures\": true, \"dumpMtx\": true, \"dumpUmiGraph\": false, \"expectCells\": \"\", \"forceCells\": \"\", \"freqThreshold\": \"5\", \"keepCBFraction\": \"1.0\", \"lowRegionMinNumBarcodes\": \"\", \"maxNumBarcodes\": \"\", \"minScoreFraction\": \"\", \"mrna\": null, \"noDedup\": false, \"numCellBootstraps\": \"\", \"rrna\": null, \"whitelist\": null}",
        "allout": "false",
        "protocol": "\"--chromium\"",
        "pairstraight": "{\"__current_case__\": 0, \"file1\": {\"values\": [{\"id\": 340, \"src\": \"hda\"}]}, \"file2\": {\"values\": [{\"id\": 341, \"src\": \"hda\"}]}, \"libtype\": {\"__current_case__\": 0, \"strandedness\": \"A\"}, \"readselect\": \"paired\"}",
        "refTranscriptSource": "{\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 339, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}"
    },
    "inputs": {
        "tgmap": {
            "id": "9d0d4e7236b0c7c7",
            "src": "hda",
            "uuid": "c01e089f-ab5c-4b19-bf25-e2eb66469a9a"
        },
        "pairstraight|file2": {
            "id": "caa3e8d15417c634",
            "src": "hda",
            "uuid": "a14e9b9b-ea68-40ff-847e-076d5312d5ca"
        },
        "pairstraight|file1": {
            "id": "28ea22136c0b1254",
            "src": "hda",
            "uuid": "d90959c4-64f2-4e84-b96e-16504ab8c8fe"
        },
        "refTranscriptSource|s_index|fasta": {
            "id": "0f46255156e151e1",
            "src": "hda",
            "uuid": "e2a058b0-22b8-4987-9008-f7feb3b26f40"
        }
    },
    "outputs": {
        "flenDist_txt": {
            "id": "d2aa3a3d1553dd5b",
            "src": "hda",
            "uuid": "9867e235-6385-4dfe-921c-581de9b646f6"
        },
        "observed_bias": {
            "id": "d5c8c6e5e590f0e7",
            "src": "hda",
            "uuid": "d1c0c7f7-bf7f-4946-b6ce-916e98c41d93"
        },
        "expected_bias": {
            "id": "e9b75e6560722b2a",
            "src": "hda",
            "uuid": "8cb61dab-18e4-4758-ad16-95d500983fe3"
        },
        "whitelist_txt": {
            "id": "91e7e8e9f7698a1d",
            "src": "hda",
            "uuid": "ffbf2fd7-c9c2-48e6-b136-b90bbb187a16"
        },
        "featureDump_txt": {
            "id": "361c569f1e800e64",
            "src": "hda",
            "uuid": "74c5bffb-029f-4d64-b330-2fd91cb8f8e5"
        },
        "quants_tier_mat": {
            "id": "e601b494abe6c9e2",
            "src": "hda",
            "uuid": "ceec83a4-1796-4af3-83b2-c9c3cfd04bc8"
        },
        "quants_mat_rows_txt": {
            "id": "12a00a4d21c8613b",
            "src": "hda",
            "uuid": "7b0da401-c720-489a-922f-d5fb59bafeab"
        },
        "quants_mat_cols_txt": {
            "id": "584140c9fbaa2b26",
            "src": "hda",
            "uuid": "55909cd0-08d2-4602-8dcd-a41377bea475"
        },
        "raw_cb_frequency_txt": {
            "id": "b0ef45b5ffb1c768",
            "src": "hda",
            "uuid": "a7ecbfa5-34eb-4ce2-839f-409e6507848d"
        },
        "quants_mat_mtx": {
            "id": "8dbe19302c456421",
            "src": "hda",
            "uuid": "50a63b0e-af4a-4db9-8b5a-a0f1255b42d5"
        },
        "observed_bias_3p": {
            "id": "f8f20c38bf7d466d",
            "src": "hda",
            "uuid": "bbbd914e-936a-4ed9-b076-c10766948f8f"
        }
    },
    "output_collections": {},
    "tool_stdout": "",
    "tool_stderr": "",
    "job_stdout": null,
    "job_stderr": null,
    "stderr": "",
    "stdout": "",
    "job_messages": [],
    "dependencies": [],
    "user_email": "tests@fake.org",
    "job_metrics": []
}
