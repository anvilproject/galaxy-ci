<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="73"
           errors="4"
           failures="8"
           skip="0">
    
    <testcase classname="bcftools_filter (Test #1)" name="0" time="34.16675543785095">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #2)" name="1" time="21.453362226486206">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "input_file": {   "id": "d7eda6b29b0f3f74",   "src": "hda"  },  "output_type": "v",  "sec_filter|select_set_GTs": ".",  "sec_filter|soft_filter": "Modified",  "sec_restrict|exclude": "QUAL==59.2 || (INDEL=0 \u0026 (FMT/GQ=25 | FMT/DP=10))" }, "job": {  "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed \u0027s,bin/bcftools,libexec/bcftools,\u0027`;     bgzip -c \u0027/galaxy/server/database/objects/9/d/d/dataset_9dd26580-2c50-43e1-b4e1-f6659a20be96.dat\u0027 \u003e input.vcf.gz \u0026\u0026 bcftools index input.vcf.gz \u0026\u0026            bcftools filter  --soft-filter \"Modified\" --set-GTs \".\"             --exclude \u0027QUAL==59.2 || (INDEL=0 \u0026 (FMT/GQ=25 | FMT/DP=10))\u0027    --output-type \u0027v\u0027   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  \u003e \u0027/galaxy/server/database/objects/8/2/e/dataset_82ec804a-36e4-4652-b2bf-7be5e40075ac.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-01T19:07:18.908992",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-jngnp",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "79af00fa888a33ad",  "inputs": {   "input_file": {    "id": "d7eda6b29b0f3f74",    "src": "hda",    "uuid": "9dd26580-2c50-43e1-b4e1-f6659a20be96"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "3474738b136abac6",    "src": "hda",    "uuid": "82ec804a-36e4-4652-b2bf-7be5e40075ac"   }  },  "params": {   "__input_ext": "\"vcf\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "output_type": "\"v\"",   "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": \".\", \"soft_filter\": \"Modified\"}",   "sec_restrict": "{\"exclude\": \"QUAL==59.2 || (INDEL=0 \u0026 (FMT/GQ=25 | FMT/DP=10))\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-01T19:07:23.663317",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 21.453362226486206, "tool_id": "bcftools_filter", "tool_version": "1.10"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #3)" name="2" time="27.405044555664062">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #4)" name="3" time="29.421632051467896">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #5)" name="4" time="28.40873885154724">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #6)" name="5" time="28.034395933151245">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #7)" name="6" time="27.396043062210083">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #8)" name="7" time="29.057121515274048">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_filter (Test #9)" name="8" time="27.97625470161438">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #1)" name="0" time="34.4033727645874">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #2)" name="1" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 1, "tool_id": "bcftools_mpileup", "tool_version": "1.10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #3)" name="2" time="29.065585136413574">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #4)" name="3" time="36.59298801422119">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #5)" name="4" time="37.159828186035156">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [warning] tag DV functional, but deprecated. Please switch to `AD` in future.[mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_mpileup (Test #6)" name="5" time="36.13181185722351">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 3 samples in 3 input files[mpileup] maximum number of reads per input file set to -d 250
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #1)" name="0" time="61.94834613800049">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_bam_pe_fragmentsize (Test #2)" name="1" time="31.24780774116516">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "advancedOpt|outRawFragmentLengths": true,  "advancedOpt|showAdvancedOpt": "yes",  "advancedOpt|table": true,  "multibam_conditional|bamfiles": {   "id": "6b6c1eaaaaacbb98",   "src": "hda"  } }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/3/c/dataset_53c507c0-9843-4c9f-9dba-e31938e1cff8.dat\u0027 \u0027./0.bam\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/_metadata_files/8/3/e/metadata_83e10523-f74b-4a2d-ba18-765708e78edc.dat\u0027 \u0027./0.bam.bai\u0027 \u0026\u0026   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles \u00270.bam\u0027 --samplesLabel \u0027bowtie2 test1.bam\u0027 --plotTitle \u0027\u0027 --binSize \u00271000\u0027 --distanceBetweenBins \u00271000000\u0027  --maxFragmentLength \u00270\u0027     --table \u0027/galaxy/server/database/objects/b/f/6/dataset_bf6e718d-028d-4a01-8498-123e798f7250.dat\u0027 --outRawFragmentLengths \u0027/galaxy/server/database/objects/c/e/5/dataset_ce525424-8868-4618-8775-d635c59fada4.dat\u0027 \u003e \u0027/galaxy/server/database/objects/0/1/e/dataset_01e1bbc6-1112-46b2-86b3-4866a2d62019.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-01T18:39:17.850402",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-47v88",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "f172f1e83ee24c9c",  "inputs": {   "multibam_conditional|bamfiles": {    "id": "6b6c1eaaaaacbb98",    "src": "hda",    "uuid": "53c507c0-9843-4c9f-9dba-e31938e1cff8"   },   "multibam_conditional|bamfiles1": {    "id": "6b6c1eaaaaacbb98",    "src": "hda",    "uuid": "53c507c0-9843-4c9f-9dba-e31938e1cff8"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fragLengths": {    "id": "cc5b1ace95eb9938",    "src": "hda",    "uuid": "ce525424-8868-4618-8775-d635c59fada4"   },   "outfile": {    "id": "c9d17679bded264e",    "src": "hda",    "uuid": "01e1bbc6-1112-46b2-86b3-4866a2d62019"   },   "table": {    "id": "a207fe9e0ceed6ce",    "src": "hda",    "uuid": "bf6e718d-028d-4a01-8498-123e798f7250"   }  },  "params": {   "__input_ext": "\"input\"",   "advancedOpt": "{\"__current_case__\": 1, \"binSize\": \"1000\", \"blackListFileName\": null, \"distanceBetweenBins\": \"1000000\", \"logScale\": false, \"maxFragmentLength\": \"0\", \"outRawFragmentLengths\": true, \"showAdvancedOpt\": \"yes\", \"table\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}",   "dbkey": "\"?\"",   "histogram": "false",   "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 64, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}",   "outFileFormat": "\"png\"",   "plotTitle": "\"\"",   "samplesLabel": null  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-01T18:39:32.002537",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 1, "time_seconds": 31.24780774116516, "tool_id": "deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="dropletutils_empty_drops (Test #1)" name="0" time="0.20285487174987793">
        
            <error type="error" message="Input staging problem: Test input file (raw_sce.rds) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.20285487174987793, "tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #1)" name="0" time="32.22149062156677">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #2)" name="1" time="27.033962965011597">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #3)" name="2" time="28.46964955329895">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #4)" name="3" time="28.371607780456543">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #5)" name="4" time="21.031911849975586">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute",  "fastq_filters_0|offset_type|left_column_offset": "0",  "fastq_filters_0|offset_type|right_column_offset": "0",  "fastq_filters_0|score": "0",  "fastq_filters_0|score_comparison": "\u003e=",  "fastq_filters_0|score_operation": "min",  "input_file": {   "id": "8f2cd2f43026bf18",   "src": "hda"  },  "max_num_deviants": "1",  "max_quality": "0",  "max_size": "0",  "min_quality": "1",  "min_size": "0",  "paired_end": false }, "job": {  "command_line": "gx-fastq-filter \u0027/galaxy/server/database/objects/1/d/2/dataset_1d29e94f-9fd1-48d4-a7c0-4b64892ea4c5.dat\u0027 \u0027/galaxy/server/database/jobs_directory/000/38/configs/tmpwhf_gcr4\u0027 \u0027/galaxy/server/database/objects/8/0/f/dataset_80f7b465-f935-4651-b015-717921d2acaa.dat\u0027 \u0027/galaxy/server/database/objects/8/0/f/dataset_80f7b465-f935-4651-b015-717921d2acaa_files\u0027 \u0027sanger\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-01T18:41:45.612589",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-wcmh9",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "09f34a4d583b8576",  "inputs": {   "input_file": {    "id": "8f2cd2f43026bf18",    "src": "hda",    "uuid": "1d29e94f-9fd1-48d4-a7c0-4b64892ea4c5"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_file": {    "id": "956e19ce2aaca607",    "src": "hda",    "uuid": "80f7b465-f935-4651-b015-717921d2acaa"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \"\u003e=\", \"score_operation\": \"min\"}]",   "max_num_deviants": "\"1\"",   "max_quality": "\"0.0\"",   "max_size": "\"0\"",   "min_quality": "\"1.0\"",   "min_size": "\"0\"",   "paired_end": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-01T18:41:50.689597",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5, exit_code: None, stderr: ." ], "status": "failure", "test_index": 4, "time_seconds": 21.031911849975586, "tool_id": "fastq_filter", "tool_version": "1.1.5"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #6)" name="5" time="27.371100425720215">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #7)" name="6" time="28.41505265235901">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #8)" name="7" time="28.507288217544556">
        
            
            <system-out><![CDATA[
            Kept 2 of 2 reads (100.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="fastq_filter (Test #9)" name="8" time="27.548241138458252">
        
            
            <system-out><![CDATA[
            Kept 0 of 2 reads (0.00%).
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #1)" name="0" time="37.65013122558594">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #2)" name="1" time="26.35167407989502">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="filter_tabular (Test #3)" name="2" time="27.505574703216553">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="mummer_nucmer (Test #1)" name="0" time="9.778467893600464">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 9.778467893600464, "tool_id": "mummer_nucmer", "tool_version": "4.0.0beta2+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #1)" name="0" time="58.18511772155762">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_occupancy (Test #2)" name="1" time="31.466891050338745">
        
            
            <system-out><![CDATA[
            channel_numberstart_timeduration12814571276261128145712954941261457148908512614571297716
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="retrieve_scxa (Test #1)" name="0" time="50.22559475898743">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/0/d/0/dataset_0d0a1bb7-7583-4d05-8b29-b756bd2486db.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/f/7/2/dataset_f728a55c-9a2c-422c-a35d-9201efc63338.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/e/d/e/dataset_edecf805-8aaf-4c45-9a7e-bffab8f11d19.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-07-01T19:01:07.664337",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-mr8sq",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "b6bfe282a11d8945",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "21.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "21 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1719860493.0000000",    "title": "Job End Time",    "value": "2024-07-01 19:01:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1719860472.0000000",    "title": "Job Start Time",    "value": "2024-07-01 19:01:12"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "55e4084babb093f7",    "src": "hda",    "uuid": "edecf805-8aaf-4c45-9a7e-bffab8f11d19"   },   "design_tsv": {    "id": "4958e1685c8f07ac",    "src": "hda",    "uuid": "156a7c2f-e50f-4a63-81a2-46efa8bce87b"   },   "genes_tsv": {    "id": "e5eac69dd20add4e",    "src": "hda",    "uuid": "f728a55c-9a2c-422c-a35d-9201efc63338"   },   "matrix_mtx": {    "id": "ded7c4b1486729a0",    "src": "hda",    "uuid": "0d0a1bb7-7583-4d05-8b29-b756bd2486db"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2024-07-01 19:01:12--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  284K\n    50K .......... .......... .......... .......... ..........  284K\n   100K .......... .......... .......... .......... ..........  568K\n   150K .......... .......... .......... .......... ..........  282K\n   200K .......... .......... .......... .......... ..........  568K\n   250K .......... .......... .......... .......... ..........  569K\n   300K .......... .......... .......... .......... .......... 1.27M\n   350K .......... .......... .......... .......... ..........  993K\n   400K .......... .......... .......... .......... ..........  567K\n   450K .......... .......... .......... .......... ..........  571K\n   500K .......... .......... .......... .......... .......... 1.31M\n   550K .......... .......... .......... .......... ..........  985K\n   600K .......... .......... .......... .......... .......... 1.29M\n   650K .......... .......... .......... .......... ..........  995K\n   700K .......... .......... .......... .......... .......... 1.29M\n   750K .......... .......... .......... .......... ..........  995K\n   800K .......... .......... .......... .......... .......... 1.30M\n   850K .......... .......... .......... .......... ..........  989K\n   900K .......... .......... .......... .......... .......... 1.30M\n   950K .......... .......... .......... .......... .......... 1011K\n  1000K .......... .......... .......... .......... .......... 40.8M\n  1050K .......... .......... .......... .......... .......... 1.31M\n  1100K .......... .......... .......... .......... .......... 1008K\n  1150K .......... .......... .......... .......... .......... 1.28M\n  1200K .......... .......... .......... .......... .......... 1004K\n  1250K .......... .......... .......... .......... .......... 27.4M\n  1300K .......... .......... .......... .......... .......... 42.3M\n  1350K .......... .......... .......... .......... .......... 1.35M\n  1400K .......... .......... .......... .......... .......... 1010K\n  1450K .......... .......... .......... .......... .......... 22.9M\n  1500K .......... .......... .......... .......... .......... 1.34M\n  1550K .......... .......... .......... .......... .......... 1012K\n  1600K .......... .......... .......... .......... .......... 1.46M\n  1650K .......... .......... .......... .......... .......... 1.18M\n  1700K .......... .......... .......... .......... .......... 3.86M\n  1750K .......... .......... .......... .......... .......... 2.56M\n  1800K .......... .......... .......... .......... ..........  544K\n  1850K .......... .......... .......... .......... .......... 39.9M\n  1900K .......... .......... .......... .......... .......... 33.5M\n  1950K .......... .......... .......... .......... ..........  606K\n  2000K .......... .......... .......... .......... .......... 14.8M\n  2050K .......... .......... .......... .......... .......... 3.56M\n  2100K .......... .......... .......... .......... .......... 71.6M\n  2150K .......... .......... .......... .......... ..........  712K\n  2200K .......... .......... .......... .......... .......... 15.8M\n  2250K .......... .......... .......... .......... .......... 1.88M\n  2300K .......... .......... .......... .......... .......... 11.4M\n  2350K .......... .......... .......... .......... ..........  936K\n  2400K .......... .......... .......... .......... .......... 12.0M\n  2450K .......... .......... .......... .......... .......... 3.77M\n  2500K .......... .......... .......... .......... .......... 2.85M\n  2550K .......... .......... .......... .......... .......... 73.7M\n  2600K .......... .......... .......... .......... .......... 1.64M\n  2650K .......... .......... .......... .......... .......... 1.94M\n  2700K .......... .......... .......... .......... .......... 3.67M\n  2750K .......... .......... .......... .......... .......... 2.91M\n  2800K .......... .......... .......... .......... .......... 16.0M\n  2850K .......... .......... .......... .......... .......... 1.74M\n  2900K .......... .......... .......... .......... .......... 1.85M\n  2950K .......... .......... .......... .......... .......... 16.0M\n  3000K .......... .......... .......... .......... .......... 3.97M\n  3050K .......... .......... .......... .......... .......... 3.23M\n  3100K .......... .......... .......... .......... .......... 16.3M\n  3150K .......... .......... .......... .......... .......... 1.72M\n  3200K .......... .......... .......... .......... .......... 1.87M\n  3250K .......... .......... .......... .......... .......... 15.5M\n  3300K .......... .......... .......... .......... .......... 4.04M\n  3350K .......... .......... .......... .......... .......... 3.27M\n  3400K .......... .......... .......... .......... .......... 13.8M\n  3450K .......... .......... .......... .......... ..........  140M\n  3500K .......... .......... .......... .......... .......... 1.73M\n  3550K .......... .......... .......... .......... .......... 1.87M\n  3600K .......... .......... .......... .......... .......... 15.1M\n  3650K .......... .......... .......... .......... .......... 3.99M\n  3700K .......... .......... .......... .......... .......... 3.23M\n  3750K .......... .......... .......... .......... .......... 14.2M\n  3800K .......... .......... .......... .......... .......... 91.5M\n  3850K .......... .......... .......... .......... .......... 1.79M\n  3900K .......... .......... .......... .......... .......... 1.98M\n  3950K .......... .......... .......... .......... .......... 11.2M\n  4000K .......... .......... .......... .......... .......... 4.00M\n  4050K .......... .......... .......... .......... .......... 3.59M\n  4100K .......... .......... .......... .......... .......... 9.95M\n  4150K .......... .......... .......... .......... ..........  107M\n  4200K .......... .......... .......... .......... .......... 1.74M\n  4250K .......... .......... .......... .......... .......... 23.0M\n  4300K .......... .......... .......... .......... .......... 2.01M\n  4350K .......... .......... .......... .......... .......... 17.2M\n  4400K .......... .......... .......... .......... .......... 4.24M\n  4450K .......... .......... .......... .......... .......... 3.48M\n  4500K .......... .......... .......... .......... .......... 10.3M\n  4550K .......... .......... .......... .......... ..........  104M\n  4600K .......... .......... .......... .......... .......... 99.5M\n  4650K .......... .......... .......... .......... .......... 1.77M\n  4700K .......... .......... .......... .......... .......... 2.03M\n  4750K .......... .......... .......... .......... .......... 12.2M\n  4800K .......... .......... .......... .......... .......... 4.49M\n  4850K .......... .......... .......... .......... .......... 26.5M\n  4900K .......... .......... .......... .......... .......... 3.45M\n  4950K .......... .......... .......... .......... .......... 10.6M\n  5000K .......... .......... .......... .......... ..........  110M\n  5050K .......... .......... .......... .......... ..........  130M\n  5100K .......... .......... .......... .......... .......... 1.79M\n  5150K .......... .......... .......... .......... .......... 1.98M\n  5200K .......... .......... .......... .......... .......... 26.7M\n  5250K .......... .......... .......... .......... .......... 19.1M\n  5300K .......... .......... .......... .......... .......... 4.23M\n  5350K .......... .......... .......... .......... .......... 8.77M\n  5400K .......... .......... .......... .......... .......... 4.80M\n  5450K .......... .......... .......... .......... .......... 14.1M\n  5500K .......... .......... .......... .......... ..........  135M\n  5550K .......... .......... .......... .......... .......... 1.77M\n  5600K .......... .......... .......... .......... .......... 22.2M\n  5650K .......... .......... .......... .......... .......... 2.16M\n  5700K .......... .......... .......... .......... .......... 24.9M\n  5750K .......... .......... .......... .......... .......... 17.0M\n  5800K .......... .......... .......... .......... .......... 4.52M\n  5850K .......... .......... .......... .......... .......... 23.7M\n  5900K .......... .......... .......... .......... .......... 3.46M\n  5950K .......... .......... .......... .......... .......... 14.5M\n  6000K .......... .......... .......... .......... ..........  115M\n  6050K .......... .......... .......... .......... .......... 1.78M\n  6100K .......... .......... .......... .......... .......... 81.7M\n  6150K .......... .......... .......... .......... .......... 22.4M\n  6200K .......... .......... .......... .......... .......... 2.05M\n  6250K .......... .......... .......... .......... .......... 32.0M\n  6300K .......... .......... .......... .......... .......... 35.9M\n  6350K .......... .......... .......... .......... .......... 4.36M\n  6400K .......... .......... .......... .......... .......... 8.95M\n  6450K .......... .......... .......... .......... .......... 4.52M\n  6500K .......... .......... .......... .......... .......... 15.7M\n  6550K .......... .......... .......... .......... ..........  111M\n  6600K .......... .......... .......... .......... ..........  132M\n  6650K .......... .......... .......... .......... .......... 1.78M\n  6700K .......... .......... .......... .......... .......... 22.1M\n  6750K .......... .......... .......... .......... .......... 2.18M\n  6800K .......... .......... .......... .......... .......... 17.8M\n  6850K .......... .......... .......... .......... .......... 27.0M\n  6900K .......... .......... .......... .......... .......... 4.45M\n  6950K .......... .......... .......... .......... .......... 30.2M\n  7000K .......... .......... .......... .......... .......... 3.60M\n  7050K .......... .......... .......... .......... .......... 42.4M\n  7100K .......... .......... .......... .......... .......... 14.1M\n  7150K .......... .......... .......... .......... ..........  153M\n  7200K .......... .......... .......... .......... .......... 1.78M\n  7250K .......... .......... .......... .......... ..........  107M\n  7300K .......... .......... .......... .......... .......... 25.9M\n  7350K .......... .......... .......... .......... .......... 2.17M\n  7400K .......... .......... .......... .......... .......... 19.1M\n  7450K .......... .......... .......... .......... .......... 24.6M\n  7500K .......... .......... .......... .......... .......... 16.3M\n  7550K .......... .......... .......... .......... .......... 5.94M\n  7600K .......... .......... .......... .......... .......... 4.56M\n  7650K .......... .......... .......... .......... .......... 4.40M\n  7700K .......... .......... .......... .......... .......... 6.97M\n  7750K .......... .......... .......... .......... .......... 3.51M\n  7800K .......... .......... .......... .......... .......... 3.47M\n  7850K .......... .......... .......... .......... .......... 3.81M\n  7900K .......... .......... .......... .......... .......... 5.31M\n  7950K .......... .......... .......... .......... .......... 3.60M\n  8000K .......... .......... .......... .......... .......... 3.29M\n  8050K .......... .......... .......... .......... .......... 6.59M\n  8100K .......... .......... .......... .......... .......... 3.86M\n  8150K .......... .......... .......... .......... .......... 4.45M\n  8200K .......... .......... .......... .......... .......... 3.61M\n  8250K .......... .......... .......... .......... .......... 6.78M\n  8300K .......... .......... .......... .......... .......... 3.66M\n  8350K .......... .......... .......... .......... .......... 3.20M\n  8400K .......... .......... .......... .......... .......... 3.58M\n  8450K .......... .......... .......... .......... .......... 4.95M\n  8500K .......... .......... .......... .......... .......... 3.45M\n  8550K .......... .......... .......... .......... .......... 3.69M\n  8600K .......... .......... .......... .......... .......... 3.46M\n  8650K .......... .......... .......... .......... .......... 6.63M\n  8700K .......... .......... .......... .......... .......... 3.77M\n  8750K .......... .......... .......... .......... .......... 4.01M\n  8800K .......... .......... .......... .......... .......... 3.58M\n  8850K .......... .......... .......... .......... .......... 7.03M\n  8900K .......... .......... .......... .......... .......... 4.56M\n  8950K .......... .......... .......... .......... .......... 3.33M\n  9000K .......... .......... .......... .......... .......... 3.57M\n  9050K .......... .......... .......... .......... .......... 6.64M\n  9100K .......... .......... .......... .......... .......... 2.86M\n  9150K .......... .......... .......... .......... .......... 3.87M\n  9200K .......... .......... .......... .......... .......... 3.39M\n  9250K .......... .......... .......... .......... .......... 2.59M\n  9300K .......... .......... .......... .......... .......... 14.8M\n  9350K .......... .......... .......... .......... .......... 3.31M\n  9400K .......... .......... .......... .......... .......... 3.39M\n  9450K .......... .......... .......... .......... .......... 3.31M\n  9500K .......... .......... .......... .......... .......... 4.94M\n  9550K .......... .......... .......... .......... .......... 3.82M\n  9600K .......... .......... .......... .......... .......... 3.12M\n  9650K .......... .......... .......... .......... .......... 3.46M\n  9700K .......... .......... .......... .......... .......... 4.72M\n  9750K .......... .......... .......... .......... .......... 5.22M\n  9800K .......... .......... .......... .......... .......... 4.34M\n  9850K .......... .......... .......... .......... .......... 4.08M\n  9900K .......... .......... .......... .......... .......... 4.27M\n  9950K .......... .......... .......... .......... .......... 5.39M\n 10000K .......... .......... .......... .......... .......... 4.31M\n 10050K .......... .......... .......... .......... .......... 4.12M\n 10100K .......... .......... .......... .......... .......... 3.96M\n 10150K .......... .......... .......... .......... .......... 11.9M\n 10200K .......... .......... .......... .......... .......... 4.12M\n 10250K .......... .......... .......... .......... .......... 3.68M\n 10300K .......... .......... .......... .......... .......... 4.23M\n 10350K .......... .......... .......... .......... .......... 3.60M\n 10400K .......... .......... .......... .......... .......... 5.54M\n 10450K .......... .......... .......... .......... ..........  802K\n 10500K .......... .......... .......... .......... .......... 31.5M\n 10550K .......... .......... .......... .......... ..........  121M\n 10600K .......... .......... .......... .......... ..........  120M\n 10650K .......... .......... .......... .......... ..........  129M\n 10700K .......... .......... .......... .......... ..........  135M\n 10750K .......... .......... .......... .......... .......... 2.94M\n 10800K .......... .......... .......... .......... .......... 86.7M\n 10850K .......... .......... .......... .......... .......... 4.84M\n 10900K .......... .......... .......... .......... .......... 4.15M\n 10950K .......... .......... .......... .......... .......... 6.43M\n 11000K .......... .......... .......... .......... .......... 4.63M\n 11050K .......... .......... .......... .......... .......... 4.41M\n 11100K .......... .......... .......... .......... .......... 2.74M\n 11150K .......... .......... .......... .......... .......... 77.9M\n 11200K .......... .......... .......... .......... .......... 3.45M\n 11250K .......... .......... .......... .......... .......... 3.96M\n 11300K .......... .......... .......... .......... .......... 2.05M\n 11350K .......... .......... .......... .......... .......... 59.8M\n 11400K .......... .......... .......... .......... .......... 6.42M\n 11450K .......... .......... .......... .......... .......... 1.57M\n 11500K .......... .......... .......... .......... ..........  127M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.86M\n 50150K .......... .......... .......... .......... .......... 4.04M\n 50200K .......... .......... .......... .......... .......... 3.49M\n 50250K .......... .......... .......... .......... .......... 1.37M\n 50300K .......... .......... .......... .......... .......... 91.4M\n 50350K .......... .......... .......... .......... ..........  103M\n 50400K .......... .......... .......... .......... .......... 7.57M\n 50450K .......... .......... .......... .......... .......... 6.66M\n 50500K .......... .......... .......... .......... .......... 3.78M\n 50550K .......... .......... .......... .......... .......... 4.26M\n 50600K .......... .......... .......... .......... .......... 3.73M\n 50650K .......... .......... .......... .......... .......... 6.86M\n 50700K .......... .......... .......... .......... .......... 4.46M\n 50750K .......... .......... .......... .......... .......... 4.07M\n 50800K .......... .......... .......... .......... .......... 5.10M\n 50850K .......... .......... .......... .......... .......... 8.43M\n 50900K .......... .......... .......... .......... .......... 3.70M\n 50950K .......... .......... .......... .......... .......... 5.56M\n 51000K .......... .......... .......... .......... .......... 1.89M\n 51050K .......... .......... .......... .......... .......... 67.5M\n 51100K .......... .......... .......... .......... .......... 4.41M\n 51150K .......... .......... .......... .......... .......... 10.8M\n 51200K .......... .......... .......... .......... .......... 3.43M\n 51250K .......... .......... .......... .......... .......... 7.32M\n 51300K .......... .......... .......... .......... .......... 9.66M\n 51350K .......... .......... .......... .......... .......... 2.55M\n 51400K .......... .......... .......... .......... .......... 21.3M\n 51450K .......... .......... .......... .......... .......... 3.79M\n 51500K .......... .......... .......... .......... .......... 8.78M\n 51550K .......... .......... .......... .......... .......... 5.29M\n 51600K .......... .......... .......... .......... .......... 3.32M\n 51650K .......... .......... .......... .......... .......... 6.47M\n 51700K .......... .......... .......... .......... .......... 3.65M\n 51750K .......... .......... .......... .......... .......... 9.76M\n 51800K .......... .......... .......... .......... .......... 4.49M\n 51850K .......... .......... .......... .......... .......... 4.88M\n 51900K .......... .......... .......... .......... .......... 4.65M\n 51950K .......... .......... .......... .......... .......... 8.03M\n 52000K .......... .......... .......... .......... .......... 4.48M\n 52050K .......... .......... .......... .......... .......... 2.35M\n 52100K .......... .......... .......... .......... .......... 13.2M\n 52150K .......... .......... .......... .......... .......... 1.42M\n 52200K .......... .......... .......... .......... .......... 98.3M\n 52250K .......... .......... .......... .......... ..........  118M\n 52300K .......... .......... .......... .......... .......... 1.35M\n 52350K .......... .......... .......... .......... .......... 28.7M\n 52400K .......... .......... .......... .......... .......... 69.0M\n 52450K .......... .......... .......... .......... .......... 5.49M\n 52500K .......... .......... .......... .......... .......... 64.2M\n 52550K .......... .......... .......... .......... ..........  135M\n 52600K .......... .......... .......... .......... .......... 1.49M\n 52650K .......... .......... .......... .......... .......... 54.0M\n 52700K .......... .......... .......... .......... ..........  122M\n 52750K .......... .......... .......... .......... .......... 3.28M\n 52800K .......... .......... .......... .......... .......... 3.31M\n 52850K .......... .......... .......... .......... .......... 2.64M\n 52900K .......... .......... .......... .......... .......... 5.87M\n 52950K .......... .......... .......... .......... .......... 1.40M\n 53000K .......... .......... .......... .......... .......... 99.7M\n 53050K .......... .......... .......... .......... ..........  138M\n 53100K .......... .......... .......... .......... ..........  112M\n 53150K .......... .......... .......... .......... ..........  100M\n 53200K .......... .......... .......... .......... ..........  105M\n 53250K .......... .......... .......... .......... ..........  393K\n 53300K .......... .......... .......... .......... .......... 77.1M\n 53350K .......... .......... .......... .......... ..........  107M\n 53400K .......... .......... .......... .......... .......... 43.1M\n 53450K .......... .......... .......... .......... .......... 1.41M\n 53500K .......... .......... .......... .......... .......... 32.8M\n 53550K .......... .......... .......... .......... .......... 66.7M\n 53600K .......... .......... .......... .......... ..........  129M\n 53650K .......... .......... .......... .......... ..........  131M\n 53700K .......... .......... .......... .......... .......... 1.54M\n 53750K .......... .......... .......... .......... .......... 38.7M\n 53800K .......... .......... .......... .......... .......... 63.8M\n 53850K .......... .......... .......... .......... .......... 60.0M\n 53900K .......... .......... .......... .......... .......... 93.5M\n 53950K .......... .......... .......... .......... ..........  108M\n 54000K .......... .......... .......... .......... .......... 21.1M\n 54050K .......... .......... .......... .......... ..........  139M\n 54100K .......... .......... .......... .......... .......... 5.02M\n 54150K .......... .......... .......... .......... .......... 61.1M\n 54200K .......... .......... .......... .......... ..........  101M\n 54250K .......... .......... .......... .......... .......... 74.8M\n 54300K .......... .......... .......... .......... ..........  699K\n 54350K .......... .......... .......... .......... .......... 88.6M\n 54400K .......... .......... .......... .......... .......... 67.6M\n 54450K .......... .......... .......... .......... .......... 1.30M\n 54500K .......... .......... .......... .......... .......... 33.3M\n 54550K .......... .......... .......... .......... .......... 64.8M\n 54600K .......... .......... .......... .......... .......... 65.6M\n 54650K .......... .......... .......... .......... .......... 70.6M\n 54700K .......... .......... .......... .......... .......... 58.8M\n 54750K .......... .......... .......... .......... ..........  100M\n 54800K .......... .......... .......... .......... .......... 81.8M\n 54850K .......... .......... .......... .......... .......... 97.4M\n 54900K .......... .......... .......... .......... .......... 6.53M\n 54950K .......... .......... .......... .......... .......... 94.3M\n 55000K .......... .......... .......... .......... ..........  902K\n 55050K .......... .......... .......... .......... .......... 77.4M\n 55100K .......... .......... .......... .......... .......... 85.3M\n 55150K .......... .......... .......... .......... .......... 1.71M\n 55200K .......... .......... .......... .......... .......... 33.7M\n 55250K .......... .......... .......... .......... .......... 2.13M\n 55300K .......... .......... .......... .......... .......... 90.9M\n 55350K .......... .......... .......... .......... .......... 85.1M\n 55400K .......... .......... .......... .......... .......... 63.6M\n 55450K .......... .......... .......... .......... ..........  559K\n 55500K .......... .......... .......... .......... ..........  160M\n 55550K .......... .......... .......... .......... ..........  142M\n 55600K .......... .......... .......... .......... ..........  120M\n 55650K .......... .......... .......... .......... ..........  153M\n 55700K .......... .......... .......... .......... ..........  149M\n 55750K .......... .......... .......... .......... .......... 1.98M\n 55800K .......... .......... .......... .......... .......... 3.09M\n 55850K .......... .......... .......... .......... .......... 81.8M\n 55900K .......... .......... .......... .......... ..........  134M\n 55950K .......... .......... .......... .......... ..........  141M\n 56000K .......... .......... .......... .......... .......... 1.10M\n 56050K .......... .......... .......... .......... .......... 83.2M\n 56100K .......... .......... .......... .......... ..........  102M\n 56150K .......... .......... .......... .......... ..........  113M\n 56200K .......... .......... .......... .......... .......... 96.3M\n 56250K .......... .......... .......... .......... ..........  124M\n 56300K .......... .......... .......... .......... ..........  101M\n 56350K .......... .......... .......... .......... .......... 2.28M\n 56400K .......... .......... .......... .......... .......... 2.80M\n 56450K .......... .......... .......... .......... ..........  124M\n 56500K .......... .......... .......... .......... ..........  134M\n 56550K .......... .......... .......... .......... ..........  141M\n 56600K .......... .......... .......... .......... .......... 9.32M\n 56650K .......... .......... .......... .......... .......... 1.22M\n 56700K .......... .......... .......... .......... .......... 49.6M\n 56750K .......... .......... .......... .......... ..........  160M\n 56800K .......... .......... .......... .......... .......... 6.68M\n 56850K .......... .......... .......... .......... .......... 3.70M\n 56900K .......... .......... .......... .......... .......... 3.61M\n 56950K .......... .......... .......... .......... .......... 13.0M\n 57000K .......... .......... .......... .......... .......... 4.01M\n 57050K .......... .......... .......... .......... .......... 4.15M\n 57100K .......... .......... .......... .......... .......... 7.88M\n 57150K .......... .......... .......... .......... .......... 4.65M\n 57200K .......... .......... .......... .......... .......... 4.38M\n 57250K .......... .......... .......... .......... .......... 6.16M\n 57300K .......... .......... .......... .......... .......... 4.64M\n 57350K .......... .......... .......... .......... .......... 5.42M\n 57400K .......... .......... .......... .......... .......... 4.34M\n 57450K .......... .......... .......... .......... .......... 8.04M\n 57500K .......... .......... .......... .......... .......... 3.78M\n 57550K .......... .......... .......... .......... .......... 5.24M\n 57600K .......... .......... .......... .......... .......... 3.93M\n 57650K .......... .......... .......... .......... .......... 6.09M\n 57700K .......... .......... .......... .......... .......... 5.42M\n 57750K .......... .......... .......... .......... .......... 3.08M\n 57800K .......... .......... .......... .......... .......... 6.30M\n 57850K .......... .......... .......... .......... .......... 7.82M\n 57900K .......... .......... .......... .......... .......... 4.07M\n 57950K .......... .......... .......... .......... .......... 4.22M\n 58000K .......... .......... .......... .......... .......... 4.37M\n 58050K .......... .......... .......... .......... .......... 6.93M\n 58100K .......... .......... .......... .......... .......... 3.98M\n 58150K .......... .......... .......... .......... .......... 5.06M\n 58200K .......... .......... .......... .......... .......... 4.30M\n 58250K .......... .......... .......... .......... .......... 8.64M\n 58300K .......... .......... .......... .......... .......... 3.59M\n 58350K .......... .......... .......... .......... .......... 4.93M\n 58400K .......... .......... .......... .......... .......... 4.52M\n 58450K .......... .......... .......... .......... .......... 7.21M\n 58500K .......... .......... .......... .......... .......... 4.21M\n 58550K .......... .......... .......... .......... .......... 4.47M\n 58600K .......... .......... .......... .......... .......... 3.82M\n 58650K .......... .......... .......... .......... .......... 9.78M\n 58700K .......... .......... .......... .......... .......... 4.32M\n 58750K .......... .......... .......... .......... .......... 4.79M\n 58800K .......... .......... .......... .......... .......... 4.14M\n 58850K .......... .......... .......... .......... .......... 3.52M\n 58900K .......... .......... .......... .......... .......... 5.39M\n 58950K .......... .......... .......... .......... .......... 1.47M\n 59000K .......... .......... .......... .......... .......... 17.8M\n 59050K .......... .......... .......... .......... .......... 91.9M\n 59100K .......... .......... .......... .......... ..........  136M\n 59150K .......... .......... .......... .......... ..........  950K\n 59200K .......... .......... .......... .......... .......... 2.25M\n 59250K .......... .......... .......... .......... .......... 12.8M\n 59300K .......... .......... .......... .......... .......... 26.7M\n 59350K .......... .......... .......... .......... .......... 38.4M\n 59400K .......... .......... .......... .......... ..........  127M\n 59450K .......... .......... .......... .......... .......... 25.8M\n 59500K .......... .......... .......... .......... .......... 2.21M\n 59550K .......... .......... .......... .......... .......... 53.8M\n 59600K .......... .......... .......... .......... ..........  135M\n 59650K .......... .......... .......... .......... ..........  800K\n 59700K .......... .......... .......... .......... .......... 79.8M\n 59750K .......... .......... .......... .......... ..........  129M\n 59800K .......... .......... .......... .......... ..........  129M\n 59850K .......... .......... .......... .......... ..........  117M\n 59900K .......... .......... .......... .......... ..........  106M\n 59950K .......... .......... .......... .......... ..........  138M\n 60000K .......... .......... .......... .......... ..........  126M\n 60050K .......... .......... .......... .......... ..........  795K\n 60100K .......... .......... .......... .......... .......... 20.7M\n 60150K .......... .......... .......... .......... ..........  738K\n 60200K .......... .......... .......... .......... .......... 44.0M\n 60250K .......... .......... .......... .......... .......... 1.77M\n 60300K .......... .......... .......... .......... .......... 9.19M\n 60350K .......... .......... .......... .......... .......... 28.6M\n 60400K .......... .......... .......... .......... .......... 40.1M\n 60450K .......... .......... .......... .......... ..........  895K\n 60500K .......... .......... .......... .......... ..........  130M\n 60550K .......... .......... .......... .......... .......... 25.6M\n 60600K .......... .......... .......... .......... ..........  115M\n 60650K .......... .........                                   99.7M=15s\n\n2024-07-01 19:01:27 (4.04 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-07-01 19:01:31--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  187K 4s\n    50K .......... .......... .......... .......... .......... 12%  281K 3s\n   100K .......... .......... .......... .......... .......... 18%  562K 2s\n   150K .......... .......... .......... .......... .......... 24%  558K 2s\n   200K .......... .......... .......... .......... .......... 30%  562K 2s\n   250K .......... .......... .......... .......... .......... 36%  562K 1s\n   300K .......... .......... .......... .......... .......... 42%  566K 1s\n   350K .......... .......... .......... .......... .......... 48%  563K 1s\n   400K .......... .......... .......... .......... .......... 54%  558K 1s\n   450K .......... .......... .......... .......... .......... 60%  562K 1s\n   500K .......... .......... .......... .......... .......... 66% 17.8M 1s\n   550K .......... .......... .......... .......... .......... 72%  579K 0s\n   600K .......... .......... .......... .......... .......... 78% 1.22M 0s\n   650K .......... .......... .......... .......... .......... 84% 1019K 0s\n   700K .......... .......... .......... .......... .......... 90%  564K 0s\n   750K .......... .......... .......... .......... .......... 96% 19.9M 0s\n   800K .......... .......... .......                         100%  743K=1.5s\n\n2024-07-01 19:01:32 (565 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2024-07-01 19:01:12--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  284K\n    50K .......... .......... .......... .......... ..........  284K\n   100K .......... .......... .......... .......... ..........  568K\n   150K .......... .......... .......... .......... ..........  282K\n   200K .......... .......... .......... .......... ..........  568K\n   250K .......... .......... .......... .......... ..........  569K\n   300K .......... .......... .......... .......... .......... 1.27M\n   350K .......... .......... .......... .......... ..........  993K\n   400K .......... .......... .......... .......... ..........  567K\n   450K .......... .......... .......... .......... ..........  571K\n   500K .......... .......... .......... .......... .......... 1.31M\n   550K .......... .......... .......... .......... ..........  985K\n   600K .......... .......... .......... .......... .......... 1.29M\n   650K .......... .......... .......... .......... ..........  995K\n   700K .......... .......... .......... .......... .......... 1.29M\n   750K .......... .......... .......... .......... ..........  995K\n   800K .......... .......... .......... .......... .......... 1.30M\n   850K .......... .......... .......... .......... ..........  989K\n   900K .......... .......... .......... .......... .......... 1.30M\n   950K .......... .......... .......... .......... .......... 1011K\n  1000K .......... .......... .......... .......... .......... 40.8M\n  1050K .......... .......... .......... .......... .......... 1.31M\n  1100K .......... .......... .......... .......... .......... 1008K\n  1150K .......... .......... .......... .......... .......... 1.28M\n  1200K .......... .......... .......... .......... .......... 1004K\n  1250K .......... .......... .......... .......... .......... 27.4M\n  1300K .......... .......... .......... .......... .......... 42.3M\n  1350K .......... .......... .......... .......... .......... 1.35M\n  1400K .......... .......... .......... .......... .......... 1010K\n  1450K .......... .......... .......... .......... .......... 22.9M\n  1500K .......... .......... .......... .......... .......... 1.34M\n  1550K .......... .......... .......... .......... .......... 1012K\n  1600K .......... .......... .......... .......... .......... 1.46M\n  1650K .......... .......... .......... .......... .......... 1.18M\n  1700K .......... .......... .......... .......... .......... 3.86M\n  1750K .......... .......... .......... .......... .......... 2.56M\n  1800K .......... .......... .......... .......... ..........  544K\n  1850K .......... .......... .......... .......... .......... 39.9M\n  1900K .......... .......... .......... .......... .......... 33.5M\n  1950K .......... .......... .......... .......... ..........  606K\n  2000K .......... .......... .......... .......... .......... 14.8M\n  2050K .......... .......... .......... .......... .......... 3.56M\n  2100K .......... .......... .......... .......... .......... 71.6M\n  2150K .......... .......... .......... .......... ..........  712K\n  2200K .......... .......... .......... .......... .......... 15.8M\n  2250K .......... .......... .......... .......... .......... 1.88M\n  2300K .......... .......... .......... .......... .......... 11.4M\n  2350K .......... .......... .......... .......... ..........  936K\n  2400K .......... .......... .......... .......... .......... 12.0M\n  2450K .......... .......... .......... .......... .......... 3.77M\n  2500K .......... .......... .......... .......... .......... 2.85M\n  2550K .......... .......... .......... .......... .......... 73.7M\n  2600K .......... .......... .......... .......... .......... 1.64M\n  2650K .......... .......... .......... .......... .......... 1.94M\n  2700K .......... .......... .......... .......... .......... 3.67M\n  2750K .......... .......... .......... .......... .......... 2.91M\n  2800K .......... .......... .......... .......... .......... 16.0M\n  2850K .......... .......... .......... .......... .......... 1.74M\n  2900K .......... .......... .......... .......... .......... 1.85M\n  2950K .......... .......... .......... .......... .......... 16.0M\n  3000K .......... .......... .......... .......... .......... 3.97M\n  3050K .......... .......... .......... .......... .......... 3.23M\n  3100K .......... .......... .......... .......... .......... 16.3M\n  3150K .......... .......... .......... .......... .......... 1.72M\n  3200K .......... .......... .......... .......... .......... 1.87M\n  3250K .......... .......... .......... .......... .......... 15.5M\n  3300K .......... .......... .......... .......... .......... 4.04M\n  3350K .......... .......... .......... .......... .......... 3.27M\n  3400K .......... .......... .......... .......... .......... 13.8M\n  3450K .......... .......... .......... .......... ..........  140M\n  3500K .......... .......... .......... .......... .......... 1.73M\n  3550K .......... .......... .......... .......... .......... 1.87M\n  3600K .......... .......... .......... .......... .......... 15.1M\n  3650K .......... .......... .......... .......... .......... 3.99M\n  3700K .......... .......... .......... .......... .......... 3.23M\n  3750K .......... .......... .......... .......... .......... 14.2M\n  3800K .......... .......... .......... .......... .......... 91.5M\n  3850K .......... .......... .......... .......... .......... 1.79M\n  3900K .......... .......... .......... .......... .......... 1.98M\n  3950K .......... .......... .......... .......... .......... 11.2M\n  4000K .......... .......... .......... .......... .......... 4.00M\n  4050K .......... .......... .......... .......... .......... 3.59M\n  4100K .......... .......... .......... .......... .......... 9.95M\n  4150K .......... .......... .......... .......... ..........  107M\n  4200K .......... .......... .......... .......... .......... 1.74M\n  4250K .......... .......... .......... .......... .......... 23.0M\n  4300K .......... .......... .......... .......... .......... 2.01M\n  4350K .......... .......... .......... .......... .......... 17.2M\n  4400K .......... .......... .......... .......... .......... 4.24M\n  4450K .......... .......... .......... .......... .......... 3.48M\n  4500K .......... .......... .......... .......... .......... 10.3M\n  4550K .......... .......... .......... .......... ..........  104M\n  4600K .......... .......... .......... .......... .......... 99.5M\n  4650K .......... .......... .......... .......... .......... 1.77M\n  4700K .......... .......... .......... .......... .......... 2.03M\n  4750K .......... .......... .......... .......... .......... 12.2M\n  4800K .......... .......... .......... .......... .......... 4.49M\n  4850K .......... .......... .......... .......... .......... 26.5M\n  4900K .......... .......... .......... .......... .......... 3.45M\n  4950K .......... .......... .......... .......... .......... 10.6M\n  5000K .......... .......... .......... .......... ..........  110M\n  5050K .......... .......... .......... .......... ..........  130M\n  5100K .......... .......... .......... .......... .......... 1.79M\n  5150K .......... .......... .......... .......... .......... 1.98M\n  5200K .......... .......... .......... .......... .......... 26.7M\n  5250K .......... .......... .......... .......... .......... 19.1M\n  5300K .......... .......... .......... .......... .......... 4.23M\n  5350K .......... .......... .......... .......... .......... 8.77M\n  5400K .......... .......... .......... .......... .......... 4.80M\n  5450K .......... .......... .......... .......... .......... 14.1M\n  5500K .......... .......... .......... .......... ..........  135M\n  5550K .......... .......... .......... .......... .......... 1.77M\n  5600K .......... .......... .......... .......... .......... 22.2M\n  5650K .......... .......... .......... .......... .......... 2.16M\n  5700K .......... .......... .......... .......... .......... 24.9M\n  5750K .......... .......... .......... .......... .......... 17.0M\n  5800K .......... .......... .......... .......... .......... 4.52M\n  5850K .......... .......... .......... .......... .......... 23.7M\n  5900K .......... .......... .......... .......... .......... 3.46M\n  5950K .......... .......... .......... .......... .......... 14.5M\n  6000K .......... .......... .......... .......... ..........  115M\n  6050K .......... .......... .......... .......... .......... 1.78M\n  6100K .......... .......... .......... .......... .......... 81.7M\n  6150K .......... .......... .......... .......... .......... 22.4M\n  6200K .......... .......... .......... .......... .......... 2.05M\n  6250K .......... .......... .......... .......... .......... 32.0M\n  6300K .......... .......... .......... .......... .......... 35.9M\n  6350K .......... .......... .......... .......... .......... 4.36M\n  6400K .......... .......... .......... .......... .......... 8.95M\n  6450K .......... .......... .......... .......... .......... 4.52M\n  6500K .......... .......... .......... .......... .......... 15.7M\n  6550K .......... .......... .......... .......... ..........  111M\n  6600K .......... .......... .......... .......... ..........  132M\n  6650K .......... .......... .......... .......... .......... 1.78M\n  6700K .......... .......... .......... .......... .......... 22.1M\n  6750K .......... .......... .......... .......... .......... 2.18M\n  6800K .......... .......... .......... .......... .......... 17.8M\n  6850K .......... .......... .......... .......... .......... 27.0M\n  6900K .......... .......... .......... .......... .......... 4.45M\n  6950K .......... .......... .......... .......... .......... 30.2M\n  7000K .......... .......... .......... .......... .......... 3.60M\n  7050K .......... .......... .......... .......... .......... 42.4M\n  7100K .......... .......... .......... .......... .......... 14.1M\n  7150K .......... .......... .......... .......... ..........  153M\n  7200K .......... .......... .......... .......... .......... 1.78M\n  7250K .......... .......... .......... .......... ..........  107M\n  7300K .......... .......... .......... .......... .......... 25.9M\n  7350K .......... .......... .......... .......... .......... 2.17M\n  7400K .......... .......... .......... .......... .......... 19.1M\n  7450K .......... .......... .......... .......... .......... 24.6M\n  7500K .......... .......... .......... .......... .......... 16.3M\n  7550K .......... .......... .......... .......... .......... 5.94M\n  7600K .......... .......... .......... .......... .......... 4.56M\n  7650K .......... .......... .......... .......... .......... 4.40M\n  7700K .......... .......... .......... .......... .......... 6.97M\n  7750K .......... .......... .......... .......... .......... 3.51M\n  7800K .......... .......... .......... .......... .......... 3.47M\n  7850K .......... .......... .......... .......... .......... 3.81M\n  7900K .......... .......... .......... .......... .......... 5.31M\n  7950K .......... .......... .......... .......... .......... 3.60M\n  8000K .......... .......... .......... .......... .......... 3.29M\n  8050K .......... .......... .......... .......... .......... 6.59M\n  8100K .......... .......... .......... .......... .......... 3.86M\n  8150K .......... .......... .......... .......... .......... 4.45M\n  8200K .......... .......... .......... .......... .......... 3.61M\n  8250K .......... .......... .......... .......... .......... 6.78M\n  8300K .......... .......... .......... .......... .......... 3.66M\n  8350K .......... .......... .......... .......... .......... 3.20M\n  8400K .......... .......... .......... .......... .......... 3.58M\n  8450K .......... .......... .......... .......... .......... 4.95M\n  8500K .......... .......... .......... .......... .......... 3.45M\n  8550K .......... .......... .......... .......... .......... 3.69M\n  8600K .......... .......... .......... .......... .......... 3.46M\n  8650K .......... .......... .......... .......... .......... 6.63M\n  8700K .......... .......... .......... .......... .......... 3.77M\n  8750K .......... .......... .......... .......... .......... 4.01M\n  8800K .......... .......... .......... .......... .......... 3.58M\n  8850K .......... .......... .......... .......... .......... 7.03M\n  8900K .......... .......... .......... .......... .......... 4.56M\n  8950K .......... .......... .......... .......... .......... 3.33M\n  9000K .......... .......... .......... .......... .......... 3.57M\n  9050K .......... .......... .......... .......... .......... 6.64M\n  9100K .......... .......... .......... .......... .......... 2.86M\n  9150K .......... .......... .......... .......... .......... 3.87M\n  9200K .......... .......... .......... .......... .......... 3.39M\n  9250K .......... .......... .......... .......... .......... 2.59M\n  9300K .......... .......... .......... .......... .......... 14.8M\n  9350K .......... .......... .......... .......... .......... 3.31M\n  9400K .......... .......... .......... .......... .......... 3.39M\n  9450K .......... .......... .......... .......... .......... 3.31M\n  9500K .......... .......... .......... .......... .......... 4.94M\n  9550K .......... .......... .......... .......... .......... 3.82M\n  9600K .......... .......... .......... .......... .......... 3.12M\n  9650K .......... .......... .......... .......... .......... 3.46M\n  9700K .......... .......... .......... .......... .......... 4.72M\n  9750K .......... .......... .......... .......... .......... 5.22M\n  9800K .......... .......... .......... .......... .......... 4.34M\n  9850K .......... .......... .......... .......... .......... 4.08M\n  9900K .......... .......... .......... .......... .......... 4.27M\n  9950K .......... .......... .......... .......... .......... 5.39M\n 10000K .......... .......... .......... .......... .......... 4.31M\n 10050K .......... .......... .......... .......... .......... 4.12M\n 10100K .......... .......... .......... .......... .......... 3.96M\n 10150K .......... .......... .......... .......... .......... 11.9M\n 10200K .......... .......... .......... .......... .......... 4.12M\n 10250K .......... .......... .......... .......... .......... 3.68M\n 10300K .......... .......... .......... .......... .......... 4.23M\n 10350K .......... .......... .......... .......... .......... 3.60M\n 10400K .......... .......... .......... .......... .......... 5.54M\n 10450K .......... .......... .......... .......... ..........  802K\n 10500K .......... .......... .......... .......... .......... 31.5M\n 10550K .......... .......... .......... .......... ..........  121M\n 10600K .......... .......... .......... .......... ..........  120M\n 10650K .......... .......... .......... .......... ..........  129M\n 10700K .......... .......... .......... .......... ..........  135M\n 10750K .......... .......... .......... .......... .......... 2.94M\n 10800K .......... .......... .......... .......... .......... 86.7M\n 10850K .......... .......... .......... .......... .......... 4.84M\n 10900K .......... .......... .......... .......... .......... 4.15M\n 10950K .......... .......... .......... .......... .......... 6.43M\n 11000K .......... .......... .......... .......... .......... 4.63M\n 11050K .......... .......... .......... .......... .......... 4.41M\n 11100K .......... .......... .......... .......... .......... 2.74M\n 11150K .......... .......... .......... .......... .......... 77.9M\n 11200K .......... .......... .......... .......... .......... 3.45M\n 11250K .......... .......... .......... .......... .......... 3.96M\n 11300K .......... .......... .......... .......... .......... 2.05M\n 11350K .......... .......... .......... .......... .......... 59.8M\n 11400K .......... .......... .......... .......... .......... 6.42M\n 11450K .......... .......... .......... .......... .......... 1.57M\n 11500K .......... .......... .......... .......... ..........  127M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 4.86M\n 50150K .......... .......... .......... .......... .......... 4.04M\n 50200K .......... .......... .......... .......... .......... 3.49M\n 50250K .......... .......... .......... .......... .......... 1.37M\n 50300K .......... .......... .......... .......... .......... 91.4M\n 50350K .......... .......... .......... .......... ..........  103M\n 50400K .......... .......... .......... .......... .......... 7.57M\n 50450K .......... .......... .......... .......... .......... 6.66M\n 50500K .......... .......... .......... .......... .......... 3.78M\n 50550K .......... .......... .......... .......... .......... 4.26M\n 50600K .......... .......... .......... .......... .......... 3.73M\n 50650K .......... .......... .......... .......... .......... 6.86M\n 50700K .......... .......... .......... .......... .......... 4.46M\n 50750K .......... .......... .......... .......... .......... 4.07M\n 50800K .......... .......... .......... .......... .......... 5.10M\n 50850K .......... .......... .......... .......... .......... 8.43M\n 50900K .......... .......... .......... .......... .......... 3.70M\n 50950K .......... .......... .......... .......... .......... 5.56M\n 51000K .......... .......... .......... .......... .......... 1.89M\n 51050K .......... .......... .......... .......... .......... 67.5M\n 51100K .......... .......... .......... .......... .......... 4.41M\n 51150K .......... .......... .......... .......... .......... 10.8M\n 51200K .......... .......... .......... .......... .......... 3.43M\n 51250K .......... .......... .......... .......... .......... 7.32M\n 51300K .......... .......... .......... .......... .......... 9.66M\n 51350K .......... .......... .......... .......... .......... 2.55M\n 51400K .......... .......... .......... .......... .......... 21.3M\n 51450K .......... .......... .......... .......... .......... 3.79M\n 51500K .......... .......... .......... .......... .......... 8.78M\n 51550K .......... .......... .......... .......... .......... 5.29M\n 51600K .......... .......... .......... .......... .......... 3.32M\n 51650K .......... .......... .......... .......... .......... 6.47M\n 51700K .......... .......... .......... .......... .......... 3.65M\n 51750K .......... .......... .......... .......... .......... 9.76M\n 51800K .......... .......... .......... .......... .......... 4.49M\n 51850K .......... .......... .......... .......... .......... 4.88M\n 51900K .......... .......... .......... .......... .......... 4.65M\n 51950K .......... .......... .......... .......... .......... 8.03M\n 52000K .......... .......... .......... .......... .......... 4.48M\n 52050K .......... .......... .......... .......... .......... 2.35M\n 52100K .......... .......... .......... .......... .......... 13.2M\n 52150K .......... .......... .......... .......... .......... 1.42M\n 52200K .......... .......... .......... .......... .......... 98.3M\n 52250K .......... .......... .......... .......... ..........  118M\n 52300K .......... .......... .......... .......... .......... 1.35M\n 52350K .......... .......... .......... .......... .......... 28.7M\n 52400K .......... .......... .......... .......... .......... 69.0M\n 52450K .......... .......... .......... .......... .......... 5.49M\n 52500K .......... .......... .......... .......... .......... 64.2M\n 52550K .......... .......... .......... .......... ..........  135M\n 52600K .......... .......... .......... .......... .......... 1.49M\n 52650K .......... .......... .......... .......... .......... 54.0M\n 52700K .......... .......... .......... .......... ..........  122M\n 52750K .......... .......... .......... .......... .......... 3.28M\n 52800K .......... .......... .......... .......... .......... 3.31M\n 52850K .......... .......... .......... .......... .......... 2.64M\n 52900K .......... .......... .......... .......... .......... 5.87M\n 52950K .......... .......... .......... .......... .......... 1.40M\n 53000K .......... .......... .......... .......... .......... 99.7M\n 53050K .......... .......... .......... .......... ..........  138M\n 53100K .......... .......... .......... .......... ..........  112M\n 53150K .......... .......... .......... .......... ..........  100M\n 53200K .......... .......... .......... .......... ..........  105M\n 53250K .......... .......... .......... .......... ..........  393K\n 53300K .......... .......... .......... .......... .......... 77.1M\n 53350K .......... .......... .......... .......... ..........  107M\n 53400K .......... .......... .......... .......... .......... 43.1M\n 53450K .......... .......... .......... .......... .......... 1.41M\n 53500K .......... .......... .......... .......... .......... 32.8M\n 53550K .......... .......... .......... .......... .......... 66.7M\n 53600K .......... .......... .......... .......... ..........  129M\n 53650K .......... .......... .......... .......... ..........  131M\n 53700K .......... .......... .......... .......... .......... 1.54M\n 53750K .......... .......... .......... .......... .......... 38.7M\n 53800K .......... .......... .......... .......... .......... 63.8M\n 53850K .......... .......... .......... .......... .......... 60.0M\n 53900K .......... .......... .......... .......... .......... 93.5M\n 53950K .......... .......... .......... .......... ..........  108M\n 54000K .......... .......... .......... .......... .......... 21.1M\n 54050K .......... .......... .......... .......... ..........  139M\n 54100K .......... .......... .......... .......... .......... 5.02M\n 54150K .......... .......... .......... .......... .......... 61.1M\n 54200K .......... .......... .......... .......... ..........  101M\n 54250K .......... .......... .......... .......... .......... 74.8M\n 54300K .......... .......... .......... .......... ..........  699K\n 54350K .......... .......... .......... .......... .......... 88.6M\n 54400K .......... .......... .......... .......... .......... 67.6M\n 54450K .......... .......... .......... .......... .......... 1.30M\n 54500K .......... .......... .......... .......... .......... 33.3M\n 54550K .......... .......... .......... .......... .......... 64.8M\n 54600K .......... .......... .......... .......... .......... 65.6M\n 54650K .......... .......... .......... .......... .......... 70.6M\n 54700K .......... .......... .......... .......... .......... 58.8M\n 54750K .......... .......... .......... .......... ..........  100M\n 54800K .......... .......... .......... .......... .......... 81.8M\n 54850K .......... .......... .......... .......... .......... 97.4M\n 54900K .......... .......... .......... .......... .......... 6.53M\n 54950K .......... .......... .......... .......... .......... 94.3M\n 55000K .......... .......... .......... .......... ..........  902K\n 55050K .......... .......... .......... .......... .......... 77.4M\n 55100K .......... .......... .......... .......... .......... 85.3M\n 55150K .......... .......... .......... .......... .......... 1.71M\n 55200K .......... .......... .......... .......... .......... 33.7M\n 55250K .......... .......... .......... .......... .......... 2.13M\n 55300K .......... .......... .......... .......... .......... 90.9M\n 55350K .......... .......... .......... .......... .......... 85.1M\n 55400K .......... .......... .......... .......... .......... 63.6M\n 55450K .......... .......... .......... .......... ..........  559K\n 55500K .......... .......... .......... .......... ..........  160M\n 55550K .......... .......... .......... .......... ..........  142M\n 55600K .......... .......... .......... .......... ..........  120M\n 55650K .......... .......... .......... .......... ..........  153M\n 55700K .......... .......... .......... .......... ..........  149M\n 55750K .......... .......... .......... .......... .......... 1.98M\n 55800K .......... .......... .......... .......... .......... 3.09M\n 55850K .......... .......... .......... .......... .......... 81.8M\n 55900K .......... .......... .......... .......... ..........  134M\n 55950K .......... .......... .......... .......... ..........  141M\n 56000K .......... .......... .......... .......... .......... 1.10M\n 56050K .......... .......... .......... .......... .......... 83.2M\n 56100K .......... .......... .......... .......... ..........  102M\n 56150K .......... .......... .......... .......... ..........  113M\n 56200K .......... .......... .......... .......... .......... 96.3M\n 56250K .......... .......... .......... .......... ..........  124M\n 56300K .......... .......... .......... .......... ..........  101M\n 56350K .......... .......... .......... .......... .......... 2.28M\n 56400K .......... .......... .......... .......... .......... 2.80M\n 56450K .......... .......... .......... .......... ..........  124M\n 56500K .......... .......... .......... .......... ..........  134M\n 56550K .......... .......... .......... .......... ..........  141M\n 56600K .......... .......... .......... .......... .......... 9.32M\n 56650K .......... .......... .......... .......... .......... 1.22M\n 56700K .......... .......... .......... .......... .......... 49.6M\n 56750K .......... .......... .......... .......... ..........  160M\n 56800K .......... .......... .......... .......... .......... 6.68M\n 56850K .......... .......... .......... .......... .......... 3.70M\n 56900K .......... .......... .......... .......... .......... 3.61M\n 56950K .......... .......... .......... .......... .......... 13.0M\n 57000K .......... .......... .......... .......... .......... 4.01M\n 57050K .......... .......... .......... .......... .......... 4.15M\n 57100K .......... .......... .......... .......... .......... 7.88M\n 57150K .......... .......... .......... .......... .......... 4.65M\n 57200K .......... .......... .......... .......... .......... 4.38M\n 57250K .......... .......... .......... .......... .......... 6.16M\n 57300K .......... .......... .......... .......... .......... 4.64M\n 57350K .......... .......... .......... .......... .......... 5.42M\n 57400K .......... .......... .......... .......... .......... 4.34M\n 57450K .......... .......... .......... .......... .......... 8.04M\n 57500K .......... .......... .......... .......... .......... 3.78M\n 57550K .......... .......... .......... .......... .......... 5.24M\n 57600K .......... .......... .......... .......... .......... 3.93M\n 57650K .......... .......... .......... .......... .......... 6.09M\n 57700K .......... .......... .......... .......... .......... 5.42M\n 57750K .......... .......... .......... .......... .......... 3.08M\n 57800K .......... .......... .......... .......... .......... 6.30M\n 57850K .......... .......... .......... .......... .......... 7.82M\n 57900K .......... .......... .......... .......... .......... 4.07M\n 57950K .......... .......... .......... .......... .......... 4.22M\n 58000K .......... .......... .......... .......... .......... 4.37M\n 58050K .......... .......... .......... .......... .......... 6.93M\n 58100K .......... .......... .......... .......... .......... 3.98M\n 58150K .......... .......... .......... .......... .......... 5.06M\n 58200K .......... .......... .......... .......... .......... 4.30M\n 58250K .......... .......... .......... .......... .......... 8.64M\n 58300K .......... .......... .......... .......... .......... 3.59M\n 58350K .......... .......... .......... .......... .......... 4.93M\n 58400K .......... .......... .......... .......... .......... 4.52M\n 58450K .......... .......... .......... .......... .......... 7.21M\n 58500K .......... .......... .......... .......... .......... 4.21M\n 58550K .......... .......... .......... .......... .......... 4.47M\n 58600K .......... .......... .......... .......... .......... 3.82M\n 58650K .......... .......... .......... .......... .......... 9.78M\n 58700K .......... .......... .......... .......... .......... 4.32M\n 58750K .......... .......... .......... .......... .......... 4.79M\n 58800K .......... .......... .......... .......... .......... 4.14M\n 58850K .......... .......... .......... .......... .......... 3.52M\n 58900K .......... .......... .......... .......... .......... 5.39M\n 58950K .......... .......... .......... .......... .......... 1.47M\n 59000K .......... .......... .......... .......... .......... 17.8M\n 59050K .......... .......... .......... .......... .......... 91.9M\n 59100K .......... .......... .......... .......... ..........  136M\n 59150K .......... .......... .......... .......... ..........  950K\n 59200K .......... .......... .......... .......... .......... 2.25M\n 59250K .......... .......... .......... .......... .......... 12.8M\n 59300K .......... .......... .......... .......... .......... 26.7M\n 59350K .......... .......... .......... .......... .......... 38.4M\n 59400K .......... .......... .......... .......... ..........  127M\n 59450K .......... .......... .......... .......... .......... 25.8M\n 59500K .......... .......... .......... .......... .......... 2.21M\n 59550K .......... .......... .......... .......... .......... 53.8M\n 59600K .......... .......... .......... .......... ..........  135M\n 59650K .......... .......... .......... .......... ..........  800K\n 59700K .......... .......... .......... .......... .......... 79.8M\n 59750K .......... .......... .......... .......... ..........  129M\n 59800K .......... .......... .......... .......... ..........  129M\n 59850K .......... .......... .......... .......... ..........  117M\n 59900K .......... .......... .......... .......... ..........  106M\n 59950K .......... .......... .......... .......... ..........  138M\n 60000K .......... .......... .......... .......... ..........  126M\n 60050K .......... .......... .......... .......... ..........  795K\n 60100K .......... .......... .......... .......... .......... 20.7M\n 60150K .......... .......... .......... .......... ..........  738K\n 60200K .......... .......... .......... .......... .......... 44.0M\n 60250K .......... .......... .......... .......... .......... 1.77M\n 60300K .......... .......... .......... .......... .......... 9.19M\n 60350K .......... .......... .......... .......... .......... 28.6M\n 60400K .......... .......... .......... .......... .......... 40.1M\n 60450K .......... .......... .......... .......... ..........  895K\n 60500K .......... .......... .......... .......... ..........  130M\n 60550K .......... .......... .......... .......... .......... 25.6M\n 60600K .......... .......... .......... .......... ..........  115M\n 60650K .......... .........                                   99.7M=15s\n\n2024-07-01 19:01:27 (4.04 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2024-07-01 19:01:31--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  6%  187K 4s\n    50K .......... .......... .......... .......... .......... 12%  281K 3s\n   100K .......... .......... .......... .......... .......... 18%  562K 2s\n   150K .......... .......... .......... .......... .......... 24%  558K 2s\n   200K .......... .......... .......... .......... .......... 30%  562K 2s\n   250K .......... .......... .......... .......... .......... 36%  562K 1s\n   300K .......... .......... .......... .......... .......... 42%  566K 1s\n   350K .......... .......... .......... .......... .......... 48%  563K 1s\n   400K .......... .......... .......... .......... .......... 54%  558K 1s\n   450K .......... .......... .......... .......... .......... 60%  562K 1s\n   500K .......... .......... .......... .......... .......... 66% 17.8M 1s\n   550K .......... .......... .......... .......... .......... 72%  579K 0s\n   600K .......... .......... .......... .......... .......... 78% 1.22M 0s\n   650K .......... .......... .......... .......... .......... 84% 1019K 0s\n   700K .......... .......... .......... .......... .......... 90%  564K 0s\n   750K .......... .......... .......... .......... .......... 96% 19.9M 0s\n   800K .......... .......... .......                         100%  743K=1.5s\n\n2024-07-01 19:01:32 (565 KB/s) - \u0027exp_design.tsv\u0027 saved [847657/847657]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2024-07-01T19:01:45.445042",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 50.22559475898743, "tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2024-07-01 19:01:12--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  284K    50K .......... .......... .......... .......... ..........  284K   100K .......... .......... .......... .......... ..........  568K   150K .......... .......... .......... .......... ..........  282K   200K .......... .......... .......... .......... ..........  568K   250K .......... .......... .......... .......... ..........  569K   300K .......... .......... .......... .......... .......... 1.27M   350K .......... .......... .......... .......... ..........  993K   400K .......... .......... .......... .......... ..........  567K   450K .......... .......... .......... .......... ..........  571K   500K .......... .......... .......... .......... .......... 1.31M   550K .......... .......... .......... .......... ..........  985K   600K .......... .......... .......... .......... .......... 1.29M   650K .......... .......... .......... .......... ..........  995K   700K .......... .......... .......... .......... .......... 1.29M   750K .......... .......... .......... .......... ..........  995K   800K .......... .......... .......... .......... .......... 1.30M   850K .......... .......... .......... .......... ..........  989K   900K .......... .......... .......... .......... .......... 1.30M   950K .......... .......... .......... .......... .......... 1011K  1000K .......... .......... .......... .......... .......... 40.8M  1050K .......... .......... .......... .......... .......... 1.31M  1100K .......... .......... .......... .......... .......... 1008K  1150K .......... .......... .......... .......... .......... 1.28M  1200K .......... .......... .......... .......... .......... 1004K  1250K .......... .......... .......... .......... .......... 27.4M  1300K .......... .......... .......... .......... .......... 42.3M  1350K .......... .......... .......... .......... .......... 1.35M  1400K .......... .......... .......... .......... .......... 1010K  1450K .......... .......... .......... .......... .......... 22.9M  1500K .......... .......... .......... .......... .......... 1.34M  1550K .......... .......... .......... .......... .......... 1012K  1600K .......... .......... .......... .......... .......... 1.46M  1650K .......... .......... .......... .......... .......... 1.18M  1700K .......... .......... .......... .......... .......... 3.86M  1750K .......... .......... .......... .......... .......... 2.56M  1800K .......... .......... .......... .......... ..........  544K  1850K .......... .......... .......... .......... .......... 39.9M  1900K .......... .......... .......... .......... .......... 33.5M  1950K .......... .......... .......... .......... ..........  606K  2000K .......... .......... .......... .......... .......... 14.8M  2050K .......... .......... .......... .......... .......... 3.56M  2100K .......... .......... .......... .......... .......... 71.6M  2150K .......... .......... .......... .......... ..........  712K  2200K .......... .......... .......... .......... .......... 15.8M  2250K .......... .......... .......... .......... .......... 1.88M  2300K .......... .......... .......... .......... .......... 11.4M  2350K .......... .......... .......... .......... ..........  936K  2400K .......... .......... .......... .......... .......... 12.0M  2450K .......... .......... .......... .......... .......... 3.77M  2500K .......... .......... .......... .......... .......... 2.85M  2550K .......... .......... .......... .......... .......... 73.7M  2600K .......... .......... .......... .......... .......... 1.64M  2650K .......... .......... .......... .......... .......... 1.94M  2700K .......... .......... .......... .......... .......... 3.67M  2750K .......... .......... .......... .......... .......... 2.91M  2800K .......... .......... .......... .......... .......... 16.0M  2850K .......... .......... .......... .......... .......... 1.74M  2900K .......... .......... .......... .......... .......... 1.85M  2950K .......... .......... .......... .......... .......... 16.0M  3000K .......... .......... .......... .......... .......... 3.97M  3050K .......... .......... .......... .......... .......... 3.23M  3100K .......... .......... .......... .......... .......... 16.3M  3150K .......... .......... .......... .......... .......... 1.72M  3200K .......... .......... .......... .......... .......... 1.87M  3250K .......... .......... .......... .......... .......... 15.5M  3300K .......... .......... .......... .......... .......... 4.04M  3350K .......... .......... .......... .......... .......... 3.27M  3400K .......... .......... .......... .......... .......... 13.8M  3450K .......... .......... .......... .......... ..........  140M  3500K .......... .......... .......... .......... .......... 1.73M  3550K .......... .......... .......... .......... .......... 1.87M  3600K .......... .......... .......... .......... .......... 15.1M  3650K .......... .......... .......... .......... .......... 3.99M  3700K .......... .......... .......... .......... .......... 3.23M  3750K .......... .......... .......... .......... .......... 14.2M  3800K .......... .......... .......... .......... .......... 91.5M  3850K .......... .......... .......... .......... .......... 1.79M  3900K .......... .......... .......... .......... .......... 1.98M  3950K .......... .......... .......... .......... .......... 11.2M  4000K .......... .......... .......... .......... .......... 4.00M  4050K .......... .......... .......... .......... .......... 3.59M  4100K .......... .......... .......... .......... .......... 9.95M  4150K .......... .......... .......... .......... ..........  107M  4200K .......... .......... .......... .......... .......... 1.74M  4250K .......... .......... .......... .......... .......... 23.0M  4300K .......... .......... .......... .......... .......... 2.01M  4350K .......... .......... .......... .......... .......... 17.2M  4400K .......... .......... .......... .......... .......... 4.24M  4450K .......... .......... .......... .......... .......... 3.48M  4500K .......... .......... .......... .......... .......... 10.3M  4550K .......... .......... .......... .......... ..........  104M  4600K .......... .......... .......... .......... .......... 99.5M  4650K .......... .......... .......... .......... .......... 1.77M  4700K .......... .......... .......... .......... .......... 2.03M  4750K .......... .......... .......... .......... .......... 12.2M  4800K .......... .......... .......... .......... .......... 4.49M  4850K .......... .......... .......... .......... .......... 26.5M  4900K .......... .......... .......... .......... .......... 3.45M  4950K .......... .......... .......... .......... .......... 10.6M  5000K .......... .......... .......... .......... ..........  110M  5050K .......... .......... .......... .......... ..........  130M  5100K .......... .......... .......... .......... .......... 1.79M  5150K .......... .......... .......... .......... .......... 1.98M  5200K .......... .......... .......... .......... .......... 26.7M  5250K .......... .......... .......... .......... .......... 19.1M  5300K .......... .......... .......... .......... .......... 4.23M  5350K .......... .......... .......... .......... .......... 8.77M  5400K .......... .......... .......... .......... .......... 4.80M  5450K .......... .......... .......... .......... .......... 14.1M  5500K .......... .......... .......... .......... ..........  135M  5550K .......... .......... .......... .......... .......... 1.77M  5600K .......... .......... .......... .......... .......... 22.2M  5650K .......... .......... .......... .......... .......... 2.16M  5700K .......... .......... .......... .......... .......... 24.9M  5750K .......... .......... .......... .......... .......... 17.0M  5800K .......... .......... .......... .......... .......... 4.52M  5850K .......... .......... .......... .......... .......... 23.7M  5900K .......... .......... .......... .......... .......... 3.46M  5950K .......... .......... .......... .......... .......... 14.5M  6000K .......... .......... .......... .......... ..........  115M  6050K .......... .......... .......... .......... .......... 1.78M  6100K .......... .......... .......... .......... .......... 81.7M  6150K .......... .......... .......... .......... .......... 22.4M  6200K .......... .......... .......... .......... .......... 2.05M  6250K .......... .......... .......... .......... .......... 32.0M  6300K .......... .......... .......... .......... .......... 35.9M  6350K .......... .......... .......... .......... .......... 4.36M  6400K .......... .......... .......... .......... .......... 8.95M  6450K .......... .......... .......... .......... .......... 4.52M  6500K .......... .......... .......... .......... .......... 15.7M  6550K .......... .......... .......... .......... ..........  111M  6600K .......... .......... .......... .......... ..........  132M  6650K .......... .......... .......... .......... .......... 1.78M  6700K .......... .......... .......... .......... .......... 22.1M  6750K .......... .......... .......... .......... .......... 2.18M  6800K .......... .......... .......... .......... .......... 17.8M  6850K .......... .......... .......... .......... .......... 27.0M  6900K .......... .......... .......... .......... .......... 4.45M  6950K .......... .......... .......... .......... .......... 30.2M  7000K .......... .......... .......... .......... .......... 3.60M  7050K .......... .......... .......... .......... .......... 42.4M  7100K .......... .......... .......... .......... .......... 14.1M  7150K .......... .......... .......... .......... ..........  153M  7200K .......... .......... .......... .......... .......... 1.78M  7250K .......... .......... .......... .......... ..........  107M  7300K .......... .......... .......... .......... .......... 25.9M  7350K .......... .......... .......... .......... .......... 2.17M  7400K .......... .......... .......... .......... .......... 19.1M  7450K .......... .......... .......... .......... .......... 24.6M  7500K .......... .......... .......... .......... .......... 16.3M  7550K .......... .......... .......... .......... .......... 5.94M  7600K .......... .......... .......... .......... .......... 4.56M  7650K .......... .......... .......... .......... .......... 4.40M  7700K .......... .......... .......... .......... .......... 6.97M  7750K .......... .......... .......... .......... .......... 3.51M  7800K .......... .......... .......... .......... .......... 3.47M  7850K .......... .......... .......... .......... .......... 3.81M  7900K .......... .......... .......... .......... .......... 5.31M  7950K .......... .......... .......... .......... .......... 3.60M  8000K .......... .......... .......... .......... .......... 3.29M  8050K .......... .......... .......... .......... .......... 6.59M  8100K .......... .......... .......... .......... .......... 3.86M  8150K .......... .......... .......... .......... .......... 4.45M  8200K .......... .......... .......... .......... .......... 3.61M  8250K .......... .......... .......... .......... .......... 6.78M  8300K .......... .......... .......... .......... .......... 3.66M  8350K .......... .......... .......... .......... .......... 3.20M  8400K .......... .......... .......... .......... .......... 3.58M  8450K .......... .......... .......... .......... .......... 4.95M  8500K .......... .......... .......... .......... .......... 3.45M  8550K .......... .......... .......... .......... .......... 3.69M  8600K .......... .......... .......... .......... .......... 3.46M  8650K .......... .......... .......... .......... .......... 6.63M  8700K .......... .......... .......... .......... .......... 3.77M  8750K .......... .......... .......... .......... .......... 4.01M  8800K .......... .......... .......... .......... .......... 3.58M  8850K .......... .......... .......... .......... .......... 7.03M  8900K .......... .......... .......... .......... .......... 4.56M  8950K .......... .......... .......... .......... .......... 3.33M  9000K .......... .......... .......... .......... .......... 3.57M  9050K .......... .......... .......... .......... .......... 6.64M  9100K .......... .......... .......... .......... .......... 2.86M  9150K .......... .......... .......... .......... .......... 3.87M  9200K .......... .......... .......... .......... .......... 3.39M  9250K .......... .......... .......... .......... .......... 2.59M  9300K .......... .......... .......... .......... .......... 14.8M  9350K .......... .......... .......... .......... .......... 3.31M  9400K .......... .......... .......... .......... .......... 3.39M  9450K .......... .......... .......... .......... .......... 3.31M  9500K .......... .......... .......... .......... .......... 4.94M  9550K .......... .......... .......... .......... .......... 3.82M  9600K .......... .......... .......... .......... .......... 3.12M  9650K .......... .......... .......... .......... .......... 3.46M  9700K .......... .......... .......... .......... .......... 4.72M  9750K .......... .......... .......... .......... .......... 5.22M  9800K .......... .......... .......... .......... .......... 4.34M  9850K .......... .......... .......... .......... .......... 4.08M  9900K .......... .......... .......... .......... .......... 4.27M  9950K .......... .......... .......... .......... .......... 5.39M 10000K .......... .......... .......... .......... .......... 4.31M 10050K .......... .......... .......... .......... .......... 4.12M 10100K .......... .......... .......... .......... .......... 3.96M 10150K .......... .......... .......... .......... .......... 11.9M 10200K .......... .......... .......... .......... .......... 4.12M 10250K .......... .......... .......... .......... .......... 3.68M 10300K .......... .......... .......... .......... .......... 4.23M 10350K .......... .......... .......... .......... .......... 3.60M 10400K .......... .......... .......... .......... .......... 5.54M 10450K .......... .......... .......... .......... ..........  802K 10500K .......... .......... .......... .......... .......... 31.5M 10550K .......... .......... .......... .......... ..........  121M 10600K .......... .......... .......... .......... ..........  120M 10650K .......... .......... .......... .......... ..........  129M 10700K .......... .......... .......... .......... ..........  135M 10750K .......... .......... .......... .......... .......... 2.94M 10800K .......... .......... .......... .......... .......... 86.7M 10850K .......... .......... .......... .......... .......... 4.84M 10900K .......... .......... .......... .......... .......... 4.15M 10950K .......... .......... .......... .......... .......... 6.43M 11000K .......... .......... .......... .......... .......... 4.63M 11050K .......... .......... .......... .......... .......... 4.41M 11100K .......... .......... .......... .......... .......... 2.74M 11150K .......... .......... .......... .......... .......... 77.9M 11200K .......... .......... .......... .......... .......... 3.45M 11250K .......... .......... .......... .......... .......... 3.96M 11300K .......... .......... .......... .......... .......... 2.05M 11350K .......... .......... .......... .......... .......... 59.8M 11400K .......... .......... .......... .......... .......... 6.42M 11450K .......... .......... .......... .......... .......... 1.57M 11500K .......... .......... .......... .......... ..........  127M 11550K .......... .......... .......... .......... .................. 4.86M 50150K .......... .......... .......... .......... .......... 4.04M 50200K .......... .......... .......... .......... .......... 3.49M 50250K .......... .......... .......... .......... .......... 1.37M 50300K .......... .......... .......... .......... .......... 91.4M 50350K .......... .......... .......... .......... ..........  103M 50400K .......... .......... .......... .......... .......... 7.57M 50450K .......... .......... .......... .......... .......... 6.66M 50500K .......... .......... .......... .......... .......... 3.78M 50550K .......... .......... .......... .......... .......... 4.26M 50600K .......... .......... .......... .......... .......... 3.73M 50650K .......... .......... .......... .......... .......... 6.86M 50700K .......... .......... .......... .......... .......... 4.46M 50750K .......... .......... .......... .......... .......... 4.07M 50800K .......... .......... .......... .......... .......... 5.10M 50850K .......... .......... .......... .......... .......... 8.43M 50900K .......... .......... .......... .......... .......... 3.70M 50950K .......... .......... .......... .......... .......... 5.56M 51000K .......... .......... .......... .......... .......... 1.89M 51050K .......... .......... .......... .......... .......... 67.5M 51100K .......... .......... .......... .......... .......... 4.41M 51150K .......... .......... .......... .......... .......... 10.8M 51200K .......... .......... .......... .......... .......... 3.43M 51250K .......... .......... .......... .......... .......... 7.32M 51300K .......... .......... .......... .......... .......... 9.66M 51350K .......... .......... .......... .......... .......... 2.55M 51400K .......... .......... .......... .......... .......... 21.3M 51450K .......... .......... .......... .......... .......... 3.79M 51500K .......... .......... .......... .......... .......... 8.78M 51550K .......... .......... .......... .......... .......... 5.29M 51600K .......... .......... .......... .......... .......... 3.32M 51650K .......... .......... .......... .......... .......... 6.47M 51700K .......... .......... .......... .......... .......... 3.65M 51750K .......... .......... .......... .......... .......... 9.76M 51800K .......... .......... .......... .......... .......... 4.49M 51850K .......... .......... .......... .......... .......... 4.88M 51900K .......... .......... .......... .......... .......... 4.65M 51950K .......... .......... .......... .......... .......... 8.03M 52000K .......... .......... .......... .......... .......... 4.48M 52050K .......... .......... .......... .......... .......... 2.35M 52100K .......... .......... .......... .......... .......... 13.2M 52150K .......... .......... .......... .......... .......... 1.42M 52200K .......... .......... .......... .......... .......... 98.3M 52250K .......... .......... .......... .......... ..........  118M 52300K .......... .......... .......... .......... .......... 1.35M 52350K .......... .......... .......... .......... .......... 28.7M 52400K .......... .......... .......... .......... .......... 69.0M 52450K .......... .......... .......... .......... .......... 5.49M 52500K .......... .......... .......... .......... .......... 64.2M 52550K .......... .......... .......... .......... ..........  135M 52600K .......... .......... .......... .......... .......... 1.49M 52650K .......... .......... .......... .......... .......... 54.0M 52700K .......... .......... .......... .......... ..........  122M 52750K .......... .......... .......... .......... .......... 3.28M 52800K .......... .......... .......... .......... .......... 3.31M 52850K .......... .......... .......... .......... .......... 2.64M 52900K .......... .......... .......... .......... .......... 5.87M 52950K .......... .......... .......... .......... .......... 1.40M 53000K .......... .......... .......... .......... .......... 99.7M 53050K .......... .......... .......... .......... ..........  138M 53100K .......... .......... .......... .......... ..........  112M 53150K .......... .......... .......... .......... ..........  100M 53200K .......... .......... .......... .......... ..........  105M 53250K .......... .......... .......... .......... ..........  393K 53300K .......... .......... .......... .......... .......... 77.1M 53350K .......... .......... .......... .......... ..........  107M 53400K .......... .......... .......... .......... .......... 43.1M 53450K .......... .......... .......... .......... .......... 1.41M 53500K .......... .......... .......... .......... .......... 32.8M 53550K .......... .......... .......... .......... .......... 66.7M 53600K .......... .......... .......... .......... ..........  129M 53650K .......... .......... .......... .......... ..........  131M 53700K .......... .......... .......... .......... .......... 1.54M 53750K .......... .......... .......... .......... .......... 38.7M 53800K .......... .......... .......... .......... .......... 63.8M 53850K .......... .......... .......... .......... .......... 60.0M 53900K .......... .......... .......... .......... .......... 93.5M 53950K .......... .......... .......... .......... ..........  108M 54000K .......... .......... .......... .......... .......... 21.1M 54050K .......... .......... .......... .......... ..........  139M 54100K .......... .......... .......... .......... .......... 5.02M 54150K .......... .......... .......... .......... .......... 61.1M 54200K .......... .......... .......... .......... ..........  101M 54250K .......... .......... .......... .......... .......... 74.8M 54300K .......... .......... .......... .......... ..........  699K 54350K .......... .......... .......... .......... .......... 88.6M 54400K .......... .......... .......... .......... .......... 67.6M 54450K .......... .......... .......... .......... .......... 1.30M 54500K .......... .......... .......... .......... .......... 33.3M 54550K .......... .......... .......... .......... .......... 64.8M 54600K .......... .......... .......... .......... .......... 65.6M 54650K .......... .......... .......... .......... .......... 70.6M 54700K .......... .......... .......... .......... .......... 58.8M 54750K .......... .......... .......... .......... ..........  100M 54800K .......... .......... .......... .......... .......... 81.8M 54850K .......... .......... .......... .......... .......... 97.4M 54900K .......... .......... .......... .......... .......... 6.53M 54950K .......... .......... .......... .......... .......... 94.3M 55000K .......... .......... .......... .......... ..........  902K 55050K .......... .......... .......... .......... .......... 77.4M 55100K .......... .......... .......... .......... .......... 85.3M 55150K .......... .......... .......... .......... .......... 1.71M 55200K .......... .......... .......... .......... .......... 33.7M 55250K .......... .......... .......... .......... .......... 2.13M 55300K .......... .......... .......... .......... .......... 90.9M 55350K .......... .......... .......... .......... .......... 85.1M 55400K .......... .......... .......... .......... .......... 63.6M 55450K .......... .......... .......... .......... ..........  559K 55500K .......... .......... .......... .......... ..........  160M 55550K .......... .......... .......... .......... ..........  142M 55600K .......... .......... .......... .......... ..........  120M 55650K .......... .......... .......... .......... ..........  153M 55700K .......... .......... .......... .......... ..........  149M 55750K .......... .......... .......... .......... .......... 1.98M 55800K .......... .......... .......... .......... .......... 3.09M 55850K .......... .......... .......... .......... .......... 81.8M 55900K .......... .......... .......... .......... ..........  134M 55950K .......... .......... .......... .......... ..........  141M 56000K .......... .......... .......... .......... .......... 1.10M 56050K .......... .......... .......... .......... .......... 83.2M 56100K .......... .......... .......... .......... ..........  102M 56150K .......... .......... .......... .......... ..........  113M 56200K .......... .......... .......... .......... .......... 96.3M 56250K .......... .......... .......... .......... ..........  124M 56300K .......... .......... .......... .......... ..........  101M 56350K .......... .......... .......... .......... .......... 2.28M 56400K .......... .......... .......... .......... .......... 2.80M 56450K .......... .......... .......... .......... ..........  124M 56500K .......... .......... .......... .......... ..........  134M 56550K .......... .......... .......... .......... ..........  141M 56600K .......... .......... .......... .......... .......... 9.32M 56650K .......... .......... .......... .......... .......... 1.22M 56700K .......... .......... .......... .......... .......... 49.6M 56750K .......... .......... .......... .......... ..........  160M 56800K .......... .......... .......... .......... .......... 6.68M 56850K .......... .......... .......... .......... .......... 3.70M 56900K .......... .......... .......... .......... .......... 3.61M 56950K .......... .......... .......... .......... .......... 13.0M 57000K .......... .......... .......... .......... .......... 4.01M 57050K .......... .......... .......... .......... .......... 4.15M 57100K .......... .......... .......... .......... .......... 7.88M 57150K .......... .......... .......... .......... .......... 4.65M 57200K .......... .......... .......... .......... .......... 4.38M 57250K .......... .......... .......... .......... .......... 6.16M 57300K .......... .......... .......... .......... .......... 4.64M 57350K .......... .......... .......... .......... .......... 5.42M 57400K .......... .......... .......... .......... .......... 4.34M 57450K .......... .......... .......... .......... .......... 8.04M 57500K .......... .......... .......... .......... .......... 3.78M 57550K .......... .......... .......... .......... .......... 5.24M 57600K .......... .......... .......... .......... .......... 3.93M 57650K .......... .......... .......... .......... .......... 6.09M 57700K .......... .......... .......... .......... .......... 5.42M 57750K .......... .......... .......... .......... .......... 3.08M 57800K .......... .......... .......... .......... .......... 6.30M 57850K .......... .......... .......... .......... .......... 7.82M 57900K .......... .......... .......... .......... .......... 4.07M 57950K .......... .......... .......... .......... .......... 4.22M 58000K .......... .......... .......... .......... .......... 4.37M 58050K .......... .......... .......... .......... .......... 6.93M 58100K .......... .......... .......... .......... .......... 3.98M 58150K .......... .......... .......... .......... .......... 5.06M 58200K .......... .......... .......... .......... .......... 4.30M 58250K .......... .......... .......... .......... .......... 8.64M 58300K .......... .......... .......... .......... .......... 3.59M 58350K .......... .......... .......... .......... .......... 4.93M 58400K .......... .......... .......... .......... .......... 4.52M 58450K .......... .......... .......... .......... .......... 7.21M 58500K .......... .......... .......... .......... .......... 4.21M 58550K .......... .......... .......... .......... .......... 4.47M 58600K .......... .......... .......... .......... .......... 3.82M 58650K .......... .......... .......... .......... .......... 9.78M 58700K .......... .......... .......... .......... .......... 4.32M 58750K .......... .......... .......... .......... .......... 4.79M 58800K .......... .......... .......... .......... .......... 4.14M 58850K .......... .......... .......... .......... .......... 3.52M 58900K .......... .......... .......... .......... .......... 5.39M 58950K .......... .......... .......... .......... .......... 1.47M 59000K .......... .......... .......... .......... .......... 17.8M 59050K .......... .......... .......... .......... .......... 91.9M 59100K .......... .......... .......... .......... ..........  136M 59150K .......... .......... .......... .......... ..........  950K 59200K .......... .......... .......... .......... .......... 2.25M 59250K .......... .......... .......... .......... .......... 12.8M 59300K .......... .......... .......... .......... .......... 26.7M 59350K .......... .......... .......... .......... .......... 38.4M 59400K .......... .......... .......... .......... ..........  127M 59450K .......... .......... .......... .......... .......... 25.8M 59500K .......... .......... .......... .......... .......... 2.21M 59550K .......... .......... .......... .......... .......... 53.8M 59600K .......... .......... .......... .......... ..........  135M 59650K .......... .......... .......... .......... ..........  800K 59700K .......... .......... .......... .......... .......... 79.8M 59750K .......... .......... .......... .......... ..........  129M 59800K .......... .......... .......... .......... ..........  129M 59850K .......... .......... .......... .......... ..........  117M 59900K .......... .......... .......... .......... ..........  106M 59950K .......... .......... .......... .......... ..........  138M 60000K .......... .......... .......... .......... ..........  126M 60050K .......... .......... .......... .......... ..........  795K 60100K .......... .......... .......... .......... .......... 20.7M 60150K .......... .......... .......... .......... ..........  738K 60200K .......... .......... .......... .......... .......... 44.0M 60250K .......... .......... .......... .......... .......... 1.77M 60300K .......... .......... .......... .......... .......... 9.19M 60350K .......... .......... .......... .......... .......... 28.6M 60400K .......... .......... .......... .......... .......... 40.1M 60450K .......... .......... .......... .......... ..........  895K 60500K .......... .......... .......... .......... ..........  130M 60550K .......... .......... .......... .......... .......... 25.6M 60600K .......... .......... .......... .......... ..........  115M 60650K .......... .........                                   99.7M=15s2024-07-01 19:01:27 (4.04 MB/s) - 'exp_quant.zip' saved [62125370]--2024-07-01 19:01:31--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 847657 (828K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  6%  187K 4s    50K .......... .......... .......... .......... .......... 12%  281K 3s   100K .......... .......... .......... .......... .......... 18%  562K 2s   150K .......... .......... .......... .......... .......... 24%  558K 2s   200K .......... .......... .......... .......... .......... 30%  562K 2s   250K .......... .......... .......... .......... .......... 36%  562K 1s   300K .......... .......... .......... .......... .......... 42%  566K 1s   350K .......... .......... .......... .......... .......... 48%  563K 1s   400K .......... .......... .......... .......... .......... 54%  558K 1s   450K .......... .......... .......... .......... .......... 60%  562K 1s   500K .......... .......... .......... .......... .......... 66% 17.8M 1s   550K .......... .......... .......... .......... .......... 72%  579K 0s   600K .......... .......... .......... .......... .......... 78% 1.22M 0s   650K .......... .......... .......... .......... .......... 84% 1019K 0s   700K .......... .......... .......... .......... .......... 90%  564K 0s   750K .......... .......... .......... .......... .......... 96% 19.9M 0s   800K .......... .......... .......                         100%  743K=1.5s2024-07-01 19:01:32 (565 KB/s) - 'exp_design.tsv' saved [847657/847657]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #1)" name="0" time="45.56914401054382">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 55--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-01 18:52:30.775] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-01 18:52:30.775] [jLog] [info] building indexout : ./index[2024-07-01 18:52:30.776] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-01 18:52:30.782] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-01 18:52:30.782] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-01 18:52:30.793] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-01 18:52:30.794] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-01 18:52:30.860] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-01 18:52:30.860] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 657.95 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 439.81 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-01 18:52:30.861] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-01 18:52:30.861] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-01 18:52:30.861] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-01 18:52:30.861] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-01 18:52:30.862] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-01 18:52:30.862] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-01 18:52:30.862] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-01 18:52:30.873] [puff::index::jointLog] [info] # segments = 23[2024-07-01 18:52:30.873] [puff::index::jointLog] [info] total length = 19592[2024-07-01 18:52:30.873] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-01 18:52:30.881] [puff::index::jointLog] [info] positional integer width = 15[2024-07-01 18:52:30.881] [puff::index::jointLog] [info] seqSize = 19592[2024-07-01 18:52:30.881] [puff::index::jointLog] [info] rankSize = 19592[2024-07-01 18:52:30.881] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-01 18:52:30.881] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela.. sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-01 18:52:30.943] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-01 18:52:30.943] [puff::index::jointLog] [info] chunk size = 9796[2024-07-01 18:52:30.943] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-01 18:52:30.943] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-01 18:52:30.944] [puff::index::jointLog] [info] finished populating pos vector[2024-07-01 18:52:30.944] [puff::index::jointLog] [info] writing index components[2024-07-01 18:52:30.957] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-01 18:52:30.962] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ writeMappings ] => { ./output/samout.sam }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-01 18:52:31.629] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-01 18:52:31.629] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-01 18:52:31.629] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-07-01 18:52:31.629] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-01 18:52:31.629] [jointLog] [info] parsing read library format[2024-07-01 18:52:31.629] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 511.06 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 854.95 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 306.91 us----------------------------------------------------------------------------------| Loading mphf table | Time = 363.44 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 541.17 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 526.09 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 780.91 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 512.93 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 322.88 us-----------------------------------------[2024-07-01 18:52:31.751] [jointLog] [info] Loading pufferfish index[2024-07-01 18:52:31.751] [jointLog] [info] Loading dense pufferfish index.[2024-07-01 18:52:31.757] [jointLog] [info] done[2024-07-01 18:52:31.757] [jointLog] [info] Index contained 15 targets[2024-07-01 18:52:31.757] [jointLog] [info] Number of decoys : 0[2024-07-01 18:52:31.825] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-01 18:52:31.825] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-01 18:52:31.827] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-07-01 18:52:31.827] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-01 18:52:31.827] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-01 18:52:31.827] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-07-01 18:52:31.827] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-01 18:52:31.827] [jointLog] [info] Mapping rate = 100%[2024-07-01 18:52:31.827] [jointLog] [info] finished quantifyLibrary()[2024-07-01 18:52:31.830] [jointLog] [info] Starting optimizer[2024-07-01 18:52:31.831] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-01 18:52:31.831] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-07-01 18:52:31.832] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-01 18:52:31.832] [jointLog] [info] Finished optimizer[2024-07-01 18:52:31.832] [jointLog] [info] writing output [2024-07-01 18:52:31.836] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #2)" name="1" time="28.046841382980347">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 21Hash table size = 35Candidate marks count = 58--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-01 18:53:03.369] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-01 18:53:03.369] [jLog] [info] building indexout : ./index[2024-07-01 18:53:03.370] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-01 18:53:03.376] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-01 18:53:03.376] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-01 18:53:03.386] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-01 18:53:03.388] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-01 18:53:03.440] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-01 18:53:03.440] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 791.7 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 540.88 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-01 18:53:03.442] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-01 18:53:03.442] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-01 18:53:03.442] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-01 18:53:03.442] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-01 18:53:03.442] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-01 18:53:03.442] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-01 18:53:03.442] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-01 18:53:03.451] [puff::index::jointLog] [info] # segments = 23[2024-07-01 18:53:03.451] [puff::index::jointLog] [info] total length = 19592[2024-07-01 18:53:03.451] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-01 18:53:03.459] [puff::index::jointLog] [info] positional integer width = 15[2024-07-01 18:53:03.459] [puff::index::jointLog] [info] seqSize = 19592[2024-07-01 18:53:03.459] [puff::index::jointLog] [info] rankSize = 19592[2024-07-01 18:53:03.459] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-01 18:53:03.459] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elap..  elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-01 18:53:03.523] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-01 18:53:03.523] [puff::index::jointLog] [info] chunk size = 9796[2024-07-01 18:53:03.523] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-01 18:53:03.523] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-01 18:53:03.525] [puff::index::jointLog] [info] finished populating pos vector[2024-07-01 18:53:03.525] [puff::index::jointLog] [info] writing index components[2024-07-01 18:53:03.535] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-01 18:53:03.539] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-01 18:53:03.625] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-01 18:53:03.625] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-01 18:53:03.625] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-07-01 18:53:03.625] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-01 18:53:03.625] [jointLog] [info] parsing read library format[2024-07-01 18:53:03.625] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 610.82 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 822.12 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 272.29 us----------------------------------------------------------------------------------| Loading mphf table | Time = 510.89 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 600.87 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 453.17 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 848.03 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 458.68 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 303.62 us-----------------------------------------[2024-07-01 18:53:03.738] [jointLog] [info] Loading pufferfish index[2024-07-01 18:53:03.738] [jointLog] [info] Loading dense pufferfish index.[2024-07-01 18:53:03.745] [jointLog] [info] done[2024-07-01 18:53:03.745] [jointLog] [info] Index contained 15 targets[2024-07-01 18:53:03.745] [jointLog] [info] Number of decoys : 0[2024-07-01 18:53:03.813] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-01 18:53:03.813] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-01 18:53:03.815] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-07-01 18:53:03.815] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-01 18:53:03.815] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-01 18:53:03.815] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-07-01 18:53:03.815] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-01 18:53:03.815] [jointLog] [info] Mapping rate = 100%[2024-07-01 18:53:03.815] [jointLog] [info] finished quantifyLibrary()[2024-07-01 18:53:03.819] [jointLog] [info] Starting optimizer[2024-07-01 18:53:03.819] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-01 18:53:03.819] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-07-01 18:53:03.820] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-01 18:53:03.820] [jointLog] [info] Finished optimizer[2024-07-01 18:53:03.820] [jointLog] [info] writing output [2024-07-01 18:53:03.824] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #3)" name="2" time="9.032840490341187">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 9.032840490341187, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="salmon (Test #4)" name="3" time="31.054306507110596">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "quant_type|afile": {   "id": "79af00fa888a33ad",   "src": "hda"  },  "quant_type|noErrorModel": true,  "quant_type|numErrorBins": "5",  "quant_type|qtype": "alignment",  "quant_type|sampleOut": true,  "quant_type|sampleUnaligned": true,  "quant_type|transcript": {   "id": "167bb94a8aabf219",   "src": "hda"  } }, "job": {  "command_line": "salmon quant -t \u0027/galaxy/server/database/objects/0/0/1/dataset_0013b007-8d65-4ab0-bbd1-74840319e6a5.dat\u0027 -l \u0027U\u0027 -a \u0027/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat\u0027 --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins \u00275\u0027 --sampleOut --sampleUnaligned         --incompatPrior \u00270.0\u0027       --biasSpeedSamp \u00275\u0027 --fldMax \u00271000\u0027 --fldMean \u0027250\u0027 --fldSD \u002725\u0027 --forgettingFactor \u00270.65\u0027  --maxReadOcc \u0027100\u0027     --numBiasSamples \u00272000000\u0027 --numAuxModelSamples \u00275000000\u0027 --numPreAuxModelSamples \u00275000\u0027  --numGibbsSamples \u00270\u0027  --numBootstraps \u00270\u0027  --thinningFactor \u002716\u0027  --sigDigits \u00273\u0027 --vbPrior \u00271e-05\u0027   -o ./output   \u0026\u0026 samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-07-01T18:53:40.700590",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-8xncw",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "e4398603abc0d646",  "inputs": {   "quant_type|afile": {    "id": "79af00fa888a33ad",    "src": "hda",    "uuid": "cade9926-e7c2-4e39-b46e-e0913ac3e270"   },   "quant_type|transcript": {    "id": "167bb94a8aabf219",    "src": "hda",    "uuid": "0013b007-8d65-4ab0-bbd1-74840319e6a5"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1719860024.0000000",    "title": "Job End Time",    "value": "2024-07-01 18:53:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1719860022.0000000",    "title": "Job Start Time",    "value": "2024-07-01 18:53:42"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "51539.0000000",    "title": "Memory Allocated (MB)",    "value": "51539"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_quant": {    "id": "935ac2c60a88c786",    "src": "hda",    "uuid": "ee0d4f06-df14-429b-a3d1-515efa25e006"   },   "postSample": {    "id": "fd5653fab70d7ee9",    "src": "hda",    "uuid": "c99481ca-7aee-4b5d-a2ce-a059799c108e"   }  },  "params": {   "__input_ext": "\"bam\"",   "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "gcBias": "false",   "geneMap": null,   "incompatPrior": "\"0.0\"",   "meta": "false",   "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 158, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 159, \"src\": \"hda\"}]}}",   "seqBias": "false"  },  "state": "ok",  "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/0/1/dataset_0013b007-8d65-4ab0-bbd1-74840319e6a5.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-07-01 18:53:42.364] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-07-01 18:53:42.364] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-07-01 18:53:42.365] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat\", fasta = \"/galaxy/server/database/objects/0/0/1/dataset_0013b007-8d65-4ab0-bbd1-74840319e6a5.dat\" . . .done\n[2024-07-01 18:53:42.920] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-07-01 18:53:43.155] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-07-01 18:53:43.162] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-07-01 18:53:43.162] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-07-01 18:53:43.163] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-07-01 18:53:43.164] [jointLog] [info] starting optimizer\n[2024-07-01 18:53:43.164] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-07-01 18:53:43.164] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-07-01 18:53:43.165] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-07-01 18:53:43.165] [jointLog] [info] finished optimizer\n[2024-07-01 18:53:43.165] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-07-01 18:53:43.170] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1",  "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] =\u003e salmon \n# [ command ] =\u003e quant \n# [ targets ] =\u003e { /galaxy/server/database/objects/0/0/1/dataset_0013b007-8d65-4ab0-bbd1-74840319e6a5.dat }\n# [ libType ] =\u003e { U }\n# [ alignments ] =\u003e { /galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat }\n# [ threads ] =\u003e { 6 }\n# [ noErrorModel ] =\u003e { }\n# [ numErrorBins ] =\u003e { 5 }\n# [ sampleOut ] =\u003e { }\n# [ sampleUnaligned ] =\u003e { }\n# [ incompatPrior ] =\u003e { 0.0 }\n# [ biasSpeedSamp ] =\u003e { 5 }\n# [ fldMax ] =\u003e { 1000 }\n# [ fldMean ] =\u003e { 250 }\n# [ fldSD ] =\u003e { 25 }\n# [ forgettingFactor ] =\u003e { 0.65 }\n# [ maxReadOcc ] =\u003e { 100 }\n# [ numBiasSamples ] =\u003e { 2000000 }\n# [ numAuxModelSamples ] =\u003e { 5000000 }\n# [ numPreAuxModelSamples ] =\u003e { 5000 }\n# [ numGibbsSamples ] =\u003e { 0 }\n# [ numBootstraps ] =\u003e { 0 }\n# [ thinningFactor ] =\u003e { 16 }\n# [ sigDigits ] =\u003e { 3 }\n# [ vbPrior ] =\u003e { 1e-05 }\n# [ output ] =\u003e { ./output }\nLogs will be written to ./output/logs\n[2024-07-01 18:53:42.364] [jointLog] [info] setting maxHashResizeThreads to 6\n[2024-07-01 18:53:42.364] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2024-07-01 18:53:42.365] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat\", fasta = \"/galaxy/server/database/objects/0/0/1/dataset_0013b007-8d65-4ab0-bbd1-74840319e6a5.dat\" . . .done\n[2024-07-01 18:53:42.920] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\n[2024-07-01 18:53:43.155] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2024-07-01 18:53:43.162] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2024-07-01 18:53:43.162] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2024-07-01 18:53:43.163] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2024-07-01 18:53:43.164] [jointLog] [info] starting optimizer\n[2024-07-01 18:53:43.164] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2024-07-01 18:53:43.164] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2024-07-01 18:53:43.165] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2024-07-01 18:53:43.165] [jointLog] [info] finished optimizer\n[2024-07-01 18:53:43.165] [jointLog] [info] writing output\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m[2024-07-01 18:53:43.170] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-01T18:53:53.190070",  "user_email": "tests@fake.org" }, "output_problems": [  "Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam__x56nlbm.sam v. /tmp/history_bam_converted_to_sam_x8wopaqp.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -18013,9 +18014,9 @@\n 2071:NM_022658:827:189\t83\tNM_022658\t967\t1\t50M\t=\t828\t-189\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2980:NM_022658:826:190\t83\tNM_022658\t967\t1\t50M\t=\t827\t-190\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9883:NM_022658:822:194\t147\tNM_022658\t967\t1\t50M\t=\t823\t-194\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1395:NM_022658:967:112\t99\tNM_022658\t968\t1\t50M\t=\t1030\t112\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5474:NM_022658:967:171\t99\tNM_022658\t968\t1\t50M\t=\t1089\t171\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1989:NM_022658:833:184\t147\tNM_022658\t968\t1\t50M\t=\t834\t-184\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7622:NM_022658:968:140\t99\tNM_022658\t969\t1\t50M\t=\t1059\t140\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1913:NM_022658:831:187\t83\tNM_022658\t969\t1\t50M\t=\t832\t-187\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -21014,10 +21015,10 @@\n 6895:NM_022658:1622:182\t163\tNM_022658\t1623\t1\t50M\t=\t1755\t182\tAACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9607:NM_022658:1622:191\t163\tNM_022658\t1623\t1\t50M\t=\t1764\t191\tAACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4730:NM_022658:1623:193\t163\tNM_022658\t1624\t1\t50M\t=\t1767\t193\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-2703:NM_022658:1473:200\t83\tNM_022658\t1624\t1\t50M\t=\t1474\t-200\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 4601:NM_022658:1476:197\t147\tNM_022658\t1624\t1\t50M\t=\t1477\t-197\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 6103:NM_022658:1489:184\t83\tNM_022658\t1624\t1\t50M\t=\t1490\t-184\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7438:NM_022658:1508:165\t83\tNM_022658\t1624\t1\t50M\t=\t1509\t-165\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+2703:NM_022658:1473:200\t83\tNM_022658\t1624\t1\t50M\t=\t1474\t-200\tACCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9163:NM_022658:1624:152\t163\tNM_022658\t1625\t1\t50M\t=\t1727\t152\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3491:NM_022658:1498:176\t83\tNM_022658\t1625\t1\t50M\t=\t1499\t-176\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7735:NM_022658:1487:187\t147\tNM_022658\t1625\t1\t50M\t=\t1488\t-187\tCCATCCCATGGTCACTCGGGCCCATGCCTTCCTCTCCTTCGCTGTTTGAT\t*\tNH:i:1\tHI:i:1\tAS:i:0\n" ], "status": "failure", "test_index": 3, "time_seconds": 31.054306507110596, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe#### salmon (alignment-based) v1.3.0# [ program ] => salmon # [ command ] => quant # [ targets ] => { /galaxy/server/database/objects/0/0/1/dataset_0013b007-8d65-4ab0-bbd1-74840319e6a5.dat }# [ libType ] => { U }# [ alignments ] => { /galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat }# [ threads ] => { 6 }# [ noErrorModel ] => { }# [ numErrorBins ] => { 5 }# [ sampleOut ] => { }# [ sampleUnaligned ] => { }# [ incompatPrior ] => { 0.0 }# [ biasSpeedSamp ] => { 5 }# [ fldMax ] => { 1000 }# [ fldMean ] => { 250 }# [ fldSD ] => { 25 }# [ forgettingFactor ] => { 0.65 }# [ maxReadOcc ] => { 100 }# [ numBiasSamples ] => { 2000000 }# [ numAuxModelSamples ] => { 5000000 }# [ numPreAuxModelSamples ] => { 5000 }# [ numGibbsSamples ] => { 0 }# [ numBootstraps ] => { 0 }# [ thinningFactor ] => { 16 }# [ sigDigits ] => { 3 }# [ vbPrior ] => { 1e-05 }# [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-01 18:53:42.364] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-01 18:53:42.364] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.Library format { type:single end, relative orientation:none, strandedness:unstranded }[2024-07-01 18:53:42.365] [jointLog] [info] numQuantThreads = 3parseThreads = 3Checking that provided alignment files have consistent headers . . . donePopulating targets from aln = "/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat", fasta = "/galaxy/server/database/objects/0/0/1/dataset_0013b007-8d65-4ab0-bbd1-74840319e6a5.dat" . . .done[2024-07-01 18:53:42.920] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides[0;32mprocessed[0;31m 0 [0;32mreads in current round[0;0m[0;32mprocessed[0;31m 28503 [0;32mreads in current round[0;0mkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 / # required = 50000000[A[A[A[A[A[2024-07-01 18:53:43.155] [jointLog] [info] Completed first pass through the alignment file.Total # of mapped reads : 28503# of uniquely mapped reads : 28502# ambiguously mapped reads : 1[2024-07-01 18:53:43.162] [jointLog] [info] Computed 18 rich equivalence classes for further processing[2024-07-01 18:53:43.162] [jointLog] [info] Counted 28503 total reads in the equivalence classes [2024-07-01 18:53:43.163] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-01 18:53:43.164] [jointLog] [info] starting optimizer[2024-07-01 18:53:43.164] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-01 18:53:43.164] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815[2024-07-01 18:53:43.165] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-01 18:53:43.165] [jointLog] [info] finished optimizer[2024-07-01 18:53:43.165] [jointLog] [info] writing outputResetting BAMQueue from file(s) [ "/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat" ] . . . done[32mprocessed[31m 0 [32mreads[0m[2024-07-01 18:53:43.170] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bamkilling thread 0 . . . donekilling thread 1 . . . donekilling thread 2 . . . done# observed = 28503 mapped fragments.[F[F[F[FWaiting on output threaddoneFreeing memory used by read queue . . . Joined parsing thread . . . "/galaxy/server/database/objects/c/a/d/dataset_cade9926-e7c2-4e39-b46e-e0913ac3e270.dat" Closed all files . . . Emptied frag queue. . . Emptied Alignemnt Group Pool. . Emptied Alignment Group Queue. . . done[bam_sort_core] merging from 0 files and 6 in-memory blocks...
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #5)" name="4" time="28.10989761352539">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 17Hash table size = 31Candidate marks count = 54--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-01 18:54:11.151] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-01 18:54:11.151] [jLog] [info] building indexout : ./index[2024-07-01 18:54:11.152] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-01 18:54:11.160] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-01 18:54:11.160] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-01 18:54:11.171] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-01 18:54:11.173] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-01 18:54:11.224] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-01 18:54:11.224] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 787.77 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 594.99 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-01 18:54:11.226] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-01 18:54:11.226] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-01 18:54:11.226] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-01 18:54:11.226] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-01 18:54:11.226] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-01 18:54:11.226] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-01 18:54:11.226] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-01 18:54:11.235] [puff::index::jointLog] [info] # segments = 23[2024-07-01 18:54:11.235] [puff::index::jointLog] [info] total length = 19592[2024-07-01 18:54:11.235] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-01 18:54:11.243] [puff::index::jointLog] [info] positional integer width = 15[2024-07-01 18:54:11.243] [puff::index::jointLog] [info] seqSize = 19592[2024-07-01 18:54:11.243] [puff::index::jointLog] [info] rankSize = 19592[2024-07-01 18:54:11.243] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-01 18:54:11.243] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  18.6 %   ela..sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-01 18:54:11.307] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-01 18:54:11.307] [puff::index::jointLog] [info] chunk size = 9796[2024-07-01 18:54:11.307] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-01 18:54:11.307] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-01 18:54:11.308] [puff::index::jointLog] [info] finished populating pos vector[2024-07-01 18:54:11.308] [puff::index::jointLog] [info] writing index components[2024-07-01 18:54:11.319] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-01 18:54:11.326] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ validateMappings ] => { }### [ minScoreFraction ] => { 0.65 }### [ ma ] => { 2 }### [ mp ] => { 4 }### [ go ] => { 5 }### [ ge ] => { 3 }### [ allowDovetail ] => { }### [ recoverOrphans ] => { }### [ incompatPrior ] => { 0.0 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ numGibbsSamples ] => { 0 }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-01 18:54:11.415] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-01 18:54:11.415] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-01 18:54:11.415] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.[2024-07-01 18:54:11.415] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-01 18:54:11.415] [jointLog] [info] parsing read library format[2024-07-01 18:54:11.415] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 611.18 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 821.52 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 358.74 us----------------------------------------------------------------------------------| Loading mphf table | Time = 572.31 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 630.47 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 600.04 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 827.2 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 591.45 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 376.88 us-----------------------------------------[2024-07-01 18:54:11.528] [jointLog] [info] Loading pufferfish index[2024-07-01 18:54:11.529] [jointLog] [info] Loading dense pufferfish index.[2024-07-01 18:54:11.536] [jointLog] [info] done[2024-07-01 18:54:11.536] [jointLog] [info] Index contained 15 targets[2024-07-01 18:54:11.536] [jointLog] [info] Number of decoys : 0[2024-07-01 18:54:11.603] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-01 18:54:11.603] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-01 18:54:11.605] [jointLog] [info] Number of orphans recovered using orphan rescue : 0[2024-07-01 18:54:11.605] [jointLog] [info] Number of mappings discarded because of alignment score : 6[2024-07-01 18:54:11.605] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-01 18:54:11.605] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-01 18:54:11.605] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-01 18:54:11.605] [jointLog] [info] Mapping rate = 100%[2024-07-01 18:54:11.605] [jointLog] [info] finished quantifyLibrary()[2024-07-01 18:54:11.610] [jointLog] [info] Starting optimizer[2024-07-01 18:54:11.610] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-01 18:54:11.610] [jointLog] [info] iteration = 0 | max rel diff. = 0[2024-07-01 18:54:11.611] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-01 18:54:11.611] [jointLog] [info] Finished optimizer[2024-07-01 18:54:11.611] [jointLog] [info] writing output [2024-07-01 18:54:11.616] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #6)" name="5" time="30.17411732673645">
        
            
            <system-out><![CDATA[
            Threads = 2Vertex length = 31Hash functions = 5Filter size = 1048576Capacity = 2Files: ./index/ref_k31_fixed.fa--------------------------------------------------------------------------------Round 0, 0:1048576PassFillingFiltering100200True junctions count = 14False junctions count = 18Hash table size = 32Candidate marks count = 56--------------------------------------------------------------------------------Reallocating bifurcations time: 0True marks count: 51Edges construction time: 0--------------------------------------------------------------------------------Distinct junctions = 14for info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 Bitarray          105024  bits (100.00 %)   (array + ranks )final hash             0  bits (0.00 %) (nb in final hash 0)
            ]]></system-out>
            <system-err><![CDATA[
            Version Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###[2024-07-01 18:54:40.906] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.[2024-07-01 18:54:40.906] [jLog] [info] building indexout : ./index[2024-07-01 18:54:40.907] [puff::index::jointLog] [info] Running fixFasta[Step 1 of 4] : counting k-mers[2024-07-01 18:54:40.915] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides[2024-07-01 18:54:40.915] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcriptswrote 15 cleaned references[2024-07-01 18:54:40.927] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers[2024-07-01 18:54:40.929] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20allowedIn: 12Max Junction ID: 70seen.size():569 kmerInfo.size():71approximateContigTotalLength: 17465counters for complex kmers:(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0contig count: 24 element count: 19592 complex nodes: 0# of ones in rank vector: 23[2024-07-01 18:54:40.981] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.[2024-07-01 18:54:40.981] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./indexsize = 19592-----------------------------------------| Loading contigs | Time = 721.8 us-----------------------------------------size = 19592-----------------------------------------| Loading contig boundaries | Time = 567.58 us-----------------------------------------Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 123[2024-07-01 18:54:40.983] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.[2024-07-01 18:54:40.983] [puff::index::jointLog] [info] contig count for validation: 23[2024-07-01 18:54:40.983] [puff::index::jointLog] [info] Total # of Contigs : 23[2024-07-01 18:54:40.983] [puff::index::jointLog] [info] Total # of numerical Contigs : 23[2024-07-01 18:54:40.984] [puff::index::jointLog] [info] Total # of contig vec entries: 36[2024-07-01 18:54:40.984] [puff::index::jointLog] [info] bits per offset entry 6[2024-07-01 18:54:40.984] [puff::index::jointLog] [info] Done constructing the contig vector. 24[2024-07-01 18:54:40.992] [puff::index::jointLog] [info] # segments = 23[2024-07-01 18:54:40.992] [puff::index::jointLog] [info] total length = 19592[2024-07-01 18:54:40.992] [puff::index::jointLog] [info] Reading the reference files ...[2024-07-01 18:54:41.002] [puff::index::jointLog] [info] positional integer width = 15[2024-07-01 18:54:41.002] [puff::index::jointLog] [info] seqSize = 19592[2024-07-01 18:54:41.002] [puff::index::jointLog] [info] rankSize = 19592[2024-07-01 18:54:41.002] [puff::index::jointLog] [info] edgeVecSize = 0[2024-07-01 18:54:41.002] [puff::index::jointLog] [info] num keys = 18902[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  16.3 %   elap..ng BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec[2024-07-01 18:54:41.067] [puff::index::jointLog] [info] mphf size = 0.0125198 MB[2024-07-01 18:54:41.067] [puff::index::jointLog] [info] chunk size = 9796[2024-07-01 18:54:41.067] [puff::index::jointLog] [info] chunk 0 = [0, 9796)[2024-07-01 18:54:41.067] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)[2024-07-01 18:54:41.068] [puff::index::jointLog] [info] finished populating pos vector[2024-07-01 18:54:41.068] [puff::index::jointLog] [info] writing index components[2024-07-01 18:54:41.080] [puff::index::jointLog] [info] finished writing dense pufferfish index[2024-07-01 18:54:41.084] [jLog] [info] done building indexVersion Info: ### PLEASE UPGRADE SALMON ###### A newer version of salmon with important bug fixes and improvements is available. #######The newest version, available at https://github.com/COMBINE-lab/salmon/releasescontains new features, improvements, and bug fixes; please upgrade at yourearliest convenience.###Sign up for the salmon mailing list to hear about new versions, features and updates at:https://oceangenomics.com/subscribe###### salmon (selective-alignment-based) v1.3.0### [ program ] => salmon ### [ command ] => quant ### [ index ] => { ./index }### [ libType ] => { U }### [ unmatedReads ] => { ./single.fasta }### [ threads ] => { 6 }### [ seqBias ] => { }### [ gcBias ] => { }### [ incompatPrior ] => { 0.0 }### [ dumpEq ] => { }### [ minAssignedFrags ] => { 10 }### [ biasSpeedSamp ] => { 5 }### [ fldMax ] => { 1000 }### [ fldMean ] => { 250 }### [ fldSD ] => { 25 }### [ forgettingFactor ] => { 0.65 }### [ initUniform ] => { }### [ maxReadOcc ] => { 100 }### [ numBiasSamples ] => { 2000000 }### [ numAuxModelSamples ] => { 5000000 }### [ numPreAuxModelSamples ] => { 5000 }### [ useEM ] => { }### [ numGibbsSamples ] => { 0 }### [ noGammaDraw ] => { }### [ numBootstraps ] => { 0 }### [ thinningFactor ] => { 16 }### [ sigDigits ] => { 3 }### [ vbPrior ] => { 1e-05 }### [ output ] => { ./output }Logs will be written to ./output/logs[2024-07-01 18:54:41.173] [jointLog] [info] setting maxHashResizeThreads to 6[2024-07-01 18:54:41.173] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.[2024-07-01 18:54:41.173] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65[2024-07-01 18:54:41.173] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.[2024-07-01 18:54:41.173] [jointLog] [info] parsing read library format[2024-07-01 18:54:41.173] [jointLog] [info] There is 1 library.-----------------------------------------| Loading contig table | Time = 556.25 us-----------------------------------------size = 24-----------------------------------------| Loading contig offsets | Time = 918.4 us----------------------------------------------------------------------------------| Loading reference lengths | Time = 337.8 us----------------------------------------------------------------------------------| Loading mphf table | Time = 493.72 us-----------------------------------------size = 19592Number of ones: 23Number of ones per inventory item: 512Inventory entries filled: 1-----------------------------------------| Loading contig boundaries | Time = 603.29 us-----------------------------------------size = 19592-----------------------------------------| Loading sequence | Time = 550.49 us-----------------------------------------size = 18902-----------------------------------------| Loading positions | Time = 835.19 us-----------------------------------------size = 28562-----------------------------------------| Loading reference sequence | Time = 475.8 us----------------------------------------------------------------------------------| Loading reference accumulative lengths | Time = 305.12 us-----------------------------------------[2024-07-01 18:54:41.285] [jointLog] [info] Loading pufferfish index[2024-07-01 18:54:41.286] [jointLog] [info] Loading dense pufferfish index.[2024-07-01 18:54:41.292] [jointLog] [info] done[2024-07-01 18:54:41.292] [jointLog] [info] Index contained 15 targets[2024-07-01 18:54:41.293] [jointLog] [info] Number of decoys : 0[2024-07-01 18:54:41.293] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.[2024-07-01 18:54:41.361] [jointLog] [info] Computed 15 rich equivalence classes for further processing[2024-07-01 18:54:41.361] [jointLog] [info] Counted 15 total reads in the equivalence classes [2024-07-01 18:54:41.363] [jointLog] [info] Number of mappings discarded because of alignment score : 5[2024-07-01 18:54:41.363] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0[2024-07-01 18:54:41.363] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0[2024-07-01 18:54:41.363] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0[2024-07-01 18:54:41.363] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.The effective lengths have been computed using the observed mappings.[2024-07-01 18:54:41.363] [jointLog] [info] Mapping rate = 100%[2024-07-01 18:54:41.363] [jointLog] [info] finished quantifyLibrary()[2024-07-01 18:54:41.367] [jointLog] [info] Starting optimizer[2024-07-01 18:54:41.368] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate[2024-07-01 18:54:41.368] [jointLog] [info] iteration = 0 | max rel diff. = 49[2024-07-01 18:54:41.368] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases[2024-07-01 18:54:41.372] [jointLog] [info] Computed expected counts (for bias correction)[2024-07-01 18:54:41.373] [jointLog] [info] processed bias for 20.0% of the transcripts[2024-07-01 18:54:41.373] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-07-01 18:54:41.373] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-07-01 18:54:41.374] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-07-01 18:54:41.374] [jointLog] [info] processed bias for 40.0% of the transcripts[2024-07-01 18:54:41.375] [jointLog] [info] processed bias for 53.3% of the transcripts[2024-07-01 18:54:41.375] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-07-01 18:54:41.375] [jointLog] [info] processed bias for 60.0% of the transcripts[2024-07-01 18:54:41.376] [jointLog] [info] processed bias for 100.0% of the transcripts[2024-07-01 18:54:41.376] [jointLog] [info] iteration = 100 | max rel diff. = 0[2024-07-01 18:54:41.376] [jointLog] [info] Finished optimizer[2024-07-01 18:54:41.376] [jointLog] [info] writing output [2024-07-01 18:54:41.380] [jointLog] [info] writing equivalence class counts.[2024-07-01 18:54:41.381] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.[2024-07-01 18:54:41.381] [jointLog] [info] done.[2024-07-01 18:54:41.384] [jointLog] [info] done writing equivalence class counts.[2024-07-01 18:54:41.384] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :Detected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="salmon (Test #7)" name="6" time="">
        
            <error type="error" message=""><![CDATA[
                { "status": "skip", "test_index": 6, "tool_id": "salmon", "tool_version": "1.3.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #1)" name="0" time="28.344401597976685">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #2)" name="1" time="31.907001733779907">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #3)" name="2" time="28.98570227622986">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_bedcov (Test #4)" name="3" time="31.525056838989258">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #1)" name="0" time="31.92299747467041">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_reheader (Test #2)" name="1" time="29.4012188911438">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="68.11876630783081">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #1)" name="0" time="38.73953127861023">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="39.401676654815674">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_plot_dist_scatter (Test #2)" name="1" time="39.44166398048401">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #1)" name="0" time="102.79796266555786">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/3/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/6/7/9/dataset_679a284c-e57e-4032-bc10-78009b38005c.dat--pe1-2fastq:/galaxy/server/database/objects/6/3/7/dataset_63742cf1-6231-4449-999a-fdebcb6b2f7d.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/3/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/6/7/9/dataset_679a284c-e57e-4032-bc10-78009b38005c.dat']      right reads: ['/galaxy/server/database/objects/6/3/7/dataset_63742cf1-6231-4449-999a-fdebcb6b2f7d.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/7/9/dataset_679a284c-e57e-4032-bc10-78009b38005c.dat  0:00:00.823     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/3/7/dataset_63742cf1-6231-4449-999a-fdebcb6b2f7d.dat  0:00:01.571     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.584    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.843    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.843    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.999    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.018    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.033    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:02.035    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:02.037    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:02.039    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:02.046    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:02.046    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:02.046    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/7/9/dataset_679a284c-e57e-4032-bc10-78009b38005c.dat  0:00:02.066    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/3/7/dataset_63742cf1-6231-4449-999a-fdebcb6b2f7d.dat  0:00:02.086    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.086    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.086    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.094    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.095    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.095    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.106    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.106    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.106    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.106    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/6/7/9/dataset_679a284c-e57e-4032-bc10-78009b38005c.dat and /galaxy/server/database/objects/6/3/7/dataset_63742cf1-6231-4449-999a-fdebcb6b2f7d.dat  0:00:02.164    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.170    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.173    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.209    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.209    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.210    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml  0:00:02.213    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.108    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.114     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.288   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.297     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.468   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.552     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.552     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.552     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.553     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.553     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.553     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.553     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.971     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.980    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.980    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.139    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.139    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.223    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.223    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.223    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.224    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.224    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.224    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.037     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.051    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.366    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.366    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.544    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.562    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.582    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.582    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.584    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.584    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing..      : 346)   Closing short gaps  0:00:08.335    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.337    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.337    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.337    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.337    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.337    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.337    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.337    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.337    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.337    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.337    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.337    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.337    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.347    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.347    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.347    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.351    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.351    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.351    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:08.355    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:08.359    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta  0:00:08.362    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta  0:00:08.367    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.367    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.367    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.367    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.367    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.367    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.499   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.714   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.478   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.478   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.490    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.637   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.641   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.644   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.647   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.647   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.647   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.662   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.667   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.689    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.689    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.689    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.689    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.689    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.689    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.689    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.689    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.689    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.689    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.689    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.689    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.689    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.690    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.690    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.690    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.690    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.690    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.690    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.690    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.691    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.691    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.691    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.691    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.691    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.692    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta  0:00:10.696    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg  0:00:10.699    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths  0:00:10.705    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths  0:00:10.718    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.720    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #2)" name="1" time="41.26953434944153">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/6/working--disable-gzip-output--only-assembler-t8-m50-k33--pe1-fr--pe1-1fasta:/galaxy/server/database/objects/c/1/d/dataset_c1d63b9f-d528-4654-8581-73fbbfb24b34.dat--pe1-2fasta:/galaxy/server/database/objects/d/1/3/dataset_d135effe-4aca-4375-bf6e-aa68b41401ff.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/6/workingMode: ONLY assembling (without read error correction)Debug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/1/d/dataset_c1d63b9f-d528-4654-8581-73fbbfb24b34.dat']      right reads: ['/galaxy/server/database/objects/d/1/3/dataset_d135effe-4aca-4375-bf6e-aa68b41401ff.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.290   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.298     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.471   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.560     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.560     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611  0:00:00.560     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.561     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.562     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.562     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.562     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.029     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:01.039    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:01.039    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.195    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:01.195    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.292    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.292    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.292    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.293    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.293    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.293    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:02.145     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.  0:00:02.158    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.469    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.  0:00:02.469    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.644    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.662    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.681    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).  0:00:02.681    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.683    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.684    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph  0:00:02.684    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths  0:00:02.685    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted  0:00:02.685    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops  0:00:02.686    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected  0:00:02.686    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)  0:00:02.686    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:02.686    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.698    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).  0:00:02.698    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.  0:00:02.705    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM  0:00:02.712    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding  0:00:02.712    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0  0:00:02.712    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356  0:00:02.712    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478  0:00:02.712    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model  0:00:02.753    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2  0:00:02.857    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4  0:00:03.223    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8  0:00:03.846    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16  0:00:04.972    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32  0:00:06.813    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849  0:00:06.814    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568  0:00:06.814    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251  0:00:06.814    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135  0:00:06.814    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738  0:00:06.814    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705  0:00:06.814    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135  0:00:06.814    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0  0:00:06.814    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer  0:00:06.814    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill  0:00:06.816    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:06.816    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:06.817    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:06.817    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:06.817    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:07.672     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.  0:00:07.683    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:07.982    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.  0:00:07.982    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:08.151    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:08.170    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:08.187    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).  0:00:08.188    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.  0:00:08.189    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled  0:00:08.190    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps  0:00:08.190    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)  0:00:08.193    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads  0:00:08.193    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices  0:00:08.193    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:08.193    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.194    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification  0:00:08.194    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning  0:00:08.194    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover  0:00:08.194    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times  0:00:08.194    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification  0:00:08.194    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started  0:00:08.194    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.194   ..indices  0:00:09.604    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps  0:00:09.604    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:09.606    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:09.606    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:09.606    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:09.606    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:09.606    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:09.606    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:09.606    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:09.606    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:09.606    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865  0:00:09.606    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:09.606    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.606    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.617    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:09.617    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:09.617    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:09.621    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:09.621    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:09.621    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:09.625    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:09.628    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta  0:00:09.631    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta  0:00:09.637    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:09.637    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:09.637    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:09.637    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:09.637    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:09.637    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:09.769   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:09.986   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.750   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:11.750   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges  0:00:11.763    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100  0:00:11.909   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:11.914   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.916   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.919   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:11.919   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:11.919   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:11.933   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:11.937   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:11.958    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:11.958    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:11.958    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:11.958    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:11.959    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.959    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.959    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.959    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:11.959    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:11.959    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:11.959    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.959    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:11.959    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:11.959    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:11.959    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:11.959    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:11.959    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:11.959    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:11.959    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:11.959    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:11.959    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:11.960    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.960    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865  0:00:11.960    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:11.960    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:11.960    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.960    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.960    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:11.960    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:11.960    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:11.960    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:11.960    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:11.960    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:11.960    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa  0:00:11.961    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta  0:00:11.965    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg  0:00:11.969    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths  0:00:11.977    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths  0:00:11.991    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:11.993    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 12 seconds===== Assembling finished. Used k-mer sizes: 33  * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #3)" name="2" time="43.789790391922">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/9/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/7/c/c/dataset_7ccef413-301f-4403-b3b8-ce78eb24558b.dat--pe1-2fastq.gz:/galaxy/server/database/objects/6/3/4/dataset_63416827-4f60-4426-adac-aa3f82cf69cb.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/9/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/7/c/c/dataset_7ccef413-301f-4403-b3b8-ce78eb24558b.dat']      right reads: ['/galaxy/server/database/objects/6/3/4/dataset_63416827-4f60-4426-adac-aa3f82cf69cb.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/c/c/dataset_7ccef413-301f-4403-b3b8-ce78eb24558b.dat  0:00:00.810     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/3/4/dataset_63416827-4f60-4426-adac-aa3f82cf69cb.dat  0:00:01.506     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.519    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.767    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.768    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.940    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.960    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.978    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.980    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.983    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.984    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.992    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.992    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.993    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/c/c/dataset_7ccef413-301f-4403-b3b8-ce78eb24558b.dat  0:00:02.012    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/3/4/dataset_63416827-4f60-4426-adac-aa3f82cf69cb.dat  0:00:02.031    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:02.031    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:02.031    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:02.039    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:02.040    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:02.040    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:02.054    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:02.054    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:02.054    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:02.054    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/c/c/dataset_7ccef413-301f-4403-b3b8-ce78eb24558b.dat and /galaxy/server/database/objects/6/3/4/dataset_63416827-4f60-4426-adac-aa3f82cf69cb.dat  0:00:02.118    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.123    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.127    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.163    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.163    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.163    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml  0:00:02.166    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.110    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.117     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.284   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.293     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.462   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.543     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.543     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.543     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.544     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.544     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.544     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.544     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.936     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.944    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.944    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.091    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.091    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.179    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.179    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.179    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.180    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.180    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.180    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.994     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:02.007    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.309    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.309    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.470    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.488    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.506    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.506    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.508    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.509    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Cond..      : 346)   Closing short gaps  0:00:08.049    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.050    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.050    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.050    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.050    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.050    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.050    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.050    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.050    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.050    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.050    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.050    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.050    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.060    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.060    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.060    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.064    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.064    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.064    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:08.067    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:08.070    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta  0:00:08.073    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta  0:00:08.079    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.079    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.079    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.079    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.079    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.079    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.209   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.434   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.204   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.204   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.217    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.366   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.370   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.374   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.376   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.376   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.376   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.390   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.396   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.416    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.416    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.416    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.416    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.416    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.416    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.416    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.416    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.416    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.416    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.416    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.416    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.416    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.417    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.417    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.417    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.417    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.417    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.417    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.417    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.417    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.418    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.418    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.418    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.418    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.418    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.418    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.418    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.418    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.418    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.418    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.418    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.418    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.418    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.419    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta  0:00:10.423    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg  0:00:10.427    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths  0:00:10.433    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths  0:00:10.445    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.447    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #4)" name="3" time="50.45536136627197">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/12/working--disable-gzip-output-t8-m50--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/b/f/d/dataset_bfdd00be-5dfc-493f-9d3f-bab719dcd85e.dat--pe1-2fastq:/galaxy/server/database/objects/d/0/0/dataset_d001e8ed-e44e-4af3-9235-6c3a24315757.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/12/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/b/f/d/dataset_bfdd00be-5dfc-493f-9d3f-bab719dcd85e.dat']      right reads: ['/galaxy/server/database/objects/d/0/0/dataset_d001e8ed-e44e-4af3-9235-6c3a24315757.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: automatic selection based on read length  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.004     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.004     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/f/d/dataset_bfdd00be-5dfc-493f-9d3f-bab719dcd85e.dat  0:00:00.782     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/0/0/dataset_d001e8ed-e44e-4af3-9235-6c3a24315757.dat  0:00:01.457     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.470    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.709    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.709    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.854    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.873    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.891    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.892    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.895    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.896    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.903    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.903    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.903    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/f/d/dataset_bfdd00be-5dfc-493f-9d3f-bab719dcd85e.dat  0:00:01.920    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/0/0/dataset_d001e8ed-e44e-4af3-9235-6c3a24315757.dat  0:00:01.937    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.937    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.937    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.945    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.946    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.946    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.954    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.954    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.954    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.954    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/f/d/dataset_bfdd00be-5dfc-493f-9d3f-bab719dcd85e.dat and /galaxy/server/database/objects/d/0/0/dataset_d001e8ed-e44e-4af3-9235-6c3a24315757.dat  0:00:02.013    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.018    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.022    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.056    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.056    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.056    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml  0:00:02.059    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.107    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.113     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.279   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.289     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.455   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.536     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.536     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.537     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.537     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.537     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.537     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576  0:00:00.911     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.919    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.919    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.062    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.  0:00:01.062    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.136    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.136    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.136    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.137    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.137    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.137    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:01.901     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.  0:00:01.914    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.208    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.  0:00:02.208    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.352    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.371    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.387    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).  0:00:02.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.388    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.389    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping  0:00:02.389    32M / 8G    INFO    General                 (construction.cpp          : 253)   Earl.. short gaps  0:00:05.004    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.005    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.005    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.005    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.005    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.005    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.006    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.006    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.006    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62  0:00:05.006    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.006    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.006    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.015    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.015    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.015    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.019    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.019    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:05.019    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:05.023    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:05.026    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta  0:00:05.029    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta  0:00:05.036    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.036    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.036    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.036    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945  0:00:05.036    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.036    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.168   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.386   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.146   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.146   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges  0:00:07.159    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100  0:00:07.304   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.307   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.310   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.312   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.312   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.312   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.327   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.331   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.351    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.351    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.351    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.351    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.352    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.352    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.352    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.352    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.352    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.352    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.352    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.352    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.352    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.352    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.352    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.352    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.352    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.352    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.352    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.352    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.352    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.353    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.353    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62  0:00:07.353    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.353    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.353    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.353    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.353    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.353    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.353    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.353    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.353    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.353    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.353    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa  0:00:07.354    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta  0:00:07.358    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg  0:00:07.360    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths  0:00:07.366    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths  0:00:07.378    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.380    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 21, 33, 55  * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #5)" name="4" time="39.56269860267639">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/15/working--disable-gzip-output-t8-m50-k77--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/c/b/2/dataset_cb2bde6f-1b2b-4f28-a77d-ca4c99e9f901.dat--pe1-2fastq:/galaxy/server/database/objects/4/d/9/dataset_4d98f67b-1492-4a2f-8f2a-f48ef4688a56.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/15/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/c/b/2/dataset_cb2bde6f-1b2b-4f28-a77d-ca4c99e9f901.dat']      right reads: ['/galaxy/server/database/objects/4/d/9/dataset_4d98f67b-1492-4a2f-8f2a-f48ef4688a56.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [77]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/b/2/dataset_cb2bde6f-1b2b-4f28-a77d-ca4c99e9f901.dat  0:00:00.755     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/4/d/9/dataset_4d98f67b-1492-4a2f-8f2a-f48ef4688a56.dat  0:00:01.411     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.424    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.669    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.669    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.828    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.848    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.866    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.867    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.870    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.871    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.878    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.878    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.878    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/b/2/dataset_cb2bde6f-1b2b-4f28-a77d-ca4c99e9f901.dat  0:00:01.894    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/4/d/9/dataset_4d98f67b-1492-4a2f-8f2a-f48ef4688a56.dat  0:00:01.909    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.909    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.909    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.918    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.919    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.919    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.930    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.930    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.930    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.930    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/c/b/2/dataset_cb2bde6f-1b2b-4f28-a77d-ca4c99e9f901.dat and /galaxy/server/database/objects/4/d/9/dataset_4d98f67b-1492-4a2f-8f2a-f48ef4688a56.dat  0:00:01.990    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:01.996    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:01.999    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.036    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.036    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.036    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml  0:00:02.039    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.006     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.109    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.115     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.283   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.292     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.463   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.548     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.548     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.548     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.548     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.549     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.549     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.549     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525  0:00:00.962     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.970    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.970    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.118    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.  0:00:01.118    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.198    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.198    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.198    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.199    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.199    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.199    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762  0:00:02.000     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.  0:00:02.013    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.309    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.  0:00:02.309    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.474    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.492    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.511    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).  0:00:02.511    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.512    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.513    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..osing short gaps  0:00:05.490    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:05.491    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:05.491    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:05.491    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:05.491    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:05.491    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:05.491    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.491    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.491    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.492    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.492    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:05.492    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:05.492    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:05.492    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:05.492    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:05.492    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:05.492    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:05.492    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:05.492    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594  0:00:05.492    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:05.492    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.492    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.499    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:05.499    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:05.499    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:05.503    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:05.503    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:05.503    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:05.507    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:05.510    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta  0:00:05.513    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta  0:00:05.518    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:05.518    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:05.518    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:05.518    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899  0:00:05.518    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:05.518    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:05.650   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:05.865   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.629   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:07.629   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges  0:00:07.642    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100  0:00:07.790   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:07.794   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.796   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.798   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:07.798   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:07.798   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:07.813   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:07.817   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:07.837    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:07.838    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.838    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.838    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:07.838    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.838    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:07.838    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:07.838    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:07.838    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:07.838    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:07.838    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:07.838    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:07.838    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:07.839    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:07.839    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:07.839    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594  0:00:07.839    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:07.839    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:07.839    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:07.839    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:07.839    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.839    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.839    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.839    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.839    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.839    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.839    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.839    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.839    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.839    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.839    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.839    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.839    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:07.840    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:07.840    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:07.840    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:07.840    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:07.840    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:07.840    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:07.840    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:07.840    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:07.840    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:07.840    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.840    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa  0:00:07.841    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta  0:00:07.845    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg  0:00:07.848    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths  0:00:07.854    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths  0:00:07.866    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:07.868    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 7 seconds===== Assembling finished. Used k-mer sizes: 77  * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #6)" name="5" time="36.24253010749817">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "careful": false,  "contig_graph_out": true,  "kmer_choice|kmers": "33",  "libraries_0|files_0|file_type|fwd_reads": {   "id": "b907e1a83e3d6832",   "src": "hda"  },  "libraries_0|files_0|file_type|rev_reads": {   "id": "4aca81af41f24efe",   "src": "hda"  },  "libraries_0|lib_type": "paired_end",  "sc": false,  "scaffold_graph_out": true }, "job": {  "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi \u0026\u0026  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/2/a/5/dataset_2a588061-9c04-456d-9e41-98e3426ac937.dat --pe1-2 fastq:/galaxy/server/database/objects/e/c/5/dataset_ec531cf1-db40-4576-b53b-3192a66615c0.dat \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/18/configs/tmpd99jz6lh\u0027 \u003c contigs.fasta \u003e \u0027/galaxy/server/database/objects/d/7/5/dataset_d75b4c84-7cdd-47de-a9f2-5f73f47a1061.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/18/configs/tmpd99jz6lh\u0027 \u003c scaffolds.fasta \u003e \u0027/galaxy/server/database/objects/0/8/c/dataset_08c5d2f8-af51-4bd4-bde2-0c293a5f60da.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-01T18:36:12.739996",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-498v8",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "40550c3675b21d64",  "inputs": {   "libraries_0|files_0|file_type|fwd_reads": {    "id": "b907e1a83e3d6832",    "src": "hda",    "uuid": "2a588061-9c04-456d-9e41-98e3426ac937"   },   "libraries_0|files_0|file_type|rev_reads": {    "id": "4aca81af41f24efe",    "src": "hda",    "uuid": "ec531cf1-db40-4576-b53b-3192a66615c0"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "contig_graph": {    "id": "8eeced19e11a5f51",    "src": "hda",    "uuid": "5ea70ccd-79eb-4764-84f3-c38770a3e1b3"   },   "out_contig_stats": {    "id": "09f34a4d583b8576",    "src": "hda",    "uuid": "d75b4c84-7cdd-47de-a9f2-5f73f47a1061"   },   "out_contigs": {    "id": "e19edc1fd1608650",    "src": "hda",    "uuid": "72a29602-e271-472e-8922-0e6a511f2838"   },   "out_log": {    "id": "204e6d953c66060a",    "src": "hda",    "uuid": "87ad5318-722b-4c09-897f-eb559bda78fb"   },   "out_scaffold_stats": {    "id": "2c31c92f58603c46",    "src": "hda",    "uuid": "08c5d2f8-af51-4bd4-bde2-0c293a5f60da"   },   "out_scaffolds": {    "id": "9e4239062d9e83ad",    "src": "hda",    "uuid": "7eecb30e-80c6-4e86-a0b8-ba05521f7949"   },   "scaffold_graph": {    "id": "637ca5c27d17716e",    "src": "hda",    "uuid": "7fa8ac68-08e9-492b-b28a-20152c201268"   }  },  "params": {   "__input_ext": "\"fastq\"",   "careful": "false",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "contig_graph_out": "true",   "cov": "{\"__current_case__\": 0, \"state\": \"off\"}",   "dbkey": "\"?\"",   "iontorrent": "false",   "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}",   "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 36, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 37, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]",   "nanopore_reads": null,   "onlyassembler": "false",   "pacbio_reads": null,   "sanger_reads": null,   "sc": "false",   "scaffold_graph_out": "true",   "trusted_contigs": null,   "untrusted_contigs": null  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-01T18:36:31.267315",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 5, "time_seconds": 36.24253010749817, "tool_id": "spades", "tool_version": "3.12.0+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #7)" name="6" time="41.372626543045044">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/21/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq:/galaxy/server/database/objects/f/a/e/dataset_fae3ccb6-6651-42b7-8551-f619da3fb991.dat--pe1-2fastq:/galaxy/server/database/objects/3/c/0/dataset_3c06d27c-7753-418f-af6f-8340c5514d42.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/21/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/f/a/e/dataset_fae3ccb6-6651-42b7-8551-f619da3fb991.dat']      right reads: ['/galaxy/server/database/objects/3/c/0/dataset_3c06d27c-7753-418f-af6f-8340c5514d42.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/21/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/a/e/dataset_fae3ccb6-6651-42b7-8551-f619da3fb991.dat  0:00:00.755     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/c/0/dataset_3c06d27c-7753-418f-af6f-8340c5514d42.dat  0:00:01.419     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.432    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.670    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.670    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.816    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.835    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.851    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.853    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.855    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.856    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.864    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.864    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.864    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/a/e/dataset_fae3ccb6-6651-42b7-8551-f619da3fb991.dat  0:00:01.885    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/c/0/dataset_3c06d27c-7753-418f-af6f-8340c5514d42.dat  0:00:01.905    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.905    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.905    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.915    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.915    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.915    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.924    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.924    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.924    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.924    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/a/e/dataset_fae3ccb6-6651-42b7-8551-f619da3fb991.dat and /galaxy/server/database/objects/3/c/0/dataset_3c06d27c-7753-418f-af6f-8340c5514d42.dat  0:00:01.985    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:01.990    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:01.994    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.029    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.029    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.029    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml  0:00:02.032    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/21/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/21/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.106    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.112     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.281   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.290     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.456   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.535     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.535     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.535     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.535     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.536     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.536     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.536     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.961     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.970    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.970    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.118    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.118    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.202    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.202    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.202    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.203    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.203    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.203    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.983     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.996    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.301    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.301    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.464    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.482    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.500    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.500    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.504    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.504    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == ..sing short gaps  0:00:08.004    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:08.005    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:08.005    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:08.005    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:08.005    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:08.005    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:08.005    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:08.005    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:08.006    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:08.006    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:08.006    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:08.006    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:08.006    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.006    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.015    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:08.015    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:08.015    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:08.019    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:08.019    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa  0:00:08.019    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta  0:00:08.023    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg  0:00:08.026    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/simplified_contigs.fasta  0:00:08.030    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/intermediate_contigs.fasta  0:00:08.034    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:08.034    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:08.034    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:08.034    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:08.034    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:08.034    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.169   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.385   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.148   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.148   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.161    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.312   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.315   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.317   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.317   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.317   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.332   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.337   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.358    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.358    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.358    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.358    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.358    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.358    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.358    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.358    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.358    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.358    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.359    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.359    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.359    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.359    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.359    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.359    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.359    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.359    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.359    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.360    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.360    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.360    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.360    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.360    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.360    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.360    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.360    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.361    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta  0:00:10.365    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg  0:00:10.368    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/final_contigs.paths  0:00:10.376    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/scaffolds.paths  0:00:10.388    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.390    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/21/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="spades (Test #8)" name="7" time="44.90155100822449">
        
            
            <system-out><![CDATA[
            Command line: /usr/local/bin/spades.py-o/galaxy/server/database/jobs_directory/000/24/working--disable-gzip-output-t8-m50-k33--pe1-fr--pe1-1fastq.gz:/galaxy/server/database/objects/d/6/b/dataset_d6bc0e83-99f7-44d3-8f41-1fcffbbb9ca9.dat--pe1-2fastq.gz:/galaxy/server/database/objects/b/f/d/dataset_bfdfef56-9233-4c50-b27b-62e83cf6b6ad.datSystem information:  SPAdes version: 3.12.0  Python version: 3.9.15  OS: Linux-6.1.85+-x86_64-with-glibc2.28Output dir: /galaxy/server/database/jobs_directory/000/24/workingMode: read error correction and assemblingDebug mode is turned OFFDataset parameters:  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)  Reads:    Library number: 1, library type: paired-end      orientation: fr      left reads: ['/galaxy/server/database/objects/d/6/b/dataset_d6bc0e83-99f7-44d3-8f41-1fcffbbb9ca9.dat']      right reads: ['/galaxy/server/database/objects/b/f/d/dataset_bfdfef56-9233-4c50-b27b-62e83cf6b6ad.dat']      interlaced reads: not specified      single reads: not specified      merged reads: not specifiedRead error correction parameters:  Iterations: 1  PHRED offset will be auto-detected  Corrected reads will NOT be compressedAssembly parameters:  k: [33]  Repeat resolution is enabled  Mismatch careful mode is turned OFF  MismatchCorrector will be SKIPPED  Coverage cutoff is turned OFFOther parameters:  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/tmp  Threads: 8  Memory limit (in Gb): 50======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log===== Read error correction started. == Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes     === ITERATION 0 begins ===  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.006     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/d/6/b/dataset_d6bc0e83-99f7-44d3-8f41-1fcffbbb9ca9.dat  0:00:00.761     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/f/d/dataset_bfdfef56-9233-4c50-b27b-62e83cf6b6ad.dat  0:00:01.426     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed  0:00:01.438    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.676    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.  0:00:01.676    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.832    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:01.851    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:01.870    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).  0:00:01.872    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order  0:00:01.874    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.  0:00:01.876    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters  0:00:01.883    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960  0:00:01.883    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.  0:00:01.883    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/d/6/b/dataset_d6bc0e83-99f7-44d3-8f41-1fcffbbb9ca9.dat  0:00:01.901    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/f/d/dataset_bfdfef56-9233-4c50-b27b-62e83cf6b6ad.dat  0:00:01.919    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.  0:00:01.919    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.  0:00:01.919    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964  0:00:01.928    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))  0:00:01.929    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.  0:00:01.929    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.  0:00:01.943    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.  0:00:01.943    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized  0:00:01.943    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.  0:00:01.943    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/d/6/b/dataset_d6bc0e83-99f7-44d3-8f41-1fcffbbb9ca9.dat and /galaxy/server/database/objects/b/f/d/dataset_bfdfef56-9233-4c50-b27b-62e83cf6b6ad.dat  0:00:02.006    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.  0:00:02.012    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0  0:00:02.015    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0  0:00:02.051    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.  0:00:02.051    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.  0:00:02.051    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml  0:00:02.055    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.== Dataset description file was created: /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml===== Read error correction finished. ===== Assembling started.== Running assembler: K33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/24/working/K33/configs/config.info  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/24/working/dataset.info) with K=33  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)  0:00:00.003     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads  0:00:00.112    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written  0:00:00.118     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads  0:00:00.296   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.306     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads  0:00:00.479   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written  0:00:00.558     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100  0:00:00.558     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526  0:00:00.558     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting  0:00:00.558     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.  0:00:00.559     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:00.559     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb  0:00:00.559     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288  0:00:00.933     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K  0:00:00.941    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads  0:00:00.941    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:01.092    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.  0:00:01.092    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:01.165    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction  0:00:01.166    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index  0:00:01.166    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.  0:00:01.166    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576  0:00:01.166    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb  0:00:01.166    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144  0:00:01.888     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.  0:00:01.901    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.  0:00:02.195    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.  0:00:02.195    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.  0:00:02.351    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices  0:00:02.370    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.  0:00:02.386    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).  0:00:02.386    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers  0:00:02.388    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.  0:00:02.388    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDU..sing short gaps  0:00:07.951    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates  0:00:07.952    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup  0:00:07.952    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification  0:00:07.952    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled  0:00:07.952    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled  0:00:07.953    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times  0:00:07.953    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges  0:00:07.953    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times  0:00:07.953    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage  0:00:07.953    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839  0:00:07.953    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction  0:00:07.953    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.953    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.963    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions  0:00:07.963    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed  0:00:07.963    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides  0:00:07.967    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:07.967    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa  0:00:07.967    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta  0:00:07.971    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg  0:00:07.974    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/simplified_contigs.fasta  0:00:07.977    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/intermediate_contigs.fasta  0:00:07.982    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting  0:00:07.982    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process  0:00:07.982    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done  0:00:07.982    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967  0:00:07.982    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0  0:00:07.982    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)  0:00:08.115   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:08.331   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.098   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)  0:00:10.098   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges  0:00:10.111    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100  0:00:10.258   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0  0:00:10.262   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.265   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.268   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0  0:00:10.268   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)  0:00:10.268   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0  0:00:10.282   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper  0:00:10.287   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed  0:00:10.315    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation  0:00:10.315    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0  0:00:10.315    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done  0:00:10.315    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator  0:00:10.315    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.315    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.315    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.315    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information  0:00:10.315    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished  0:00:10.315    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information  0:00:10.315    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.315    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0  0:00:10.315    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index  0:00:10.315    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator  0:00:10.316    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info  0:00:10.316    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2  0:00:10.316    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering  0:00:10.316    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index  0:00:10.316    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving  0:00:10.316    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving  0:00:10.316    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000  0:00:10.317    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.317    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839  0:00:10.317    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library  0:00:10.317    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library  0:00:10.317    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.317    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.317    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps  0:00:10.317    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps  0:00:10.317    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths  0:00:10.317    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized  0:00:10.317    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished  0:00:10.317    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output  0:00:10.317    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa  0:00:10.318    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta  0:00:10.323    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg  0:00:10.326    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/final_contigs.paths  0:00:10.332    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/scaffolds.paths  0:00:10.344    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished  0:00:10.346    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 10 seconds===== Assembling finished. Used k-mer sizes: 33  * Corrected reads are in /galaxy/server/database/jobs_directory/000/24/working/corrected/ * Assembled contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.fasta * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.fasta * Assembly graph is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph.fastg * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph_with_scaffolds.gfa * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.paths * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.paths======= SPAdes pipeline finished.SPAdes log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.logThank you for using SPAdes!
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #1)" name="0" time="48.58322834968567">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "operations_0|operation|name": "SLIDINGWINDOW",  "output_err": true,  "output_logs": true,  "readtype|fastq_in": {   "id": "693a1cd29d25fba7",   "src": "hda"  },  "readtype|single_or_paired": "se" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/8/5/e/dataset_85e02584-d05b-47bf-a68a-9f9fede09e3f.dat\u0027 fastq_in.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.\u0027fastqsanger\u0027 fastq_out.\u0027fastqsanger\u0027 SLIDINGWINDOW:4:20 -trimlog trimlog 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/7/8/d/dataset_78d74f2e-725f-4944-b7c9-9ddb5b5113c9.dat\u0027",  "command_version": "",  "copied_from_job_id": null,  "create_time": "2024-07-01T18:44:00.587316",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-qdjjb",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "f1ee394b8557263f",  "inputs": {   "readtype|fastq_in": {    "id": "693a1cd29d25fba7",    "src": "hda",    "uuid": "85e02584-d05b-47bf-a68a-9f9fede09e3f"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1719859459.0000000",    "title": "Job End Time",    "value": "2024-07-01 18:44:19"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1719859459.0000000",    "title": "Job Start Time",    "value": "2024-07-01 18:44:19"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "12884.0000000",    "title": "Memory Allocated (MB)",    "value": "12884"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Cores Allocated",    "value": "6"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "err_file": {    "id": "b8baaa82c3ac1738",    "src": "hda",    "uuid": "e6f06e38-80db-4a85-836c-e831d5331da7"   },   "fastq_out": {    "id": "ef7fcf3885f4be2e",    "src": "hda",    "uuid": "78d74f2e-725f-4944-b7c9-9ddb5b5113c9"   },   "log_file": {    "id": "dda86b93b7f54e00",    "src": "hda",    "uuid": "480d5260-ae86-41c3-8a5a-e564c86d09f2"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "true",   "output_logs": "true",   "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 86, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"  },  "state": "ok",  "stderr": "",  "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n",  "traceback": null,  "update_time": "2024-07-01T18:44:31.566715",  "user_email": "tests@fake.org" }, "output_problems": [  "Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpqgtpmtnztrimmomatic_se_out1.err v. /tmp/tmpvpwtaz2utrimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n" ], "status": "failure", "test_index": 0, "time_seconds": 48.58322834968567, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlogQuality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #2)" name="1" time="29.3581702709198">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #11)" name="10" time="27.6287100315094">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #12)" name="11" time="22.796780347824097">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "illuminaclip|adapter_type|adapter_fasta": "TruSeq2-PE.fa",  "illuminaclip|do_illuminaclip": true,  "operations_0|operation|name": "SLIDINGWINDOW",  "readtype|fastq_r1_in": {   "id": "312c5ff6ac5366fd",   "src": "hda"  },  "readtype|fastq_r2_in": {   "id": "527fe1a898b52071",   "src": "hda"  },  "readtype|single_or_paired": "pair_of_files" }, "job": {  "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi \u0026\u0026 if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/6/e/dataset_e6e460ee-a762-46a8-96da-7af827e9efa4.dat\u0027 fastq_r1.\u0027fastqsanger\u0027 \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/e/a/c/dataset_eac9118d-53ac-4046-8e60-4324189b536d.dat\u0027 fastq_r2.\u0027fastqsanger\u0027 \u0026\u0026 java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.\u0027fastqsanger\u0027 fastq_r2.\u0027fastqsanger\u0027 fastq_out_r1_paired.\u0027fastqsanger\u0027 fastq_out_r1_unpaired.\u0027fastqsanger\u0027 fastq_out_r2_paired.\u0027fastqsanger\u0027 fastq_out_r2_unpaired.\u0027fastqsanger\u0027 ILLUMINACLIP:$TRIMMOMATIC_ADAPTERS_PATH/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20 2\u003e\u00261 | tee trimmomatic.log \u0026\u0026 if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" \u003e\u00262 ; exit 1 ; fi \u0026\u0026 mv fastq_out_r1_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/d/1/e/dataset_d1e5165c-8d6c-46bc-9019-7c21614dfbf8.dat\u0027 \u0026\u0026 mv fastq_out_r1_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/9/4/5/dataset_9456e166-cd5d-43c0-a05d-b490a8bc108b.dat\u0027 \u0026\u0026 mv fastq_out_r2_paired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/3/a/f/dataset_3afc18f3-a145-4cca-acc2-e56e1ec14332.dat\u0027 \u0026\u0026 mv fastq_out_r2_unpaired.\u0027fastqsanger\u0027 \u0027/galaxy/server/database/objects/7/6/4/dataset_7640f392-5537-4b45-bd90-a590c2aa3464.dat\u0027",  "command_version": null,  "copied_from_job_id": null,  "create_time": "2024-07-01T18:49:42.569739",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-z4292",  "galaxy_version": "23.1",  "history_id": "96e5ba45fdf0bfb7",  "id": "956e19ce2aaca607",  "inputs": {   "readtype|fastq_r1_in": {    "id": "312c5ff6ac5366fd",    "src": "hda",    "uuid": "e6e460ee-a762-46a8-96da-7af827e9efa4"   },   "readtype|fastq_r2_in": {    "id": "527fe1a898b52071",    "src": "hda",    "uuid": "eac9118d-53ac-4046-8e60-4324189b536d"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "fastq_out_r1_paired": {    "id": "a2dbc22e0f53ae39",    "src": "hda",    "uuid": "d1e5165c-8d6c-46bc-9019-7c21614dfbf8"   },   "fastq_out_r1_unpaired": {    "id": "fd46da9949ab2662",    "src": "hda",    "uuid": "9456e166-cd5d-43c0-a05d-b490a8bc108b"   },   "fastq_out_r2_paired": {    "id": "36a03c9736e013e6",    "src": "hda",    "uuid": "3afc18f3-a145-4cca-acc2-e56e1ec14332"   },   "fastq_out_r2_unpaired": {    "id": "87db9702578c7874",    "src": "hda",    "uuid": "7640f392-5537-4b45-bd90-a590c2aa3464"   }  },  "params": {   "__input_ext": "\"fastqsanger\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "illuminaclip": "{\"__current_case__\": 0, \"adapter_type\": {\"__current_case__\": 0, \"adapter_fasta\": \"TruSeq2-PE.fa\", \"standard_or_custom\": \"standard\"}, \"do_illuminaclip\": true, \"keep_both_reads\": true, \"min_adapter_len\": \"8\", \"palindrome_clip_threshold\": \"30\", \"seed_mismatches\": \"2\", \"simple_clip_threshold\": \"10\"}",   "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]",   "output_err": "false",   "output_logs": "false",   "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2024-07-01T18:49:47.431655",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 11, "time_seconds": 22.796780347824097, "tool_id": "trimmomatic", "tool_version": "0.38.1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #13)" name="12" time="29.28632879257202">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/80/configs/tmp0p8aj2xe:2:30:10:8:true SLIDINGWINDOW:4:20Using PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'Using Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'Using Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'Using Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'Using Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'Using Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'ILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequencesQuality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #3)" name="2" time="29.685349464416504">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #4)" name="3" time="30.381062746047974">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #5)" name="4" time="30.625380516052246">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqillumina fastq_r2.fastqillumina fastq_out_r1_paired.fastqillumina fastq_out_r1_unpaired.fastqillumina fastq_out_r2_paired.fastqillumina fastq_out_r2_unpaired.fastqillumina SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #6)" name="5" time="28.616089344024658">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20Quality encoding detected as phred64Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #7)" name="6" time="28.024680614471436">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger CROP:10Quality encoding detected as phred33Input Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #8)" name="7" time="30.87811255455017">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #9)" name="8" time="29.404958724975586">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticPE: Started with arguments: -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20Quality encoding detected as phred33Input Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)TrimmomaticPE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="trimmomatic (Test #10)" name="9" time="27.35355520248413">
        
            
            <system-out><![CDATA[
            Picked up _JAVA_OPTIONS: -Xmx12G -Xms1GTrimmomaticSE: Started with arguments: -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30Quality encoding detected as phred33Input Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)TrimmomaticSE: Completed successfully
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfcombine (Test #1)" name="0" time="9.423999071121216">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 9.423999071121216, "tool_id": "vcfcombine", "tool_version": "1.0.0_rc3+galaxy0"}
            ]]></error>
        
    </testcase>
    
</testsuite>