{"version": "0.1", "suitename": "Galaxy Tool Tests", "results": {"total": 213, "errors": 51, "failures": 34, "skips": 6}, "tests": [{"id": "anndata_ops/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.3492758274078369, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.3471205234527588, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-1", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 1, "time_seconds": 0.2367560863494873, "execution_problem": "Input staging problem: Test input file (mnn.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-1", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 1, "time_seconds": 0.23687100410461426, "execution_problem": "Input staging problem: Test input file (mnn.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-2", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 2, "time_seconds": 0.2352766990661621, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-2", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 2, "time_seconds": 0.23641109466552734, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-3", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 3, "time_seconds": 0.23698019981384277, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-3", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 3, "time_seconds": 0.23621296882629395, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-4", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 4, "time_seconds": 0.23516345024108887, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-4", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 4, "time_seconds": 0.23689746856689453, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-5", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 5, "time_seconds": 0.2379307746887207, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-5", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 5, "time_seconds": 0.23688006401062012, "execution_problem": "Input staging problem: Test input file (anndata_ops.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-6", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 6, "time_seconds": 0.23816704750061035, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-6", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 6, "time_seconds": 0.23896145820617676, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-7", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 7, "time_seconds": 0.23682761192321777, "execution_problem": "Input staging problem: Test input file (normalise_data.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-7", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 7, "time_seconds": 0.23786687850952148, "execution_problem": "Input staging problem: Test input file (normalise_data.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-8", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 8, "time_seconds": 0.23736000061035156, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-8", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 8, "time_seconds": 0.23844337463378906, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-9", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 9, "time_seconds": 0.23874735832214355, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "anndata_ops/1.9.3+galaxy0-9", "has_data": true, "data": {"tool_id": "anndata_ops", "tool_version": "1.9.3+galaxy0", "test_index": 9, "time_seconds": 0.2384500503540039, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "bcftools_plugin_counts/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_plugin_counts", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 40.370413303375244, "inputs": {"input_file": {"src": "hda", "id": "97bf889397e06033"}}, "job": {"model_class": "Job", "id": "4c01688fe9564866", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_plugin_counts/bcftools_plugin_counts/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:03:29.084302", "update_time": "2024-10-14T09:03:49.963678", "galaxy_version": "24.1", "external_id": "gxy-jkfld", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/9/6/5/dataset_96564ec4-3238-45c5-a762-0f76d34aeb41.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools plugin counts                 input.vcf.gz | tee counts_file.txt && sed 's/^.* \\([a-zA-Z]*\\):[ ]*\\([0-9]*\\)$/\\1 \\2/' counts_file.txt | python /galaxy/server/database/jobs_directory/000/475/configs/tmp4rg0u1xf > '/galaxy/server/database/objects/a/5/2/dataset_a5256fe5-3fab-45f5-8982-b6220ebe7afa.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "sec_restrict": "{\"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "97bf889397e06033", "src": "hda", "uuid": "96564ec4-3238-45c5-a762-0f76d34aeb41"}}, "outputs": {"output_file": {"id": "5ee88cc79f42d027", "src": "hda", "uuid": "a5256fe5-3fab-45f5-8982-b6220ebe7afa"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "Number of samples: 3\nNumber of SNPs:    11\nNumber of INDELs:  3\nNumber of MNPs:    0\nNumber of others:  0\nNumber of sites:   15\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 09:03:37", "plugin": "core", "name": "end_epoch", "raw_value": "1728896617.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:03:36", "plugin": "core", "name": "start_epoch", "raw_value": "1728896616.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-0", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 0, "time_seconds": 36.60226130485535, "inputs": {"input_file": {"src": "hda", "id": "44072008425d94b6"}, "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "496bd1fed124cce0", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:04:09.404025", "update_time": "2024-10-14T09:04:27.510593", "galaxy_version": "24.1", "external_id": "gxy-7nplk", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/e/2/8/dataset_e28d0d32-296a-4c66-b720-2f6bc1479be5.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/a/9/1/dataset_a914f89a-3299-494f-8110-1f26c26940a9.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "44072008425d94b6", "src": "hda", "uuid": "e28d0d32-296a-4c66-b720-2f6bc1479be5"}}, "outputs": {"output_file": {"id": "6ade75ac1a0f01f5", "src": "hda", "uuid": "a914f89a-3299-494f-8110-1f26c26940a9"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:04:15", "plugin": "core", "name": "end_epoch", "raw_value": "1728896655.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:04:15", "plugin": "core", "name": "start_epoch", "raw_value": "1728896655.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-1", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 1, "time_seconds": 23.065733432769775, "inputs": {"input_file": {"src": "hda", "id": "268efb038ea61557"}, "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "1720dd0b2c193bb0", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "error", "exit_code": null, "create_time": "2024-10-14T09:04:46.404139", "update_time": "2024-10-14T09:04:50.907438", "galaxy_version": "24.1", "external_id": "gxy-dqzk6", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     ln -s '/galaxy/server/database/objects/f/a/7/dataset_fa784e42-aa73-4d03-aea7-921b50ffa682.dat' input.bcf && ln -s '/galaxy/server/database/objects/_metadata_files/8/d/3/metadata_8d3fd28f-1b74-4505-a1ba-9dd03404acf7.dat' input.bcf.csi &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.bcf  > '/galaxy/server/database/objects/8/6/b/dataset_86bfd882-c935-4b1c-83f1-98db428e458a.dat'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "268efb038ea61557", "src": "hda", "uuid": "fa784e42-aa73-4d03-aea7-921b50ffa682"}}, "outputs": {"output_file": {"id": "cf76e6f9914000be", "src": "hda", "uuid": "86bfd882-c935-4b1c-83f1-98db428e458a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "bcftools_view/1.15.1+galaxy4-10", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 10, "time_seconds": 10.574542045593262, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "bcftools_view/1.15.1+galaxy4-11", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 11, "time_seconds": 30.70713710784912, "inputs": {"input_file": {"src": "hda", "id": "86fa226cff59f38a"}, "sec_filter|select_genotype": "^het", "sec_filter|phased": "--phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "9aa1b7410f41fa7c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:09:15.684916", "update_time": "2024-10-14T09:09:27.777277", "galaxy_version": "24.1", "external_id": "gxy-79f7b", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/d/2/5/dataset_d25d1c2a-6986-4428-a28f-2e65d36d79bb.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --genotype \"^het\" --phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/7/a/d/dataset_7ade6640-3c30-4c87-a36e-8f771a3144a7.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--phased\", \"private\": null, \"select_genotype\": \"^het\", \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "86fa226cff59f38a", "src": "hda", "uuid": "d25d1c2a-6986-4428-a28f-2e65d36d79bb"}}, "outputs": {"output_file": {"id": "92f169d15c871c0f", "src": "hda", "uuid": "7ade6640-3c30-4c87-a36e-8f771a3144a7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:09:17", "plugin": "core", "name": "end_epoch", "raw_value": "1728896957.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:09:17", "plugin": "core", "name": "start_epoch", "raw_value": "1728896957.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-12", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 12, "time_seconds": 31.15007996559143, "inputs": {"input_file": {"src": "hda", "id": "e9f3c06fb528213f"}, "sec_restrict|regions_overlap": "1", "sec_subset|samples": "NA00002", "sec_filter|min_ac": "1", "sec_filter|max_ac": "1", "sec_filter|types": "snps", "output_type": "v"}, "job": {"model_class": "Job", "id": "4211577004693fe5", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:09:46.197422", "update_time": "2024-10-14T09:09:58.989276", "galaxy_version": "24.1", "external_id": "gxy-vzkqr", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/6/7/7/dataset_677e633a-ea56-455d-a9a5-d02bc71d0d12.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00002'     --min-ac 1 --max-ac 1 --types \"snps\"            --regions-overlap 1          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/4/7/5/dataset_4754d74f-4519-40a7-b7ac-d30eefa92204.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"1\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"1\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": \"snps\", \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00002\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": \"1\", \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "e9f3c06fb528213f", "src": "hda", "uuid": "677e633a-ea56-455d-a9a5-d02bc71d0d12"}}, "outputs": {"output_file": {"id": "b4be1ff6964d3f97", "src": "hda", "uuid": "4754d74f-4519-40a7-b7ac-d30eefa92204"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 09:09:48", "plugin": "core", "name": "end_epoch", "raw_value": "1728896988.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:09:47", "plugin": "core", "name": "start_epoch", "raw_value": "1728896987.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-2", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 2, "time_seconds": 31.227174043655396, "inputs": {"input_file": {"src": "hda", "id": "273b851a4359d57b"}, "sec_restrict|regions|regions_0|chrom": "Y", "sec_restrict|regions|regions_0|start": "20", "sec_restrict|regions|regions_src": "regions", "sec_subset|samples": "NA00003", "sec_filter|known_or_novel": "--novel", "sec_filter|private": "--exclude-private", "output_type": "v"}, "job": {"model_class": "Job", "id": "38efb4509a7fd5e9", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:05:09.592277", "update_time": "2024-10-14T09:05:22.081980", "galaxy_version": "24.1", "external_id": "gxy-qxmrf", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/c/b/9/dataset_cb977ca4-a19d-4f2f-bead-8079d0636449.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --novel --exclude-private                 --regions 'Y:20-'          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/3/1/b/dataset_31bd61ee-56f8-4d17-81e3-d081c0c3ffa8.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": \"--novel\", \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--exclude-private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"Y\", \"start\": \"20\", \"stop\": null}], \"regions_src\": \"regions\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "273b851a4359d57b", "src": "hda", "uuid": "cb977ca4-a19d-4f2f-bead-8079d0636449"}}, "outputs": {"output_file": {"id": "fc1e28f0d727ac8c", "src": "hda", "uuid": "31bd61ee-56f8-4d17-81e3-d081c0c3ffa8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:05:11", "plugin": "core", "name": "end_epoch", "raw_value": "1728896711.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:05:11", "plugin": "core", "name": "start_epoch", "raw_value": "1728896711.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-3", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 3, "time_seconds": 34.19683051109314, "inputs": {"input_file": {"src": "hda", "id": "3ca1aa4ed3d1af27"}, "sec_restrict|apply_filters": "PASS", "sec_restrict|regions|regions_0|chrom": "Y", "sec_restrict|regions|regions_0|start": "20", "sec_restrict|regions|regions_src": "regions", "sec_subset|samples": "NA00003", "sec_filter|known_or_novel": "--known", "sec_filter|private": "--exclude-private", "output_type": "v"}, "job": {"model_class": "Job", "id": "97f451b77a9a3376", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:05:42.845610", "update_time": "2024-10-14T09:05:56.472165", "galaxy_version": "24.1", "external_id": "gxy-49ck4", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/4/1/dataset_241148a6-1c2a-4584-8ef2-de06e0063ce4.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --known --exclude-private     --apply-filters 'PASS'             --regions 'Y:20-'          --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/5/6/e/dataset_56eb7af8-4a77-44bf-a92d-39a72dd77b1a.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": \"--known\", \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--exclude-private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"PASS\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"Y\", \"start\": \"20\", \"stop\": null}], \"regions_src\": \"regions\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "3ca1aa4ed3d1af27", "src": "hda", "uuid": "241148a6-1c2a-4584-8ef2-de06e0063ce4"}}, "outputs": {"output_file": {"id": "9d39bcb70610623b", "src": "hda", "uuid": "56eb7af8-4a77-44bf-a92d-39a72dd77b1a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:05:45", "plugin": "core", "name": "end_epoch", "raw_value": "1728896745.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:05:45", "plugin": "core", "name": "start_epoch", "raw_value": "1728896745.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-4", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 4, "time_seconds": 31.20521831512451, "inputs": {"input_file": {"src": "hda", "id": "ab65af1efd707112"}, "sec_subset|samples": "NA00003", "sec_filter|private": "--private", "output_type": "v"}, "job": {"model_class": "Job", "id": "334f312fb2e4009e", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:06:14.858712", "update_time": "2024-10-14T09:06:27.749235", "galaxy_version": "24.1", "external_id": "gxy-h5v84", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/0/8/7/dataset_08736f2b-a87f-4a8d-96f0-30a6ad9f99fb.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view     --samples 'NA00003'     --private                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/e/d/8/dataset_ed89b03f-5ef1-448f-8dc3-0c71ce1511a5.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": \"--private\", \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"NA00003\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "ab65af1efd707112", "src": "hda", "uuid": "08736f2b-a87f-4a8d-96f0-30a6ad9f99fb"}}, "outputs": {"output_file": {"id": "ee782579a1a2ab89", "src": "hda", "uuid": "ed89b03f-5ef1-448f-8dc3-0c71ce1511a5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 09:06:17", "plugin": "core", "name": "end_epoch", "raw_value": "1728896777.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:06:16", "plugin": "core", "name": "start_epoch", "raw_value": "1728896776.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-5", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 5, "time_seconds": 10.59225606918335, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "bcftools_view/1.15.1+galaxy4-6", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 6, "time_seconds": 32.620009660720825, "inputs": {"input_file": {"src": "hda", "id": "c0c8af9cffd36a71"}, "sec_filter|phased": "--phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "19b83611714e0704", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:06:58.401039", "update_time": "2024-10-14T09:07:11.179985", "galaxy_version": "24.1", "external_id": "gxy-8zt9v", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/8/4/b/dataset_84b2031e-699d-482f-bf69-f710dc0fc004.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/0/a/1/dataset_0a13c1e7-ae3e-4205-a2f1-2310fa79c2c1.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--phased\", \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "c0c8af9cffd36a71", "src": "hda", "uuid": "84b2031e-699d-482f-bf69-f710dc0fc004"}}, "outputs": {"output_file": {"id": "83262ee6216f2ae4", "src": "hda", "uuid": "0a13c1e7-ae3e-4205-a2f1-2310fa79c2c1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 09:07:01", "plugin": "core", "name": "end_epoch", "raw_value": "1728896821.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:07:00", "plugin": "core", "name": "start_epoch", "raw_value": "1728896820.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-7", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 7, "time_seconds": 31.166772603988647, "inputs": {"input_file": {"src": "hda", "id": "ce2cbf8917f8732c"}, "sec_filter|phased": "--exclude-phased", "output_type": "v"}, "job": {"model_class": "Job", "id": "d57584bfb4db2f3c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:07:30.796614", "update_time": "2024-10-14T09:07:42.511238", "galaxy_version": "24.1", "external_id": "gxy-zmn6f", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/6/0/4/dataset_604a6acd-f827-4923-b623-1a6dbf37a92a.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --exclude-phased                     --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/a/3/4/dataset_a34b872a-01d8-4fbb-a87b-9f7015879826.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": null, \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": \"--exclude-phased\", \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "ce2cbf8917f8732c", "src": "hda", "uuid": "604a6acd-f827-4923-b623-1a6dbf37a92a"}}, "outputs": {"output_file": {"id": "6d1bd85701148d39", "src": "hda", "uuid": "a34b872a-01d8-4fbb-a87b-9f7015879826"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 09:07:32", "plugin": "core", "name": "end_epoch", "raw_value": "1728896852.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:07:31", "plugin": "core", "name": "start_epoch", "raw_value": "1728896851.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-8", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 8, "time_seconds": 31.122177839279175, "inputs": {"input_file": {"src": "hda", "id": "f96bf7540b81aa85"}, "sec_filter|min_alleles": "2", "sec_filter|max_alleles": "2", "sec_filter|min_af": "0.3", "sec_filter|max_af": "0.7", "sec_output|header": "--header-only", "output_type": "v"}, "job": {"model_class": "Job", "id": "1e2a87ed23127a52", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:08:01.283496", "update_time": "2024-10-14T09:08:13.849769", "galaxy_version": "24.1", "external_id": "gxy-k87pw", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/0/c/d/dataset_0cd89012-c7c8-48a2-a301-08254be4f237.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --min-alleles 2 --max-alleles 2 --min-af 0.3 --max-af 0.7   --header-only                   --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/f/d/2/dataset_fd218a6e-7cf7-43d5-9a1a-2704a857bf08.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": \"--header-only\", \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"0.7\", \"max_alleles\": \"2\", \"min_ac\": \"\", \"min_af\": \"0.3\", \"min_alleles\": \"2\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": null}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "f96bf7540b81aa85", "src": "hda", "uuid": "0cd89012-c7c8-48a2-a301-08254be4f237"}}, "outputs": {"output_file": {"id": "a7a2ad7d7bcec7ba", "src": "hda", "uuid": "fd218a6e-7cf7-43d5-9a1a-2704a857bf08"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 09:08:03", "plugin": "core", "name": "end_epoch", "raw_value": "1728896883.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:08:02", "plugin": "core", "name": "start_epoch", "raw_value": "1728896882.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_view/1.15.1+galaxy4-9", "has_data": true, "data": {"tool_id": "bcftools_view", "tool_version": "1.15.1+galaxy4", "test_index": 9, "time_seconds": 32.35675573348999, "inputs": {"input_file": {"src": "hda", "id": "a38783a6dfdc7b7e"}, "sec_filter|uncalled": "--uncalled", "sec_output|header": "--no-header", "output_type": "v"}, "job": {"model_class": "Job", "id": "7c6edfdb48ed5f4c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_view/bcftools_view/1.15.1+galaxy4", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:08:33.365646", "update_time": "2024-10-14T09:08:46.073723", "galaxy_version": "24.1", "external_id": "gxy-vxb5j", "handler": null, "job_runner_name": null, "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/5/c/dataset_25cb3574-cc9d-4e72-8118-29a10285727d.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools view         --uncalled   --no-header                   --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/6/1/5/dataset_61544b5e-238a-481d-8865-1ada34e3f2f0.dat'", "user_email": "tests@fake.org", "command_version": "Version: 1.15.1 (using htslib 1.15.1)", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output": "{\"compression_level\": \"\", \"drop_genotypes\": false, \"header\": \"--no-header\", \"invert_targets_file\": false}", "sec_filter": "{\"exclude_types\": null, \"known_or_novel\": null, \"max_ac\": \"\", \"max_af\": \"\", \"max_alleles\": \"\", \"min_ac\": \"\", \"min_af\": \"\", \"min_alleles\": \"\", \"phased\": null, \"private\": null, \"select_genotype\": null, \"types\": null, \"uncalled\": \"--uncalled\"}", "sec_subset": "{\"force_samples\": false, \"invert_samples\": false, \"invert_samples_file\": false, \"no_update\": false, \"samples\": \"\", \"samples_file\": null, \"trim_alt_alleles\": false}", "sec_restrict": "{\"apply_filters\": \"\", \"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"regions_overlap\": null, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}, \"targets_overlap\": null}"}, "inputs": {"input_file": {"id": "a38783a6dfdc7b7e", "src": "hda", "uuid": "25cb3574-cc9d-4e72-8118-29a10285727d"}}, "outputs": {"output_file": {"id": "241aa89b3bcab965", "src": "hda", "uuid": "61544b5e-238a-481d-8865-1ada34e3f2f0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:08:35", "plugin": "core", "name": "end_epoch", "raw_value": "1728896915.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:08:35", "plugin": "core", "name": "start_epoch", "raw_value": "1728896915.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-0", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 0, "time_seconds": 38.26858925819397, "inputs": {"library|input_1": {"src": "hda", "id": "cd9d04aff23335a6"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "38b931c13d073815", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:48:12.355129", "update_time": "2024-10-14T06:48:31.408369", "galaxy_version": "24.1", "external_id": "gxy-7lsrf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/8/5/dataset_085bd988-2c17-4ead-b1ea-c6c6628e71d8.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 68, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "cd9d04aff23335a6", "src": "hda", "uuid": "085bd988-2c17-4ead-b1ea-c6c6628e71d8"}}, "outputs": {"out1": {"id": "bab63d56b830a2a7", "src": "hda", "uuid": "3201b4fe-d411-4bd4-a3f3-1005a420e132"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10378.202 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10378.202 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:48:18", "plugin": "core", "name": "end_epoch", "raw_value": "1728888498.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:48:18", "plugin": "core", "name": "start_epoch", "raw_value": "1728888498.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-0", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 0, "time_seconds": 24.652881622314453, "inputs": {"library|input_1": {"src": "hda", "id": "f6701fb611f9069b"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "29cc7028ff4632f4", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-10-14T07:11:06.021710", "update_time": "2024-10-14T07:11:12.088618", "galaxy_version": "24.1", "external_id": "gxy-2wwqg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/6/5/dataset_56553465-9ad6-424d-84f2-1c1a68f34813.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 189, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "f6701fb611f9069b", "src": "hda", "uuid": "56553465-9ad6-424d-84f2-1c1a68f34813"}}, "outputs": {"out1": {"id": "1dddfef25edc90ce", "src": "hda", "uuid": "99b131e4-b654-4fba-b2fc-850285fdfbfc"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (10848.284 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (10848.284 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-1", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 1, "time_seconds": 32.09993767738342, "inputs": {"library|input_1": {"src": "hda", "id": "c20c8140db56b044"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "32361b15ce3cada7", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:48:51.000047", "update_time": "2024-10-14T06:49:03.512824", "galaxy_version": "24.1", "external_id": "gxy-6ckvl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/f/1/dataset_ff1a8df7-4434-4ad8-ba8a-f0703cbd0e1a.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 70, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "c20c8140db56b044", "src": "hda", "uuid": "ff1a8df7-4434-4ad8-ba8a-f0703cbd0e1a"}}, "outputs": {"out1": {"id": "2624d8f4649402dd", "src": "hda", "uuid": "821144da-fe9b-4b56-b79c-4ae19b52bffb"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.086 s (869.515 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.086 s (869.515 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:48:53", "plugin": "core", "name": "end_epoch", "raw_value": "1728888533.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:48:53", "plugin": "core", "name": "start_epoch", "raw_value": "1728888533.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-1", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 1, "time_seconds": 31.28785729408264, "inputs": {"library|input_1": {"src": "hda", "id": "49906c6d1965b48a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "cbcc690a0713a2fe", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:11:31.386755", "update_time": "2024-10-14T07:11:43.169594", "galaxy_version": "24.1", "external_id": "gxy-65wrk", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/d/2/dataset_7d2ce7e9-95e9-409b-bdcd-427e6f89f7f3.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 191, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "49906c6d1965b48a", "src": "hda", "uuid": "7d2ce7e9-95e9-409b-bdcd-427e6f89f7f3"}}, "outputs": {"out1": {"id": "0ddd4ef3f76b7d1a", "src": "hda", "uuid": "74cd4a2d-a2fd-46be-a17d-80b0ade83c68"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.085 s (861.011 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.085 s (861.011 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):         24,843 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:11:33", "plugin": "core", "name": "end_epoch", "raw_value": "1728889893.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:11:32", "plugin": "core", "name": "start_epoch", "raw_value": "1728889892.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-10", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 10, "time_seconds": 32.239848375320435, "inputs": {"library|input_1": {"src": "hda", "id": "1d8eab5a34d9180b"}, "library|r1|front_adapters_0|adapter_source|adapter_name": "A1", "library|r1|front_adapters_0|adapter_source|adapter": "^GTCGGTAA", "library|r1|front_adapters_0|adapter_source|adapter_source_list": "user", "library|r1|front_adapters_1|adapter_source|adapter_name": "A2", "library|r1|front_adapters_1|adapter_source|adapter": "^AGGTCACT", "library|r1|front_adapters_1|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "f59da90a55a5ff43", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:52:57.108489", "update_time": "2024-10-14T06:53:09.901798", "galaxy_version": "24.1", "external_id": "gxy-pnbcb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/0/f/dataset_10f7b052-7c92-44b6-bd12-bae4995fcf9c.dat' 'cutadapt_in_split_fastq.fq' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g 'A1'='^GTCGGTAA'   -g 'A2'='^AGGTCACT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq'  'cutadapt_in_split_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"multiple_output\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 94, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^GTCGGTAA\", \"adapter_name\": \"A1\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}, {\"__index__\": 1, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^AGGTCACT\", \"adapter_name\": \"A2\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}]}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "1d8eab5a34d9180b", "src": "hda", "uuid": "10f7b052-7c92-44b6-bd12-bae4995fcf9c"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "c25ce2dec1c67bc8", "src": "hda", "uuid": "9e57781f-600e-4323-b638-8f4cb26eb772"}, "__new_primary_file_split_output|A2__": {"id": "8bb8108c82f4fcb9", "src": "hda", "uuid": "1f4981df-2367-46b0-a02d-620c0c664f2e"}, "__new_primary_file_split_output|unknown__": {"id": "72035d3e09581398", "src": "hda", "uuid": "124aca4a-08df-4bb8-96d9-beee32812e6b"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "df0b36f8c34d2c20"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.049 s (4430.923 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.049 s (4430.923 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:52:59", "plugin": "core", "name": "end_epoch", "raw_value": "1728888779.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:52:59", "plugin": "core", "name": "start_epoch", "raw_value": "1728888779.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-10", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 10, "time_seconds": 32.251346588134766, "inputs": {"library|input_1": {"src": "hda", "id": "fd075f5c1c23c05d"}, "library|r1|front_adapters_0|adapter_source|adapter_name": "A1", "library|r1|front_adapters_0|adapter_source|adapter": "^GTCGGTAA", "library|r1|front_adapters_0|adapter_source|adapter_source_list": "user", "library|r1|front_adapters_1|adapter_source|adapter_name": "A2", "library|r1|front_adapters_1|adapter_source|adapter": "^AGGTCACT", "library|r1|front_adapters_1|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "multiple_output"}, "job": {"model_class": "Job", "id": "ec34d662665d5643", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:15:53.616591", "update_time": "2024-10-14T07:16:06.231063", "galaxy_version": "24.1", "external_id": "gxy-6wwzm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/d/9/dataset_9d922a28-d340-48ef-a0f3-182f7f185a6e.dat' 'cutadapt_in_split_fastq.fq' && mkdir split &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -g 'A1'='^GTCGGTAA'   -g 'A2'='^AGGTCACT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'split/{name}.fastq'  'cutadapt_in_split_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"multiple_output\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 217, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^GTCGGTAA\", \"adapter_name\": \"A1\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}, {\"__index__\": 1, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"^AGGTCACT\", \"adapter_name\": \"A2\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}]}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "fd075f5c1c23c05d", "src": "hda", "uuid": "9d922a28-d340-48ef-a0f3-182f7f185a6e"}}, "outputs": {"__new_primary_file_split_output|A1__": {"id": "f27b7b36d9479c5b", "src": "hda", "uuid": "660f5fc6-376c-46c6-8abf-649e770f2e4a"}, "__new_primary_file_split_output|A2__": {"id": "773645678c2240b0", "src": "hda", "uuid": "ddc77a5e-4857-4de8-a0d4-f3ed933003e4"}, "__new_primary_file_split_output|unknown__": {"id": "9891936868a841dd", "src": "hda", "uuid": "c72fa96b-d4e7-48fe-9253-ed12c42b652f"}}, "copied_from_job_id": null, "output_collections": {"split_output": {"src": "hdca", "id": "be699bbc74739a1f"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.053 s (4774.570 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -g A1=^GTCGGTAA -g A2=^AGGTCACT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o split/{name}.fastq cutadapt_in_split_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.053 s (4774.570 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      11\nReads with adapters:                        10 (90.9%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads discarded as untrimmed:                0 (0.0%)\nReads written (passing filters):            11 (100.0%)\n\nTotal basepairs processed:         1,210 bp\nTotal written (filtered):          1,130 bp (93.4%)\n\n=== Adapter A1 ===\n\nSequence: GTCGGTAA; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n\n\n=== Adapter A2 ===\n\nSequence: AGGTCACT; Type: anchored 5'; Length: 8; Trimmed: 5 times\n\nNo. of allowed errors: 0\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t5\t0.0\t0\t5\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:15:55", "plugin": "core", "name": "end_epoch", "raw_value": "1728890155.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:15:55", "plugin": "core", "name": "start_epoch", "raw_value": "1728890155.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-11", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 11, "time_seconds": 19.084796905517578, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-11", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 11, "time_seconds": 11.412254333496094, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-12", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 12, "time_seconds": 30.56485104560852, "inputs": {"library|input_1": {"src": "hda", "id": "27f1115b64e0b342"}, "library|r1|adapters_0|adapter_source|adapter": "AAAT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "caa8c9bcbffa88fa", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:53:49.051411", "update_time": "2024-10-14T06:53:59.750316", "galaxy_version": "24.1", "external_id": "gxy-8sl7r", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/a/5/dataset_4a578344-51db-46a3-a521-7483e5811df7.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq' -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 100, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "27f1115b64e0b342", "src": "hda", "uuid": "4a578344-51db-46a3-a521-7483e5811df7"}}, "outputs": {"out1": {"id": "40d0e49e6b32adea", "src": "hda", "uuid": "2abc3ae2-37d4-4c96-b76c-12a130628e8a"}, "untrimmed_output": {"id": "b435e2d9d3243553", "src": "hda", "uuid": "0ca0ef2b-e31b-48d7-9755-61aec5deb33d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.038 s (12833.277 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.038 s (12833.277 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:53:50", "plugin": "core", "name": "end_epoch", "raw_value": "1728888830.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:53:50", "plugin": "core", "name": "start_epoch", "raw_value": "1728888830.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-12", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 12, "time_seconds": 31.361584901809692, "inputs": {"library|input_1": {"src": "hda", "id": "19aa40bd49d1d0cd"}, "library|r1|adapters_0|adapter_source|adapter": "AAAT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "5f924997d793a646", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:16:37.153770", "update_time": "2024-10-14T07:16:48.921071", "galaxy_version": "24.1", "external_id": "gxy-lv6dr", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/8/f/dataset_f8fdce8f-9b4e-443d-959a-b722a7892e67.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq' -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 223, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "19aa40bd49d1d0cd", "src": "hda", "uuid": "f8fdce8f-9b4e-443d-959a-b722a7892e67"}}, "outputs": {"out1": {"id": "1972dde5c3be90d2", "src": "hda", "uuid": "55f9f831-b9e4-48e3-9906-4aef9f955566"}, "untrimmed_output": {"id": "57d56830dedab2fb", "src": "hda", "uuid": "d830ab7a-d501-47f5-8a5a-da02f220fbbd"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (12209.813 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAT --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (12209.813 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             30 bp (29.4%)\n\n=== Adapter 1 ===\n\nSequence: AAAT; Type: regular 3'; Length: 4; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-4 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n4\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:16:39", "plugin": "core", "name": "end_epoch", "raw_value": "1728890199.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:16:38", "plugin": "core", "name": "start_epoch", "raw_value": "1728890198.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-13", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 13, "time_seconds": 32.48226308822632, "inputs": {"library|input_1": {"src": "hda", "id": "c1d4a8b764e4ca42"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "bb4523482831d223", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:54:19.355537", "update_time": "2024-10-14T06:54:32.025540", "galaxy_version": "24.1", "external_id": "gxy-jjrds", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/b/9/dataset_cb9af618-cf41-4aad-87b9-c1ce315c4362.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq.gz' -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 103, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "c1d4a8b764e4ca42", "src": "hda", "uuid": "cb9af618-cf41-4aad-87b9-c1ce315c4362"}}, "outputs": {"out1": {"id": "755fa56bc0f34960", "src": "hda", "uuid": "beaf4f37-85a5-4a64-8267-552aa342e7b3"}, "untrimmed_output": {"id": "bc0ad636dbb2a0e4", "src": "hda", "uuid": "4ace6b5a-8cd4-48b1-90b4-959fa4926d7b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.148 s (1494.083 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.148 s (1494.083 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:54:21", "plugin": "core", "name": "end_epoch", "raw_value": "1728888861.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:54:21", "plugin": "core", "name": "start_epoch", "raw_value": "1728888861.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-13", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 13, "time_seconds": 33.29490923881531, "inputs": {"library|input_1": {"src": "hda", "id": "2bcffbfb45b839c5"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": "untrimmed_file"}, "job": {"model_class": "Job", "id": "6353ba1f3d4bc823", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:17:09.764219", "update_time": "2024-10-14T07:17:22.230595", "galaxy_version": "24.1", "external_id": "gxy-7nzgr", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/f/d/dataset_efdd2221-a568-4e09-b363-a12ed16afde7.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --untrimmed-output='untrimmed_output.fq.gz' -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "\"untrimmed_file\"", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 226, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "2bcffbfb45b839c5", "src": "hda", "uuid": "efdd2221-a568-4e09-b363-a12ed16afde7"}}, "outputs": {"out1": {"id": "dd5189b6a684405a", "src": "hda", "uuid": "f2d311f7-0402-4761-8ce4-58ee9b68cbf9"}, "untrimmed_output": {"id": "bc1e4000b3868fa0", "src": "hda", "uuid": "e3f531d8-c511-4f41-a5f4-e860221aca27"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.144 s (1456.723 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --untrimmed-output=untrimmed_output.fq.gz -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.144 s (1456.723 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         2 (2.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        24,849 bp\nTotal written (filtered):            496 bp (2.0%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:17:12", "plugin": "core", "name": "end_epoch", "raw_value": "1728890232.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:17:11", "plugin": "core", "name": "start_epoch", "raw_value": "1728890231.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-14", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 14, "time_seconds": 33.94451546669006, "inputs": {"library|input_1": {"src": "hda", "id": "344815cba02029bd"}, "library|input_2": {"src": "hda", "id": "aaed9ff75a1d87b1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|discard_untrimmed": true, "filter_options|minimum_length": "1", "filter_options|maximum_length": "1000", "filter_options|max_n": "0", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "055399286a1aeb72", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:54:53.778739", "update_time": "2024-10-14T06:55:07.671441", "galaxy_version": "24.1", "external_id": "gxy-4m2zv", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/4/b/dataset_e4b99480-6363-42d4-81bf-9c2a271beb2a.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/6/d/6/dataset_6d6d1927-5998-49aa-9f75-acee9ea38a4c.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim       --discard-untrimmed  --minimum-length=1 --maximum-length=1000 --max-n=0.0  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": true, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"0.0\", \"maximum_length\": \"1000\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 106, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 107, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "344815cba02029bd", "src": "hda", "uuid": "e4b99480-6363-42d4-81bf-9c2a271beb2a"}, "library|input_2": {"id": "aaed9ff75a1d87b1", "src": "hda", "uuid": "6d6d1927-5998-49aa-9f75-acee9ea38a4c"}}, "outputs": {"out1": {"id": "92c5d37cf3e3476a", "src": "hda", "uuid": "90e935dc-c26a-4eb7-a9fb-488ffc329665"}, "out2": {"id": "aabe1824a6d35417", "src": "hda", "uuid": "af70de56-20a9-4440-9116-a4245652baaf"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.145 s (1467.893 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.145 s (1467.893 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:54:56", "plugin": "core", "name": "end_epoch", "raw_value": "1728888896.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:54:55", "plugin": "core", "name": "start_epoch", "raw_value": "1728888895.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-14", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 14, "time_seconds": 33.13681888580322, "inputs": {"library|input_1": {"src": "hda", "id": "1e36c71311b3f207"}, "library|input_2": {"src": "hda", "id": "831f4fccfbc7880e"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|discard_untrimmed": true, "filter_options|minimum_length": "1", "filter_options|maximum_length": "1000", "filter_options|max_n": "0", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "6d7c68c5f2558d73", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:17:43.414898", "update_time": "2024-10-14T07:17:57.020780", "galaxy_version": "24.1", "external_id": "gxy-qdgcv", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/f/e/dataset_4fe3c247-14ba-4109-ad9b-1e1387908465.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/4/c/3/dataset_4c321be9-0bb8-475c-a3c4-1b0b159ec40d.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim       --discard-untrimmed  --minimum-length=1 --maximum-length=1000 --max-n=0.0  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": true, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"0.0\", \"maximum_length\": \"1000\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 229, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 230, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "1e36c71311b3f207", "src": "hda", "uuid": "4fe3c247-14ba-4109-ad9b-1e1387908465"}, "library|input_2": {"id": "831f4fccfbc7880e", "src": "hda", "uuid": "4c321be9-0bb8-475c-a3c4-1b0b159ec40d"}}, "outputs": {"out1": {"id": "59bd6704885cb937", "src": "hda", "uuid": "b47e70b8-0e55-4934-bfbc-5c0ed6eda583"}, "out2": {"id": "763439942f3ce481", "src": "hda", "uuid": "a9d27079-ce12-4888-8e73-75b06fc2fbd9"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.146 s (1471.994 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-untrimmed --minimum-length=1 --maximum-length=1000 --max-n=0.0 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.146 s (1471.994 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                    0 (0.0%)\nPairs with too many N:                       0 (0.0%)\nPairs written (passing filters):             2 (2.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):            998 bp (2.0%)\n  Read 1:           496 bp\n  Read 2:           502 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:17:46", "plugin": "core", "name": "end_epoch", "raw_value": "1728890266.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:17:45", "plugin": "core", "name": "start_epoch", "raw_value": "1728890265.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-15", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 15, "time_seconds": 31.776079416275024, "inputs": {"library|input_1": {"src": "hda", "id": "f59639efe4beea51"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5"}, "job": {"model_class": "Job", "id": "6c962520a1631c55", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:55:26.440120", "update_time": "2024-10-14T06:55:38.998580", "galaxy_version": "24.1", "external_id": "gxy-gmcz8", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/6/d/dataset_46d65546-aa85-4c7e-8672-399389475b3e.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 110, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "f59639efe4beea51", "src": "hda", "uuid": "46d65546-aa85-4c7e-8672-399389475b3e"}}, "outputs": {"out1": {"id": "359802f7b70dfe4d", "src": "hda", "uuid": "b81b1a73-fc09-4c89-9e5a-dcf945e47f3b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10612.806 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10612.806 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:55:28", "plugin": "core", "name": "end_epoch", "raw_value": "1728888928.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:55:28", "plugin": "core", "name": "start_epoch", "raw_value": "1728888928.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-15", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 15, "time_seconds": 10.909388542175293, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-16", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 16, "time_seconds": 31.36886429786682, "inputs": {"library|input_1": {"src": "hda", "id": "dcd28fc540573f8d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5", "read_mod_options|rename": "{id} barcode={cut_prefix}"}, "job": {"model_class": "Job", "id": "f758fcba6198996c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:55:58.323694", "update_time": "2024-10-14T06:56:10.297921", "galaxy_version": "24.1", "external_id": "gxy-fqnpb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/6/a/dataset_46acbea2-6ed9-4d03-af24-75b9129cc62b.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1    --rename='{id} barcode={cut_prefix}'   -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": \"{id} barcode={cut_prefix}\", \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 112, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "dcd28fc540573f8d", "src": "hda", "uuid": "46acbea2-6ed9-4d03-af24-75b9129cc62b"}}, "outputs": {"out1": {"id": "a56d6e4e46263742", "src": "hda", "uuid": "03a22265-8b47-4e93-af26-9ab10cafd48f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10623.614 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10623.614 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:56:00", "plugin": "core", "name": "end_epoch", "raw_value": "1728888960.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:56:00", "plugin": "core", "name": "start_epoch", "raw_value": "1728888960.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-16", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 16, "time_seconds": 31.37362051010132, "inputs": {"library|input_1": {"src": "hda", "id": "e9abbe775aa3f785"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|cut": "5", "read_mod_options|rename": "{id} barcode={cut_prefix}"}, "job": {"model_class": "Job", "id": "81a41918c93246ba", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:18:26.723831", "update_time": "2024-10-14T07:18:38.828219", "galaxy_version": "24.1", "external_id": "gxy-wk775", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/0/e/dataset_e0ebb5dd-72de-4b32-9a4d-aaf128d78fec.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --cut=5       --minimum-length=1    --rename='{id} barcode={cut_prefix}'   -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": \"{id} barcode={cut_prefix}\", \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"5\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 234, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "e9abbe775aa3f785", "src": "hda", "uuid": "e0ebb5dd-72de-4b32-9a4d-aaf128d78fec"}}, "outputs": {"out1": {"id": "7b0040d08ae288e5", "src": "hda", "uuid": "7191db7c-7881-417e-bff4-99da49c3f1d0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10631.720 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --cut=5 --minimum-length=1 --rename={id} barcode={cut_prefix} -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10631.720 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             87 bp (85.3%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:18:28", "plugin": "core", "name": "end_epoch", "raw_value": "1728890308.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:18:27", "plugin": "core", "name": "start_epoch", "raw_value": "1728890307.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-17", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 17, "time_seconds": 32.14602875709534, "inputs": {"library|input_1": {"src": "hda", "id": "a1b49108f695e1d5"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "retain"}, "job": {"model_class": "Job", "id": "cd9d04aff23335a6", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:56:29.839174", "update_time": "2024-10-14T06:56:42.622034", "galaxy_version": "24.1", "external_id": "gxy-9ql2j", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/2/1/dataset_921469a7-574a-4035-aa88-d81cb32db41a.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=retain         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"retain\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 114, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "a1b49108f695e1d5", "src": "hda", "uuid": "921469a7-574a-4035-aa88-d81cb32db41a"}}, "outputs": {"out1": {"id": "cd79da27a7931abd", "src": "hda", "uuid": "3d09b77d-757d-41f1-a3cb-bbe16e3d3258"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.034 s (11223.555 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.034 s (11223.555 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:56:31", "plugin": "core", "name": "end_epoch", "raw_value": "1728888991.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:56:31", "plugin": "core", "name": "start_epoch", "raw_value": "1728888991.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-17", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 17, "time_seconds": 32.90845251083374, "inputs": {"library|input_1": {"src": "hda", "id": "ff8964ff481fa2e7"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "retain"}, "job": {"model_class": "Job", "id": "737f6a8ad614c604", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:18:59.008515", "update_time": "2024-10-14T07:19:11.888212", "galaxy_version": "24.1", "external_id": "gxy-x6c22", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/4/7/dataset_5475a151-93e0-415f-befd-305b912cc4a6.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=retain         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"retain\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 236, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "ff8964ff481fa2e7", "src": "hda", "uuid": "5475a151-93e0-415f-befd-305b912cc4a6"}}, "outputs": {"out1": {"id": "7b0dcac68c100483", "src": "hda", "uuid": "5e9aa2ec-4796-4259-9c44-0e1e72f91c02"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (11100.133 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=retain --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (11100.133 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:19:00", "plugin": "core", "name": "end_epoch", "raw_value": "1728890340.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:19:00", "plugin": "core", "name": "start_epoch", "raw_value": "1728890340.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-18", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 18, "time_seconds": 33.23897337913513, "inputs": {"library|input_1": {"src": "hda", "id": "035df4a496196750"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "mask"}, "job": {"model_class": "Job", "id": "c20c8140db56b044", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:57:02.083277", "update_time": "2024-10-14T06:57:15.902207", "galaxy_version": "24.1", "external_id": "gxy-2vmqn", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/4/7/dataset_b47e74a5-2b68-4d38-9dc9-0beceab6a043.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=mask         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"mask\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 116, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "035df4a496196750", "src": "hda", "uuid": "b47e74a5-2b68-4d38-9dc9-0beceab6a043"}}, "outputs": {"out1": {"id": "77e92a6bdcfc99cb", "src": "hda", "uuid": "a4142f84-5b8e-4ed0-86d0-2cf9b92112a1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (11567.354 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (11567.354 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:57:05", "plugin": "core", "name": "end_epoch", "raw_value": "1728889025.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:57:04", "plugin": "core", "name": "start_epoch", "raw_value": "1728889024.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-18", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 18, "time_seconds": 32.146602153778076, "inputs": {"library|input_1": {"src": "hda", "id": "7099d0335a8f1c28"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "mask"}, "job": {"model_class": "Job", "id": "8e117be7b6982f7c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:19:31.260422", "update_time": "2024-10-14T07:19:44.126932", "galaxy_version": "24.1", "external_id": "gxy-qd4kz", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/d/9/dataset_6d9c879e-ac1d-48f6-a13c-ce9e082cf1ac.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=mask         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"mask\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 238, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "7099d0335a8f1c28", "src": "hda", "uuid": "6d9c879e-ac1d-48f6-a13c-ce9e082cf1ac"}}, "outputs": {"out1": {"id": "bea61ea84f202e12", "src": "hda", "uuid": "691dcf7d-1ea4-4c89-8ecd-5fe201247b3a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (12294.769 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=mask --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (12294.769 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:19:33", "plugin": "core", "name": "end_epoch", "raw_value": "1728890373.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:19:33", "plugin": "core", "name": "start_epoch", "raw_value": "1728890373.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-19", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 19, "time_seconds": 24.126416444778442, "inputs": {"library|input_1": {"src": "hda", "id": "06065c916c252062"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "lowercase"}, "job": {"model_class": "Job", "id": "aea399ac6ee72b81", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-10-14T06:57:35.430260", "update_time": "2024-10-14T06:57:40.515480", "galaxy_version": "24.1", "external_id": "gxy-cmlfm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/f/b/dataset_5fb1a65a-a9d3-47f7-89a2-bdb208976226.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=lowercase         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"lowercase\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 118, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "06065c916c252062", "src": "hda", "uuid": "5fb1a65a-a9d3-47f7-89a2-bdb208976226"}}, "outputs": {"out1": {"id": "28283965eade59ac", "src": "hda", "uuid": "734ec05e-3ed2-4157-878b-0a5a68d7a8ee"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10681.073 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=lowercase --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10681.073 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "cutadapt/4.9+galaxy1-19", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 19, "time_seconds": 10.553949356079102, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-2", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 2, "time_seconds": 32.32849860191345, "inputs": {"library|input_1": {"src": "hda", "id": "aea399ac6ee72b81"}, "library|input_2": {"src": "hda", "id": "dc293b278954be79"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "389dc292830bfc18", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:49:23.447147", "update_time": "2024-10-14T06:49:35.180078", "galaxy_version": "24.1", "external_id": "gxy-pwnfp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/6/c/dataset_16c06c33-e6f3-4f0a-8a34-f7a5c334a09d.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/8/4/3/dataset_8439c1aa-3267-416f-9ac1-bb790e8953ce.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 72, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 73, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "aea399ac6ee72b81", "src": "hda", "uuid": "16c06c33-e6f3-4f0a-8a34-f7a5c334a09d"}, "library|input_2": {"id": "dc293b278954be79", "src": "hda", "uuid": "8439c1aa-3267-416f-9ac1-bb790e8953ce"}}, "outputs": {"out1": {"id": "89ef252740f90b32", "src": "hda", "uuid": "de219823-a702-455a-895b-70310e304720"}, "out2": {"id": "9ddd300fcf7a4673", "src": "hda", "uuid": "6dadb3c1-c7ec-4b1a-98b0-f262a97d6d20"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1610.486 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1610.486 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:49:25", "plugin": "core", "name": "end_epoch", "raw_value": "1728888565.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:49:24", "plugin": "core", "name": "start_epoch", "raw_value": "1728888564.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-2", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 2, "time_seconds": 34.58710861206055, "inputs": {"library|input_1": {"src": "hda", "id": "5b135bf69c304b71"}, "library|input_2": {"src": "hda", "id": "3bc1f4abc017f973"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "afcdbfaf63ee5acf", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:12:03.444426", "update_time": "2024-10-14T07:12:16.895988", "galaxy_version": "24.1", "external_id": "gxy-t74ql", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/9/4/dataset_5945b50d-6664-44cb-b487-7195b5f175fc.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/7/9/f/dataset_79f88816-dcba-4be7-8100-6a610af3e9a8.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 193, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 194, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "5b135bf69c304b71", "src": "hda", "uuid": "5945b50d-6664-44cb-b487-7195b5f175fc"}, "library|input_2": {"id": "3bc1f4abc017f973", "src": "hda", "uuid": "79f88816-dcba-4be7-8100-6a610af3e9a8"}}, "outputs": {"out1": {"id": "f57a6b0703ef4b49", "src": "hda", "uuid": "dcb7d9af-4466-4f94-9ed9-0bfeefae78d7"}, "out2": {"id": "101c675e2bdef75e", "src": "hda", "uuid": "f53e03a7-6c6c-41fb-b2bc-999a5bd36d68"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1602.385 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1602.385 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:12:06", "plugin": "core", "name": "end_epoch", "raw_value": "1728889926.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:12:05", "plugin": "core", "name": "start_epoch", "raw_value": "1728889925.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-20", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 20, "time_seconds": 31.301433563232422, "inputs": {"library|input_1": {"src": "hda", "id": "ed44ee3ec2bcad13"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "crop"}, "job": {"model_class": "Job", "id": "89ef252740f90b32", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:58:00.022252", "update_time": "2024-10-14T06:58:11.706898", "galaxy_version": "24.1", "external_id": "gxy-vfxcb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/b/a/dataset_abae00c3-9662-498a-afdc-8b375276575e.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=crop         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"crop\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 120, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "ed44ee3ec2bcad13", "src": "hda", "uuid": "abae00c3-9662-498a-afdc-8b375276575e"}}, "outputs": {"out1": {"id": "24160c5589595826", "src": "hda", "uuid": "fbc7190a-5711-40f9-9d08-5c32a899dd1d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.030 s (10116.100 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.030 s (10116.100 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:58:01", "plugin": "core", "name": "end_epoch", "raw_value": "1728889081.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:58:01", "plugin": "core", "name": "start_epoch", "raw_value": "1728889081.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-20", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 20, "time_seconds": 31.00340962409973, "inputs": {"library|input_1": {"src": "hda", "id": "d6517265e9514cdb"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "crop"}, "job": {"model_class": "Job", "id": "a85445b5551917cf", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:20:13.030493", "update_time": "2024-10-14T07:20:25.881085", "galaxy_version": "24.1", "external_id": "gxy-qwz9w", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/2/7/dataset_92712575-0df7-4e38-9dd9-9eec8743743e.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=crop         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"crop\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 241, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "d6517265e9514cdb", "src": "hda", "uuid": "92712575-0df7-4e38-9dd9-9eec8743743e"}}, "outputs": {"out1": {"id": "eb04773233e94bd9", "src": "hda", "uuid": "48d70738-bb5f-4e79-90d8-f180d7b106d8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10476.589 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=crop --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10476.589 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             80 bp (78.4%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:20:15", "plugin": "core", "name": "end_epoch", "raw_value": "1728890415.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:20:15", "plugin": "core", "name": "start_epoch", "raw_value": "1728890415.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-21", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 21, "time_seconds": 30.95724606513977, "inputs": {"library|input_1": {"src": "hda", "id": "c697f45619093734"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "none"}, "job": {"model_class": "Job", "id": "a946c285575f1f9a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:58:30.337207", "update_time": "2024-10-14T06:58:42.773905", "galaxy_version": "24.1", "external_id": "gxy-fttvl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/e/b/dataset_feb71d43-748c-4806-a0c4-a0461ab57c45.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=none         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"none\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 122, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "c697f45619093734", "src": "hda", "uuid": "feb71d43-748c-4806-a0c4-a0461ab57c45"}}, "outputs": {"out1": {"id": "b6c562e797f1d6da", "src": "hda", "uuid": "4ef79d28-d933-4a31-99dc-0c6d1d18568a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (11145.353 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (11145.353 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:58:32", "plugin": "core", "name": "end_epoch", "raw_value": "1728889112.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:58:31", "plugin": "core", "name": "start_epoch", "raw_value": "1728889111.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-21", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 21, "time_seconds": 31.717918395996094, "inputs": {"library|input_1": {"src": "hda", "id": "9eb2c0c2af002a9e"}, "library|r1|adapters_0|adapter_source|adapter": "CGTCCGAANTAG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|action": "none"}, "job": {"model_class": "Job", "id": "e2fd046fb70a4e3d", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:20:45.316550", "update_time": "2024-10-14T07:20:57.839044", "galaxy_version": "24.1", "external_id": "gxy-tww6z", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/a/a/dataset_eaaf785b-486c-40da-a9fe-34401f4ddfcd.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'CGTCCGAANTAG'    --error-rate=0.1 --times=1 --overlap=3    --action=none         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"none\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 243, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CGTCCGAANTAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "9eb2c0c2af002a9e", "src": "hda", "uuid": "eaaf785b-486c-40da-a9fe-34401f4ddfcd"}}, "outputs": {"out1": {"id": "474f0b2142833f58", "src": "hda", "uuid": "7a46ec5f-5bac-465f-bd5c-0911af7d7a73"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.030 s (10163.148 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a CGTCCGAANTAG --error-rate=0.1 --times=1 --overlap=3 --action=none --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.030 s (10163.148 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: CGTCCGAANTAG; Type: regular 3'; Length: 12; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-11 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:20:47", "plugin": "core", "name": "end_epoch", "raw_value": "1728890447.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:20:47", "plugin": "core", "name": "start_epoch", "raw_value": "1728890447.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-22", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 22, "time_seconds": 31.259948253631592, "inputs": {"library|input_1": {"src": "hda", "id": "1004d94ed968aab8"}, "library|r1|adapters_0|adapter_source|adapter": "TAAACAGATTAGT", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|revcomp": true}, "job": {"model_class": "Job", "id": "993df753360bbd76", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:59:02.152169", "update_time": "2024-10-14T06:59:14.042306", "galaxy_version": "24.1", "external_id": "gxy-bv4vf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/e/a/dataset_6ea71469-3fbb-4037-8353-0222548a8585.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TAAACAGATTAGT'    --error-rate=0.1 --times=1 --overlap=3    --action=trim --rc        --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": true, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 124, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TAAACAGATTAGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "1004d94ed968aab8", "src": "hda", "uuid": "6ea71469-3fbb-4037-8353-0222548a8585"}}, "outputs": {"out1": {"id": "7b7b88c3e6fbd82b", "src": "hda", "uuid": "26da148b-fd1d-48d9-80c9-2a98424ebf28"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10509.411 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a TAAACAGATTAGT --error-rate=0.1 --times=1 --overlap=3 --action=trim --rc --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10509.411 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReverse-complemented:                        0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             97 bp (95.1%)\n\n=== Adapter 1 ===\n\nSequence: TAAACAGATTAGT; Type: regular 3'; Length: 13; Trimmed: 1 times; Reverse-complemented: 0 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n5\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:59:03", "plugin": "core", "name": "end_epoch", "raw_value": "1728889143.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:59:03", "plugin": "core", "name": "start_epoch", "raw_value": "1728889143.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-22", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 22, "time_seconds": 12.060151815414429, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-23", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 23, "time_seconds": 33.43864369392395, "inputs": {"library|input_1": {"src": "hda", "id": "eae1562d7a8dabb0"}, "library|input_2": {"src": "hda", "id": "19d435c1444584bd"}, "library|r1|adapters_0|adapter_source|adapter": "ATCTGGTTCC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "CTACAAG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "30", "filter_options|minimum_length2": "10", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "59965f7c576944f7", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:59:34.505159", "update_time": "2024-10-14T06:59:47.058543", "galaxy_version": "24.1", "external_id": "gxy-ffl69", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/6/e/dataset_26e235e8-8719-4782-aed7-80ce7822d895.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/a/d/e/dataset_ade11b02-5bff-4d15-8125-48dbbddae06d.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'ATCTGGTTCC'    -A 'CTACAAG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=30:10  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"30\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 126, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 127, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ATCTGGTTCC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CTACAAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "eae1562d7a8dabb0", "src": "hda", "uuid": "26e235e8-8719-4782-aed7-80ce7822d895"}, "library|input_2": {"id": "19d435c1444584bd", "src": "hda", "uuid": "ade11b02-5bff-4d15-8125-48dbbddae06d"}}, "outputs": {"out1": {"id": "ae63725137d3ca64", "src": "hda", "uuid": "dd594737-7414-4a43-98ad-9123342ccc5a"}, "out2": {"id": "cd05d6cffa494385", "src": "hda", "uuid": "3fa85a4e-89e1-4309-b2a9-524fee32b36e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.170 s (1720.272 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.170 s (1720.272 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:59:36", "plugin": "core", "name": "end_epoch", "raw_value": "1728889176.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:59:36", "plugin": "core", "name": "start_epoch", "raw_value": "1728889176.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-23", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 23, "time_seconds": 32.667760133743286, "inputs": {"library|input_1": {"src": "hda", "id": "b4e3c65255838676"}, "library|input_2": {"src": "hda", "id": "67f829531ad65f51"}, "library|r1|adapters_0|adapter_source|adapter": "ATCTGGTTCC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "CTACAAG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "30", "filter_options|minimum_length2": "10", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "9d8a469495fa882b", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:21:30.283191", "update_time": "2024-10-14T07:21:42.168237", "galaxy_version": "24.1", "external_id": "gxy-wbp82", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/6/4/dataset_e641a796-487a-457c-bd13-7dc2a60eb79b.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/a/c/9/dataset_ac9db4ee-2fe7-4415-a669-d0e6f7f613d4.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'ATCTGGTTCC'    -A 'CTACAAG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=30:10  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"30\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 246, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 247, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ATCTGGTTCC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"CTACAAG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "b4e3c65255838676", "src": "hda", "uuid": "e641a796-487a-457c-bd13-7dc2a60eb79b"}, "library|input_2": {"id": "67f829531ad65f51", "src": "hda", "uuid": "ac9db4ee-2fe7-4415-a669-d0e6f7f613d4"}}, "outputs": {"out1": {"id": "fa47c40aa616710e", "src": "hda", "uuid": "37253660-d89b-4a62-8b90-c195a901d261"}, "out2": {"id": "61a499d96ae9700a", "src": "hda", "uuid": "fc2c73f5-0fb2-4883-86dd-d5f4a039c0cd"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1599.668 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a ATCTGGTTCC -A CTACAAG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=30:10 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1599.668 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                      32 (32.3%)\n  Read 2 with adapter:                      15 (15.2%)\n\n== Read fate breakdown ==\nPairs that were too short:                   3 (3.0%)\nPairs written (passing filters):            96 (97.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         38,492 bp (79.7%)\n  Read 1:        17,741 bp\n  Read 2:        20,751 bp\n\n=== First read: Adapter 1 ===\n\nSequence: ATCTGGTTCC; Type: regular 3'; Length: 10; Trimmed: 32 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 90.6%\n  G: 3.1%\n  T: 0.0%\n  none/other: 6.2%\nWARNING:\n    The adapter is preceded by 'C' extremely often.\n    The provided adapter sequence could be incomplete at its 5' end.\n    Ignore this warning when trimming primers.\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n13\t1\t0.0\t1\t1\n14\t1\t0.0\t1\t1\n201\t1\t0.0\t1\t1\n203\t1\t0.0\t1\t1\n208\t2\t0.0\t1\t2\n209\t1\t0.0\t1\t1\n211\t1\t0.0\t1\t1\n214\t2\t0.0\t1\t2\n217\t2\t0.0\t1\t2\n218\t1\t0.0\t1\t1\n222\t1\t0.0\t1\t1\n226\t1\t0.0\t1\t1\n227\t2\t0.0\t1\t2\n228\t1\t0.0\t1\t1\n229\t1\t0.0\t1\t1\n232\t2\t0.0\t1\t2\n238\t1\t0.0\t1\t1\n242\t7\t0.0\t1\t7\n251\t1\t0.0\t1\t0 1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: CTACAAG; Type: regular 3'; Length: 7; Trimmed: 15 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 73.3%\n  G: 0.0%\n  T: 0.0%\n  none/other: 26.7%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n8\t1\t0.0\t0\t1\n228\t2\t0.0\t0\t2\n229\t1\t0.0\t0\t1\n238\t3\t0.0\t0\t3\n241\t1\t0.0\t0\t1\n243\t1\t0.0\t0\t1\n246\t1\t0.0\t0\t1\n248\t1\t0.0\t0\t1\n250\t1\t0.0\t0\t1\n251\t3\t0.0\t0\t3\n\n\nWARNING:\n    One or more of your adapter sequences may be incomplete.\n    Please see the detailed output above.\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:21:32", "plugin": "core", "name": "end_epoch", "raw_value": "1728890492.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:21:31", "plugin": "core", "name": "start_epoch", "raw_value": "1728890491.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-24", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 24, "time_seconds": 34.558382511138916, "inputs": {"library|input_1": {"src": "hda", "id": "68e1aeb53256e615"}, "library|input_2": {"src": "hda", "id": "20d0852d64beb0a1"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "128047dd77cb023a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:00:08.092018", "update_time": "2024-10-14T07:00:21.595758", "galaxy_version": "24.1", "external_id": "gxy-swtdd", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/3/7/dataset_33759562-e182-44ab-9fa2-761af0dfbb10.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/f/5/d/dataset_f5d82236-d348-4d3c-8918-03f322d0e67a.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 130, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 131, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "68e1aeb53256e615", "src": "hda", "uuid": "33759562-e182-44ab-9fa2-761af0dfbb10"}, "library|input_2": {"id": "20d0852d64beb0a1", "src": "hda", "uuid": "f5d82236-d348-4d3c-8918-03f322d0e67a"}}, "outputs": {"out1": {"id": "d384913a1219b30c", "src": "hda", "uuid": "5e52ac53-b19e-4924-af28-899eefd4589a"}, "out2": {"id": "29cc7028ff4632f4", "src": "hda", "uuid": "aab7e306-de10-4628-b070-f08d82ad6740"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.162 s (1631.337 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.162 s (1631.337 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:00:10", "plugin": "core", "name": "end_epoch", "raw_value": "1728889210.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:00:09", "plugin": "core", "name": "start_epoch", "raw_value": "1728889209.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-24", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 24, "time_seconds": 11.47575306892395, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-25", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 25, "time_seconds": 33.468937397003174, "inputs": {"library|input_1": {"src": "hda", "id": "be11560b6eefccdc"}, "library|input_2": {"src": "hda", "id": "cbcc690a0713a2fe"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "ce521a98a1d9a509", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:00:42.794409", "update_time": "2024-10-14T07:00:55.223701", "galaxy_version": "24.1", "external_id": "gxy-lcfx8", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/c/c/dataset_8cc38fdc-c642-4e41-8988-05d3e332ed16.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/3/e/f/dataset_3ef23201-f0e5-4d5d-9a9f-e9576c14c251.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"10\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 134, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 135, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "be11560b6eefccdc", "src": "hda", "uuid": "8cc38fdc-c642-4e41-8988-05d3e332ed16"}, "library|input_2": {"id": "cbcc690a0713a2fe", "src": "hda", "uuid": "3ef23201-f0e5-4d5d-9a9f-e9576c14c251"}}, "outputs": {"out1": {"id": "2cabe8e5a08804b7", "src": "hda", "uuid": "ec76b31b-15bd-4d16-a87e-33c2b7a5ef97"}, "out2": {"id": "1843e986b21fa3f5", "src": "hda", "uuid": "9b9f26c0-cca5-4615-ab8b-ef857a072acf"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.148 s (1492.337 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.148 s (1492.337 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:00:45", "plugin": "core", "name": "end_epoch", "raw_value": "1728889245.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:00:44", "plugin": "core", "name": "start_epoch", "raw_value": "1728889244.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-25", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 25, "time_seconds": 35.060535192489624, "inputs": {"library|input_1": {"src": "hda", "id": "d035215abb44b791"}, "library|input_2": {"src": "hda", "id": "ef4e63fe14a35a71"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|maximum_length": "50", "filter_options|maximum_length2": "30", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "7a8e2cab15347ada", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:22:15.123854", "update_time": "2024-10-14T07:22:28.785748", "galaxy_version": "24.1", "external_id": "gxy-tkfdl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/2/b/dataset_82b16468-83c7-44d9-8bd9-f771e9849a56.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/f/d/d/dataset_fddd1fd2-a0a5-4f95-a781-64bfe8e6151c.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10 --maximum-length=50:30  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"30\", \"minimum_length\": \"10\", \"minimum_length2\": \"\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 252, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 253, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "d035215abb44b791", "src": "hda", "uuid": "82b16468-83c7-44d9-8bd9-f771e9849a56"}, "library|input_2": {"id": "ef4e63fe14a35a71", "src": "hda", "uuid": "fddd1fd2-a0a5-4f95-a781-64bfe8e6151c"}}, "outputs": {"out1": {"id": "e54fa8ad69a0df7b", "src": "hda", "uuid": "78fc336b-1d38-43c2-8e52-4b5706d13940"}, "out2": {"id": "0550727044abdcc8", "src": "hda", "uuid": "0d2feb85-e631-4685-b93d-3a5da7752a2d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.146 s (1473.285 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10 --maximum-length=50:30 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.146 s (1473.285 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:22:17", "plugin": "core", "name": "end_epoch", "raw_value": "1728890537.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:22:17", "plugin": "core", "name": "start_epoch", "raw_value": "1728890537.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-26", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 26, "time_seconds": 34.553701639175415, "inputs": {"library|input_1": {"src": "hda", "id": "afcdbfaf63ee5acf"}, "library|input_2": {"src": "hda", "id": "ac2cc95893b77db9"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "filter_options|minimum_length": "10", "filter_options|minimum_length2": "10", "filter_options|maximum_length": "50", "filter_options|pair_filter": "both"}, "job": {"model_class": "Job", "id": "b428a3536c66654d", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:01:16.342770", "update_time": "2024-10-14T07:01:29.956040", "galaxy_version": "24.1", "external_id": "gxy-zzhpg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/2/3/0/dataset_230b4fb0-8df7-44c1-856a-c10346955b03.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/e/f/2/dataset_ef24f81c-95fb-4d7f-8d5d-bad63c8502b0.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'     --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=10:10 --maximum-length=50  --pair-filter=both     -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"50\", \"maximum_length2\": \"\", \"minimum_length\": \"10\", \"minimum_length2\": \"10\", \"pair_filter\": \"both\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 138, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 139, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "afcdbfaf63ee5acf", "src": "hda", "uuid": "230b4fb0-8df7-44c1-856a-c10346955b03"}, "library|input_2": {"id": "ac2cc95893b77db9", "src": "hda", "uuid": "ef24f81c-95fb-4d7f-8d5d-bad63c8502b0"}}, "outputs": {"out1": {"id": "3969b501a2c227ee", "src": "hda", "uuid": "c294bb09-563b-4ce0-9673-a9dbdbfd48d9"}, "out2": {"id": "b2c20283b0d8e4dd", "src": "hda", "uuid": "a710ac9c-6fd2-4f12-bcc0-8334c16bee5d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.146 s (1472.536 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=10:10 --maximum-length=50 --pair-filter=both -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.146 s (1472.536 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs that were too long:                   96 (97.0%)\nPairs written (passing filters):             3 (3.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):             99 bp (0.2%)\n  Read 1:            51 bp\n  Read 2:            48 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:01:18", "plugin": "core", "name": "end_epoch", "raw_value": "1728889278.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:01:18", "plugin": "core", "name": "start_epoch", "raw_value": "1728889278.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-26", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 26, "time_seconds": 18.760287761688232, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-27", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 27, "time_seconds": 30.18004560470581, "inputs": {"library|input_1": {"src": "hda", "id": "da9592522a865aa9"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "43099197854144c8", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:01:49.293534", "update_time": "2024-10-14T07:02:01.187913", "galaxy_version": "24.1", "external_id": "gxy-l6lh8", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/d/e/dataset_0de9f715-bccc-4c65-b281-986dd1d93f78.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 142, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "da9592522a865aa9", "src": "hda", "uuid": "0de9f715-bccc-4c65-b281-986dd1d93f78"}}, "outputs": {"out1": {"id": "39b19d3adc9e120f", "src": "hda", "uuid": "74cd86aa-8ad6-4e34-8cd4-1485bade5d9a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10462.523 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10462.523 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:01:51", "plugin": "core", "name": "end_epoch", "raw_value": "1728889311.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:01:51", "plugin": "core", "name": "start_epoch", "raw_value": "1728889311.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-27", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 27, "time_seconds": 33.030232191085815, "inputs": {"library|input_1": {"src": "hda", "id": "05b84b5e97036550"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "ec3b7679c91000c4", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:23:07.900259", "update_time": "2024-10-14T07:23:21.640246", "galaxy_version": "24.1", "external_id": "gxy-r8vdd", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/a/8/dataset_8a88b58b-3a04-46b1-8ace-2ee8c91a9754.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 258, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "05b84b5e97036550", "src": "hda", "uuid": "8a88b58b-3a04-46b1-8ace-2ee8c91a9754"}}, "outputs": {"out1": {"id": "4b1685f3d2d8b30c", "src": "hda", "uuid": "0ea9e025-4a1d-48d6-a752-edd35a633313"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (11681.239 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (11681.239 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:23:11", "plugin": "core", "name": "end_epoch", "raw_value": "1728890591.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:23:10", "plugin": "core", "name": "start_epoch", "raw_value": "1728890590.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-28", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 28, "time_seconds": 31.09792995452881, "inputs": {"library|input_1": {"src": "hda", "id": "12b2471aeb2acd31"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "5prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "1d8eab5a34d9180b", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:02:19.681485", "update_time": "2024-10-14T07:02:32.275426", "galaxy_version": "24.1", "external_id": "gxy-82kt7", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/b/7/dataset_5b75ee2a-8a8d-470f-8e14-98857ab727ca.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=-10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"5prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 144, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "12b2471aeb2acd31", "src": "hda", "uuid": "5b75ee2a-8a8d-470f-8e14-98857ab727ca"}}, "outputs": {"out1": {"id": "611402bc94981224", "src": "hda", "uuid": "3d1f9ff4-94f5-4b16-b5d1-ef596a831f1d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (11090.279 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (11090.279 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:02:22", "plugin": "core", "name": "end_epoch", "raw_value": "1728889342.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:02:22", "plugin": "core", "name": "start_epoch", "raw_value": "1728889342.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-28", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 28, "time_seconds": 32.90953874588013, "inputs": {"library|input_1": {"src": "hda", "id": "f42700e8eddbc523"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "5prime", "other_trimming_options|shorten_options|shorten_values": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "1dddfef25edc90ce", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:23:42.148537", "update_time": "2024-10-14T07:23:54.713427", "galaxy_version": "24.1", "external_id": "gxy-wkbzt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/1/c/dataset_01ce2d55-e077-41c2-95f7-aa4695c6ce1c.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=-10          -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"5prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 260, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "f42700e8eddbc523", "src": "hda", "uuid": "01ce2d55-e077-41c2-95f7-aa4695c6ce1c"}}, "outputs": {"out1": {"id": "294adc7b019e73d8", "src": "hda", "uuid": "4cf4ba2a-31fa-41bc-ba8b-ff5933a7fd6e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10236.422 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=-10 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10236.422 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         1 (33.3%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             20 bp (19.6%)\n\n=== Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:23:43", "plugin": "core", "name": "end_epoch", "raw_value": "1728890623.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:23:43", "plugin": "core", "name": "start_epoch", "raw_value": "1728890623.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-29", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 29, "time_seconds": 33.37470889091492, "inputs": {"library|input_1": {"src": "hda", "id": "73677e0a91a06add"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "5prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "8bb8108c82f4fcb9", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:02:52.076786", "update_time": "2024-10-14T07:03:04.812662", "galaxy_version": "24.1", "external_id": "gxy-mjww5", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/2/4/dataset_a2429eea-2b07-4494-a2d2-75faabe56ba2.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/a/2/4/dataset_a2429eea-2b07-4494-a2d2-75faabe56ba2.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10 -L -10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"5prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 146, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "73677e0a91a06add", "src": "hda", "uuid": "a2429eea-2b07-4494-a2d2-75faabe56ba2"}, "library|input_2": {"id": "73677e0a91a06add", "src": "hda", "uuid": "a2429eea-2b07-4494-a2d2-75faabe56ba2"}}, "outputs": {"out1": {"id": "1d3c79fce192c869", "src": "hda", "uuid": "8281c9f9-8881-4000-b5f6-0e64d0ae6615"}, "out2": {"id": "5dc7c38d7d0c7ec0", "src": "hda", "uuid": "7f3582bb-b8f5-48d3-8120-5283cb9e74f0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.051 s (16842.047 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.051 s (16842.047 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:02:54", "plugin": "core", "name": "end_epoch", "raw_value": "1728889374.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:02:54", "plugin": "core", "name": "start_epoch", "raw_value": "1728889374.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-29", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 29, "time_seconds": 34.54724049568176, "inputs": {"library|input_1": {"src": "hda", "id": "6f1384cd26657799"}, "library|r1|adapters_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options|length": "10", "other_trimming_options|shorten_options|shorten_end": "3prime", "other_trimming_options|shorten_options|shorten_values": "True", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "5prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "0ddd4ef3f76b7d1a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:24:14.412982", "update_time": "2024-10-14T07:24:28.619164", "galaxy_version": "24.1", "external_id": "gxy-hrb4b", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/c/d/dataset_0cdc2ba1-7cde-45e5-b3e6-27ae9990d588.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/0/c/d/dataset_0cdc2ba1-7cde-45e5-b3e6-27ae9990d588.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCCGCTANGACG'    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     --length=10 -L -10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 0, \"length\": \"10\", \"shorten_end\": \"3prime\", \"shorten_values\": \"True\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"5prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 262, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "6f1384cd26657799", "src": "hda", "uuid": "0cdc2ba1-7cde-45e5-b3e6-27ae9990d588"}, "library|input_2": {"id": "6f1384cd26657799", "src": "hda", "uuid": "0cdc2ba1-7cde-45e5-b3e6-27ae9990d588"}}, "outputs": {"out1": {"id": "4da94349957cd9c6", "src": "hda", "uuid": "08ac1d3f-4e4f-4640-baba-e553c513f913"}, "out2": {"id": "565d1e13d0caa338", "src": "hda", "uuid": "8e5a0bfb-d7c6-41fd-852d-85e52e0b1802"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.050 s (16737.700 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCCGCTANGACG -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --length=10 -L -10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.050 s (16737.700 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 1 with adapter:                       1 (33.3%)\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):             40 bp (19.6%)\n  Read 1:            20 bp\n  Read 2:            20 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:24:16", "plugin": "core", "name": "end_epoch", "raw_value": "1728890656.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:24:16", "plugin": "core", "name": "start_epoch", "raw_value": "1728890656.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-3", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 3, "time_seconds": 17.60059881210327, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-3", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 3, "time_seconds": 33.85815906524658, "inputs": {"library|input_1": {"src": "hdca", "id": "529211bf2f189fcc"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "b2c20283b0d8e4dd", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:12:38.397481", "update_time": "2024-10-14T07:12:51.586063", "galaxy_version": "24.1", "external_id": "gxy-6zzlx", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/f/3/dataset_7f3a8f9f-2523-4f60-8291-8a4c3ef7c230.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/4/d/2/dataset_4d298272-a9f3-4fc9-bc05-81b8d1e0af3b.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 7, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "1a9d69fe3c90c4ce", "src": "hda", "uuid": "7f3a8f9f-2523-4f60-8291-8a4c3ef7c230"}, "library|input_12": {"id": "9cbda3184a4a1b8b", "src": "hda", "uuid": "4d298272-a9f3-4fc9-bc05-81b8d1e0af3b"}}, "outputs": {"out_pairs|__part__|forward": {"id": "baf7ce0b97b84d86", "src": "hda", "uuid": "d827123b-3154-4c03-8d38-235a53e46512"}, "out_pairs|__part__|reverse": {"id": "83a020a47f6f9e9a", "src": "hda", "uuid": "aec34a6f-6f3f-4010-8e5f-31bdc1038c42"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "3a88e5694d42c29c"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1600.326 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1600.326 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:12:40", "plugin": "core", "name": "end_epoch", "raw_value": "1728889960.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:12:40", "plugin": "core", "name": "start_epoch", "raw_value": "1728889960.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-30", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 30, "time_seconds": 33.154714584350586, "inputs": {"library|input_1": {"src": "hda", "id": "3209eca086125eba"}, "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "3prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "816a4ec451ffbc73", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:03:25.439677", "update_time": "2024-10-14T07:03:38.160901", "galaxy_version": "24.1", "external_id": "gxy-6rspg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/5/8/dataset_358664bc-82c7-4262-a70e-bda79a814cde.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/3/5/8/dataset_358664bc-82c7-4262-a70e-bda79a814cde.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     -L 10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"3prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "3209eca086125eba", "src": "hda", "uuid": "358664bc-82c7-4262-a70e-bda79a814cde"}, "library|input_2": {"id": "3209eca086125eba", "src": "hda", "uuid": "358664bc-82c7-4262-a70e-bda79a814cde"}}, "outputs": {"out1": {"id": "00a13b5e48c8c774", "src": "hda", "uuid": "2697d95d-fb47-4ec9-8426-b2e30b442234"}, "out2": {"id": "7fada758ab8179fd", "src": "hda", "uuid": "611986f0-e332-4a30-af52-b8b458240682"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.038 s (12631.655 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.038 s (12631.655 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:03:27", "plugin": "core", "name": "end_epoch", "raw_value": "1728889407.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:03:26", "plugin": "core", "name": "start_epoch", "raw_value": "1728889406.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-30", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 30, "time_seconds": 33.319782972335815, "inputs": {"library|input_1": {"src": "hda", "id": "8a0a162ccdd08c64"}, "library|r2|adapters2_0|adapter_source|adapter": "AGCCGCTANGACG", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired", "other_trimming_options|shorten_options_r2|length2": "10", "other_trimming_options|shorten_options_r2|shorten_end_r2": "3prime", "other_trimming_options|shorten_options_r2|shorten_values_r2": "True", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "3bc1f4abc017f973", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:24:49.108530", "update_time": "2024-10-14T07:25:02.118472", "galaxy_version": "24.1", "external_id": "gxy-ftfpl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/b/b/dataset_5bb405ed-18d9-45ff-87e1-87e6f00a7a2e.dat' 'cutadapt_small_fastq_1.fq' && ln -f -s '/galaxy/server/database/objects/5/b/b/dataset_5bb405ed-18d9-45ff-87e1-87e6f00a7a2e.dat' 'cutadapt_small_fastq_2.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    -A 'AGCCGCTANGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim     -L 10          -o 'out1.fq' -p 'out2.fq'  'cutadapt_small_fastq_1.fq' 'cutadapt_small_fastq_2.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 0, \"length2\": \"10\", \"shorten_end_r2\": \"3prime\", \"shorten_values_r2\": \"True\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 265, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 265, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCCGCTANGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "8a0a162ccdd08c64", "src": "hda", "uuid": "5bb405ed-18d9-45ff-87e1-87e6f00a7a2e"}, "library|input_2": {"id": "8a0a162ccdd08c64", "src": "hda", "uuid": "5bb405ed-18d9-45ff-87e1-87e6f00a7a2e"}}, "outputs": {"out1": {"id": "6cb4ccb3409ce406", "src": "hda", "uuid": "688404c8-361f-4bfa-8b53-a500daa31430"}, "out2": {"id": "1725997002d888ec", "src": "hda", "uuid": "dc7ec066-95a8-4dc1-a8e5-8f7cc9218d3f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.041 s (13529.221 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -A AGCCGCTANGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim -L 10 -o out1.fq -p out2.fq cutadapt_small_fastq_1.fq cutadapt_small_fastq_2.fq\nProcessing paired-end reads on 5 cores ...\nFinished in 0.041 s (13529.221 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                  3\n  Read 2 with adapter:                       1 (33.3%)\nPairs written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           204 bp\n  Read 1:           102 bp\n  Read 2:           102 bp\nTotal written (filtered):            122 bp (59.8%)\n  Read 1:           102 bp\n  Read 2:            20 bp\n\n=== Second read: Adapter 1 ===\n\nSequence: AGCCGCTANGACG; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-12 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 100.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n34\t1\t0.0\t1\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:24:51", "plugin": "core", "name": "end_epoch", "raw_value": "1728890691.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:24:50", "plugin": "core", "name": "start_epoch", "raw_value": "1728890690.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-31", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 31, "time_seconds": 32.05774188041687, "inputs": {"library|input_1": {"src": "hda", "id": "8fc2a2f5926c1a78"}, "library|r1|adapters_0|adapter_source|adapter": "AGCGGCTTAGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "filter_options|max_expected_errors": "10"}, "job": {"model_class": "Job", "id": "27f1115b64e0b342", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:03:58.739667", "update_time": "2024-10-14T07:04:11.347975", "galaxy_version": "24.1", "external_id": "gxy-hqplm", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/2/2/dataset_c221d9a1-2211-4bb8-9861-49b36e985065.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCGGCTTAGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --max-ee=10.0      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"10.0\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCGGCTTAGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "8fc2a2f5926c1a78", "src": "hda", "uuid": "c221d9a1-2211-4bb8-9861-49b36e985065"}}, "outputs": {"out1": {"id": "40df15a5a79a8a47", "src": "hda", "uuid": "45fb7941-0fce-4d39-8a1c-fe001ee72910"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10789.712 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10789.712 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:04:01", "plugin": "core", "name": "end_epoch", "raw_value": "1728889441.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:04:00", "plugin": "core", "name": "start_epoch", "raw_value": "1728889440.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-31", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 31, "time_seconds": 32.26950812339783, "inputs": {"library|input_1": {"src": "hda", "id": "443685efa53f288a"}, "library|r1|adapters_0|adapter_source|adapter": "AGCGGCTTAGACG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "filter_options|max_expected_errors": "10"}, "job": {"model_class": "Job", "id": "101c675e2bdef75e", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:25:22.597703", "update_time": "2024-10-14T07:25:35.265547", "galaxy_version": "24.1", "external_id": "gxy-j6xbv", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/a/2/dataset_5a254f13-0fdf-4ecb-a6e5-8d49d169ed90.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGCGGCTTAGACG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1 --max-ee=10.0      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"10.0\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 268, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGCGGCTTAGACG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "443685efa53f288a", "src": "hda", "uuid": "5a254f13-0fdf-4ecb-a6e5-8d49d169ed90"}}, "outputs": {"out1": {"id": "2c8fa2205a1d4af6", "src": "hda", "uuid": "9b8b5bb6-1895-4c38-84c5-566435614cce"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10688.941 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGCGGCTTAGACG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --max-ee=10.0 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10688.941 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads with too many exp. errors:             0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: AGCGGCTTAGACG; Type: regular 3'; Length: 13; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:25:24", "plugin": "core", "name": "end_epoch", "raw_value": "1728890724.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:25:24", "plugin": "core", "name": "start_epoch", "raw_value": "1728890724.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-32", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 32, "time_seconds": 31.306524753570557, "inputs": {"library|input_1": {"src": "hda", "id": "ec34d662665d5643"}, "library|r1|adapters_0|adapter_source|adapter": "GAANTAGCTACCACX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single"}, "job": {"model_class": "Job", "id": "b435e2d9d3243553", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:04:30.901120", "update_time": "2024-10-14T07:04:42.694233", "galaxy_version": "24.1", "external_id": "gxy-bc8st", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/f/4/dataset_3f43fcd2-57c7-4121-b71f-5d95ad3dda15.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GAANTAGCTACCACX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GAANTAGCTACCACX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "ec34d662665d5643", "src": "hda", "uuid": "3f43fcd2-57c7-4121-b71f-5d95ad3dda15"}}, "outputs": {"out1": {"id": "06c7fc87972a884b", "src": "hda", "uuid": "3783ad5f-8023-45bd-935c-3ee6c0bda08e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10326.703 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a GAANTAGCTACCACX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10326.703 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         0 (0.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):            102 bp (100.0%)\n\n=== Adapter 1 ===\n\nSequence: GAANTAGCTACCAC; Type: non-internal 3'; Length: 14; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:04:32", "plugin": "core", "name": "end_epoch", "raw_value": "1728889472.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:04:32", "plugin": "core", "name": "start_epoch", "raw_value": "1728889472.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-32", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 32, "time_seconds": 11.746834754943848, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-33", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 33, "time_seconds": 11.790679216384888, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-33", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 33, "time_seconds": 34.7408812046051, "inputs": {"library|input_1": {"src": "hda", "id": "7120511f41bc1568"}, "library|input_2": {"src": "hda", "id": "1e6c340df43ef73f"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGCX", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "83a020a47f6f9e9a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:26:07.768973", "update_time": "2024-10-14T07:26:21.122860", "galaxy_version": "24.1", "external_id": "gxy-5gz94", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/a/7/dataset_aa771053-8e17-4145-9561-33b988d0f1d9.dat' 'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/3/6/6/dataset_36619b4b-dbbb-4017-aa16-4dd6f2b82231.dat' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGCX'    -A 'AGATCGGAAGAGCX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_assimetric_fq_gz.fq.gz' 'bwa-mem-fastq2_assimetric_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 271, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 272, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGCX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "7120511f41bc1568", "src": "hda", "uuid": "aa771053-8e17-4145-9561-33b988d0f1d9"}, "library|input_2": {"id": "1e6c340df43ef73f", "src": "hda", "uuid": "36619b4b-dbbb-4017-aa16-4dd6f2b82231"}}, "outputs": {"out1": {"id": "433dd9bc8b88b5e6", "src": "hda", "uuid": "a8e8545a-ed08-4c7f-a3c5-85c3a28556e7"}, "out2": {"id": "771ede7e08611ac0", "src": "hda", "uuid": "de8d6b95-5517-48d1-92b8-d71963036be1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.161 s (1631.183 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGCX -A AGATCGGAAGAGCX --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_assimetric_fq_gz.fq.gz bwa-mem-fastq2_assimetric_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.161 s (1631.183 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        48,291 bp\n  Read 1:        24,147 bp\n  Read 2:        24,144 bp\nTotal written (filtered):         48,270 bp (100.0%)\n  Read 1:        24,141 bp\n  Read 2:        24,129 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: non-internal 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:26:10", "plugin": "core", "name": "end_epoch", "raw_value": "1728890770.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:26:09", "plugin": "core", "name": "start_epoch", "raw_value": "1728890769.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-34", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 34, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-34", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 34, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-35", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 35, "time_seconds": 11.052685737609863, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-35", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 35, "time_seconds": 33.21852993965149, "inputs": {"library|input_1": {"src": "hdca", "id": "c3df636fee09c514"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r1|adapters_0|single_noindels": true, "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|single_noindels": true, "library|type": "paired_collection"}, "job": {"model_class": "Job", "id": "a63fdb020e93ccae", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:26:43.033911", "update_time": "2024-10-14T07:26:55.015066", "galaxy_version": "24.1", "external_id": "gxy-97s26", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/7/e/dataset_67e39990-9a89-4492-b875-657a195398d3.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/5/1/6/dataset_516fd5b1-c322-497f-8568-e27070dc2507.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC;noindels'    -A 'AGATCGGAAGAGC;noindels'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 10, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": true}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "e586aff17fedf67e", "src": "hda", "uuid": "67e39990-9a89-4492-b875-657a195398d3"}, "library|input_12": {"id": "55d6510b33e45bd1", "src": "hda", "uuid": "516fd5b1-c322-497f-8568-e27070dc2507"}}, "outputs": {"out_pairs|__part__|forward": {"id": "61a839f64f751477", "src": "hda", "uuid": "99c89db5-3a2b-4b53-b0c7-fb836c8bd25f"}, "out_pairs|__part__|reverse": {"id": "08beb7163b01cae3", "src": "hda", "uuid": "a60849b0-4cce-45a0-8452-0b751f9dd797"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "c7f5fec6865b3688"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.157 s (1587.733 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC;noindels -A AGATCGGAAGAGC;noindels --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.157 s (1587.733 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       4 (4.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,677 bp (100.0%)\n  Read 1:        24,843 bp\n  Read 2:        24,834 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 50.0%\n  T: 50.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n4\t1\t0.4\t0\t1\n5\t1\t0.1\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:26:45", "plugin": "core", "name": "end_epoch", "raw_value": "1728890805.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:26:44", "plugin": "core", "name": "start_epoch", "raw_value": "1728890804.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-36", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 36, "time_seconds": 33.85696744918823, "inputs": {"library|input_1": {"src": "hdca", "id": "21ba2aa2eb613c41"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection", "other_trimming_options|quality_cutoff": "5", "other_trimming_options|quality_cutoff2": "15,20"}, "job": {"model_class": "Job", "id": "aabe1824a6d35417", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:05:27.166372", "update_time": "2024-10-14T07:05:39.613984", "galaxy_version": "24.1", "external_id": "gxy-9zxbl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/f/9/dataset_0f9fe81d-5fcd-437c-815b-45ecfacffe7a.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/0/9/7/dataset_097e7d45-ec1f-4b12-9965-249d5abebc4b.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=5 -Q 15,20       --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"5\", \"quality_cutoff2\": \"15,20\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 5, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "6353ba1f3d4bc823", "src": "hda", "uuid": "0f9fe81d-5fcd-437c-815b-45ecfacffe7a"}, "library|input_12": {"id": "0c3869fd71c7c594", "src": "hda", "uuid": "097e7d45-ec1f-4b12-9965-249d5abebc4b"}}, "outputs": {"out_pairs|__part__|forward": {"id": "7c2727bc807538bd", "src": "hda", "uuid": "9f74e8e4-748d-4f67-b686-85f2f3027938"}, "out_pairs|__part__|reverse": {"id": "6d7c68c5f2558d73", "src": "hda", "uuid": "ea0fbcda-12c6-4132-9021-f376b42bca3e"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "183375d7bfa3b417"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.157 s (1583.521 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.157 s (1583.521 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:05:29", "plugin": "core", "name": "end_epoch", "raw_value": "1728889529.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:05:28", "plugin": "core", "name": "start_epoch", "raw_value": "1728889528.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-36", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 36, "time_seconds": 32.35186767578125, "inputs": {"library|input_1": {"src": "hdca", "id": "bbc1688255f3c54a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired_collection", "other_trimming_options|quality_cutoff": "5", "other_trimming_options|quality_cutoff2": "15,20"}, "job": {"model_class": "Job", "id": "60bb27dd176932e3", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:27:15.122051", "update_time": "2024-10-14T07:27:27.613191", "galaxy_version": "24.1", "external_id": "gxy-clt47", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/6/f/dataset_56f1938d-7614-438d-b915-c83f2ba5f572.dat' 'Unnamed Collection_1.fq.gz' && ln -f -s '/galaxy/server/database/objects/3/7/b/dataset_37bd4b01-3387-43a6-8ef5-dcedc5b401e3.dat' 'Unnamed Collection_2.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=5 -Q 15,20       --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'Unnamed Collection_1.fq.gz' 'Unnamed Collection_2.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"5\", \"quality_cutoff2\": \"15,20\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 2, \"input_1\": {\"values\": [{\"id\": 12, \"src\": \"hdca\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired_collection\"}"}, "inputs": {"library|input_11": {"id": "33b6547df26b142f", "src": "hda", "uuid": "56f1938d-7614-438d-b915-c83f2ba5f572"}, "library|input_12": {"id": "18fb47dca185d63f", "src": "hda", "uuid": "37bd4b01-3387-43a6-8ef5-dcedc5b401e3"}}, "outputs": {"out_pairs|__part__|forward": {"id": "06ad3859e65888cc", "src": "hda", "uuid": "48dd10d1-0cd2-48f8-902f-95c161f24771"}, "out_pairs|__part__|reverse": {"id": "a4b290c19d907708", "src": "hda", "uuid": "4701d9ee-d62d-4c8f-8d7b-8b7c75d005fe"}}, "copied_from_job_id": null, "output_collections": {"out_pairs": {"src": "hdca", "id": "30a201a7378f38fe"}}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1597.412 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=5 -Q 15,20 --minimum-length=1 -o out1.fq.gz -p out2.fq.gz Unnamed Collection_1.fq.gz Unnamed Collection_2.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.158 s (1597.412 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       2 (2.0%)\n  Read 2 with adapter:                       2 (2.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nQuality-trimmed:                     747 bp (1.5%)\n  Read 1:             0 bp\n  Read 2:           747 bp\nTotal written (filtered):         48,938 bp (98.5%)\n  Read 1:        24,843 bp\n  Read 2:        24,095 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 50.0%\n  G: 50.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t2\t1.5\t0\t2\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:27:17", "plugin": "core", "name": "end_epoch", "raw_value": "1728890837.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:27:16", "plugin": "core", "name": "start_epoch", "raw_value": "1728890836.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-37", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 37, "time_seconds": 10.633684396743774, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-37", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 37, "time_seconds": 11.395458221435547, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-38", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 38, "time_seconds": 32.62715935707092, "inputs": {"library|input_1": {"src": "hda", "id": "81a41918c93246ba"}, "library|r1|adapters_0|adapter_source|adapter": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "a56d6e4e46263742", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:06:10.756579", "update_time": "2024-10-14T07:06:23.183977", "galaxy_version": "24.1", "external_id": "gxy-h5clk", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/e/a/2/dataset_ea20f9c7-0212-4626-863e-076f441e8a2d.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 166, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "81a41918c93246ba", "src": "hda", "uuid": "ea20f9c7-0212-4626-863e-076f441e8a2d"}}, "outputs": {"out1": {"id": "b18e2846f24dc216", "src": "hda", "uuid": "95194213-c554-44b8-9a0e-f11b14c7bb81"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.034 s (8569.658 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.034 s (8569.658 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:06:12", "plugin": "core", "name": "end_epoch", "raw_value": "1728889572.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:06:12", "plugin": "core", "name": "start_epoch", "raw_value": "1728889572.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-38", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 38, "time_seconds": 31.050393104553223, "inputs": {"library|input_1": {"src": "hda", "id": "30b01e6a0d7eee6e"}, "library|r1|adapters_0|adapter_source|adapter": "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "caa4ab591477c3fa", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:27:58.734035", "update_time": "2024-10-14T07:28:10.570426", "galaxy_version": "24.1", "external_id": "gxy-zrvgt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/d/8/dataset_7d8914c5-fc11-458f-85fd-f57006c1ed07.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 285, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "30b01e6a0d7eee6e", "src": "hda", "uuid": "7d8914c5-fc11-458f-85fd-f57006c1ed07"}}, "outputs": {"out1": {"id": "6dacde7482cbcac8", "src": "hda", "uuid": "c34ae117-d07f-42b2-b636-e5609737d12d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (8123.040 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (8123.040 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:28:00", "plugin": "core", "name": "end_epoch", "raw_value": "1728890880.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:28:00", "plugin": "core", "name": "start_epoch", "raw_value": "1728890880.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-39", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 39, "time_seconds": 30.957321643829346, "inputs": {"library|input_1": {"src": "hda", "id": "737f6a8ad614c604"}, "library|r1|adapters_0|adapter_source|adapter": "A{35}", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "cd79da27a7931abd", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:06:42.679871", "update_time": "2024-10-14T07:06:54.514703", "galaxy_version": "24.1", "external_id": "gxy-zrqkk", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/8/e/b/dataset_8ebbef17-9f9c-4a7d-8cd5-62a0e89e0dfe.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'A{35}'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 168, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"A{35}\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "737f6a8ad614c604", "src": "hda", "uuid": "8ebbef17-9f9c-4a7d-8cd5-62a0e89e0dfe"}}, "outputs": {"out1": {"id": "0c410139e2bf5e45", "src": "hda", "uuid": "d0a9bacd-853e-44ae-9f8f-5f2de2a5cc16"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (8075.356 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (8075.356 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:06:44", "plugin": "core", "name": "end_epoch", "raw_value": "1728889604.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:06:43", "plugin": "core", "name": "start_epoch", "raw_value": "1728889603.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-39", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 39, "time_seconds": 32.09533095359802, "inputs": {"library|input_1": {"src": "hda", "id": "0392aad44106296d"}, "library|r1|adapters_0|adapter_source|adapter": "A{35}", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|overlap": "10"}, "job": {"model_class": "Job", "id": "f2b7bf54c98fa711", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:28:30.224811", "update_time": "2024-10-14T07:28:42.564510", "galaxy_version": "24.1", "external_id": "gxy-mf4pc", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/3/d/dataset_c3de5267-2174-4483-9d12-b333324ca4c7.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'A{35}'    --error-rate=0.1 --times=1 --overlap=10    --action=trim         --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"10\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 287, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"A{35}\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "0392aad44106296d", "src": "hda", "uuid": "c3de5267-2174-4483-9d12-b333324ca4c7"}}, "outputs": {"out1": {"id": "50c1b7108695678e", "src": "hda", "uuid": "3dea1639-3123-41c6-a58e-22d9c25237fd"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (8160.710 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a A{35} --error-rate=0.1 --times=1 --overlap=10 --action=trim --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.033 s (8160.710 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\nReads with adapters:                         3 (75.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nTotal written (filtered):             96 bp (49.5%)\n\n=== Adapter 1 ===\n\nSequence: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; Type: regular 3'; Length: 35; Trimmed: 3 times\n\nMinimum overlap: 10\nNo. of allowed errors:\n1-9 bp: 0; 10-19 bp: 1; 20-29 bp: 2; 30-35 bp: 3\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 33.3%\n  G: 66.7%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n26\t1\t0.0\t2\t0 0 1\n30\t1\t0.0\t3\t0 0 0 1\n42\t1\t0.0\t3\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:28:32", "plugin": "core", "name": "end_epoch", "raw_value": "1728890912.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:28:31", "plugin": "core", "name": "start_epoch", "raw_value": "1728890911.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-4", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 4, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-4", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 4, "status": "skip"}}, {"id": "cutadapt/4.9+galaxy1-40", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 40, "time_seconds": 10.57149052619934, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-40", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 40, "time_seconds": 30.988029718399048, "inputs": {"library|input_1": {"src": "hda", "id": "0e16250d9826ccdc"}, "library|type": "single", "other_trimming_options|poly_a": true}, "job": {"model_class": "Job", "id": "6dbd271f43863215", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:29:02.057507", "update_time": "2024-10-14T07:29:13.911449", "galaxy_version": "24.1", "external_id": "gxy-7nhwg", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/3/a/dataset_63a295f7-e1b6-42ba-949c-10ce1cd9a851.dat' 'polya_1_fasta.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim    --poly-a     --minimum-length=1      -o 'out1.fa'  'polya_1_fasta.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": true, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 289, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "0e16250d9826ccdc", "src": "hda", "uuid": "63a295f7-e1b6-42ba-949c-10ce1cd9a851"}}, "outputs": {"out1": {"id": "de371c263e43e33a", "src": "hda", "uuid": "6a8180df-76fa-43aa-bab5-70e49197f010"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.023 s (5703.568 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --poly-a --minimum-length=1 -o out1.fa polya_1_fasta.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.023 s (5703.568 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       4\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             4 (100.0%)\n\nTotal basepairs processed:           194 bp\nPoly-A-trimmed:                       84 bp (43.3%)\nTotal written (filtered):            110 bp (56.7%)\n\n=== Poly-A trimmed ===\n\nlength\tcount\n0\t1\n21\t2\n42\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:29:03", "plugin": "core", "name": "end_epoch", "raw_value": "1728890943.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:29:03", "plugin": "core", "name": "start_epoch", "raw_value": "1728890943.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-41", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 41, "time_seconds": 30.965556383132935, "inputs": {"library|input_1": {"src": "hda", "id": "45bb97c0d6b15f42"}, "library|type": "single"}, "job": {"model_class": "Job", "id": "06065c916c252062", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:07:24.455265", "update_time": "2024-10-14T07:07:36.320825", "galaxy_version": "24.1", "external_id": "gxy-xfqw4", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/8/4/dataset_4849c60a-548e-47af-b5b9-6ff28867a74e.dat' 'simple_fasta_gz.fa.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fa.gz'  'simple_fasta_gz.fa.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 171, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "45bb97c0d6b15f42", "src": "hda", "uuid": "4849c60a-548e-47af-b5b9-6ff28867a74e"}}, "outputs": {"out1": {"id": "b3b3fb383c541117", "src": "hda", "uuid": "b649b707-2293-4ac9-9a23-bdf3c3908741"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.077 s (38626.909 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.077 s (38626.909 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:07:26", "plugin": "core", "name": "end_epoch", "raw_value": "1728889646.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:07:26", "plugin": "core", "name": "start_epoch", "raw_value": "1728889646.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-41", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 41, "time_seconds": 51.5880560874939, "inputs": {"library|input_1": {"src": "hda", "id": "b2a4dc473bef8d5d"}, "library|type": "single"}, "job": {"model_class": "Job", "id": "3d50f9a64437039d", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:29:32.564320", "update_time": "2024-10-14T07:30:05.489476", "galaxy_version": "24.1", "external_id": "gxy-w7cjd", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/7/b/dataset_c7babb17-94d7-4bed-b3b1-1fb1b12fa892.dat' 'simple_fasta_gz.fa.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fa.gz'  'simple_fasta_gz.fa.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 291, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "b2a4dc473bef8d5d", "src": "hda", "uuid": "c7babb17-94d7-4bed-b3b1-1fb1b12fa892"}}, "outputs": {"out1": {"id": "71e8e4c895bef112", "src": "hda", "uuid": "2a5caf41-8f66-4948-9271-6f1c784f18ce"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.083 s (41355.133 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fa.gz simple_fasta_gz.fa.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.083 s (41355.133 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            18 bp\nTotal written (filtered):             18 bp (100.0%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:29:55", "plugin": "core", "name": "end_epoch", "raw_value": "1728890995.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:29:54", "plugin": "core", "name": "start_epoch", "raw_value": "1728890994.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-42", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 42, "time_seconds": 31.2956063747406, "inputs": {"library|input_1": {"src": "hda", "id": "a85445b5551917cf"}, "library|r1|adapters_0|adapter_source|adapter": "XXXXXX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "ed44ee3ec2bcad13", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:07:54.430348", "update_time": "2024-10-14T07:08:07.566096", "galaxy_version": "24.1", "external_id": "gxy-vrpxt", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/4/d/dataset_14dbc6b1-812a-4f63-8269-6fbb4a34a6ab.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'XXXXXX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 173, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"XXXXXX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "a85445b5551917cf", "src": "hda", "uuid": "14dbc6b1-812a-4f63-8269-6fbb4a34a6ab"}}, "outputs": {"out1": {"id": "d210dad85505bbcf", "src": "hda", "uuid": "685936c0-3d15-49ce-b73a-5b1a3d337248"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (1742.029 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (1742.029 \u00b5s/read; 0.03 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:07:56", "plugin": "core", "name": "end_epoch", "raw_value": "1728889676.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:07:56", "plugin": "core", "name": "start_epoch", "raw_value": "1728889676.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-42", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 42, "time_seconds": 31.343115091323853, "inputs": {"library|input_1": {"src": "hda", "id": "77dd7235ceb6ad54"}, "library|r1|adapters_0|adapter_source|adapter": "XXXXXX", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "f27b7b36d9479c5b", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:30:24.122021", "update_time": "2024-10-14T07:30:36.873423", "galaxy_version": "24.1", "external_id": "gxy-j72ll", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/d/c/3/dataset_dc3d2a76-3c32-45d0-94b2-0e6fc167db96.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'XXXXXX'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 293, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"XXXXXX\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "77dd7235ceb6ad54", "src": "hda", "uuid": "dc3d2a76-3c32-45d0-94b2-0e6fc167db96"}}, "outputs": {"out1": {"id": "1c25bcfb409fb5b0", "src": "hda", "uuid": "feeefd5d-9398-4089-9d97-c144bd854236"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (1564.348 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a XXXXXX --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (1564.348 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads with adapters:                         0 (0.0%)\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n\n=== Adapter 1 ===\n\nSequence: XXXXXX; Type: regular 3'; Length: 6; Trimmed: 0 times\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:30:26", "plugin": "core", "name": "end_epoch", "raw_value": "1728891026.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:30:25", "plugin": "core", "name": "start_epoch", "raw_value": "1728891025.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-43", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 43, "time_seconds": 32.0526442527771, "inputs": {"library|input_1": {"src": "hda", "id": "e2fd046fb70a4e3d"}, "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "c697f45619093734", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:08:26.979745", "update_time": "2024-10-14T07:08:39.761070", "galaxy_version": "24.1", "external_id": "gxy-snfdd", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/5/5/6/dataset_55613b68-80f6-4b98-be51-7bde6eaee41d.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 175, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "e2fd046fb70a4e3d", "src": "hda", "uuid": "55613b68-80f6-4b98-be51-7bde6eaee41d"}}, "outputs": {"out1": {"id": "33aeae39703be8e0", "src": "hda", "uuid": "ee1637c7-a7a2-4885-a2f6-675cad923a8d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.023 s (1129.282 \u00b5s/read; 0.05 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.023 s (1129.282 \u00b5s/read; 0.05 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:08:29", "plugin": "core", "name": "end_epoch", "raw_value": "1728889709.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:08:29", "plugin": "core", "name": "start_epoch", "raw_value": "1728889709.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-43", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 43, "time_seconds": 31.72477078437805, "inputs": {"library|input_1": {"src": "hda", "id": "7cadc4c1e78c7d6d"}, "library|type": "single", "other_trimming_options|quality_cutoff": "10", "filter_options|minimum_length": "0"}, "job": {"model_class": "Job", "id": "9891936868a841dd", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:30:56.379167", "update_time": "2024-10-14T07:31:08.914357", "galaxy_version": "24.1", "external_id": "gxy-hjkw9", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/a/3/dataset_9a353b65-2532-4dfc-b479-68df9d786c93.dat' 'illumina64_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --quality-cutoff=10         --quality-base=64    -o 'out1.fq'  'illumina64_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"10\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 295, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "7cadc4c1e78c7d6d", "src": "hda", "uuid": "9a353b65-2532-4dfc-b479-68df9d786c93"}}, "outputs": {"out1": {"id": "c0b8abdd38e5a601", "src": "hda", "uuid": "6af786f6-0960-4027-a5b7-fbb651b3d281"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.024 s (1203.597 \u00b5s/read; 0.05 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 --error-rate=0.1 --times=1 --overlap=3 --action=trim --quality-cutoff=10 --quality-base=64 -o out1.fq illumina64_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.024 s (1203.597 \u00b5s/read; 0.05 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      20\nReads written (passing filters):            20 (100.0%)\n\nTotal basepairs processed:         1,900 bp\nQuality-trimmed:                   1,021 bp (53.7%)\nTotal written (filtered):            879 bp (46.3%)\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:30:58", "plugin": "core", "name": "end_epoch", "raw_value": "1728891058.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:30:58", "plugin": "core", "name": "start_epoch", "raw_value": "1728891058.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-44", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 44, "time_seconds": 33.120361328125, "inputs": {"library|input_1": {"src": "hda", "id": "430e64f9e501f717"}, "library|type": "single", "filter_options|minimum_length": "0", "filter_options|max_expected_errors": "0.9", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "1004d94ed968aab8", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:08:59.151984", "update_time": "2024-10-14T07:09:12.072764", "galaxy_version": "24.1", "external_id": "gxy-m5r86", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/1/7/0/dataset_170981e6-a247-4c18-92fa-fab1abbedff1.dat' 'maxee_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --max-ee=0.9   --quality-base=64    --info-file='/galaxy/server/database/objects/6/9/a/dataset_69a13635-e5bc-4f26-a0dc-dfa843a73d8e.dat' -o 'out1.fq'  'maxee_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"0.9\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 177, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "430e64f9e501f717", "src": "hda", "uuid": "170981e6-a247-4c18-92fa-fab1abbedff1"}}, "outputs": {"out1": {"id": "7596dcb21b78cb0a", "src": "hda", "uuid": "870cd6b3-1f23-4003-8e52-c298ca57b525"}, "report": {"id": "9d8a469495fa882b", "src": "hda", "uuid": "51b1f1df-7b2c-41b4-af2f-9c616b29dcc0"}, "info_file": {"id": "dce5e8321186ab22", "src": "hda", "uuid": "69a13635-e5bc-4f26-a0dc-dfa843a73d8e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:09:01", "plugin": "core", "name": "end_epoch", "raw_value": "1728889741.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:09:00", "plugin": "core", "name": "start_epoch", "raw_value": "1728889740.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-44", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 44, "time_seconds": 33.94583296775818, "inputs": {"library|input_1": {"src": "hda", "id": "ecd8aa327ce56001"}, "library|type": "single", "filter_options|minimum_length": "0", "filter_options|max_expected_errors": "0.9", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "3428ad5101312396", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:31:28.623992", "update_time": "2024-10-14T07:31:41.813756", "galaxy_version": "24.1", "external_id": "gxy-j4k2r", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/9/8/6/dataset_9861792a-c765-4d83-9a87-ac7737d2c12c.dat' 'maxee_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --max-ee=0.9   --quality-base=64    --info-file='/galaxy/server/database/objects/3/b/6/dataset_3b66afa0-a5d0-4c75-ba66-967f252b8528.dat' -o 'out1.fq'  'maxee_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"0.9\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"0\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 297, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "ecd8aa327ce56001", "src": "hda", "uuid": "9861792a-c765-4d83-9a87-ac7737d2c12c"}}, "outputs": {"out1": {"id": "18d75eecad30d02a", "src": "hda", "uuid": "3c4c6339-bed9-4aee-9a26-c7c2d8d7e11d"}, "report": {"id": "430cd74e961a5d02", "src": "hda", "uuid": "38d16271-4030-4767-bebd-eb828fc389f6"}, "info_file": {"id": "e6a6f52ae79bfbd5", "src": "hda", "uuid": "3b66afa0-a5d0-4c75-ba66-967f252b8528"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:31:30", "plugin": "core", "name": "end_epoch", "raw_value": "1728891090.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:31:30", "plugin": "core", "name": "start_epoch", "raw_value": "1728891090.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-45", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 45, "time_seconds": 28.682566165924072, "inputs": {"library|input_1": {"src": "hda", "id": "1e328abc7acd1320"}, "library|r1|anywhere_adapters_0|adapter_source|adapter": "ACGTACGT", "library|r1|anywhere_adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "eae1562d7a8dabb0", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:09:30.877354", "update_time": "2024-10-14T07:09:41.709635", "galaxy_version": "24.1", "external_id": "gxy-tph48", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/7/e/dataset_67e1da55-45c3-469f-a0a1-fbfc21d96d4c.dat' 'wildcard_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -b 'ACGTACGT'    --error-rate=0.1 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcard_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 181, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"ACGTACGT\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "1e328abc7acd1320", "src": "hda", "uuid": "67e1da55-45c3-469f-a0a1-fbfc21d96d4c"}}, "outputs": {"out1": {"id": "bcd8eef1820ddab0", "src": "hda", "uuid": "bc56b514-84ed-4604-813b-e46339ec887d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (16004.920 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -b ACGTACGT --error-rate=0.1 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcard_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (16004.920 \u00b5s/read; 0.00 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       2\nReads with adapters:                         2 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             2 (100.0%)\n\nTotal basepairs processed:            32 bp\nTotal written (filtered):             16 bp (50.0%)\n\n=== Adapter 1 ===\n\nSequence: ACGTACGT; Type: variable 5'/3'; Length: 8; Trimmed: 2 times\n2 times, it overlapped the 5' end of a read\n0 times, it overlapped the 3' end or was within the read\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-8 bp: 0\n\nOverview of removed sequences (5')\nlength\tcount\texpect\tmax.err\terror counts\n8\t2\t0.0\t0\t2\n\n\n\nOverview of removed sequences (3' or within)\nlength\tcount\texpect\tmax.err\terror counts\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:09:32", "plugin": "core", "name": "end_epoch", "raw_value": "1728889772.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:09:32", "plugin": "core", "name": "start_epoch", "raw_value": "1728889772.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-45", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 45, "time_seconds": 11.73223352432251, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-46", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 46, "time_seconds": 32.086615562438965, "inputs": {"library|input_1": {"src": "hda", "id": "eaa3382122b44f68"}, "library|r1|adapters_0|adapter_source|adapter": "GGGGGGG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|error_rate": "0", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "ae63725137d3ca64", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:10:01.151547", "update_time": "2024-10-14T07:10:13.900839", "galaxy_version": "24.1", "external_id": "gxy-4th47", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/f/1/9/dataset_f19486d5-74a2-4b81-8ada-c86dad72d71d.dat' 'wildcardN_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GGGGGGG'    --error-rate=0.0 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcardN_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.0\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 183, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GGGGGGG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "eaa3382122b44f68", "src": "hda", "uuid": "f19486d5-74a2-4b81-8ada-c86dad72d71d"}}, "outputs": {"out1": {"id": "7a8e2cab15347ada", "src": "hda", "uuid": "ffab6d9d-c93c-4d30-b5a8-f30bd54c68f9"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10484.695 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10484.695 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:10:03", "plugin": "core", "name": "end_epoch", "raw_value": "1728889803.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:10:02", "plugin": "core", "name": "start_epoch", "raw_value": "1728889802.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-46", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 46, "time_seconds": 30.618248462677002, "inputs": {"library|input_1": {"src": "hda", "id": "5201965283ee6d4f"}, "library|r1|adapters_0|adapter_source|adapter": "GGGGGGG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "adapter_options|error_rate": "0", "adapter_options|match_read_wildcards": true}, "job": {"model_class": "Job", "id": "57d56830dedab2fb", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:32:13.772087", "update_time": "2024-10-14T07:32:25.466631", "galaxy_version": "24.1", "external_id": "gxy-s9b7b", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/a/a/dataset_6aa552cb-056e-43d7-979e-df114bf72683.dat' 'wildcardN_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'GGGGGGG'    --error-rate=0.0 --times=1 --overlap=3  --match-read-wildcards  --action=trim         --minimum-length=1      -o 'out1.fa'  'wildcardN_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.0\", \"match_read_wildcards\": true, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 302, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"GGGGGGG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "5201965283ee6d4f", "src": "hda", "uuid": "6aa552cb-056e-43d7-979e-df114bf72683"}}, "outputs": {"out1": {"id": "de54969f1775ea71", "src": "hda", "uuid": "0f6136a1-68db-4fd5-b2f9-ce5d4713d0a7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10589.282 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a GGGGGGG --error-rate=0.0 --times=1 --overlap=3 --match-read-wildcards --action=trim --minimum-length=1 -o out1.fa wildcardN_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.032 s (10589.282 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             3 (100.0%)\n\nTotal basepairs processed:            30 bp\nTotal written (filtered):             16 bp (53.3%)\n\n=== Adapter 1 ===\n\nSequence: GGGGGGG; Type: regular 3'; Length: 7; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t2\t0.0\t0\t2\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:32:15", "plugin": "core", "name": "end_epoch", "raw_value": "1728891135.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:32:14", "plugin": "core", "name": "start_epoch", "raw_value": "1728891134.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-47", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 47, "time_seconds": 31.694127082824707, "inputs": {"library|input_1": {"src": "hda", "id": "53feefc406ddb451"}, "library|input_2": {"src": "hda", "id": "735f8ceb1fd05ed0"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|type": "paired"}, "job": {"model_class": "Job", "id": "20d0852d64beb0a1", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "error", "exit_code": 1, "create_time": "2024-10-14T07:10:34.006604", "update_time": "2024-10-14T07:10:46.412970", "galaxy_version": "24.1", "external_id": "gxy-lr9g9", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/8/4/dataset_c843fad6-6db9-4a39-b3ed-c402ff2ebd2a.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/a/7/6/dataset_a766c8ff-e713-472d-8835-e3e9d3000fca.dat' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq_mispaired2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 185, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 186, \"src\": \"hda\"}]}, \"pair_adapters\": false, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "53feefc406ddb451", "src": "hda", "uuid": "c843fad6-6db9-4a39-b3ed-c402ff2ebd2a"}, "library|input_2": {"id": "735f8ceb1fd05ed0", "src": "hda", "uuid": "a766c8ff-e713-472d-8835-e3e9d3000fca"}}, "outputs": {"out1": {"id": "1a645bce59ef8b10", "src": "hda", "uuid": "4242f4aa-2799-4408-8413-aa5b508a53ee"}, "out2": {"id": "ec3b7679c91000c4", "src": "hda", "uuid": "251b6177-7e7d-41fe-901e-0d25e603a840"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\n", "tool_stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq_mispaired2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\n", "stderr": "Error in sequence file at unknown line: Reads are improperly paired. Read name 'M01368:8:000000000-A3GHV:1:1101:6911:8255/1' in file 1 does not match 'M01368:8:000000000-A3GHV:1:1101:14518:9998/2' in file 2.\n", "job_messages": [{"code_desc": "", "desc": "Fatal error: Exit code 1 ()", "error_level": 3, "exit_code": 1, "type": "exit_code"}], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:10:36", "plugin": "core", "name": "end_epoch", "raw_value": "1728889836.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:10:35", "plugin": "core", "name": "start_epoch", "raw_value": "1728889835.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-47", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 47, "time_seconds": 11.792673587799072, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "cutadapt/4.9+galaxy1-5", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 5, "time_seconds": 32.13527464866638, "inputs": {"library|input_1": {"src": "hda", "id": "993df753360bbd76"}, "library|r1|adapters_0|adapter_source|adapter": "TTAGACATATCTCCGTCG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "filter_options|discard_trimmed": true}, "job": {"model_class": "Job", "id": "611a5f577a5df615", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:50:13.147081", "update_time": "2024-10-14T06:50:26.059784", "galaxy_version": "24.1", "external_id": "gxy-pxvfw", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/b/3/4/dataset_b3499508-dac2-418b-be89-dffcb01e9655.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TTAGACATATCTCCGTCG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim      --discard-trimmed   --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": true, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 78, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TTAGACATATCTCCGTCG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "993df753360bbd76", "src": "hda", "uuid": "b3499508-dac2-418b-be89-dffcb01e9655"}}, "outputs": {"out1": {"id": "f39db21986f0b9f1", "src": "hda", "uuid": "6c0dae58-aae0-44a0-a324-0b3474f82684"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10216.872 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.031 s (10216.872 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:50:15", "plugin": "core", "name": "end_epoch", "raw_value": "1728888615.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:50:15", "plugin": "core", "name": "start_epoch", "raw_value": "1728888615.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-5", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 5, "time_seconds": 32.55170297622681, "inputs": {"library|input_1": {"src": "hda", "id": "3497ae9e7c800994"}, "library|r1|adapters_0|adapter_source|adapter": "TTAGACATATCTCCGTCG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "filter_options|discard_trimmed": true}, "job": {"model_class": "Job", "id": "39b19d3adc9e120f", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:13:12.063665", "update_time": "2024-10-14T07:13:24.674823", "galaxy_version": "24.1", "external_id": "gxy-pb5dj", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/7/3/2/dataset_732132af-1858-42c6-96b1-c1f103beb25e.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'TTAGACATATCTCCGTCG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim      --discard-trimmed   --minimum-length=1      -o 'out1.fq'  'cutadapt_small_fastq.fq'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": true, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 201, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"TTAGACATATCTCCGTCG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "3497ae9e7c800994", "src": "hda", "uuid": "732132af-1858-42c6-96b1-c1f103beb25e"}}, "outputs": {"out1": {"id": "fe7a1d6ddd35721d", "src": "hda", "uuid": "23a79425-2810-458e-802d-c5342af5e78c"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (11593.819 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a TTAGACATATCTCCGTCG --error-rate=0.1 --times=1 --overlap=3 --action=trim --discard-trimmed --minimum-length=1 -o out1.fq cutadapt_small_fastq.fq\nProcessing single-end reads on 5 cores ...\nFinished in 0.035 s (11593.819 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       3\nReads with adapters:                         2 (66.7%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             1 (33.3%)\n\nTotal basepairs processed:           102 bp\nTotal written (filtered):             34 bp (33.3%)\n\n=== Adapter 1 ===\n\nSequence: TTAGACATATCTCCGTCG; Type: regular 3'; Length: 18; Trimmed: 2 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-18 bp: 1\n\nBases preceding removed adapters:\n  A: 50.0%\n  C: 50.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n10\t1\t0.0\t1\t0 1\n12\t1\t0.0\t1\t0 1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:13:13", "plugin": "core", "name": "end_epoch", "raw_value": "1728889993.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:13:13", "plugin": "core", "name": "start_epoch", "raw_value": "1728889993.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-6", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 6, "time_seconds": 34.26144576072693, "inputs": {"library|input_1": {"src": "hda", "id": "b868fada2b78f198"}, "library|input_2": {"src": "hda", "id": "59965f7c576944f7"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|pair_adapters": true, "library|type": "paired"}, "job": {"model_class": "Job", "id": "915e9e7d10c77483", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:50:46.436053", "update_time": "2024-10-14T06:50:59.490508", "galaxy_version": "24.1", "external_id": "gxy-kl9rh", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/c/d/f/dataset_cdf7c7f4-6654-403d-92c7-478a10ba2909.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/f/5/1/dataset_f5105bba-7cad-4669-bfc5-91eb6f782ba6.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'  --pair-adapters  --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 80, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 81, \"src\": \"hda\"}]}, \"pair_adapters\": true, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "b868fada2b78f198", "src": "hda", "uuid": "cdf7c7f4-6654-403d-92c7-478a10ba2909"}, "library|input_2": {"id": "59965f7c576944f7", "src": "hda", "uuid": "f5105bba-7cad-4669-bfc5-91eb6f782ba6"}}, "outputs": {"out1": {"id": "6d07afbb7f3eb721", "src": "hda", "uuid": "033e6db9-5339-4a6f-8df7-4847b10a566c"}, "out2": {"id": "e0149bc9a79f7945", "src": "hda", "uuid": "cbe410f1-cc2a-4672-b2d6-b5314024eb10"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1609.694 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.159 s (1609.694 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:50:49", "plugin": "core", "name": "end_epoch", "raw_value": "1728888649.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:50:48", "plugin": "core", "name": "start_epoch", "raw_value": "1728888648.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-6", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 6, "time_seconds": 33.147242069244385, "inputs": {"library|input_1": {"src": "hda", "id": "a63fdb020e93ccae"}, "library|input_2": {"src": "hda", "id": "b91d7cce134e5e73"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|r2|adapters2_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r2|adapters2_0|adapter_source|adapter_source_list": "user", "library|pair_adapters": true, "library|type": "paired"}, "job": {"model_class": "Job", "id": "73677e0a91a06add", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:13:44.622205", "update_time": "2024-10-14T07:13:57.162041", "galaxy_version": "24.1", "external_id": "gxy-zjhvp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/d/5/dataset_6d5da605-527a-4487-926c-df9bbdf67f91.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' && ln -f -s '/galaxy/server/database/objects/4/5/0/dataset_450d1aa9-81ad-468e-8fbb-3caf0d29fc50.dat' 'bwa-mem-fastq2_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    -A 'AGATCGGAAGAGC'  --pair-adapters  --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      -o 'out1.fq.gz' -p 'out2.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz' 'bwa-mem-fastq2_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 203, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 204, \"src\": \"hda\"}]}, \"pair_adapters\": true, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"r2\": {\"adapters2\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters2\": [], \"front_adapters2\": []}, \"type\": \"paired\"}"}, "inputs": {"library|input_1": {"id": "a63fdb020e93ccae", "src": "hda", "uuid": "6d5da605-527a-4487-926c-df9bbdf67f91"}, "library|input_2": {"id": "b91d7cce134e5e73", "src": "hda", "uuid": "450d1aa9-81ad-468e-8fbb-3caf0d29fc50"}}, "outputs": {"out1": {"id": "e08ce8f7a1d22176", "src": "hda", "uuid": "b102e590-8fbc-4528-a3cf-ed6a0e992a8a"}, "out2": {"id": "60bb27dd176932e3", "src": "hda", "uuid": "52d4cd53-38c9-4d92-bed2-00036d4ee911"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.156 s (1579.834 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC -A AGATCGGAAGAGC --pair-adapters --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 -o out1.fq.gz -p out2.fq.gz bwa-mem-fastq1_fq_gz.fq.gz bwa-mem-fastq2_fq_gz.fq.gz\nProcessing paired-end reads on 5 cores ...\nFinished in 0.156 s (1579.834 \u00b5s/read; 0.04 M reads/minute).\n\n=== Summary ===\n\nTotal read pairs processed:                 99\n  Read 1 with adapter:                       1 (1.0%)\n  Read 2 with adapter:                       1 (1.0%)\n\n== Read fate breakdown ==\nPairs that were too short:                   0 (0.0%)\nPairs written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        49,698 bp\n  Read 1:        24,849 bp\n  Read 2:        24,849 bp\nTotal written (filtered):         49,692 bp (100.0%)\n  Read 1:        24,846 bp\n  Read 2:        24,846 bp\n\n=== First read: Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 100.0%\n  G: 0.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n\n\n=== Second read: Adapter 2 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 1 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 0.0%\n  T: 100.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t1\t1.5\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:13:46", "plugin": "core", "name": "end_epoch", "raw_value": "1728890026.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:13:46", "plugin": "core", "name": "start_epoch", "raw_value": "1728890026.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-7", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 7, "time_seconds": 33.83477449417114, "inputs": {"library|input_1": {"src": "hda", "id": "128047dd77cb023a"}, "library|r1|adapters_0|adapter_source|adapter": "AAAGATG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_selector": ["rest_file", "json_stats"]}, "job": {"model_class": "Job", "id": "151eb3774db75706", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:51:20.154250", "update_time": "2024-10-14T06:51:32.842459", "galaxy_version": "24.1", "external_id": "gxy-k7qbp", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/a/6/dataset_6a6f9fb8-0c2a-4b9f-a258-4e919f50dbce.dat' 'cutadapt_rest_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAGATG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --json=stats.json -r='rest_output.fa' -o 'out1.fa'  'cutadapt_rest_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"rest_file\", \"json_stats\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 84, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAGATG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "128047dd77cb023a", "src": "hda", "uuid": "6a6f9fb8-0c2a-4b9f-a258-4e919f50dbce"}}, "outputs": {"out1": {"id": "95f72930365215f3", "src": "hda", "uuid": "5d44ec34-e2b9-4021-b05a-53b932cf3805"}, "rest_output": {"id": "3b42b4bf29770399", "src": "hda", "uuid": "66c4be08-822a-491c-874d-cb3abd1e41af"}, "json_stats": {"id": "ce521a98a1d9a509", "src": "hda", "uuid": "74c06de3-344e-478c-9f45-acba9a03c06a"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (7324.171 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (7324.171 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:51:22", "plugin": "core", "name": "end_epoch", "raw_value": "1728888682.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:51:22", "plugin": "core", "name": "start_epoch", "raw_value": "1728888682.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-7", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 7, "time_seconds": 32.37337946891785, "inputs": {"library|input_1": {"src": "hda", "id": "f3ca02b956f3566e"}, "library|r1|adapters_0|adapter_source|adapter": "AAAGATG", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "output_selector": ["rest_file", "json_stats"]}, "job": {"model_class": "Job", "id": "5dc7c38d7d0c7ec0", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:14:16.473990", "update_time": "2024-10-14T07:14:28.767311", "galaxy_version": "24.1", "external_id": "gxy-tldmb", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/6/f/1/dataset_6f198fb6-c7b6-4f09-be94-79b5362177e4.dat' 'cutadapt_rest_fa.fa' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AAAGATG'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --json=stats.json -r='rest_output.fa' -o 'out1.fa'  'cutadapt_rest_fa.fa'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"rest_file\", \"json_stats\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 207, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AAAGATG\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "f3ca02b956f3566e", "src": "hda", "uuid": "6f198fb6-c7b6-4f09-be94-79b5362177e4"}}, "outputs": {"out1": {"id": "a25531eb874ea791", "src": "hda", "uuid": "1cc0cdbe-85e5-4b37-b6c8-ede28e91d320"}, "rest_output": {"id": "584426186287746d", "src": "hda", "uuid": "4c00ccf2-c77a-4570-871b-7988af5b43c0"}, "json_stats": {"id": "caa4ab591477c3fa", "src": "hda", "uuid": "f6f020d3-c1be-46c0-b089-1c175abb47b5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (7381.248 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AAAGATG --error-rate=0.1 --times=1 --overlap=3 --action=trim --minimum-length=1 --json=stats.json -r=rest_output.fa -o out1.fa cutadapt_rest_fa.fa\nProcessing single-end reads on 5 cores ...\nFinished in 0.037 s (7381.248 \u00b5s/read; 0.01 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                       5\nReads with adapters:                         5 (100.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):             5 (100.0%)\n\nTotal basepairs processed:            97 bp\nTotal written (filtered):             35 bp (36.1%)\n\n=== Adapter 1 ===\n\nSequence: AAAGATG; Type: regular 3'; Length: 7; Trimmed: 5 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-7 bp: 0\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 0.0%\n  G: 100.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n7\t1\t0.0\t0\t1\n12\t1\t0.0\t0\t1\n14\t2\t0.0\t0\t2\n15\t1\t0.0\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:14:18", "plugin": "core", "name": "end_epoch", "raw_value": "1728890058.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:14:18", "plugin": "core", "name": "start_epoch", "raw_value": "1728890058.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-8", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 8, "time_seconds": 30.92281174659729, "inputs": {"library|input_1": {"src": "hda", "id": "b8d8d60e66dbbc4a"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|nextseq_trim": "20"}, "job": {"model_class": "Job", "id": "32edcbb5d2e0476d", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:51:53.358163", "update_time": "2024-10-14T06:52:05.282750", "galaxy_version": "24.1", "external_id": "gxy-vvp72", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/a/e/b/dataset_aeb38827-6c67-4157-b75c-f23d696919c7.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --nextseq-trim=20       --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"20\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 88, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "b8d8d60e66dbbc4a", "src": "hda", "uuid": "aeb38827-6c67-4157-b75c-f23d696919c7"}}, "outputs": {"out1": {"id": "d2affdf373b2f502", "src": "hda", "uuid": "b367f47e-df9c-49e3-9218-d74d38095454"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.086 s (872.937 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.086 s (872.937 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:51:55", "plugin": "core", "name": "end_epoch", "raw_value": "1728888715.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:51:55", "plugin": "core", "name": "start_epoch", "raw_value": "1728888715.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-8", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 8, "time_seconds": 30.201915979385376, "inputs": {"library|input_1": {"src": "hda", "id": "0b5209b394eb3169"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "other_trimming_options|nextseq_trim": "20"}, "job": {"model_class": "Job", "id": "00a13b5e48c8c774", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:14:48.959675", "update_time": "2024-10-14T07:15:00.749393", "galaxy_version": "24.1", "external_id": "gxy-cbvtl", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/4/f/d/dataset_4fdc40d1-9227-49ce-8f96-4c8ba47c6031.dat' 'bwa-mem-fastq1_fq_gz.fq.gz' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim   --nextseq-trim=20       --minimum-length=1      -o 'out1.fq.gz'  'bwa-mem-fastq1_fq_gz.fq.gz'", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": null, "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"20\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 211, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "0b5209b394eb3169", "src": "hda", "uuid": "4fdc40d1-9227-49ce-8f96-4c8ba47c6031"}}, "outputs": {"out1": {"id": "f2b7bf54c98fa711", "src": "hda", "uuid": "b2c93c54-ee12-4d7c-a1d2-e63dbae27dda"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.086 s (872.395 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "This is cutadapt 4.9 with Python 3.12.7\nCommand line parameters: -j=5 -a AGATCGGAAGAGC --error-rate=0.1 --times=1 --overlap=3 --action=trim --nextseq-trim=20 --minimum-length=1 -o out1.fq.gz bwa-mem-fastq1_fq_gz.fq.gz\nProcessing single-end reads on 5 cores ...\nFinished in 0.086 s (872.395 \u00b5s/read; 0.07 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                      99\nReads with adapters:                         4 (4.0%)\n\n== Read fate breakdown ==\nReads that were too short:                   0 (0.0%)\nReads written (passing filters):            99 (100.0%)\n\nTotal basepairs processed:        24,849 bp\nQuality-trimmed:                     286 bp (1.2%)\nTotal written (filtered):         24,550 bp (98.8%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 4 times\n\nMinimum overlap: 3\nNo. of allowed errors:\n1-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 0.0%\n  C: 75.0%\n  G: 25.0%\n  T: 0.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n3\t3\t1.5\t0\t3\n4\t1\t0.4\t0\t1\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:14:51", "plugin": "core", "name": "end_epoch", "raw_value": "1728890091.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:14:50", "plugin": "core", "name": "start_epoch", "raw_value": "1728890090.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-9", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 9, "time_seconds": 32.566115856170654, "inputs": {"library|input_1": {"src": "hda", "id": "b428a3536c66654d"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "37903171106b182b", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:52:23.623333", "update_time": "2024-10-14T06:52:36.670666", "galaxy_version": "24.1", "external_id": "gxy-k9s4s", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/0/9/1/dataset_091da704-3f6f-4aa0-95c0-f46d008d5dd5.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --info-file='/galaxy/server/database/objects/5/e/6/dataset_5e6193cd-ff84-47a1-8159-1f5a5a490189.dat' -o 'out1.fq'  'cutadapt_small_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 90, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "b428a3536c66654d", "src": "hda", "uuid": "091da704-3f6f-4aa0-95c0-f46d008d5dd5"}}, "outputs": {"out1": {"id": "7e48ee256531844f", "src": "hda", "uuid": "60f96f5f-4c2f-4589-bd50-ee6c6cccbbfb"}, "report": {"id": "43099197854144c8", "src": "hda", "uuid": "9da4c151-5644-4cb4-a688-46cc15f2d3f5"}, "info_file": {"id": "2a68ba57b639974c", "src": "hda", "uuid": "5e6193cd-ff84-47a1-8159-1f5a5a490189"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:52:26", "plugin": "core", "name": "end_epoch", "raw_value": "1728888746.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:52:25", "plugin": "core", "name": "start_epoch", "raw_value": "1728888745.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "cutadapt/4.9+galaxy1-9", "has_data": true, "data": {"tool_id": "cutadapt", "tool_version": "4.9+galaxy1", "test_index": 9, "time_seconds": 33.43705415725708, "inputs": {"library|input_1": {"src": "hda", "id": "181fef75992555ee"}, "library|r1|adapters_0|adapter_source|adapter": "AGATCGGAAGAGC", "library|r1|adapters_0|adapter_source|adapter_source_list": "user", "library|type": "single", "output_selector": ["report", "info_file"]}, "job": {"model_class": "Job", "id": "8fc2a2f5926c1a78", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/4.9+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:15:20.444621", "update_time": "2024-10-14T07:15:33.022006", "galaxy_version": "24.1", "external_id": "gxy-lqclf", "handler": null, "job_runner_name": null, "command_line": "ln -f -s '/galaxy/server/database/objects/3/f/8/dataset_3f8d276e-3fc6-46f5-a6e9-6e9b17e80797.dat' 'cutadapt_small_fastq.fq' &&  cutadapt  -j=${GALAXY_SLOTS:-4}   -a 'AGATCGGAAGAGC'    --error-rate=0.1 --times=1 --overlap=3    --action=trim         --minimum-length=1      --info-file='/galaxy/server/database/objects/d/c/a/dataset_dca72798-53b0-4ea0-8c6b-04b1dfa01c1e.dat' -o 'out1.fq'  'cutadapt_small_fastq.fq'  > report.txt", "user_email": "tests@fake.org", "command_version": "4.9", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_selector": "[\"report\", \"info_file\"]", "read_mod_options": "{\"length_tag\": null, \"rename\": null, \"strip_suffix\": null, \"zero_cap\": false}", "filter_options": "{\"discard_casava\": false, \"discard_trimmed\": false, \"discard_untrimmed\": false, \"max_average_error_rate\": \"\", \"max_expected_errors\": \"\", \"max_n\": \"\", \"maximum_length\": \"\", \"maximum_length2\": \"\", \"minimum_length\": \"1\", \"minimum_length2\": \"\", \"pair_filter\": \"any\"}", "other_trimming_options": "{\"cut\": \"0\", \"cut2\": \"0\", \"nextseq_trim\": \"0\", \"poly_a\": false, \"quality_cutoff\": \"0\", \"quality_cutoff2\": \"\", \"shorten_options\": {\"__current_case__\": 1, \"shorten_values\": \"False\"}, \"shorten_options_r2\": {\"__current_case__\": 1, \"shorten_values_r2\": \"False\"}, \"trim_n\": false}", "adapter_options": "{\"action\": \"trim\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"no_match_adapter_wildcards\": true, \"overlap\": \"3\", \"revcomp\": false, \"times\": \"1\"}", "library": "{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 213, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [{\"__index__\": 0, \"adapter_source\": {\"__current_case__\": 0, \"adapter\": \"AGATCGGAAGAGC\", \"adapter_name\": \"\", \"adapter_source_list\": \"user\"}, \"single_noindels\": false}], \"anywhere_adapters\": [], \"front_adapters\": []}, \"type\": \"single\"}"}, "inputs": {"library|input_1": {"id": "181fef75992555ee", "src": "hda", "uuid": "3f8d276e-3fc6-46f5-a6e9-6e9b17e80797"}}, "outputs": {"out1": {"id": "6dbd271f43863215", "src": "hda", "uuid": "ea4637d0-052a-43f0-9688-b8459cd5fad1"}, "report": {"id": "4e665f299be3ab20", "src": "hda", "uuid": "254efbdb-823e-4b80-97b9-13e0263b6c26"}, "info_file": {"id": "3d50f9a64437039d", "src": "hda", "uuid": "dca72798-53b0-4ea0-8c6b-04b1dfa01c1e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 07:15:22", "plugin": "core", "name": "end_epoch", "raw_value": "1728890122.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:15:22", "plugin": "core", "name": "start_epoch", "raw_value": "1728890122.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_compare/3.5.4+galaxy0-0", "has_data": true, "data": {"tool_id": "deeptools_bam_compare", "tool_version": "3.5.4+galaxy0", "test_index": 0, "time_seconds": 45.62154483795166, "inputs": {"bamFile1": {"src": "hda", "id": "6c962520a1631c55"}, "bamFile2": {"src": "hda", "id": "6c962520a1631c55"}, "binSize": "5", "comparison|type": "ratio", "outFileFormat": "bedgraph", "advancedOpt|showAdvancedOpt": "no"}, "job": {"model_class": "Job", "id": "15cf17e02d5b317a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.5.4+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:46:52.292665", "update_time": "2024-10-14T06:47:19.289536", "galaxy_version": "24.1", "external_id": "gxy-6gplt", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/f/f/dataset_5ff9fce7-0ca8-48b8-beea-878da4e78673.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/8/b/c/metadata_8bc5cc46-e1c1-44bc-ad0e-d03c91b24e2f.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/5/f/f/dataset_5ff9fce7-0ca8-48b8-beea-878da4e78673.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/8/b/c/metadata_8bc5cc46-e1c1-44bc-ad0e-d03c91b24e2f.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/0/1/2/dataset_012d312a-bb98-4f63-8d80-b4465ac54766.dat' --outFileFormat 'bedgraph'  --binSize 5  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1", "user_email": "tests@fake.org", "command_version": "bamCompare 3.5.4", "params": {"binSize": "\"5\"", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "exactScaling": "false", "outFileFormat": "\"bedgraph\"", "region": "\"\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"bamFile2": {"id": "6c962520a1631c55", "src": "hda", "uuid": "5ff9fce7-0ca8-48b8-beea-878da4e78673"}, "bamFile1": {"id": "6c962520a1631c55", "src": "hda", "uuid": "5ff9fce7-0ca8-48b8-beea-878da4e78673"}}, "outputs": {"outFileName": {"id": "b462f00e51feec08", "src": "hda", "uuid": "012d312a-bb98-4f63-8d80-b4465ac54766"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 5\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: None\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 5\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:47:05", "plugin": "core", "name": "end_epoch", "raw_value": "1728888425.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:47:04", "plugin": "core", "name": "start_epoch", "raw_value": "1728888424.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_compare/3.5.4+galaxy0-1", "has_data": true, "data": {"tool_id": "deeptools_bam_compare", "tool_version": "3.5.4+galaxy0", "test_index": 1, "time_seconds": 32.5205135345459, "inputs": {"bamFile1": {"src": "hda", "id": "f758fcba6198996c"}, "bamFile2": {"src": "hda", "id": "f758fcba6198996c"}, "binSize": "10", "comparison|type": "ratio", "outFileFormat": "bigwig", "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "654e03481990754d", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_compare/deeptools_bam_compare/3.5.4+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:47:38.997663", "update_time": "2024-10-14T06:47:51.651405", "galaxy_version": "24.1", "external_id": "gxy-t5cjf", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/d/c/b/dataset_dcb633ee-50f4-4b3e-aac2-2938acf62dc9.dat' one.bam && ln -s '/galaxy/server/database/objects/_metadata_files/9/6/8/metadata_96874de8-c947-476c-b779-7ad3b7ecabb4.dat' one.bam.bai && ln -s '/galaxy/server/database/objects/d/c/b/dataset_dcb633ee-50f4-4b3e-aac2-2938acf62dc9.dat' two.bam && ln -s '/galaxy/server/database/objects/_metadata_files/9/6/8/metadata_96874de8-c947-476c-b779-7ad3b7ecabb4.dat' two.bam.bai &&  bamCompare --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfile1 one.bam --bamfile2 two.bam  --outFileName '/galaxy/server/database/objects/6/1/6/dataset_616173c3-1bea-4066-8dba-cfbe32847fba.dat' --outFileFormat 'bigwig'  --binSize 10  --scaleFactorsMethod readCount  --operation ratio   --pseudocount 1 1       --minMappingQuality '1'", "user_email": "tests@fake.org", "command_version": "bamCompare 3.5.4", "params": {"binSize": "\"10\"", "scaling": "{\"__current_case__\": 1, \"method\": \"readCount\"}", "comparison": "{\"__current_case__\": 1, \"pseudocount\": \"1 1\", \"type\": \"ratio\"}", "exactScaling": "false", "outFileFormat": "\"bigwig\"", "region": "\"\"", "advancedOpt": "{\"__current_case__\": 1, \"blackListFileName\": null, \"centerReads\": false, \"doExtendCustom\": {\"__current_case__\": 0, \"doExtend\": \"no\"}, \"ignoreDuplicates\": false, \"ignoreForNormalization\": \"\", \"maxFragmentLength\": \"0\", \"minFragmentLength\": \"0\", \"minMappingQuality\": \"1\", \"samFlagExclude\": \"\", \"samFlagInclude\": \"\", \"showAdvancedOpt\": \"yes\", \"skipNAs\": false, \"skipZeroOverZero\": \"\", \"smoothLength\": \"\"}", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"bamFile1": {"id": "f758fcba6198996c", "src": "hda", "uuid": "dcb633ee-50f4-4b3e-aac2-2938acf62dc9"}, "bamFile2": {"id": "f758fcba6198996c", "src": "hda", "uuid": "dcb633ee-50f4-4b3e-aac2-2938acf62dc9"}}, "outputs": {"outFileName": {"id": "740cce0092236715", "src": "hda", "uuid": "616173c3-1bea-4066-8dba-cfbe32847fba"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "tool_stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_stdout": "", "job_stderr": "", "stdout": "Due to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\nDue to filtering, 83.33333333333334% of the aforementioned alignments will be used 39.16666666666667\n", "stderr": "bamFilesList: ['one.bam', 'two.bam']\nbinLength: 10\nnumberOfSamples: 0\nblackListFileName: None\nskipZeroOverZero: False\nbed_and_bin: False\ngenomeChunkSize: None\ndefaultFragmentLength: read length\nnumberOfProcessors: 8\nverbose: False\nregion: None\nbedFile: None\nminMappingQuality: 1\nignoreDuplicates: False\nchrsToSkip: []\nstepSize: 10\ncenter_read: False\nsamFlag_include: None\nsamFlag_exclude: None\nminFragmentLength: 0\nmaxFragmentLength: 0\nzerosToNans: False\nsmoothLength: None\nsave_data: False\nout_file_for_raw_data: None\nmaxPairedFragmentLength: 1000\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 06:47:41", "plugin": "core", "name": "end_epoch", "raw_value": "1728888461.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:47:41", "plugin": "core", "name": "start_epoch", "raw_value": "1728888461.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "dropletutils_read_10x/1.0.4+galaxy0-0", "has_data": true, "data": {"tool_id": "dropletutils_read_10x", "tool_version": "1.0.4+galaxy0", "test_index": 0, "time_seconds": 0.34673285484313965, "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error"}}, {"id": "fastqc/0.74+galaxy1-0", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 0, "time_seconds": 47.16456413269043, "inputs": {"input_file": {"src": "hda", "id": "ab02ee6602cdc636"}}, "job": {"model_class": "Job", "id": "1e36c71311b3f207", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:32:58.524884", "update_time": "2024-10-14T07:33:24.631408", "galaxy_version": "24.1", "external_id": "gxy-nznn2", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/b/5/1/dataset_b512b844-8d5d-4dbb-9e72-6c5fec7bc2cd.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/4/2/9/dataset_429dc06c-f64f-4f65-90bc-51b69d517941_files' && fastqc --outdir '/galaxy/server/database/objects/4/2/9/dataset_429dc06c-f64f-4f65-90bc-51b69d517941_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/4/2/9/dataset_429dc06c-f64f-4f65-90bc-51b69d517941_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/4/2/9/dataset_429dc06c-f64f-4f65-90bc-51b69d517941_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "ab02ee6602cdc636", "src": "hda", "uuid": "b512b844-8d5d-4dbb-9e72-6c5fec7bc2cd"}}, "outputs": {"html_file": {"id": "d6c202ea2686e184", "src": "hda", "uuid": "429dc06c-f64f-4f65-90bc-51b69d517941"}, "text_file": {"id": "5a03073826b98a9a", "src": "hda", "uuid": "06bfd15c-06be-4853-906e-6d04530bade7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:33:10", "plugin": "core", "name": "end_epoch", "raw_value": "1728891190.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:33:08", "plugin": "core", "name": "start_epoch", "raw_value": "1728891188.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-0", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 0, "time_seconds": 35.75890588760376, "inputs": {"input_file": {"src": "hda", "id": "fcfead6fa80878f1"}}, "job": {"model_class": "Job", "id": "61a499d96ae9700a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:37:50.153203", "update_time": "2024-10-14T07:38:04.541001", "galaxy_version": "24.1", "external_id": "gxy-nv2t7", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/5/2/dataset_452f20d0-b149-4e27-a963-2f760d12f973.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/b/a/8/dataset_ba890d74-b9ab-4fb3-9db4-6362b3232e74_files' && fastqc --outdir '/galaxy/server/database/objects/b/a/8/dataset_ba890d74-b9ab-4fb3-9db4-6362b3232e74_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/b/a/8/dataset_ba890d74-b9ab-4fb3-9db4-6362b3232e74_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/b/a/8/dataset_ba890d74-b9ab-4fb3-9db4-6362b3232e74_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "fcfead6fa80878f1", "src": "hda", "uuid": "452f20d0-b149-4e27-a963-2f760d12f973"}}, "outputs": {"text_file": {"id": "d4496bbc41470103", "src": "hda", "uuid": "f4283175-5d47-4f37-a97b-f12fd2d089f2"}, "html_file": {"id": "30397fc88f382d9e", "src": "hda", "uuid": "ba890d74-b9ab-4fb3-9db4-6362b3232e74"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:37:54", "plugin": "core", "name": "end_epoch", "raw_value": "1728891474.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:37:51", "plugin": "core", "name": "start_epoch", "raw_value": "1728891471.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-1", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 1, "time_seconds": 35.852657318115234, "inputs": {"input_file": {"src": "hda", "id": "a65d602ad8faa094"}, "contaminants": {"src": "hda", "id": "a0525ec5bf9f68b3"}}, "job": {"model_class": "Job", "id": "763439942f3ce481", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:33:45.949060", "update_time": "2024-10-14T07:34:00.506887", "galaxy_version": "24.1", "external_id": "gxy-btgh6", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/b/d/8/dataset_bd8612f9-b084-40f3-95ea-071cdba9e34c.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/c/3/c/dataset_c3cefcf3-2491-40bb-962f-04aa8ab39edf_files' && fastqc --outdir '/galaxy/server/database/objects/c/3/c/dataset_c3cefcf3-2491-40bb-962f-04aa8ab39edf_files' --contaminants '/galaxy/server/database/objects/6/e/e/dataset_6ee7b105-8df3-4ffa-b8e4-847080612089.dat'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/c/3/c/dataset_c3cefcf3-2491-40bb-962f-04aa8ab39edf_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/c/3/c/dataset_c3cefcf3-2491-40bb-962f-04aa8ab39edf_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null}, "inputs": {"input_file": {"id": "a65d602ad8faa094", "src": "hda", "uuid": "bd8612f9-b084-40f3-95ea-071cdba9e34c"}, "contaminants": {"id": "a0525ec5bf9f68b3", "src": "hda", "uuid": "6ee7b105-8df3-4ffa-b8e4-847080612089"}}, "outputs": {"text_file": {"id": "f9e4e9de9831f046", "src": "hda", "uuid": "8ae5d61d-56d6-4aa4-bb78-d1bf79d0efae"}, "html_file": {"id": "387e5e65f5f7f25f", "src": "hda", "uuid": "c3cefcf3-2491-40bb-962f-04aa8ab39edf"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:33:50", "plugin": "core", "name": "end_epoch", "raw_value": "1728891230.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:33:48", "plugin": "core", "name": "start_epoch", "raw_value": "1728891228.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-1", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 1, "time_seconds": 37.02119207382202, "inputs": {"input_file": {"src": "hda", "id": "571c3a4079c9275a"}, "contaminants": {"src": "hda", "id": "6294142ce00a2c9d"}}, "job": {"model_class": "Job", "id": "d035215abb44b791", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:38:27.277493", "update_time": "2024-10-14T07:38:41.810767", "galaxy_version": "24.1", "external_id": "gxy-lgwbd", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/a/0/d/dataset_a0dda63c-21fa-415b-a3a2-c9234debd4e0.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/5/6/8/dataset_568f6118-f625-4c9b-b992-74332da68437_files' && fastqc --outdir '/galaxy/server/database/objects/5/6/8/dataset_568f6118-f625-4c9b-b992-74332da68437_files' --contaminants '/galaxy/server/database/objects/e/6/0/dataset_e608f746-6818-4930-a985-09cec2cae8ea.dat'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/5/6/8/dataset_568f6118-f625-4c9b-b992-74332da68437_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/5/6/8/dataset_568f6118-f625-4c9b-b992-74332da68437_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null}, "inputs": {"input_file": {"id": "571c3a4079c9275a", "src": "hda", "uuid": "a0dda63c-21fa-415b-a3a2-c9234debd4e0"}, "contaminants": {"id": "6294142ce00a2c9d", "src": "hda", "uuid": "e608f746-6818-4930-a985-09cec2cae8ea"}}, "outputs": {"text_file": {"id": "0a9d840e0b990c08", "src": "hda", "uuid": "35ede0c2-9e2a-4039-8919-f9894584501a"}, "html_file": {"id": "f77663a23af5f12b", "src": "hda", "uuid": "568f6118-f625-4c9b-b992-74332da68437"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:38:30", "plugin": "core", "name": "end_epoch", "raw_value": "1728891510.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:38:28", "plugin": "core", "name": "start_epoch", "raw_value": "1728891508.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-2", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 2, "time_seconds": 35.58115530014038, "inputs": {"input_file": {"src": "hda", "id": "bb959eebf7fd70e9"}, "adapters": {"src": "hda", "id": "327d63cc722a1e0c"}}, "job": {"model_class": "Job", "id": "7b0040d08ae288e5", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:34:22.350897", "update_time": "2024-10-14T07:34:36.236833", "galaxy_version": "24.1", "external_id": "gxy-m4l86", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/1/2/dataset_512d01e0-9e05-41bf-ac36-86b3c4639b82.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/2/c/1/dataset_2c1d98c6-5bb5-4432-9fcb-d606dc634d32_files' && fastqc --outdir '/galaxy/server/database/objects/2/c/1/dataset_2c1d98c6-5bb5-4432-9fcb-d606dc634d32_files'  --adapters '/galaxy/server/database/objects/e/0/d/dataset_e0d54a40-fc44-46c9-a945-b77aa71ccba4.dat'  --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/2/c/1/dataset_2c1d98c6-5bb5-4432-9fcb-d606dc634d32_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/2/c/1/dataset_2c1d98c6-5bb5-4432-9fcb-d606dc634d32_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "contaminants": null}, "inputs": {"input_file": {"id": "bb959eebf7fd70e9", "src": "hda", "uuid": "512d01e0-9e05-41bf-ac36-86b3c4639b82"}, "adapters": {"id": "327d63cc722a1e0c", "src": "hda", "uuid": "e0d54a40-fc44-46c9-a945-b77aa71ccba4"}}, "outputs": {"text_file": {"id": "5c26afe630bb2af4", "src": "hda", "uuid": "55abbe40-d547-4499-a0dd-49f513d6cf84"}, "html_file": {"id": "ae1b96bdfe714fa4", "src": "hda", "uuid": "2c1d98c6-5bb5-4432-9fcb-d606dc634d32"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:34:25", "plugin": "core", "name": "end_epoch", "raw_value": "1728891265.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:34:23", "plugin": "core", "name": "start_epoch", "raw_value": "1728891263.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-2", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 2, "time_seconds": 28.370067596435547, "inputs": {"input_file": {"src": "hda", "id": "0bd44857bd80712b"}, "adapters": {"src": "hda", "id": "f8fbef6920c50f5a"}}, "job": {"model_class": "Job", "id": "0550727044abdcc8", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-10-14T07:39:03.369300", "update_time": "2024-10-14T07:39:11.170960", "galaxy_version": "24.1", "external_id": "gxy-mgjdc", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/7/7/3/dataset_773091f9-cac6-4ee4-ac18-23b8c120f3c6.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/2/a/6/dataset_2a62a46c-6e61-465a-9dce-6910dc58cc69_files' && fastqc --outdir '/galaxy/server/database/objects/2/a/6/dataset_2a62a46c-6e61-465a-9dce-6910dc58cc69_files'  --adapters '/galaxy/server/database/objects/8/9/8/dataset_898ac824-26ae-4248-97b4-d530ac85ca53.dat'  --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/2/a/6/dataset_2a62a46c-6e61-465a-9dce-6910dc58cc69_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/2/a/6/dataset_2a62a46c-6e61-465a-9dce-6910dc58cc69_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "contaminants": null}, "inputs": {"input_file": {"id": "0bd44857bd80712b", "src": "hda", "uuid": "773091f9-cac6-4ee4-ac18-23b8c120f3c6"}, "adapters": {"id": "f8fbef6920c50f5a", "src": "hda", "uuid": "898ac824-26ae-4248-97b4-d530ac85ca53"}}, "outputs": {"text_file": {"id": "75ef6958b28e82c1", "src": "hda", "uuid": "bbd0a75e-156b-4a08-b131-b4f784ef013b"}, "html_file": {"id": "0681486328dcebd7", "src": "hda", "uuid": "2a62a46c-6e61-465a-9dce-6910dc58cc69"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "null\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "fastqc/0.74+galaxy1-3", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 3, "time_seconds": 35.959919452667236, "inputs": {"input_file": {"src": "hda", "id": "8f655b4021ab28ea"}, "limits": {"src": "hda", "id": "ec46710c8a7dfdb5"}}, "job": {"model_class": "Job", "id": "7099d0335a8f1c28", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:34:58.410753", "update_time": "2024-10-14T07:35:12.580515", "galaxy_version": "24.1", "external_id": "gxy-224s9", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/e/3/a/dataset_e3a9c653-0394-45e5-93c4-b9b679ead380.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/7/a/3/dataset_7a37b090-f757-413c-ba4b-9e43ec40ab0b_files' && fastqc --outdir '/galaxy/server/database/objects/7/a/3/dataset_7a37b090-f757-413c-ba4b-9e43ec40ab0b_files'   --limits '/galaxy/server/database/objects/6/7/a/dataset_67abf683-d6b8-4c41-84e4-c2950310319a.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/7/a/3/dataset_7a37b090-f757-413c-ba4b-9e43ec40ab0b_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/7/a/3/dataset_7a37b090-f757-413c-ba4b-9e43ec40ab0b_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "8f655b4021ab28ea", "src": "hda", "uuid": "e3a9c653-0394-45e5-93c4-b9b679ead380"}, "limits": {"id": "ec46710c8a7dfdb5", "src": "hda", "uuid": "67abf683-d6b8-4c41-84e4-c2950310319a"}}, "outputs": {"text_file": {"id": "b18cda77a6098724", "src": "hda", "uuid": "4ae7de86-de24-4818-b43e-02d997b65baa"}, "html_file": {"id": "3952457a2b6611a5", "src": "hda", "uuid": "7a37b090-f757-413c-ba4b-9e43ec40ab0b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:35:02", "plugin": "core", "name": "end_epoch", "raw_value": "1728891302.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:35:00", "plugin": "core", "name": "start_epoch", "raw_value": "1728891300.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-3", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 3, "time_seconds": 36.63780117034912, "inputs": {"input_file": {"src": "hda", "id": "8e013bdb6b6e53c5"}, "limits": {"src": "hda", "id": "55962b91802d115b"}}, "job": {"model_class": "Job", "id": "05b84b5e97036550", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:39:32.506888", "update_time": "2024-10-14T07:39:46.971018", "galaxy_version": "24.1", "external_id": "gxy-8q8dl", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/c/f/8/dataset_cf8cb9eb-c542-406f-83c9-adb31178519c.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/b/c/c/dataset_bcc40b17-c03f-4fd4-816f-845b541de525_files' && fastqc --outdir '/galaxy/server/database/objects/b/c/c/dataset_bcc40b17-c03f-4fd4-816f-845b541de525_files'   --limits '/galaxy/server/database/objects/f/d/9/dataset_fd9324fb-2372-413d-b88d-9d665a8395c3.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/b/c/c/dataset_bcc40b17-c03f-4fd4-816f-845b541de525_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/b/c/c/dataset_bcc40b17-c03f-4fd4-816f-845b541de525_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "8e013bdb6b6e53c5", "src": "hda", "uuid": "cf8cb9eb-c542-406f-83c9-adb31178519c"}, "limits": {"id": "55962b91802d115b", "src": "hda", "uuid": "fd9324fb-2372-413d-b88d-9d665a8395c3"}}, "outputs": {"text_file": {"id": "51f6228c0467aa3d", "src": "hda", "uuid": "8e24551b-30ae-48a8-b32e-0172afd92ce5"}, "html_file": {"id": "3b25ecf2b00eb124", "src": "hda", "uuid": "bcc40b17-c03f-4fd4-816f-845b541de525"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:39:36", "plugin": "core", "name": "end_epoch", "raw_value": "1728891576.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:39:34", "plugin": "core", "name": "start_epoch", "raw_value": "1728891574.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-4", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 4, "time_seconds": 36.777180910110474, "inputs": {"input_file": {"src": "hda", "id": "6aef78e394c5d671"}, "limits": {"src": "hda", "id": "52e58eae94535323"}, "kmers": "3"}, "job": {"model_class": "Job", "id": "d6517265e9514cdb", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:35:34.827990", "update_time": "2024-10-14T07:35:49.080371", "galaxy_version": "24.1", "external_id": "gxy-rvrgq", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/b/d/a/dataset_bda398aa-c062-46bf-8685-f0913e5ac514.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/1/a/4/dataset_1a4bb0b5-a4cf-492a-a6af-13dec7ea0755_files' && fastqc --outdir '/galaxy/server/database/objects/1/a/4/dataset_1a4bb0b5-a4cf-492a-a6af-13dec7ea0755_files'   --limits '/galaxy/server/database/objects/8/8/1/dataset_8812326c-fa10-44c3-9b2d-b0f9930aca78.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 3 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/1/a/4/dataset_1a4bb0b5-a4cf-492a-a6af-13dec7ea0755_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/1/a/4/dataset_1a4bb0b5-a4cf-492a-a6af-13dec7ea0755_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"3\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "6aef78e394c5d671", "src": "hda", "uuid": "bda398aa-c062-46bf-8685-f0913e5ac514"}, "limits": {"id": "52e58eae94535323", "src": "hda", "uuid": "8812326c-fa10-44c3-9b2d-b0f9930aca78"}}, "outputs": {"text_file": {"id": "5bd20d1ea6ba7c67", "src": "hda", "uuid": "d7e6d681-ff85-4a31-a1c1-3364b896d658"}, "html_file": {"id": "c9e443f682f59b19", "src": "hda", "uuid": "1a4bb0b5-a4cf-492a-a6af-13dec7ea0755"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:35:38", "plugin": "core", "name": "end_epoch", "raw_value": "1728891338.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:35:36", "plugin": "core", "name": "start_epoch", "raw_value": "1728891336.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-4", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 4, "time_seconds": 35.62781500816345, "inputs": {"input_file": {"src": "hda", "id": "b99e34bee9e0fecf"}, "limits": {"src": "hda", "id": "eae508dbf37a8929"}, "kmers": "3"}, "job": {"model_class": "Job", "id": "294adc7b019e73d8", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:40:07.801599", "update_time": "2024-10-14T07:40:22.529010", "galaxy_version": "24.1", "external_id": "gxy-t6689", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/1/9/2/dataset_192082e5-e3ff-4622-8b99-25f5efbfefb9.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/9/b/4/dataset_9b4a349b-6737-4159-984b-5a17e81fba0f_files' && fastqc --outdir '/galaxy/server/database/objects/9/b/4/dataset_9b4a349b-6737-4159-984b-5a17e81fba0f_files'   --limits '/galaxy/server/database/objects/7/4/e/dataset_74edc207-1fec-4089-905a-5220957390de.dat' --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 3 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/9/b/4/dataset_9b4a349b-6737-4159-984b-5a17e81fba0f_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/9/b/4/dataset_9b4a349b-6737-4159-984b-5a17e81fba0f_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"3\"", "min_length": "\"\"", "nogroup": "false", "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "b99e34bee9e0fecf", "src": "hda", "uuid": "192082e5-e3ff-4622-8b99-25f5efbfefb9"}, "limits": {"id": "eae508dbf37a8929", "src": "hda", "uuid": "74edc207-1fec-4089-905a-5220957390de"}}, "outputs": {"text_file": {"id": "d8b92cea8f22885f", "src": "hda", "uuid": "d00ba05d-92cf-4028-878d-10e69cf43180"}, "html_file": {"id": "b9ec67dae794aca9", "src": "hda", "uuid": "9b4a349b-6737-4159-984b-5a17e81fba0f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:40:11", "plugin": "core", "name": "end_epoch", "raw_value": "1728891611.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:40:09", "plugin": "core", "name": "start_epoch", "raw_value": "1728891609.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-5", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 5, "time_seconds": 34.99003791809082, "inputs": {"input_file": {"src": "hda", "id": "304a72c43e18903b"}, "min_length": "108"}, "job": {"model_class": "Job", "id": "9eb2c0c2af002a9e", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:36:10.743711", "update_time": "2024-10-14T07:36:24.413206", "galaxy_version": "24.1", "external_id": "gxy-9v49r", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/6/6/8/dataset_668c9e34-1f77-4113-b45c-d1a70c946237.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/c/8/7/dataset_c878b5fe-3dd2-42b0-9d84-bd0d45606ef4_files' && fastqc --outdir '/galaxy/server/database/objects/c/8/7/dataset_c878b5fe-3dd2-42b0-9d84-bd0d45606ef4_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --min_length 108  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/c/8/7/dataset_c878b5fe-3dd2-42b0-9d84-bd0d45606ef4_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/c/8/7/dataset_c878b5fe-3dd2-42b0-9d84-bd0d45606ef4_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"108\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "304a72c43e18903b", "src": "hda", "uuid": "668c9e34-1f77-4113-b45c-d1a70c946237"}}, "outputs": {"text_file": {"id": "449fb9b864d75444", "src": "hda", "uuid": "cf7e6d75-f875-4f82-86ba-ad6e6ff0430b"}, "html_file": {"id": "4ecec6b4c5e88ea0", "src": "hda", "uuid": "c878b5fe-3dd2-42b0-9d84-bd0d45606ef4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:36:14", "plugin": "core", "name": "end_epoch", "raw_value": "1728891374.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:36:11", "plugin": "core", "name": "start_epoch", "raw_value": "1728891371.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-5", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 5, "time_seconds": 35.267459869384766, "inputs": {"input_file": {"src": "hda", "id": "735334553c041480"}, "min_length": "108"}, "job": {"model_class": "Job", "id": "4da94349957cd9c6", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:40:43.271139", "update_time": "2024-10-14T07:40:57.941480", "galaxy_version": "24.1", "external_id": "gxy-2gmcf", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/d/1/0/dataset_d10ee08b-8e92-49cd-ac72-23b28aeaac2e.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/c/6/7/dataset_c6741185-909e-4348-a052-e95f596b0845_files' && fastqc --outdir '/galaxy/server/database/objects/c/6/7/dataset_c6741185-909e-4348-a052-e95f596b0845_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --min_length 108  --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/c/6/7/dataset_c6741185-909e-4348-a052-e95f596b0845_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/c/6/7/dataset_c6741185-909e-4348-a052-e95f596b0845_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"108\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "735334553c041480", "src": "hda", "uuid": "d10ee08b-8e92-49cd-ac72-23b28aeaac2e"}}, "outputs": {"text_file": {"id": "75f3249b38b539ca", "src": "hda", "uuid": "9a169de5-aee4-45ca-805c-e2478c2a37a2"}, "html_file": {"id": "cdb7cb2b2cd47a8e", "src": "hda", "uuid": "c6741185-909e-4348-a052-e95f596b0845"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:40:47", "plugin": "core", "name": "end_epoch", "raw_value": "1728891647.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:40:45", "plugin": "core", "name": "start_epoch", "raw_value": "1728891645.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-6", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 6, "time_seconds": 26.5212504863739, "inputs": {"input_file": {"src": "hda", "id": "add5c60eb8f86ea2"}, "nogroup": true}, "job": {"model_class": "Job", "id": "de570e00a2bfc90c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "error", "exit_code": null, "create_time": "2024-10-14T07:36:45.097616", "update_time": "2024-10-14T07:36:52.079440", "galaxy_version": "24.1", "external_id": "gxy-lzkfq", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/6/3/1/dataset_631ecbfa-4314-4fd4-9ce7-3c6e3a6a87f9.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/b/8/1/dataset_b810d0a4-1c0b-40c0-a7dd-9adc4937a669_files' && fastqc --outdir '/galaxy/server/database/objects/b/8/1/dataset_b810d0a4-1c0b-40c0-a7dd-9adc4937a669_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --nogroup --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/b/8/1/dataset_b810d0a4-1c0b-40c0-a7dd-9adc4937a669_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/b/8/1/dataset_b810d0a4-1c0b-40c0-a7dd-9adc4937a669_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "true", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "add5c60eb8f86ea2", "src": "hda", "uuid": "631ecbfa-4314-4fd4-9ce7-3c6e3a6a87f9"}}, "outputs": {"text_file": {"id": "b17d33e3165965c3", "src": "hda", "uuid": "64b3e5eb-70bc-4d14-a325-44d96b88abfa"}, "html_file": {"id": "92c478d08058ca39", "src": "hda", "uuid": "b810d0a4-1c0b-40c0-a7dd-9adc4937a669"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "null\n", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "fastqc/0.74+galaxy1-6", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 6, "time_seconds": 36.152276039123535, "inputs": {"input_file": {"src": "hda", "id": "b01beee0184ce68f"}, "nogroup": true}, "job": {"model_class": "Job", "id": "8a0a162ccdd08c64", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:41:19.428815", "update_time": "2024-10-14T07:41:34.162249", "galaxy_version": "24.1", "external_id": "gxy-k7dgx", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/8/a/3/dataset_8a3ba7e5-b1da-4eef-a619-6483625d1f8c.dat' '1000trimmed_fastq' && mkdir -p '/galaxy/server/database/objects/4/a/8/dataset_4a8b71a3-00a7-4752-af23-2614dff5a875_files' && fastqc --outdir '/galaxy/server/database/objects/4/a/8/dataset_4a8b71a3-00a7-4752-af23-2614dff5a875_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract --nogroup --kmers 7 -f 'fastq' '1000trimmed_fastq'  && cp '/galaxy/server/database/objects/4/a/8/dataset_4a8b71a3-00a7-4752-af23-2614dff5a875_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/4/a/8/dataset_4a8b71a3-00a7-4752-af23-2614dff5a875_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "true", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "b01beee0184ce68f", "src": "hda", "uuid": "8a3ba7e5-b1da-4eef-a619-6483625d1f8c"}}, "outputs": {"text_file": {"id": "8a141506d2156760", "src": "hda", "uuid": "9fa9b353-3640-4e0f-89ef-3218a6fb1e80"}, "html_file": {"id": "31ad288567a682b4", "src": "hda", "uuid": "4a8b71a3-00a7-4752-af23-2614dff5a875"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "null\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "null\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:41:23", "plugin": "core", "name": "end_epoch", "raw_value": "1728891683.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:41:21", "plugin": "core", "name": "start_epoch", "raw_value": "1728891681.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-7", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 7, "time_seconds": 36.360719203948975, "inputs": {"input_file": {"src": "hda", "id": "f997858d4ec8bffb"}}, "job": {"model_class": "Job", "id": "67f829531ad65f51", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:37:12.312959", "update_time": "2024-10-14T07:37:27.381901", "galaxy_version": "24.1", "external_id": "gxy-dccfb", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/3/e/2/dataset_3e2294ac-de1b-4cac-840e-3488f1c3b536.dat' 'hisat_output_1_bam' && mkdir -p '/galaxy/server/database/objects/2/6/1/dataset_261b45b5-459b-429a-a200-f382b4eb0d30_files' && fastqc --outdir '/galaxy/server/database/objects/2/6/1/dataset_261b45b5-459b-429a-a200-f382b4eb0d30_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'bam' 'hisat_output_1_bam'  && cp '/galaxy/server/database/objects/2/6/1/dataset_261b45b5-459b-429a-a200-f382b4eb0d30_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/2/6/1/dataset_261b45b5-459b-429a-a200-f382b4eb0d30_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "f997858d4ec8bffb", "src": "hda", "uuid": "3e2294ac-de1b-4cac-840e-3488f1c3b536"}}, "outputs": {"text_file": {"id": "04af9f1703dec900", "src": "hda", "uuid": "aac9da58-2a14-4d9f-82b1-f0aacba34b96"}, "html_file": {"id": "96ba1882ef47e860", "src": "hda", "uuid": "261b45b5-459b-429a-a200-f382b4eb0d30"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:37:16", "plugin": "core", "name": "end_epoch", "raw_value": "1728891436.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:37:14", "plugin": "core", "name": "start_epoch", "raw_value": "1728891434.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "fastqc/0.74+galaxy1-7", "has_data": true, "data": {"tool_id": "fastqc", "tool_version": "0.74+galaxy1", "test_index": 7, "time_seconds": 36.33395743370056, "inputs": {"input_file": {"src": "hda", "id": "f14354f782af22d0"}}, "job": {"model_class": "Job", "id": "1725997002d888ec", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.74+galaxy1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:41:55.867978", "update_time": "2024-10-14T07:42:10.687604", "galaxy_version": "24.1", "external_id": "gxy-j8mhp", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/e/7/dataset_4e7bec1a-b9e2-4ec5-ac34-07a68a60739a.dat' 'hisat_output_1_bam' && mkdir -p '/galaxy/server/database/objects/0/1/2/dataset_012fcb54-d181-40c6-9916-f72d8f33116f_files' && fastqc --outdir '/galaxy/server/database/objects/0/1/2/dataset_012fcb54-d181-40c6-9916-f72d8f33116f_files'   --threads ${GALAXY_SLOTS:-2} --dir ${TEMP:-$_GALAXY_JOB_TMP_DIR} --quiet --extract  --kmers 7 -f 'bam' 'hisat_output_1_bam'  && cp '/galaxy/server/database/objects/0/1/2/dataset_012fcb54-d181-40c6-9916-f72d8f33116f_files'/*/fastqc_data.txt output.txt && cp '/galaxy/server/database/objects/0/1/2/dataset_012fcb54-d181-40c6-9916-f72d8f33116f_files'/*\\.html output.html", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "kmers": "\"7\"", "min_length": "\"\"", "nogroup": "false", "limits": null, "adapters": null, "contaminants": null}, "inputs": {"input_file": {"id": "f14354f782af22d0", "src": "hda", "uuid": "4e7bec1a-b9e2-4ec5-ac34-07a68a60739a"}}, "outputs": {"text_file": {"id": "05cdb0b613701bdb", "src": "hda", "uuid": "0946d686-45e6-4f37-9e0b-6b5ecea8c78a"}, "html_file": {"id": "e4d5678b628025bb", "src": "hda", "uuid": "012fcb54-d181-40c6-9916-f72d8f33116f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:42:00", "plugin": "core", "name": "end_epoch", "raw_value": "1728891720.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:41:57", "plugin": "core", "name": "start_epoch", "raw_value": "1728891717.0000000"}, {"title": "Memory Allocated (MB)", "value": "32641", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "32641.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "jq/1.0-0", "has_data": true, "data": {"tool_id": "jq", "tool_version": "1.0", "test_index": 0, "time_seconds": 10.321885108947754, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "jq/1.0-1", "has_data": true, "data": {"tool_id": "jq", "tool_version": "1.0", "test_index": 1, "time_seconds": 32.63521862030029, "inputs": {"input": {"src": "hda", "id": "5e92d0df8eeaf0d2"}, "filter": "{\"a\": env}", "tsv": false}, "job": {"model_class": "Job", "id": "b17f38b1ed5a2aad", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/jq/jq/1.0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:02:52.699473", "update_time": "2024-10-14T09:03:07.434744", "galaxy_version": "24.1", "external_id": "gxy-bqrk5", "handler": null, "job_runner_name": null, "command_line": "JQ_BIN=`which jq` && cat '/galaxy/server/database/objects/0/7/0/dataset_070da650-358c-4b1e-b2a7-d44987aeb3d8.dat' | env -i JQ_BIN=$JQ_BIN $JQ_BIN -r -S '{\"a\": env} ' > '/galaxy/server/database/objects/4/6/e/dataset_46e43c7a-1176-470e-8f8f-6397f096c6e8.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"json\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "tsv": "false", "filter": "\"{\\\"a\\\": env}\""}, "inputs": {"input": {"id": "5e92d0df8eeaf0d2", "src": "hda", "uuid": "070da650-358c-4b1e-b2a7-d44987aeb3d8"}}, "outputs": {"output": {"id": "6d001dc2aed49029", "src": "hda", "uuid": "46e43c7a-1176-470e-8f8f-6397f096c6e8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:02:57", "plugin": "core", "name": "end_epoch", "raw_value": "1728896577.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:02:57", "plugin": "core", "name": "start_epoch", "raw_value": "1728896577.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-0", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 0, "time_seconds": 114.28604578971863, "inputs": {"input": {"src": "hda", "id": "3988df54cef257ea"}, "extension": "png"}, "job": {"model_class": "Job", "id": "3529723692e7f0c6", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:44:48.638275", "update_time": "2024-10-14T08:45:23.557095", "galaxy_version": "24.1", "external_id": "gxy-p9pw8", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/2/a/7/dataset_2a734e84-3a25-4d25-9a04-82faaf5222e0.dat' --saveas histogram.png --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.png '/galaxy/server/database/objects/5/5/7/dataset_5577db48-5243-4299-a761-9bad8ce40260.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "num_bins": "\"50\"", "max_length": "\"1000000000\"", "min_length": "\"0\"", "theme_bw": "false", "extension": "\"png\""}, "inputs": {"input": {"id": "3988df54cef257ea", "src": "hda", "uuid": "2a734e84-3a25-4d25-9a04-82faaf5222e0"}}, "outputs": {"output": {"id": "540a8388554f40c0", "src": "hda", "uuid": "5577db48-5243-4299-a761-9bad8ce40260"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 08:45:05", "plugin": "core", "name": "end_epoch", "raw_value": "1728895505.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:45:03", "plugin": "core", "name": "start_epoch", "raw_value": "1728895503.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-1", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 1, "time_seconds": 33.24595022201538, "inputs": {"input": {"src": "hda", "id": "3989275b0d90e3bf"}, "extension": "pdf"}, "job": {"model_class": "Job", "id": "b22016cc993c7808", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:45:43.320898", "update_time": "2024-10-14T08:45:56.979047", "galaxy_version": "24.1", "external_id": "gxy-4crgn", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/f/4/4/dataset_f44f0081-101e-487f-9eec-f4584d109eaa.dat' --saveas histogram.pdf --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.pdf '/galaxy/server/database/objects/9/e/f/dataset_9efeee9d-9584-4c9f-95b4-b8eabcf3e166.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "num_bins": "\"50\"", "max_length": "\"1000000000\"", "min_length": "\"0\"", "theme_bw": "false", "extension": "\"pdf\""}, "inputs": {"input": {"id": "3989275b0d90e3bf", "src": "hda", "uuid": "f44f0081-101e-487f-9eec-f4584d109eaa"}}, "outputs": {"output": {"id": "dd0da3ff991c0904", "src": "hda", "uuid": "9efeee9d-9584-4c9f-95b4-b8eabcf3e166"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 08:45:46", "plugin": "core", "name": "end_epoch", "raw_value": "1728895546.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:45:44", "plugin": "core", "name": "start_epoch", "raw_value": "1728895544.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_hist/0.6.1a1.1-2", "has_data": true, "data": {"tool_id": "poretools_hist", "tool_version": "0.6.1a1.1", "test_index": 2, "time_seconds": 34.705085039138794, "inputs": {"input": {"src": "hda", "id": "36d08399a6072e3d"}, "extension": "svg"}, "job": {"model_class": "Job", "id": "8a724e3f75fa28c2", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_hist/poretools_hist/0.6.1a1.1", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:46:17.360308", "update_time": "2024-10-14T08:46:31.822713", "galaxy_version": "24.1", "external_id": "gxy-8xdg5", "handler": null, "job_runner_name": null, "command_line": "export MPLBACKEND=\"agg\" && poretools hist '/galaxy/server/database/objects/c/4/d/dataset_c4de1a25-436b-41ea-a714-b6e9d79eb8ba.dat' --saveas histogram.svg --min-length 0 --max-length 1000000000 --num-bins 50  && mv histogram.svg '/galaxy/server/database/objects/a/a/0/dataset_aa0db325-e9df-4443-b1c9-89ff51dbeff9.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "num_bins": "\"50\"", "max_length": "\"1000000000\"", "min_length": "\"0\"", "theme_bw": "false", "extension": "\"svg\""}, "inputs": {"input": {"id": "36d08399a6072e3d", "src": "hda", "uuid": "c4de1a25-436b-41ea-a714-b6e9d79eb8ba"}}, "outputs": {"output": {"id": "0349ec8b301b83fd", "src": "hda", "uuid": "aa0db325-e9df-4443-b1c9-89ff51dbeff9"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2024-10-14 08:46:21", "plugin": "core", "name": "end_epoch", "raw_value": "1728895581.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:46:19", "plugin": "core", "name": "start_epoch", "raw_value": "1728895579.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-0", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 0, "time_seconds": 83.67433214187622, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "463a1e51f3511b1a"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "9610f25daf79aadc"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "082a30e4ba938119"}, "sc|input_types|input2": {"src": "hda", "id": "679071cc48ad5617"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "f6eb9961899da4d9"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|filter_type": "no_filter"}, "job": {"model_class": "Job", "id": "771ede7e08611ac0", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:42:47.248784", "update_time": "2024-10-14T07:43:34.491486", "galaxy_version": "24.1", "external_id": "gxy-7tb4f", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/c/c/3/dataset_cc30a78b-e2c2-4df0-b926-377cf85dd7da.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/9/e/4/dataset_9e429813-a6f8-4753-b1b8-a079255dd07d.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/4/2/2/dataset_4226085d-270f-49bf-85f3-a49392d277b0.dat /galaxy/server/database/objects/9/6/b/dataset_96b72369-aa22-485b-b747-296b0d49f40f.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/c/e/c/dataset_ceca34e4-c812-4f50-b592-53b5efbbe347.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter None  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/8/5/b/dataset_85bb41c1-1b58-4dc6-a5ca-35cc5c4e4392.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/c/9/3/dataset_c935bc5c-c00e-4f39-903e-d4eef974d6ae.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 3, \"filter_type\": \"no_filter\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 364, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 365, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 366, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 367, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 363, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "f8afff9f78438ae5", "src": "hda", "uuid": "cc30a78b-e2c2-4df0-b926-377cf85dd7da"}, "refGenomeSource|sjdbGTFfile": {"id": "9610f25daf79aadc", "src": "hda", "uuid": "9e429813-a6f8-4753-b1b8-a079255dd07d"}, "sc|input_types|input1": {"id": "082a30e4ba938119", "src": "hda", "uuid": "96b72369-aa22-485b-b747-296b0d49f40f"}, "sc|input_types|input11": {"id": "082a30e4ba938119", "src": "hda", "uuid": "96b72369-aa22-485b-b747-296b0d49f40f"}, "sc|input_types|input2": {"id": "679071cc48ad5617", "src": "hda", "uuid": "4226085d-270f-49bf-85f3-a49392d277b0"}, "sc|input_types|input21": {"id": "679071cc48ad5617", "src": "hda", "uuid": "4226085d-270f-49bf-85f3-a49392d277b0"}, "sc|soloCBwhitelist": {"id": "f6eb9961899da4d9", "src": "hda", "uuid": "ceca34e4-c812-4f50-b592-53b5efbbe347"}}, "outputs": {"output_stats": {"id": "f4f18fb2d88bd007", "src": "hda", "uuid": "85bb41c1-1b58-4dc6-a5ca-35cc5c4e4392"}, "output_BAM": {"id": "2b93dc688be7223b", "src": "hda", "uuid": "c935bc5c-c00e-4f39-903e-d4eef974d6ae"}, "output_matrix": {"id": "fff3abb587e3b491", "src": "hda", "uuid": "b3213ee5-3159-4eb0-bddd-841f5056b8ab"}, "output_barcodes": {"id": "36ae681e2b76032c", "src": "hda", "uuid": "da20e3fb-f6ed-4539-b8c5-31ee7869a922"}, "output_genes": {"id": "994927de3f563806", "src": "hda", "uuid": "191dbfac-37c5-42d9-a0cf-1a9ade2de23c"}, "output_log": {"id": "9bd22b7c5c030477", "src": "hda", "uuid": "1c8619db-36ce-45c4-a31c-2c8a79fa07a9"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 07:43:05 ..... started STAR run\nOct 14 07:43:05 ... starting to generate Genome files\nOct 14 07:43:05 ..... processing annotations GTF\nOct 14 07:43:05 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:43:05 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:43:05 ... loading chunks from disk, packing SA...\nOct 14 07:43:05 ... finished generating suffix array\nOct 14 07:43:05 ... generating Suffix Array index\nOct 14 07:43:05 ... completed Suffix Array index\nOct 14 07:43:05 ..... inserting junctions into the genome indices\nOct 14 07:43:05 ... writing Genome to disk ...\nOct 14 07:43:05 ... writing Suffix Array to disk ...\nOct 14 07:43:05 ... writing SAindex to disk\nOct 14 07:43:05 ..... finished successfully\nOct 14 07:43:05 ..... started STAR run\nOct 14 07:43:06 ..... loading genome\nOct 14 07:43:06 ..... started mapping\nOct 14 07:43:23 ..... finished mapping\nOct 14 07:43:23 ..... started Solo counting\nOct 14 07:43:23 ..... finished Solo counting\nOct 14 07:43:23 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Oct 14 07:43:05 ..... started STAR run\nOct 14 07:43:05 ... starting to generate Genome files\nOct 14 07:43:05 ..... processing annotations GTF\nOct 14 07:43:05 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:43:05 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:43:05 ... loading chunks from disk, packing SA...\nOct 14 07:43:05 ... finished generating suffix array\nOct 14 07:43:05 ... generating Suffix Array index\nOct 14 07:43:05 ... completed Suffix Array index\nOct 14 07:43:05 ..... inserting junctions into the genome indices\nOct 14 07:43:05 ... writing Genome to disk ...\nOct 14 07:43:05 ... writing Suffix Array to disk ...\nOct 14 07:43:05 ... writing SAindex to disk\nOct 14 07:43:05 ..... finished successfully\nOct 14 07:43:05 ..... started STAR run\nOct 14 07:43:06 ..... loading genome\nOct 14 07:43:06 ..... started mapping\nOct 14 07:43:23 ..... finished mapping\nOct 14 07:43:23 ..... started Solo counting\nOct 14 07:43:23 ..... finished Solo counting\nOct 14 07:43:23 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:43:23", "plugin": "core", "name": "end_epoch", "raw_value": "1728891803.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:43:05", "plugin": "core", "name": "start_epoch", "raw_value": "1728891785.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-0", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 0, "time_seconds": 28.018532752990723, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-1", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 1, "time_seconds": 78.57065629959106, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "1fdc797dc317bff6"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "6d6abc8c06c4e0cc"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "33f31cc50622d669"}, "sc|input_types|input2": {"src": "hda", "id": "d0feac7505749e4f"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "612055a6341abcbe"}, "sc|params|soloCBstart": "1", "sc|params|soloCBlen": "16", "sc|params|soloUMIstart": "17", "sc|params|soloUMIlen": "12", "sc|params|chemistry": "custom", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "06ad3859e65888cc", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:44:10.960349", "update_time": "2024-10-14T07:44:53.356199", "galaxy_version": "24.1", "external_id": "gxy-jn2lq", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/8/1/7/dataset_81738a9e-133e-4d52-99c6-5d6c24f04ab8.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/0/5/f/dataset_05f0c922-d358-4337-b9b5-e099dd05af92.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/a/e/8/dataset_ae8a4225-ac5e-4c8a-aaa4-a99b2573b4d7.dat /galaxy/server/database/objects/7/a/2/dataset_7a264c30-c92e-49d3-8424-619c2e1b5a5a.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/3/5/3/dataset_353b9071-28eb-4856-8e26-c2785c811857.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12 --soloAdapterSequence '-' --soloAdapterMismatchesNmax 1 --clipAdapterType Hamming   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/3/b/7/dataset_3b7f90ef-70bf-4eed-9c1f-1e017412bd5d.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/b/9/0/dataset_b908a857-3c90-4826-b14d-030f42b58faf.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 376, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 377, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 2, \"bccdna_mate\": {\"__current_case__\": 0, \"bc_location\": \"other_mate\"}, \"chemistry\": \"custom\", \"clipAdapterType\": \"Hamming\", \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"-\", \"soloCBlen\": \"16\", \"soloCBstart\": \"1\", \"soloUMIlen\": \"12\", \"soloUMIstart\": \"17\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 378, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 379, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 375, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "68e63fc290fcded8", "src": "hda", "uuid": "81738a9e-133e-4d52-99c6-5d6c24f04ab8"}, "refGenomeSource|sjdbGTFfile": {"id": "6d6abc8c06c4e0cc", "src": "hda", "uuid": "05f0c922-d358-4337-b9b5-e099dd05af92"}, "sc|input_types|input1": {"id": "33f31cc50622d669", "src": "hda", "uuid": "7a264c30-c92e-49d3-8424-619c2e1b5a5a"}, "sc|input_types|input11": {"id": "33f31cc50622d669", "src": "hda", "uuid": "7a264c30-c92e-49d3-8424-619c2e1b5a5a"}, "sc|input_types|input2": {"id": "d0feac7505749e4f", "src": "hda", "uuid": "ae8a4225-ac5e-4c8a-aaa4-a99b2573b4d7"}, "sc|input_types|input21": {"id": "d0feac7505749e4f", "src": "hda", "uuid": "ae8a4225-ac5e-4c8a-aaa4-a99b2573b4d7"}, "sc|soloCBwhitelist": {"id": "612055a6341abcbe", "src": "hda", "uuid": "353b9071-28eb-4856-8e26-c2785c811857"}}, "outputs": {"output_stats": {"id": "5d3d77db3f1efc9a", "src": "hda", "uuid": "3b7f90ef-70bf-4eed-9c1f-1e017412bd5d"}, "output_BAM": {"id": "535049fb048933b6", "src": "hda", "uuid": "b908a857-3c90-4826-b14d-030f42b58faf"}, "output_matrix_filtered": {"id": "5c6d46a207077b61", "src": "hda", "uuid": "e1645c68-9ea7-4f82-8ce7-248cda108e42"}, "output_barcodes_filtered": {"id": "f2e17e973365bab7", "src": "hda", "uuid": "7248ba7c-b5bf-4461-94c5-c3b39e74b791"}, "output_genes_filtered": {"id": "6aef0c0a0f90fb86", "src": "hda", "uuid": "17f2ca5d-726a-46b4-b062-602464625636"}, "output_log": {"id": "c81de61c421235ea", "src": "hda", "uuid": "200a7d1d-541a-454c-99fb-befe3b16564f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 07:44:25 ..... started STAR run\nOct 14 07:44:25 ... starting to generate Genome files\nOct 14 07:44:25 ..... processing annotations GTF\nOct 14 07:44:25 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:44:25 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:44:25 ... loading chunks from disk, packing SA...\nOct 14 07:44:25 ... finished generating suffix array\nOct 14 07:44:25 ... generating Suffix Array index\nOct 14 07:44:25 ... completed Suffix Array index\nOct 14 07:44:25 ..... inserting junctions into the genome indices\nOct 14 07:44:25 ... writing Genome to disk ...\nOct 14 07:44:25 ... writing Suffix Array to disk ...\nOct 14 07:44:25 ... writing SAindex to disk\nOct 14 07:44:25 ..... finished successfully\nOct 14 07:44:25 ..... started STAR run\nOct 14 07:44:25 ..... loading genome\nOct 14 07:44:25 ..... started mapping\nOct 14 07:44:43 ..... finished mapping\nOct 14 07:44:43 ..... started Solo counting\nOct 14 07:44:43 ..... finished Solo counting\nOct 14 07:44:43 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Oct 14 07:44:25 ..... started STAR run\nOct 14 07:44:25 ... starting to generate Genome files\nOct 14 07:44:25 ..... processing annotations GTF\nOct 14 07:44:25 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:44:25 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:44:25 ... loading chunks from disk, packing SA...\nOct 14 07:44:25 ... finished generating suffix array\nOct 14 07:44:25 ... generating Suffix Array index\nOct 14 07:44:25 ... completed Suffix Array index\nOct 14 07:44:25 ..... inserting junctions into the genome indices\nOct 14 07:44:25 ... writing Genome to disk ...\nOct 14 07:44:25 ... writing Suffix Array to disk ...\nOct 14 07:44:25 ... writing SAindex to disk\nOct 14 07:44:25 ..... finished successfully\nOct 14 07:44:25 ..... started STAR run\nOct 14 07:44:25 ..... loading genome\nOct 14 07:44:25 ..... started mapping\nOct 14 07:44:43 ..... finished mapping\nOct 14 07:44:43 ..... started Solo counting\nOct 14 07:44:43 ..... finished Solo counting\nOct 14 07:44:43 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:44:43", "plugin": "core", "name": "end_epoch", "raw_value": "1728891883.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:44:25", "plugin": "core", "name": "start_epoch", "raw_value": "1728891865.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-1", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 1, "time_seconds": 24.981083631515503, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-2", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 2, "time_seconds": 27.897279977798462, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-2", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 2, "time_seconds": 111.53795289993286, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "805d7e992a5d2a6f"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "ae6f511ba725b6d6"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": [{"src": "hda", "id": "b17f38b1ed5a2aad"}, {"src": "hda", "id": "b17f38b1ed5a2aad"}, {"src": "hda", "id": "b17f38b1ed5a2aad"}], "sc|input_types|input2": [{"src": "hda", "id": "b25309b8e9a68451"}, {"src": "hda", "id": "b25309b8e9a68451"}, {"src": "hda", "id": "b25309b8e9a68451"}], "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "4c01688fe9564866"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "735334553c041480", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:53:05.532906", "update_time": "2024-10-14T07:54:22.698925", "galaxy_version": "24.1", "external_id": "gxy-l586m", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/9/9/a/dataset_99a36bb6-e3bb-40ff-82d0-6979584843e7.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/d/9/a/dataset_d9acfa66-2485-4250-b807-0406261fb362.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/c/c/1/dataset_cc17cbea-9d7b-4e7e-966a-f327d2b09231.dat,/galaxy/server/database/objects/c/c/1/dataset_cc17cbea-9d7b-4e7e-966a-f327d2b09231.dat,/galaxy/server/database/objects/c/c/1/dataset_cc17cbea-9d7b-4e7e-966a-f327d2b09231.dat /galaxy/server/database/objects/c/5/5/dataset_c55e1de6-ef31-4ca1-9c7c-d856d07e9dec.dat,/galaxy/server/database/objects/c/5/5/dataset_c55e1de6-ef31-4ca1-9c7c-d856d07e9dec.dat,/galaxy/server/database/objects/c/5/5/dataset_c55e1de6-ef31-4ca1-9c7c-d856d07e9dec.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/9/2/d/dataset_92df0549-71f3-4451-8e96-879fe5a3db6e.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/8/e/e/dataset_8eed212a-6ead-4210-af11-2175e6469695.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/3/4/3/dataset_34337378-c52a-465f-88cb-e2549d1396c8.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 473, \"src\": \"hda\"}, {\"id\": 473, \"src\": \"hda\"}, {\"id\": 473, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 474, \"src\": \"hda\"}, {\"id\": 474, \"src\": \"hda\"}, {\"id\": 474, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 475, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 476, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 472, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "07eca6a697d5e7e3", "src": "hda", "uuid": "99a36bb6-e3bb-40ff-82d0-6979584843e7"}, "refGenomeSource|sjdbGTFfile": {"id": "ae6f511ba725b6d6", "src": "hda", "uuid": "d9acfa66-2485-4250-b807-0406261fb362"}, "sc|input_types|input1": {"id": "b17f38b1ed5a2aad", "src": "hda", "uuid": "c55e1de6-ef31-4ca1-9c7c-d856d07e9dec"}, "sc|input_types|input11": {"id": "b17f38b1ed5a2aad", "src": "hda", "uuid": "c55e1de6-ef31-4ca1-9c7c-d856d07e9dec"}, "sc|input_types|input12": {"id": "b17f38b1ed5a2aad", "src": "hda", "uuid": "c55e1de6-ef31-4ca1-9c7c-d856d07e9dec"}, "sc|input_types|input13": {"id": "b17f38b1ed5a2aad", "src": "hda", "uuid": "c55e1de6-ef31-4ca1-9c7c-d856d07e9dec"}, "sc|input_types|input2": {"id": "b25309b8e9a68451", "src": "hda", "uuid": "cc17cbea-9d7b-4e7e-966a-f327d2b09231"}, "sc|input_types|input21": {"id": "b25309b8e9a68451", "src": "hda", "uuid": "cc17cbea-9d7b-4e7e-966a-f327d2b09231"}, "sc|input_types|input22": {"id": "b25309b8e9a68451", "src": "hda", "uuid": "cc17cbea-9d7b-4e7e-966a-f327d2b09231"}, "sc|input_types|input23": {"id": "b25309b8e9a68451", "src": "hda", "uuid": "cc17cbea-9d7b-4e7e-966a-f327d2b09231"}, "sc|soloCBwhitelist": {"id": "4c01688fe9564866", "src": "hda", "uuid": "92df0549-71f3-4451-8e96-879fe5a3db6e"}}, "outputs": {"output_stats": {"id": "2f9e7afafb16b728", "src": "hda", "uuid": "8eed212a-6ead-4210-af11-2175e6469695"}, "output_BAM": {"id": "38efb4509a7fd5e9", "src": "hda", "uuid": "34337378-c52a-465f-88cb-e2549d1396c8"}, "output_matrix_filtered": {"id": "7387ebbe95b4b6ee", "src": "hda", "uuid": "7c7a9ab8-d1a0-4404-a2cb-5387a633d14a"}, "output_barcodes_filtered": {"id": "1720dd0b2c193bb0", "src": "hda", "uuid": "e77fa1c3-9601-4229-9a43-af935c842671"}, "output_genes_filtered": {"id": "02e9fb9b83300be6", "src": "hda", "uuid": "20da2700-9a9d-4679-9a6d-22f1a0ac1307"}, "output_log": {"id": "496bd1fed124cce0", "src": "hda", "uuid": "0f36e7cc-8c15-46e5-9534-067c9afbec4d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 07:53:19 ..... started STAR run\nOct 14 07:53:19 ... starting to generate Genome files\nOct 14 07:53:19 ..... processing annotations GTF\nOct 14 07:53:19 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:53:19 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:53:19 ... loading chunks from disk, packing SA...\nOct 14 07:53:19 ... finished generating suffix array\nOct 14 07:53:19 ... generating Suffix Array index\nOct 14 07:53:19 ... completed Suffix Array index\nOct 14 07:53:19 ..... inserting junctions into the genome indices\nOct 14 07:53:19 ... writing Genome to disk ...\nOct 14 07:53:19 ... writing Suffix Array to disk ...\nOct 14 07:53:20 ... writing SAindex to disk\nOct 14 07:53:20 ..... finished successfully\nOct 14 07:53:20 ..... started STAR run\nOct 14 07:53:20 ..... loading genome\nOct 14 07:53:20 ..... started mapping\nOct 14 07:54:11 ..... finished mapping\nOct 14 07:54:11 ..... started Solo counting\nOct 14 07:54:11 ..... finished Solo counting\nOct 14 07:54:11 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Oct 14 07:53:19 ..... started STAR run\nOct 14 07:53:19 ... starting to generate Genome files\nOct 14 07:53:19 ..... processing annotations GTF\nOct 14 07:53:19 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:53:19 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:53:19 ... loading chunks from disk, packing SA...\nOct 14 07:53:19 ... finished generating suffix array\nOct 14 07:53:19 ... generating Suffix Array index\nOct 14 07:53:19 ... completed Suffix Array index\nOct 14 07:53:19 ..... inserting junctions into the genome indices\nOct 14 07:53:19 ... writing Genome to disk ...\nOct 14 07:53:19 ... writing Suffix Array to disk ...\nOct 14 07:53:20 ... writing SAindex to disk\nOct 14 07:53:20 ..... finished successfully\nOct 14 07:53:20 ..... started STAR run\nOct 14 07:53:20 ..... loading genome\nOct 14 07:53:20 ..... started mapping\nOct 14 07:54:11 ..... finished mapping\nOct 14 07:54:11 ..... started Solo counting\nOct 14 07:54:11 ..... finished Solo counting\nOct 14 07:54:11 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "53 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "53.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:54:12", "plugin": "core", "name": "end_epoch", "raw_value": "1728892452.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:53:19", "plugin": "core", "name": "start_epoch", "raw_value": "1728892399.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-3", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 3, "time_seconds": 71.35832643508911, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "dc37211127d10442"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "044f00a07863e781"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input_collection": {"src": "hdca", "id": "11d25db356339d2a"}, "sc|input_types|use": "list_paired", "sc|soloCBwhitelist": {"src": "hda", "id": "6aed083ee907b278"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "77dd7235ceb6ad54", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "error", "exit_code": null, "create_time": "2024-10-14T07:45:58.416381", "update_time": "2024-10-14T07:46:35.139982", "galaxy_version": "24.1", "external_id": "gxy-577gv", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/1/2/2/dataset_122a0ea5-36b8-4993-887c-f4c9b49dd68f.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/5/a/2/dataset_5a2f0990-2920-4e8e-b1cb-bab86e26989b.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/b/6/c/dataset_b6c649f0-f34e-4da8-88fe-70cd6b91f0b7.dat /galaxy/server/database/objects/c/5/8/dataset_c589862a-90c8-4a6a-929e-172ce3d458d5.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/c/8/1/dataset_c81865ee-860a-4431-8ef7-68ec91fb2f26.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/5/9/2/dataset_5927c7a4-da4a-4c2a-a66c-04cec91d8cd2.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/3/4/b/dataset_34ba7fc8-5109-496a-847c-6ed4913a3dc8.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 1, \"input_collection\": {\"values\": [{\"id\": 14, \"src\": \"hdca\"}]}, \"use\": \"list_paired\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 395, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 396, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 392, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "5518a7670388a1ac", "src": "hda", "uuid": "122a0ea5-36b8-4993-887c-f4c9b49dd68f"}, "refGenomeSource|sjdbGTFfile": {"id": "044f00a07863e781", "src": "hda", "uuid": "5a2f0990-2920-4e8e-b1cb-bab86e26989b"}, "sc|input_types|input_collection1": {"id": "168f25ea07cc607c", "src": "hda", "uuid": "c589862a-90c8-4a6a-929e-172ce3d458d5"}, "sc|input_types|input_collection2": {"id": "b08c120d6ffe561d", "src": "hda", "uuid": "b6c649f0-f34e-4da8-88fe-70cd6b91f0b7"}, "sc|soloCBwhitelist": {"id": "6aed083ee907b278", "src": "hda", "uuid": "c81865ee-860a-4431-8ef7-68ec91fb2f26"}}, "outputs": {"output_stats": {"id": "31f937cf3847fdec", "src": "hda", "uuid": "5927c7a4-da4a-4c2a-a66c-04cec91d8cd2"}, "output_BAM": {"id": "3529723692e7f0c6", "src": "hda", "uuid": "34ba7fc8-5109-496a-847c-6ed4913a3dc8"}, "output_matrix_filtered": {"id": "580c7815ae7e0a5c", "src": "hda", "uuid": "0dee17c9-9dbe-4c13-9bbe-6939617ab9d4"}, "output_barcodes_filtered": {"id": "8ec5c0ea41a0984c", "src": "hda", "uuid": "c3083fe3-d69d-4546-9e8f-4c7281d311df"}, "output_genes_filtered": {"id": "6add437f6bde9c32", "src": "hda", "uuid": "7d124e3a-5d97-4382-a6a8-0014515ac303"}, "output_log": {"id": "818bd27b40b5ecd2", "src": "hda", "uuid": "b2afde54-5092-4264-a97c-93e2432965c4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 07:46:12 ..... started STAR run\nOct 14 07:46:12 ... starting to generate Genome files\nOct 14 07:46:12 ..... processing annotations GTF\nOct 14 07:46:12 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:46:12 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:46:12 ... loading chunks from disk, packing SA...\nOct 14 07:46:12 ... finished generating suffix array\nOct 14 07:46:12 ... generating Suffix Array index\nOct 14 07:46:12 ... completed Suffix Array index\nOct 14 07:46:12 ..... inserting junctions into the genome indices\nOct 14 07:46:12 ... writing Genome to disk ...\nOct 14 07:46:12 ... writing Suffix Array to disk ...\nOct 14 07:46:12 ... writing SAindex to disk\nOct 14 07:46:12 ..... finished successfully\nOct 14 07:46:12 ..... started STAR run\nOct 14 07:46:12 ..... loading genome\nOct 14 07:46:12 ..... started mapping\nOct 14 07:46:29 ..... finished mapping\nOct 14 07:46:30 ..... started Solo counting\nOct 14 07:46:30 ..... finished Solo counting\nOct 14 07:46:30 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": null, "job_stderr": null, "stdout": "Oct 14 07:46:12 ..... started STAR run\nOct 14 07:46:12 ... starting to generate Genome files\nOct 14 07:46:12 ..... processing annotations GTF\nOct 14 07:46:12 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:46:12 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:46:12 ... loading chunks from disk, packing SA...\nOct 14 07:46:12 ... finished generating suffix array\nOct 14 07:46:12 ... generating Suffix Array index\nOct 14 07:46:12 ... completed Suffix Array index\nOct 14 07:46:12 ..... inserting junctions into the genome indices\nOct 14 07:46:12 ... writing Genome to disk ...\nOct 14 07:46:12 ... writing Suffix Array to disk ...\nOct 14 07:46:12 ... writing SAindex to disk\nOct 14 07:46:12 ..... finished successfully\nOct 14 07:46:12 ..... started STAR run\nOct 14 07:46:12 ..... loading genome\nOct 14 07:46:12 ..... started mapping\nOct 14 07:46:29 ..... finished mapping\nOct 14 07:46:30 ..... started Solo counting\nOct 14 07:46:30 ..... finished Solo counting\nOct 14 07:46:30 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n.", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a, exit_code: None, stderr: [bam_sort_core] merging from 0 files and 3 in-memory blocks...\n."], "status": "failure"}}, {"id": "rna_starsolo/2.7.8a-3", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 3, "time_seconds": 2775.8078372478485, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "97f451b77a9a3376"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "84d3f7f0267c5efc"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input_collection": {"src": "hdca", "id": "9ae595e7ab9876e7"}, "sc|input_types|use": "list_paired", "sc|soloCBwhitelist": {"src": "hda", "id": "fefae15301dacd97"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene"}, "job": {"model_class": "Job", "id": "e4d5678b628025bb", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "paused", "exit_code": null, "create_time": "2024-10-14T07:54:57.737362", "update_time": "2024-10-14T07:55:02.814799", "galaxy_version": "24.1", "external_id": null, "handler": null, "job_runner_name": null, "command_line": null, "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 1, \"input_collection\": {\"values\": [{\"id\": 16, \"src\": \"hdca\"}]}, \"use\": \"list_paired\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 487, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 488, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 484, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "19b83611714e0704", "src": "hda", "uuid": "d4b80093-bc3a-461b-bd07-6a59646402db"}, "refGenomeSource|sjdbGTFfile": {"id": "84d3f7f0267c5efc", "src": "hda", "uuid": "2137cf65-ba24-4271-bd39-bcbc742e001b"}, "sc|input_types|input_collection1": {"id": "334f312fb2e4009e", "src": "hda", "uuid": "d224c837-c95b-4627-add8-2bd0be4f2be1"}, "sc|input_types|input_collection2": {"id": "9b8def15ef42533d", "src": "hda", "uuid": "f2a149e7-71ec-4bea-b5f6-3c54c63b3d3d"}, "sc|soloCBwhitelist": {"id": "fefae15301dacd97", "src": "hda", "uuid": "6611d93e-12f2-47d3-b756-a94c27f0c442"}}, "outputs": {"output_stats": {"id": "7c6edfdb48ed5f4c", "src": "hda", "uuid": "23dcb6f7-86a5-41c2-81d0-9371fb26ea32"}, "output_BAM": {"id": "435bb5a49d8b293e", "src": "hda", "uuid": "a40de903-09ef-4639-a866-eeca9f0224cb"}, "output_matrix_filtered": {"id": "1e2a87ed23127a52", "src": "hda", "uuid": "ae4918f8-46ba-4246-8607-d91cd418f5b7"}, "output_barcodes_filtered": {"id": "187473fe9e1ec71e", "src": "hda", "uuid": "94aff9c6-1ce5-4f46-b57a-90a9be1a2fb7"}, "output_genes_filtered": {"id": "d57584bfb4db2f3c", "src": "hda", "uuid": "27650365-e8eb-427e-9f0e-fe5ef0f5754a"}, "output_log": {"id": "6a2291478f6a57ec", "src": "hda", "uuid": "59c3a545-073d-4aff-b78b-6cb88adcbdf2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": null, "tool_stderr": null, "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Timed out after 600.25 seconds waiting on tool test run.", "Timed out after 600.25 seconds waiting on tool test run.", "Timed out after 600.25 seconds waiting on tool test run."], "status": "failure"}}, {"id": "rna_starsolo/2.7.8a-4", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 4, "time_seconds": 26.23273205757141, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-4", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 4, "time_seconds": 16.692323446273804, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-5", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 5, "time_seconds": 80.92062783241272, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "38e6194ae3dbf345"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "ee35c52f7989a501"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "632dec021ee2a227"}, "sc|input_types|input2": {"src": "hda", "id": "aab4efbbe765f8b3"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "22741dac136ed6e1"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|nExpectedCells": "5", "solo|filter|maxPercentile": "0.99", "solo|filter|maxMinRatio": "10", "solo|filter|indMin": "45000", "solo|filter|indMax": "90000", "solo|filter|umiMin": "500", "solo|filter|umiMinFracMedian": "0.01", "solo|filter|candMaxN": "20000", "solo|filter|FDR": "0.01", "solo|filter|simN": "10000", "solo|filter|filter_type": "emptydrops"}, "job": {"model_class": "Job", "id": "ab6b701e38fc859a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:47:37.428929", "update_time": "2024-10-14T07:48:20.024848", "galaxy_version": "24.1", "external_id": "gxy-xtvvj", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/e/0/9/dataset_e09be729-9395-47ab-bf40-a61dcbe439ea.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/f/b/1/dataset_fb1bb243-8c84-428e-8f5b-91b382418299.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/8/5/e/dataset_85eb833e-e047-4d5d-8a94-aa380a87ce97.dat /galaxy/server/database/objects/4/a/8/dataset_4a866020-bf4d-4afd-8081-5dc63b22a3dc.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/7/7/f/dataset_77f318f9-a2b1-4157-9f6b-d9465db35eb8.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter EmptyDrops_CR 5 0.99 10.0 45000 90000 500 0.01 20000 0.01 10000  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/5/f/1/dataset_5f19d59d-83c1-4ca0-b52f-7e71eb129740.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/0/b/5/dataset_0b5c69bf-a307-4b9e-954a-250f5784e80a.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"FDR\": \"0.01\", \"__current_case__\": 1, \"candMaxN\": \"20000\", \"filter_type\": \"emptydrops\", \"indMax\": \"90000\", \"indMin\": \"45000\", \"maxMinRatio\": \"10.0\", \"maxPercentile\": \"0.99\", \"nExpectedCells\": \"5\", \"simN\": \"10000\", \"umiMin\": \"500\", \"umiMinFracMedian\": \"0.01\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 410, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 411, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 412, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 413, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 409, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "d9bcdeab1294863f", "src": "hda", "uuid": "e09be729-9395-47ab-bf40-a61dcbe439ea"}, "refGenomeSource|sjdbGTFfile": {"id": "ee35c52f7989a501", "src": "hda", "uuid": "fb1bb243-8c84-428e-8f5b-91b382418299"}, "sc|input_types|input1": {"id": "632dec021ee2a227", "src": "hda", "uuid": "4a866020-bf4d-4afd-8081-5dc63b22a3dc"}, "sc|input_types|input11": {"id": "632dec021ee2a227", "src": "hda", "uuid": "4a866020-bf4d-4afd-8081-5dc63b22a3dc"}, "sc|input_types|input2": {"id": "aab4efbbe765f8b3", "src": "hda", "uuid": "85eb833e-e047-4d5d-8a94-aa380a87ce97"}, "sc|input_types|input21": {"id": "aab4efbbe765f8b3", "src": "hda", "uuid": "85eb833e-e047-4d5d-8a94-aa380a87ce97"}, "sc|soloCBwhitelist": {"id": "22741dac136ed6e1", "src": "hda", "uuid": "77f318f9-a2b1-4157-9f6b-d9465db35eb8"}}, "outputs": {"output_stats": {"id": "637977b1ac987b88", "src": "hda", "uuid": "5f19d59d-83c1-4ca0-b52f-7e71eb129740"}, "output_BAM": {"id": "b1ccb11a04cd180a", "src": "hda", "uuid": "0b5c69bf-a307-4b9e-954a-250f5784e80a"}, "output_matrix_filtered": {"id": "ce39520f41faab0c", "src": "hda", "uuid": "ff9fcf73-ad41-4a2d-9099-3d62760d48dc"}, "output_barcodes_filtered": {"id": "e601e1855f8f6f47", "src": "hda", "uuid": "011f159c-7a9d-43e7-8413-a26783250322"}, "output_genes_filtered": {"id": "4bc0fda0db243856", "src": "hda", "uuid": "aa653fff-a83f-4e4d-b5a4-674bc429cd86"}, "output_log": {"id": "eb3bdf51e4b05251", "src": "hda", "uuid": "f917a346-4943-455f-be9e-50747290cfbf"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 07:47:50 ..... started STAR run\nOct 14 07:47:50 ... starting to generate Genome files\nOct 14 07:47:50 ..... processing annotations GTF\nOct 14 07:47:50 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:47:50 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:47:51 ... loading chunks from disk, packing SA...\nOct 14 07:47:51 ... finished generating suffix array\nOct 14 07:47:51 ... generating Suffix Array index\nOct 14 07:47:51 ... completed Suffix Array index\nOct 14 07:47:51 ..... inserting junctions into the genome indices\nOct 14 07:47:51 ... writing Genome to disk ...\nOct 14 07:47:51 ... writing Suffix Array to disk ...\nOct 14 07:47:51 ... writing SAindex to disk\nOct 14 07:47:51 ..... finished successfully\nOct 14 07:47:51 ..... started STAR run\nOct 14 07:47:51 ..... loading genome\nOct 14 07:47:51 ..... started mapping\nOct 14 07:48:08 ..... finished mapping\nOct 14 07:48:08 ..... started Solo counting\nOct 14 07:48:08 ..... finished Solo counting\nOct 14 07:48:08 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Oct 14 07:47:50 ..... started STAR run\nOct 14 07:47:50 ... starting to generate Genome files\nOct 14 07:47:50 ..... processing annotations GTF\nOct 14 07:47:50 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:47:50 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:47:51 ... loading chunks from disk, packing SA...\nOct 14 07:47:51 ... finished generating suffix array\nOct 14 07:47:51 ... generating Suffix Array index\nOct 14 07:47:51 ... completed Suffix Array index\nOct 14 07:47:51 ..... inserting junctions into the genome indices\nOct 14 07:47:51 ... writing Genome to disk ...\nOct 14 07:47:51 ... writing Suffix Array to disk ...\nOct 14 07:47:51 ... writing SAindex to disk\nOct 14 07:47:51 ..... finished successfully\nOct 14 07:47:51 ..... started STAR run\nOct 14 07:47:51 ..... loading genome\nOct 14 07:47:51 ..... started mapping\nOct 14 07:48:08 ..... finished mapping\nOct 14 07:48:08 ..... started Solo counting\nOct 14 07:48:08 ..... finished Solo counting\nOct 14 07:48:08 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "19 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "19.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:48:09", "plugin": "core", "name": "end_epoch", "raw_value": "1728892089.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:47:50", "plugin": "core", "name": "start_epoch", "raw_value": "1728892070.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-5", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 5, "time_seconds": 114.41281485557556, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "f64b7a826fcd2c5c"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "cae404413bf78dff"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "9a1df486a23bc8d4"}, "sc|input_types|input2": {"src": "hda", "id": "a9312d1d674f61e1"}, "sc|input_types|use": "repeat", "sc|soloCBwhitelist": {"src": "hda", "id": "e89481eb9084ceea"}, "sc|params|chemistry": "CR3", "sc|soloUMIdedup": "1MM_All", "sc|solo_type": "CB_UMI_Simple", "solo|soloStrand": "Forward", "solo|soloFeatures": "Gene", "solo|filter|nExpectedCells": "5", "solo|filter|maxPercentile": "0.99", "solo|filter|maxMinRatio": "10", "solo|filter|indMin": "45000", "solo|filter|indMax": "90000", "solo|filter|umiMin": "500", "solo|filter|umiMinFracMedian": "0.01", "solo|filter|candMaxN": "20000", "solo|filter|FDR": "0.01", "solo|filter|simN": "10000", "solo|filter|filter_type": "emptydrops"}, "job": {"model_class": "Job", "id": "2b93dc688be7223b", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:41:42.392462", "update_time": "2024-10-14T08:42:47.549733", "galaxy_version": "24.1", "external_id": "gxy-hb7bt", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/9/8/9/dataset_98974df4-e901-4eb1-9432-93d5b0bd1409.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/8/5/2/dataset_8529c592-7cb2-4ef2-a376-8bb796131f62.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Simple   --readFilesIn /galaxy/server/database/objects/2/5/c/dataset_25c4e819-d342-46b1-bb9b-32c2f8d28254.dat /galaxy/server/database/objects/0/8/3/dataset_08338f97-df1e-4122-8c87-d931bdfcd7a3.dat --soloCBmatchWLtype 1MM_multi  --readFilesCommand zcat   --soloCBwhitelist '/galaxy/server/database/objects/e/8/0/dataset_e8096696-069d-4bd0-9205-d09968a49ee9.dat' --soloBarcodeReadLength 1 --soloCBstart 1 --soloCBlen 16 --soloUMIstart 17 --soloUMIlen 12   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter EmptyDrops_CR 5 0.99 10.0 45000 90000 500 0.01 20000 0.01 10000  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/7/d/3/dataset_7d369bbb-1e93-43b5-8d68-182e0f3174ac.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/4/0/7/dataset_40794fe5-bf56-48d3-8b48-1f2893f0c6b4.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"FDR\": \"0.01\", \"__current_case__\": 1, \"candMaxN\": \"20000\", \"filter_type\": \"emptydrops\", \"indMax\": \"90000\", \"indMin\": \"45000\", \"maxMinRatio\": \"10.0\", \"maxPercentile\": \"0.99\", \"nExpectedCells\": \"5\", \"simN\": \"10000\", \"umiMin\": \"500\", \"umiMinFracMedian\": \"0.01\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 0, \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 502, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 503, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"params\": {\"__current_case__\": 1, \"chemistry\": \"CR3\"}, \"soloBarcodeReadLength\": true, \"soloCBmatchWLtype\": \"1MM_multi\", \"soloCBwhitelist\": {\"values\": [{\"id\": 504, \"src\": \"hda\"}]}, \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Simple\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 505, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 501, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "efe59f8638c5ca11", "src": "hda", "uuid": "98974df4-e901-4eb1-9432-93d5b0bd1409"}, "refGenomeSource|sjdbGTFfile": {"id": "cae404413bf78dff", "src": "hda", "uuid": "8529c592-7cb2-4ef2-a376-8bb796131f62"}, "sc|input_types|input1": {"id": "9a1df486a23bc8d4", "src": "hda", "uuid": "08338f97-df1e-4122-8c87-d931bdfcd7a3"}, "sc|input_types|input11": {"id": "9a1df486a23bc8d4", "src": "hda", "uuid": "08338f97-df1e-4122-8c87-d931bdfcd7a3"}, "sc|input_types|input2": {"id": "a9312d1d674f61e1", "src": "hda", "uuid": "25c4e819-d342-46b1-bb9b-32c2f8d28254"}, "sc|input_types|input21": {"id": "a9312d1d674f61e1", "src": "hda", "uuid": "25c4e819-d342-46b1-bb9b-32c2f8d28254"}, "sc|soloCBwhitelist": {"id": "e89481eb9084ceea", "src": "hda", "uuid": "e8096696-069d-4bd0-9205-d09968a49ee9"}}, "outputs": {"output_stats": {"id": "41304a78ea82d1fc", "src": "hda", "uuid": "7d369bbb-1e93-43b5-8d68-182e0f3174ac"}, "output_BAM": {"id": "d49087327a628594", "src": "hda", "uuid": "40794fe5-bf56-48d3-8b48-1f2893f0c6b4"}, "output_matrix_filtered": {"id": "075d4be52a80b7ea", "src": "hda", "uuid": "7fc74df2-6182-4f68-9bca-990b41120800"}, "output_barcodes_filtered": {"id": "9fa25dd141933c7d", "src": "hda", "uuid": "b0917861-9b02-40f4-9fae-950cc6067cd6"}, "output_genes_filtered": {"id": "326e6daad3f20d50", "src": "hda", "uuid": "f3d5cf4d-d829-4218-8e2d-762fe3cf3274"}, "output_log": {"id": "2d200282bf40705c", "src": "hda", "uuid": "db53a9b4-6c95-4707-9dce-d616ab8dbafa"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 08:42:19 ..... started STAR run\nOct 14 08:42:19 ... starting to generate Genome files\nOct 14 08:42:19 ..... processing annotations GTF\nOct 14 08:42:19 ... starting to sort Suffix Array. This may take a long time...\nOct 14 08:42:19 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 08:42:19 ... loading chunks from disk, packing SA...\nOct 14 08:42:19 ... finished generating suffix array\nOct 14 08:42:19 ... generating Suffix Array index\nOct 14 08:42:19 ... completed Suffix Array index\nOct 14 08:42:19 ..... inserting junctions into the genome indices\nOct 14 08:42:19 ... writing Genome to disk ...\nOct 14 08:42:19 ... writing Suffix Array to disk ...\nOct 14 08:42:19 ... writing SAindex to disk\nOct 14 08:42:19 ..... finished successfully\nOct 14 08:42:19 ..... started STAR run\nOct 14 08:42:19 ..... loading genome\nOct 14 08:42:20 ..... started mapping\nOct 14 08:42:37 ..... finished mapping\nOct 14 08:42:37 ..... started Solo counting\nOct 14 08:42:37 ..... finished Solo counting\nOct 14 08:42:37 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Oct 14 08:42:19 ..... started STAR run\nOct 14 08:42:19 ... starting to generate Genome files\nOct 14 08:42:19 ..... processing annotations GTF\nOct 14 08:42:19 ... starting to sort Suffix Array. This may take a long time...\nOct 14 08:42:19 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 08:42:19 ... loading chunks from disk, packing SA...\nOct 14 08:42:19 ... finished generating suffix array\nOct 14 08:42:19 ... generating Suffix Array index\nOct 14 08:42:19 ... completed Suffix Array index\nOct 14 08:42:19 ..... inserting junctions into the genome indices\nOct 14 08:42:19 ... writing Genome to disk ...\nOct 14 08:42:19 ... writing Suffix Array to disk ...\nOct 14 08:42:19 ... writing SAindex to disk\nOct 14 08:42:19 ..... finished successfully\nOct 14 08:42:19 ..... started STAR run\nOct 14 08:42:19 ..... loading genome\nOct 14 08:42:20 ..... started mapping\nOct 14 08:42:37 ..... finished mapping\nOct 14 08:42:37 ..... started Solo counting\nOct 14 08:42:37 ..... finished Solo counting\nOct 14 08:42:37 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "18 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "18.0000000"}, {"title": "Job End Time", "value": "2024-10-14 08:42:37", "plugin": "core", "name": "end_epoch", "raw_value": "1728895357.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:42:19", "plugin": "core", "name": "start_epoch", "raw_value": "1728895339.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-6", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 6, "time_seconds": 65.28795742988586, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "93b6447743e4496c"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "b30306ca47c34d28"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types|input1": {"src": "hda", "id": "7fd360378d922513"}, "sc|input_types|input2": {"src": "hda", "id": "363eb8024485fbff"}, "sc|input_types|use": "repeat", "sc|cb_whitelists_0|whitelist_file": {"src": "hda", "id": "8ca0a66b6806a878"}, "sc|cb_whitelists_0|cb_start_anchor": "0", "sc|cb_whitelists_0|cb_start_anchor_pos": "0", "sc|cb_whitelists_0|cb_end_anchor": "2", "sc|cb_whitelists_0|cb_end_anchor_pos": "-1", "sc|cb_whitelists_1|whitelist_file": {"src": "hda", "id": "a0bdda77a3293958"}, "sc|cb_whitelists_1|cb_start_anchor": "3", "sc|cb_whitelists_1|cb_start_anchor_pos": "1", "sc|cb_whitelists_1|cb_end_anchor": "3", "sc|cb_whitelists_1|cb_end_anchor_pos": "8", "sc|umi_start_anchor": "3", "sc|umi_start_anchor_pos": "9", "sc|umi_end_anchor": "3", "sc|umi_end_anchor_pos": "14", "sc|soloAdapterSequence": "GAGTGATTGCTTGTGACGCCTT", "sc|soloAdapterMismatchesNmax": "1", "sc|clipAdapterType": "CellRanger4", "sc|soloUMIdedup": "1MM_All", "sc|soloCBmatchWLtype": "1MM", "sc|solo_type": "CB_UMI_Complex"}, "job": {"model_class": "Job", "id": "bb959eebf7fd70e9", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:48:59.094302", "update_time": "2024-10-14T07:49:26.645575", "galaxy_version": "24.1", "external_id": "gxy-69wrc", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/c/c/7/dataset_cc7e3266-99b7-4c3e-ab32-c61b0378e5ed.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/9/f/a/dataset_9fa4e796-50e8-47c8-addf-abe574af84f0.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType CB_UMI_Complex   --readFilesIn /galaxy/server/database/objects/1/d/b/dataset_1dbe0a24-bbde-4aca-b9f9-30a85dc589bc.dat /galaxy/server/database/objects/1/7/1/dataset_17125454-2dce-4f19-bb4a-3ef6b43d162b.dat --soloCBmatchWLtype 1MM  --readFilesCommand zcat   --soloCBwhitelist /galaxy/server/database/objects/8/1/c/dataset_81ca8ec8-0484-4cff-ab5f-a34dd6e14b20.dat /galaxy/server/database/objects/b/d/a/dataset_bda7b5df-ac74-4288-8c8d-5c8c3aefbf2f.dat --soloCBposition 0_0_2_-1 3_1_3_8 --soloUMIposition 3_9_3_14 --soloAdapterSequence 'GAGTGATTGCTTGTGACGCCTT' --soloAdapterMismatchesNmax 1 --clipAdapterType CellRanger4   --soloUMIfiltering - --soloStrand Forward --soloFeatures Gene --soloUMIdedup 1MM_All --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter CellRanger2.2 3000 0.99 10.0  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/b/8/4/dataset_b84dc2a8-ccf0-4391-a85a-721f2ac4b061.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/a/e/6/dataset_ae66df99-e719-4d84-91e7-9c5c20ac1c63.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 0, \"filter_type\": \"cellranger2\", \"max_min_ratio\": \"10.0\", \"max_perc\": \"0.99\", \"n_expected\": \"3000\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Forward\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 1, \"cb_whitelists\": [{\"__index__\": 0, \"cb_end_anchor\": \"2\", \"cb_end_anchor_pos\": \"-1\", \"cb_start_anchor\": \"0\", \"cb_start_anchor_pos\": \"0\", \"whitelist_file\": {\"values\": [{\"id\": 424, \"src\": \"hda\"}]}}, {\"__index__\": 1, \"cb_end_anchor\": \"3\", \"cb_end_anchor_pos\": \"8\", \"cb_start_anchor\": \"3\", \"cb_start_anchor_pos\": \"1\", \"whitelist_file\": {\"values\": [{\"id\": 425, \"src\": \"hda\"}]}}], \"clipAdapterType\": \"CellRanger4\", \"input_types\": {\"__current_case__\": 0, \"input1\": {\"values\": [{\"id\": 422, \"src\": \"hda\"}]}, \"input2\": {\"values\": [{\"id\": 423, \"src\": \"hda\"}]}, \"use\": \"repeat\"}, \"soloAdapterMismatchesNmax\": \"1\", \"soloAdapterSequence\": \"GAGTGATTGCTTGTGACGCCTT\", \"soloCBmatchWLtype\": \"1MM\", \"soloUMIdedup\": \"1MM_All\", \"solo_type\": \"CB_UMI_Complex\", \"umi_end_anchor\": \"3\", \"umi_end_anchor_pos\": \"14\", \"umi_start_anchor\": \"3\", \"umi_start_anchor_pos\": \"9\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 426, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 421, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"refGenomeSource|genomeFastaFiles": {"id": "004a2e52e4f432b7", "src": "hda", "uuid": "cc7e3266-99b7-4c3e-ab32-c61b0378e5ed"}, "refGenomeSource|sjdbGTFfile": {"id": "b30306ca47c34d28", "src": "hda", "uuid": "9fa4e796-50e8-47c8-addf-abe574af84f0"}, "sc|input_types|input1": {"id": "7fd360378d922513", "src": "hda", "uuid": "17125454-2dce-4f19-bb4a-3ef6b43d162b"}, "sc|input_types|input11": {"id": "7fd360378d922513", "src": "hda", "uuid": "17125454-2dce-4f19-bb4a-3ef6b43d162b"}, "sc|input_types|input2": {"id": "363eb8024485fbff", "src": "hda", "uuid": "1dbe0a24-bbde-4aca-b9f9-30a85dc589bc"}, "sc|input_types|input21": {"id": "363eb8024485fbff", "src": "hda", "uuid": "1dbe0a24-bbde-4aca-b9f9-30a85dc589bc"}, "sc|cb_whitelists_0|whitelist_file": {"id": "8ca0a66b6806a878", "src": "hda", "uuid": "81ca8ec8-0484-4cff-ab5f-a34dd6e14b20"}, "sc|cb_whitelists_1|whitelist_file": {"id": "a0bdda77a3293958", "src": "hda", "uuid": "bda7b5df-ac74-4288-8c8d-5c8c3aefbf2f"}}, "outputs": {"output_stats": {"id": "c9aa90cba222c0bb", "src": "hda", "uuid": "b84dc2a8-ccf0-4391-a85a-721f2ac4b061"}, "output_BAM": {"id": "bafa88a454126bb7", "src": "hda", "uuid": "ae66df99-e719-4d84-91e7-9c5c20ac1c63"}, "output_matrix_filtered": {"id": "7a8b72f3d574c87b", "src": "hda", "uuid": "e340d16b-04ad-4d7b-84e8-0d2a0d330ef4"}, "output_barcodes_filtered": {"id": "56014522f2b58d4a", "src": "hda", "uuid": "8f3e0c7c-df91-45b4-8cd1-5f6d351f71f0"}, "output_genes_filtered": {"id": "b5d74e699f93802a", "src": "hda", "uuid": "fa3941b3-7011-4997-a2d7-9d8f7f6d0a86"}, "output_log": {"id": "40d86503ad40141f", "src": "hda", "uuid": "9c60d801-ee6f-4586-b04f-4613879e7ca9"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 07:49:14 ..... started STAR run\nOct 14 07:49:14 ... starting to generate Genome files\nOct 14 07:49:14 ..... processing annotations GTF\nOct 14 07:49:14 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:49:14 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:49:14 ... loading chunks from disk, packing SA...\nOct 14 07:49:14 ... finished generating suffix array\nOct 14 07:49:14 ... generating Suffix Array index\nOct 14 07:49:14 ... completed Suffix Array index\nOct 14 07:49:14 ..... inserting junctions into the genome indices\nOct 14 07:49:14 ... writing Genome to disk ...\nOct 14 07:49:14 ... writing Suffix Array to disk ...\nOct 14 07:49:14 ... writing SAindex to disk\nOct 14 07:49:14 ..... finished successfully\nOct 14 07:49:14 ..... started STAR run\nOct 14 07:49:14 ..... loading genome\nOct 14 07:49:14 ..... started mapping\nOct 14 07:49:15 ..... finished mapping\nOct 14 07:49:15 ..... started Solo counting\nOct 14 07:49:15 ..... finished Solo counting\nOct 14 07:49:15 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Oct 14 07:49:14 ..... started STAR run\nOct 14 07:49:14 ... starting to generate Genome files\nOct 14 07:49:14 ..... processing annotations GTF\nOct 14 07:49:14 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:49:14 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:49:14 ... loading chunks from disk, packing SA...\nOct 14 07:49:14 ... finished generating suffix array\nOct 14 07:49:14 ... generating Suffix Array index\nOct 14 07:49:14 ... completed Suffix Array index\nOct 14 07:49:14 ..... inserting junctions into the genome indices\nOct 14 07:49:14 ... writing Genome to disk ...\nOct 14 07:49:14 ... writing Suffix Array to disk ...\nOct 14 07:49:14 ... writing SAindex to disk\nOct 14 07:49:14 ..... finished successfully\nOct 14 07:49:14 ..... started STAR run\nOct 14 07:49:14 ..... loading genome\nOct 14 07:49:14 ..... started mapping\nOct 14 07:49:15 ..... finished mapping\nOct 14 07:49:15 ..... started Solo counting\nOct 14 07:49:15 ..... finished Solo counting\nOct 14 07:49:15 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:49:15", "plugin": "core", "name": "end_epoch", "raw_value": "1728892155.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:49:14", "plugin": "core", "name": "start_epoch", "raw_value": "1728892154.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-6", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 6, "time_seconds": 25.69569754600525, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "rna_starsolo/2.7.8a-7", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 7, "time_seconds": 128.5107662677765, "inputs": {"refGenomeSource|genomeFastaFiles": {"src": "hda", "id": "cd97f84c86a5ac74"}, "refGenomeSource|genomeSAindexNbases": "4", "refGenomeSource|sjdbGTFfile": {"src": "hda", "id": "0b960f71edc233ce"}, "refGenomeSource|sjdbOverhang": "100", "refGenomeSource|geneSource": "history", "sc|input_types_smart_seq|paired_end_collection": {"src": "hdca", "id": "e19ace934509ece2"}, "sc|input_types_smart_seq|use": "list_paired_end", "sc|cell_ids": {"src": "hda", "id": "5d12c124dae51d7d"}, "sc|soloUMIdedup": "Exact", "sc|solo_type": "SmartSeq", "solo|soloStrand": "Unstranded", "solo|filter|n_cells": "2", "solo|filter|filter_type": "topcells"}, "job": {"model_class": "Job", "id": "d4496bbc41470103", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.8a", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T07:51:05.714693", "update_time": "2024-10-14T07:51:35.232514", "galaxy_version": "24.1", "external_id": "gxy-ppcvd", "handler": null, "job_runner_name": null, "command_line": "mkdir -p tempstargenomedir && STAR --runMode genomeGenerate --genomeDir 'tempstargenomedir' --genomeFastaFiles '/galaxy/server/database/objects/b/f/4/dataset_bf4b7c12-0824-4c53-98c2-8b9e55884bcc.dat' --sjdbOverhang '100' --sjdbGTFfile '/galaxy/server/database/objects/1/7/0/dataset_1707146b-22c8-4767-b256-51aa4724c297.dat' --genomeSAindexNbases 4 --runThreadN ${GALAXY_SLOTS:-4} &&  STAR  --runThreadN ${GALAXY_SLOTS:-4} --genomeLoad NoSharedMemory --genomeDir tempstargenomedir   --soloType SmartSeq  --readFilesManifest '/galaxy/server/database/jobs_directory/000/336/configs/tmpjc0ebg7o'  --readFilesCommand zcat  --soloCBwhitelist None  --soloUMIfiltering - --soloStrand Unstranded --soloFeatures Gene --soloUMIdedup Exact --quantMode TranscriptomeSAM --outSAMtype BAM Unsorted  --soloCellFilter TopCells 2  --soloOutFormatFeaturesGeneField3 'Gene Expression' && mv Solo.out/Gene Solo.out/soloFeatures && cat <(echo \"Barcodes:\") Solo.out/Barcodes.stats <(echo \"Genes:\") Solo.out/soloFeatures/Features.stats > '/galaxy/server/database/objects/1/9/d/dataset_19de4114-b7de-40a0-b0dd-b8e68e6febb4.dat'   && addthreads=${GALAXY_SLOTS:-2} && (( addthreads-- )) && addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/0/2/6/dataset_026b0d1d-31c8-46ed-8796-ffe2557b1ad3.dat' Aligned.out.bam", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "solo": "{\"filter\": {\"__current_case__\": 2, \"filter_type\": \"topcells\", \"n_cells\": \"2\"}, \"soloFeatures\": \"Gene\", \"soloOutFormatFeaturesGeneField3\": \"Gene Expression\", \"soloStrand\": \"Unstranded\", \"soloUMIfiltering\": \"-\"}", "sc": "{\"__current_case__\": 2, \"cell_ids\": {\"values\": [{\"id\": 453, \"src\": \"hda\"}]}, \"input_types_smart_seq\": {\"__current_case__\": 1, \"paired_end_collection\": {\"values\": [{\"id\": 15, \"src\": \"hdca\"}]}, \"use\": \"list_paired_end\"}, \"soloUMIdedup\": \"Exact\", \"solo_type\": \"SmartSeq\"}", "refGenomeSource": "{\"__current_case__\": 1, \"geneSource\": \"history\", \"genomeFastaFiles\": {\"values\": [{\"id\": 454, \"src\": \"hda\"}]}, \"genomeSAindexNbases\": \"4\", \"sjdbGTFfile\": {\"values\": [{\"id\": 434, \"src\": \"hda\"}]}, \"sjdbOverhang\": \"100\"}"}, "inputs": {"sc|input_types_smart_seq|paired_end_collection1": {"id": "5fc96db804243f37", "src": "hda", "uuid": "41794d3d-4bfb-4c76-b0d3-995f5a98ac17"}, "sc|input_types_smart_seq|paired_end_collection11": {"id": "e38d4126c0b35dd9", "src": "hda", "uuid": "853d5fd3-3298-41fb-8101-106cbb1735fa"}, "refGenomeSource|sjdbGTFfile": {"id": "0b960f71edc233ce", "src": "hda", "uuid": "1707146b-22c8-4767-b256-51aa4724c297"}, "sc|input_types_smart_seq|paired_end_collection2": {"id": "c4045bf3db8f6c3c", "src": "hda", "uuid": "69b6e721-4195-4cdd-9047-11251cce249c"}, "sc|input_types_smart_seq|paired_end_collection4": {"id": "9d762a5b91aa1188", "src": "hda", "uuid": "41532ea1-b723-40e7-adc0-f7e49ef4df69"}, "sc|input_types_smart_seq|paired_end_collection6": {"id": "992881e01663e0c4", "src": "hda", "uuid": "c675b43d-9253-4c50-8c8a-74354d95edbb"}, "sc|input_types_smart_seq|paired_end_collection10": {"id": "d411155539b58a16", "src": "hda", "uuid": "595d2de3-c02f-4fd0-bddc-d86937181ce9"}, "sc|input_types_smart_seq|paired_end_collection14": {"id": "97ba950b2f0ae477", "src": "hda", "uuid": "488cd7dc-083a-43dc-b717-44f11882e4f3"}, "sc|input_types_smart_seq|paired_end_collection7": {"id": "1b3572cb510c54ae", "src": "hda", "uuid": "84e7bed1-15e9-4ce1-bb09-4240f843f1d4"}, "sc|input_types_smart_seq|paired_end_collection15": {"id": "76e0cf658a4fb744", "src": "hda", "uuid": "4d1e1366-35bf-42be-ad3c-32faf9fe8179"}, "sc|input_types_smart_seq|paired_end_collection5": {"id": "6d19fcf876fc6fd0", "src": "hda", "uuid": "9518caf5-f726-4f59-8113-254cf5bff653"}, "sc|input_types_smart_seq|paired_end_collection13": {"id": "6d7be813e2bc9a75", "src": "hda", "uuid": "26b1dd7a-87b6-4985-9553-f02a1e833259"}, "sc|cell_ids": {"id": "5d12c124dae51d7d", "src": "hda", "uuid": "d8d79115-5a78-4a2b-a0b2-c96c91c4b593"}, "sc|input_types_smart_seq|paired_end_collection3": {"id": "45a0e1a972a68581", "src": "hda", "uuid": "c66fde50-2ace-406a-be9f-d34d48cdd89c"}, "sc|input_types_smart_seq|paired_end_collection8": {"id": "5d07b9df2dcd3f0b", "src": "hda", "uuid": "84aa510c-b858-400e-8702-26db472458a8"}, "sc|input_types_smart_seq|paired_end_collection9": {"id": "4f09773cb7266a14", "src": "hda", "uuid": "6cc78bc0-3433-4edb-880a-3be958a9f213"}, "sc|input_types_smart_seq|paired_end_collection12": {"id": "44eeff53bc15b716", "src": "hda", "uuid": "a82bf065-eaac-49c8-ae6b-b71434a62f42"}, "sc|input_types_smart_seq|paired_end_collection18": {"id": "c8fd4a276d650968", "src": "hda", "uuid": "4ca9bd7e-d6bf-4d6f-b2f2-8a7ae0d01340"}, "sc|input_types_smart_seq|paired_end_collection17": {"id": "593976fd39394172", "src": "hda", "uuid": "93f42c8a-055e-4029-9131-d0a37bf09be1"}, "sc|input_types_smart_seq|paired_end_collection16": {"id": "91302fbd6672959c", "src": "hda", "uuid": "36443b51-cf59-441e-b920-b5e593e0441d"}, "refGenomeSource|genomeFastaFiles": {"id": "75a9eb57331b6bdf", "src": "hda", "uuid": "bf4b7c12-0824-4c53-98c2-8b9e55884bcc"}}, "outputs": {"output_stats": {"id": "0d34cbcf2b001814", "src": "hda", "uuid": "19de4114-b7de-40a0-b0dd-b8e68e6febb4"}, "output_BAM": {"id": "565475939013d26a", "src": "hda", "uuid": "026b0d1d-31c8-46ed-8796-ffe2557b1ad3"}, "output_matrix_filtered": {"id": "d2fbd7c44a54b1bc", "src": "hda", "uuid": "5c514b17-10d7-4051-996a-4a87e54f8a32"}, "output_barcodes_filtered": {"id": "ad9c19c0bccec021", "src": "hda", "uuid": "6ef790ae-4c6f-4f1a-adc0-5c04dff207dd"}, "output_genes_filtered": {"id": "980677e594997396", "src": "hda", "uuid": "c2b22ab9-ea4c-4b25-b36b-2157f741902b"}, "output_log": {"id": "cadd3efe4488c4a2", "src": "hda", "uuid": "886d0258-117d-46b5-9497-10407186d49f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "Oct 14 07:51:19 ..... started STAR run\nOct 14 07:51:19 ... starting to generate Genome files\nOct 14 07:51:19 ..... processing annotations GTF\nOct 14 07:51:19 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:51:19 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:51:19 ... loading chunks from disk, packing SA...\nOct 14 07:51:19 ... finished generating suffix array\nOct 14 07:51:19 ... generating Suffix Array index\nOct 14 07:51:19 ... completed Suffix Array index\nOct 14 07:51:20 ..... inserting junctions into the genome indices\nOct 14 07:51:20 ... writing Genome to disk ...\nOct 14 07:51:20 ... writing Suffix Array to disk ...\nOct 14 07:51:20 ... writing SAindex to disk\nOct 14 07:51:20 ..... finished successfully\nOct 14 07:51:20 ..... started STAR run\nOct 14 07:51:20 ..... loading genome\nOct 14 07:51:20 ..... started mapping\nOct 14 07:51:24 ..... finished mapping\nOct 14 07:51:24 ..... started Solo counting\nOct 14 07:51:24 ..... finished Solo counting\nOct 14 07:51:24 ..... finished successfully\n", "tool_stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stdout": "Oct 14 07:51:19 ..... started STAR run\nOct 14 07:51:19 ... starting to generate Genome files\nOct 14 07:51:19 ..... processing annotations GTF\nOct 14 07:51:19 ... starting to sort Suffix Array. This may take a long time...\nOct 14 07:51:19 ... sorting Suffix Array chunks and saving them to disk...\nOct 14 07:51:19 ... loading chunks from disk, packing SA...\nOct 14 07:51:19 ... finished generating suffix array\nOct 14 07:51:19 ... generating Suffix Array index\nOct 14 07:51:19 ... completed Suffix Array index\nOct 14 07:51:20 ..... inserting junctions into the genome indices\nOct 14 07:51:20 ... writing Genome to disk ...\nOct 14 07:51:20 ... writing Suffix Array to disk ...\nOct 14 07:51:20 ... writing SAindex to disk\nOct 14 07:51:20 ..... finished successfully\nOct 14 07:51:20 ..... started STAR run\nOct 14 07:51:20 ..... loading genome\nOct 14 07:51:20 ..... started mapping\nOct 14 07:51:24 ..... finished mapping\nOct 14 07:51:24 ..... started Solo counting\nOct 14 07:51:24 ..... finished Solo counting\nOct 14 07:51:24 ..... finished successfully\n", "stderr": "[bam_sort_core] merging from 0 files and 3 in-memory blocks...\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "5 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "5.0000000"}, {"title": "Job End Time", "value": "2024-10-14 07:51:24", "plugin": "core", "name": "end_epoch", "raw_value": "1728892284.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 07:51:19", "plugin": "core", "name": "start_epoch", "raw_value": "1728892279.0000000"}, {"title": "Memory Allocated (MB)", "value": "42949", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "42949.0000000"}, {"title": "Cores Allocated", "value": "4", "plugin": "core", "name": "galaxy_slots", "raw_value": "4.0000000"}]}, "status": "success"}}, {"id": "rna_starsolo/2.7.8a-7", "has_data": true, "data": {"tool_id": "rna_starsolo", "tool_version": "2.7.8a", "test_index": 7, "time_seconds": 12.608465194702148, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "samtools_split/1.9-0", "has_data": true, "data": {"tool_id": "samtools_split", "tool_version": "1.9", "test_index": 0, "time_seconds": 35.53648138046265, "inputs": {"input_bam": {"src": "hda", "id": "9f2c9d5ae89d310b"}}, "job": {"model_class": "Job", "id": "2e2f207361ae5d74", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_split/samtools_split/1.9", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:00:46.278810", "update_time": "2024-10-14T09:01:02.025546", "galaxy_version": "24.1", "external_id": "gxy-hws86", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&  samtools split -f 'Read_Group_%!.bam' -u '/galaxy/server/database/objects/8/6/6/dataset_866a000f-a5d3-41ca-b767-e69dfd13081b.dat' -@ $addthreads '/galaxy/server/database/objects/a/5/b/dataset_a5b99d6e-b549-4e44-a9cf-968df64e9a8f.dat'", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "header": null}, "inputs": {"input_bam": {"id": "9f2c9d5ae89d310b", "src": "hda", "uuid": "a5b99d6e-b549-4e44-a9cf-968df64e9a8f"}}, "outputs": {"__new_primary_file_output|Mouse__": {"id": "9fb8d8ea7d842130", "src": "hda", "uuid": "dae35120-e696-49e1-938c-2d286aa15ebc"}, "__new_primary_file_output|Human__": {"id": "6e08f52b9446a853", "src": "hda", "uuid": "34c22482-2583-47fc-b38a-876fd1514108"}, "__new_primary_file_output|Elephant__": {"id": "4867570217b11cbe", "src": "hda", "uuid": "227e4e05-a9b9-463d-9fcf-26a57d707b3b"}, "output": {"id": "e145647bf267f7f4", "src": "hda", "uuid": "866a000f-a5d3-41ca-b767-e69dfd13081b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:00:50", "plugin": "core", "name": "end_epoch", "raw_value": "1728896450.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:00:50", "plugin": "core", "name": "start_epoch", "raw_value": "1728896450.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Primary output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_g6v0y5af.sam v. /tmp/history_bam_converted_to_sam_9j73gn1o.sam )\n--- local_file\n+++ history_data\n@@ -6,11 +6,11 @@\n @PG\tID:bowtie2-D76CD0\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-58C6F748\tPN:bowtie2\tVN:2.1.0\n @PG\tID:bowtie2-D76CD0-8B37AF2\tPN:bowtie2\tVN:2.1.0\n-@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n-@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /tmp/tmpZSM0ep/files/000/dataset_2.dat /tmp/tmpZSM0ep/files/000/dataset_1.dat\n+@PG\tID:samtools\tPN:samtools\tPP:bowtie2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/8/6/6/dataset_866a000f-a5d3-41ca-b767-e69dfd13081b.dat -@ 0 /galaxy/server/database/objects/a/5/b/dataset_a5b99d6e-b549-4e44-a9cf-968df64e9a8f.dat\n+@PG\tID:samtools.1\tPN:samtools\tPP:bowtie2-31DAC016\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/8/6/6/dataset_866a000f-a5d3-41ca-b767-e69dfd13081b.dat -@ 0 /galaxy/server/database/objects/a/5/b/dataset_a5b99d6e-b549-4e44-a9cf-968df64e9a8f.dat\n+@PG\tID:samtools.2\tPN:samtools\tPP:bowtie2-D76CD0\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/8/6/6/dataset_866a000f-a5d3-41ca-b767-e69dfd13081b.dat -@ 0 /galaxy/server/database/objects/a/5/b/dataset_a5b99d6e-b549-4e44-a9cf-968df64e9a8f.dat\n+@PG\tID:samtools.3\tPN:samtools\tPP:bowtie2-58C6F748\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/8/6/6/dataset_866a000f-a5d3-41ca-b767-e69dfd13081b.dat -@ 0 /galaxy/server/database/objects/a/5/b/dataset_a5b99d6e-b549-4e44-a9cf-968df64e9a8f.dat\n+@PG\tID:samtools.4\tPN:samtools\tPP:bowtie2-D76CD0-8B37AF2\tVN:1.9\tCL:samtools split -f Read_Group_%!.bam -u /galaxy/server/database/objects/8/6/6/dataset_866a000f-a5d3-41ca-b767-e69dfd13081b.dat -@ 0 /galaxy/server/database/objects/a/5/b/dataset_a5b99d6e-b549-4e44-a9cf-968df64e9a8f.dat\n phiX174_9_527_1:0:0_0:0:0_54/1\t0\tphiX174\t9\t42\t70M\t*\t0\t0\tTCGCTTCCATGACGCAGAAGTTAACACTTTCGGATATTTCTGATGAGTCGAAAAATTATCTTGATCAAGC\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:65A4\tYT:Z:UU\tRG:Z:Mouse\n phiX174_71_657_0:0:0_1:0:0_72/1\t0\tphiX174\t71\t42\t70M\t*\t0\t0\tGATAAAGCAGGAATTACTACTGCTTGTTTACGAATTAAATCGAAGTGGACTGCTGGCGGAAAATGAGAAA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:0\tXN:i:0\tXM:i:0\tXO:i:0\tXG:i:0\tNM:i:0\tMD:Z:70\tYT:Z:UU\tRG:Z:Mouse\n phiX174_99_617_1:0:0_2:1:0_a2/1\t0\tphiX174\t99\t42\t70M\t*\t0\t0\tTACGAATTAAATCGAAGTGGACTGCTTGCGGAAAATGAGAAAATTCGACCTATCCTTGCGCAGCTCGAGA\t2222222222222222222222222222222222222222222222222222222222222222222222\tAS:i:-3\tXN:i:0\tXM:i:1\tXO:i:0\tXG:i:0\tNM:i:1\tMD:Z:26G43\tYT:Z:UU\tRG:Z:Mouse\n"], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-0", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 0, "time_seconds": 28.088255405426025, "inputs": {"input": {"src": "hda", "id": "4608fcda51dfbf07"}}, "job": {"model_class": "Job", "id": "bb3847c3e908778f", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "error", "exit_code": null, "create_time": "2024-10-14T08:46:53.548026", "update_time": "2024-10-14T08:47:02.396202", "galaxy_version": "24.1", "external_id": "gxy-9wwmp", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/d/f/c/dataset_dfce881e-25c7-415a-956d-c94edb73a03d.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "4608fcda51dfbf07", "src": "hda", "uuid": "dfce881e-25c7-415a-956d-c94edb73a03d"}}, "outputs": {"outputsam": {"id": "556a48d40139ed72", "src": "hda", "uuid": "1bcb0f91-bdc6-4c79-aaad-4804612623b0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-1", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 1, "status": "skip"}}, {"id": "samtools_view/1.9+galaxy3-10", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 10, "time_seconds": 30.540751457214355, "inputs": {"input": {"src": "hda", "id": "a217711664b7c7ea"}, "mode|output_options|output_format|with_header": true, "mode|output_options|output_format|oformat": "sam"}, "job": {"model_class": "Job", "id": "40d86503ad40141f", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:51:24.491232", "update_time": "2024-10-14T08:51:36.425667", "galaxy_version": "24.1", "external_id": "gxy-wgwhp", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/1/b/d/dataset_1bd2e74e-265f-4cd6-a0e7-e73b13169046.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/a/b/d/metadata_abd3eb5b-db36-4e74-bb08-5c88921f35b7.dat' infile.bai &&        samtools view -@ $addthreads      -h  -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": true}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "a217711664b7c7ea", "src": "hda", "uuid": "1bd2e74e-265f-4cd6-a0e7-e73b13169046"}}, "outputs": {"outputsam": {"id": "09855060c2bb8ed6", "src": "hda", "uuid": "5c2d76fe-3cd7-41e1-9656-3d380928ef1f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:51:25", "plugin": "core", "name": "end_epoch", "raw_value": "1728895885.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:51:25", "plugin": "core", "name": "start_epoch", "raw_value": "1728895885.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out1.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-11", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 11, "time_seconds": 29.90768337249756, "inputs": {"input": {"src": "hda", "id": "26e2976c026910ab"}, "mode|output_options|output_format|oformat": "sam", "mode|outtype": "header"}, "job": {"model_class": "Job", "id": "56014522f2b58d4a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:51:54.848376", "update_time": "2024-10-14T08:52:06.552539", "galaxy_version": "24.1", "external_id": "gxy-s6frm", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/4/0/8/dataset_4084032e-3142-4525-8157-7d41bc91abef.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/3/3/f/metadata_33f171b7-a8ff-4817-b178-3cb44120e048.dat' infile.bai &&    samtools view -H  -o outfile   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 2, \"output_options\": {\"__current_case__\": 0, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\"}, \"reads_report_type\": \"\"}, \"outtype\": \"header\"}"}, "inputs": {"input": {"id": "26e2976c026910ab", "src": "hda", "uuid": "4084032e-3142-4525-8157-7d41bc91abef"}}, "outputs": {"outputsam": {"id": "cc3aee04593656f9", "src": "hda", "uuid": "b1e73c1d-a24d-4396-9945-d404b7d4a4e5"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:51:56", "plugin": "core", "name": "end_epoch", "raw_value": "1728895916.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:51:56", "plugin": "core", "name": "start_epoch", "raw_value": "1728895916.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out2.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-12", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 12, "time_seconds": 32.53942346572876, "inputs": {"input": {"src": "hda", "id": "556f9df698a79966"}, "mode|output_options|output_format|with_header": false, "mode|output_options|output_format|oformat": "sam"}, "job": {"model_class": "Job", "id": "bafa88a454126bb7", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:52:26.361140", "update_time": "2024-10-14T08:52:39.197265", "galaxy_version": "24.1", "external_id": "gxy-m4wjp", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/6/f/dataset_36f9154b-e8b9-4bdf-ac67-24bf1788e93b.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/a/d/0/metadata_ad0e0946-b1f8-478d-814a-3788e0a81141.dat' infile.bai &&        samtools view -@ $addthreads        -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 1, \"oformat\": \"sam\", \"with_header\": false}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "556f9df698a79966", "src": "hda", "uuid": "36f9154b-e8b9-4bdf-ac67-24bf1788e93b"}}, "outputs": {"outputsam": {"id": "66f124aa4cc7b451", "src": "hda", "uuid": "d5842504-6059-412e-9c7b-c9cbc85f240b"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:52:28", "plugin": "core", "name": "end_epoch", "raw_value": "1728895948.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:52:28", "plugin": "core", "name": "start_epoch", "raw_value": "1728895948.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (bam_to_sam_out3.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-13", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 13, "time_seconds": 32.52125930786133, "inputs": {"input": {"src": "hda", "id": "163cf76134fee34b"}, "mode|output_options|reads_report_type": "count", "mode|outtype": "all_reads"}, "job": {"model_class": "Job", "id": "cd97f84c86a5ac74", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:52:59.438706", "update_time": "2024-10-14T08:53:12.071265", "galaxy_version": "24.1", "external_id": "gxy-kdfr2", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/9/3/3/dataset_93345078-fa11-4960-b575-d673c907412b.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/2/d/c/metadata_2dcd815d-66aa-4b62-9315-24577144556f.dat' infile.bai &&        samtools view -@ $addthreads -c     -o outfile     infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 1, \"reads_report_type\": \"count\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "163cf76134fee34b", "src": "hda", "uuid": "93345078-fa11-4960-b575-d673c907412b"}}, "outputs": {"outputcnt": {"id": "1ac389226455ae33", "src": "hda", "uuid": "2fd64783-c0ac-4e8d-b885-58179263cbf2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:53:01", "plugin": "core", "name": "end_epoch", "raw_value": "1728895981.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:53:01", "plugin": "core", "name": "start_epoch", "raw_value": "1728895981.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputcnt: Test output file (test_counts.tab) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-14", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 14, "time_seconds": 31.627524852752686, "inputs": {"input": {"src": "hda", "id": "33095c2ead9d6914"}, "mode|filter_config|cond_region|select_region": "no", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "b36922971b537f02"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "c4045bf3db8f6c3c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:53:31.533718", "update_time": "2024-10-14T08:53:43.735592", "galaxy_version": "24.1", "external_id": "gxy-5tmxd", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/d/e/1/dataset_de157517-e982-4b5e-a0eb-23f2c64235a9.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/8/4/9/dataset_849bf829-9151-4e1f-a7b2-2baea2eb3cd4.dat' infile &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 574, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "33095c2ead9d6914", "src": "hda", "uuid": "849bf829-9151-4e1f-a7b2-2baea2eb3cd4"}, "addref_cond|ref": {"id": "b36922971b537f02", "src": "hda", "uuid": "de157517-e982-4b5e-a0eb-23f2c64235a9"}}, "outputs": {"outputsam": {"id": "509913ef3a4157a6", "src": "hda", "uuid": "d7bce564-88d9-43e2-a8a4-4cbac6a34239"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:53:33", "plugin": "core", "name": "end_epoch", "raw_value": "1728896013.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:53:33", "plugin": "core", "name": "start_epoch", "raw_value": "1728896013.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-15", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 15, "time_seconds": 32.44298315048218, "inputs": {"input": {"src": "hda", "id": "b8294ed0b1bbc3a8"}, "mode|filter_config|cond_region|select_region": "no", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "b2ca807ee17c0f02"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "6d19fcf876fc6fd0", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:54:04.059985", "update_time": "2024-10-14T08:54:16.298497", "galaxy_version": "24.1", "external_id": "gxy-m5rv6", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/6/e/e/dataset_6eedc873-033c-49b2-a304-efd0037c4b84.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/f/2/d/dataset_f2dd32f6-78b3-45f3-a563-711b416ad296.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/3/2/d/metadata_32d1d356-6f11-4402-b102-9013c7e35699.dat' infile.bai &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 577, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "b8294ed0b1bbc3a8", "src": "hda", "uuid": "f2dd32f6-78b3-45f3-a563-711b416ad296"}, "addref_cond|ref": {"id": "b2ca807ee17c0f02", "src": "hda", "uuid": "6eedc873-033c-49b2-a304-efd0037c4b84"}}, "outputs": {"outputsam": {"id": "a6a1e4771d703488", "src": "hda", "uuid": "7e9be123-b6a6-40e6-9713-608af26672ba"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:54:06", "plugin": "core", "name": "end_epoch", "raw_value": "1728896046.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:54:06", "plugin": "core", "name": "start_epoch", "raw_value": "1728896046.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-16", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 16, "status": "skip"}}, {"id": "samtools_view/1.9+galaxy3-17", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 17, "time_seconds": 32.770201206207275, "inputs": {"input": {"src": "hda", "id": "e1144f9e8768c5e5"}, "mode|filter_config|cond_region|regions": "CHROMOSOME_I", "mode|filter_config|cond_region|select_region": "text", "mode|output_options|output_format|oformat": "cram", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "c92c32040c3115e8"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "5d07b9df2dcd3f0b", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:54:36.713585", "update_time": "2024-10-14T08:54:49.083743", "galaxy_version": "24.1", "external_id": "gxy-6gwcc", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/1/1/e/dataset_11e56dfd-d9f1-4eb3-bdb2-051d5dba1e3b.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/2/4/2/dataset_242aaa63-746f-4087-9492-6d5322ed745b.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/9/3/7/metadata_93707ff1-ec22-4ac7-a464-77196a369035.dat' infile.bai &&         samtools view -@ $addthreads -C      -o outfile  --output-fmt-option no_ref   -T 'reference.fa' -t 'reference.fa.fai'   infile  'CHROMOSOME_I'", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 580, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 3, \"oformat\": \"cram\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "e1144f9e8768c5e5", "src": "hda", "uuid": "242aaa63-746f-4087-9492-6d5322ed745b"}, "addref_cond|ref": {"id": "c92c32040c3115e8", "src": "hda", "uuid": "11e56dfd-d9f1-4eb3-bdb2-051d5dba1e3b"}}, "outputs": {"outputsam": {"id": "a1334f2d8a5b0de8", "src": "hda", "uuid": "96fc3fc6-b2aa-4239-b8e0-4475bfb253d0"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:54:38", "plugin": "core", "name": "end_epoch", "raw_value": "1728896078.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:54:38", "plugin": "core", "name": "start_epoch", "raw_value": "1728896078.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.cram) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-18", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 18, "time_seconds": 32.3450186252594, "inputs": {"input": {"src": "hda", "id": "a3753622b2f2fe53"}, "mode|filter_config|cond_region|regions": "CHROMOSOME_I", "mode|filter_config|cond_region|select_region": "text", "mode|output_options|output_format|oformat": "bam", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "1722f42b56725fe5"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "e38d4126c0b35dd9", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:55:09.195463", "update_time": "2024-10-14T08:55:21.619209", "galaxy_version": "24.1", "external_id": "gxy-c6n4v", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/a/c/2/dataset_ac296e13-b465-4d7c-b243-7259aa5a1829.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/7/c/8/dataset_7c87fc77-a923-4eea-a9e2-2c5b03cef738.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/a/8/e/metadata_a8eb5794-8f4b-4035-a50f-e7d028686b74.dat' infile.crai &&         samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile  'CHROMOSOME_I'  && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"cram\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 583, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 1, \"regions\": \"CHROMOSOME_I\", \"select_region\": \"text\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "a3753622b2f2fe53", "src": "hda", "uuid": "7c87fc77-a923-4eea-a9e2-2c5b03cef738"}, "addref_cond|ref": {"id": "1722f42b56725fe5", "src": "hda", "uuid": "ac296e13-b465-4d7c-b243-7259aa5a1829"}}, "outputs": {"outputsam": {"id": "29728754d9b0d837", "src": "hda", "uuid": "66b5fbf2-5e19-4e81-b0ec-881b28fcea18"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:55:11", "plugin": "core", "name": "end_epoch", "raw_value": "1728896111.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:55:11", "plugin": "core", "name": "start_epoch", "raw_value": "1728896111.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-19", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 19, "time_seconds": 35.708575963974, "inputs": {"input": {"src": "hda", "id": "9e6780ac41928990"}, "mode|filter_config|cond_region|bedfile": {"src": "hda", "id": "2ffc2e815ed950f8"}, "mode|filter_config|cond_region|select_region": "bed", "mode|output_options|output_format|oformat": "bam", "mode|outtype": "selected_reads", "addref_cond|ref": {"src": "hda", "id": "405706f869efc733"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "76e0cf658a4fb744", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:55:45.796086", "update_time": "2024-10-14T08:55:57.407789", "galaxy_version": "24.1", "external_id": "gxy-5mt4n", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/8/b/f/dataset_8bfd345a-c804-41f9-8188-fd5d181e7bc9.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/5/1/1/dataset_511205d7-6a6d-43e6-815e-dfa406ac23a1.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/5/9/8/metadata_598652fe-b99e-478e-9a0b-0e472a0e0cea.dat' infile.crai &&         samtools view -@ $addthreads -b  -L '/galaxy/server/database/objects/a/3/a/dataset_a3a295df-a94c-4da6-9ded-e4781b8fc87a.dat'    -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"cram\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 587, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 2, \"bedfile\": {\"values\": [{\"id\": 586, \"src\": \"hda\"}]}, \"select_region\": \"bed\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.0\", \"seed\": \"\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "9e6780ac41928990", "src": "hda", "uuid": "511205d7-6a6d-43e6-815e-dfa406ac23a1"}, "mode|filter_config|cond_region|bedfile": {"id": "2ffc2e815ed950f8", "src": "hda", "uuid": "a3a295df-a94c-4da6-9ded-e4781b8fc87a"}, "addref_cond|ref": {"id": "405706f869efc733", "src": "hda", "uuid": "8bfd345a-c804-41f9-8188-fd5d181e7bc9"}}, "outputs": {"outputsam": {"id": "601666a470815de5", "src": "hda", "uuid": "7cdeb59e-59e8-4c3a-a56a-1c4e45a0fc1d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:55:47", "plugin": "core", "name": "end_epoch", "raw_value": "1728896147.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:55:47", "plugin": "core", "name": "start_epoch", "raw_value": "1728896147.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-2", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 2, "time_seconds": 33.642733335494995, "inputs": {"input": {"src": "hda", "id": "bbe81de4b644c7d3"}, "addref_cond|ref": {"src": "hda", "id": "d19a16afb78e6eb6"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "632dec021ee2a227", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:47:22.534336", "update_time": "2024-10-14T08:47:35.968346", "galaxy_version": "24.1", "external_id": "gxy-pfbd9", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/f/0/0/dataset_f0024fec-c633-4304-a51a-59d6787a54c2.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/c/c/3/dataset_cc392519-cd17-4af2-847d-7729481cad94.dat' infile &&        samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"equCab2\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/equCab2.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 548, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "bbe81de4b644c7d3", "src": "hda", "uuid": "cc392519-cd17-4af2-847d-7729481cad94"}, "addref_cond|ref": {"id": "d19a16afb78e6eb6", "src": "hda", "uuid": "f0024fec-c633-4304-a51a-59d6787a54c2"}}, "outputs": {"outputsam": {"id": "f08d0a52fee95e46", "src": "hda", "uuid": "6fa3482c-2deb-4935-9757-ca7e3e48b5e3"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:47:25", "plugin": "core", "name": "end_epoch", "raw_value": "1728895645.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:47:25", "plugin": "core", "name": "start_epoch", "raw_value": "1728895645.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (sam_to_bam_out3.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-20", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 20, "time_seconds": 33.25483989715576, "inputs": {"input": {"src": "hda", "id": "046ad2f3b50544c2"}, "mode|subsample_config|subsampling_mode|target": "2", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "593976fd39394172", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:56:17.320649", "update_time": "2024-10-14T08:56:30.861699", "galaxy_version": "24.1", "external_id": "gxy-flj5c", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/8/3/dataset_383508d2-1b99-4bfc-bdc4-adc6a23fc887.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/2; print(frac > 1 ? 17159+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"2\"}}}"}, "inputs": {"input": {"id": "046ad2f3b50544c2", "src": "hda", "uuid": "383508d2-1b99-4bfc-bdc4-adc6a23fc887"}}, "outputs": {"outputsam": {"id": "0b28ca88904ce480", "src": "hda", "uuid": "df89697f-df90-4fa2-9ff9-57bdea2d5fa7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:56:19", "plugin": "core", "name": "end_epoch", "raw_value": "1728896179.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:56:19", "plugin": "core", "name": "start_epoch", "raw_value": "1728896179.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-21", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 21, "time_seconds": 32.13392996788025, "inputs": {"input": {"src": "hda", "id": "dd8c673aee2aad76"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "5d12c124dae51d7d", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:56:50.686670", "update_time": "2024-10-14T08:57:03.254860", "galaxy_version": "24.1", "external_id": "gxy-gxtw9", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/4/a/c/dataset_4ac9d4e1-eabd-4217-8cc8-bc33138e509e.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/20; print(frac > 1 ? 1872+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "dd8c673aee2aad76", "src": "hda", "uuid": "4ac9d4e1-eabd-4217-8cc8-bc33138e509e"}}, "outputs": {"outputsam": {"id": "33f4a6669ebb83a8", "src": "hda", "uuid": "93eeb583-5ffb-4d4c-a2ad-8a59b5f127d2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:56:52", "plugin": "core", "name": "end_epoch", "raw_value": "1728896212.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:56:52", "plugin": "core", "name": "start_epoch", "raw_value": "1728896212.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-22", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 22, "time_seconds": 30.27116560935974, "inputs": {"input": {"src": "hda", "id": "5a4a75ed166b151c"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "cadd3efe4488c4a2", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:57:21.810766", "update_time": "2024-10-14T08:57:33.439266", "galaxy_version": "24.1", "external_id": "gxy-klcfx", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/9/8/1/dataset_981aaa8c-824a-400c-8f4f-32e498e43aca.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/20; print(frac > 1 ? 8031+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "5a4a75ed166b151c", "src": "hda", "uuid": "981aaa8c-824a-400c-8f4f-32e498e43aca"}}, "outputs": {"outputsam": {"id": "6572011f42671904", "src": "hda", "uuid": "48b506d6-3bc3-41d2-9cdb-d9f12294ffc8"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:57:23", "plugin": "core", "name": "end_epoch", "raw_value": "1728896243.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:57:23", "plugin": "core", "name": "start_epoch", "raw_value": "1728896243.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (no_reads.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-23", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 23, "time_seconds": 32.18847179412842, "inputs": {"input": {"src": "hda", "id": "ef4a335c1e858aa1"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "ad9c19c0bccec021", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:57:52.960075", "update_time": "2024-10-14T08:58:05.997444", "galaxy_version": "24.1", "external_id": "gxy-nc24l", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/8/2/7/dataset_82763dc7-7220-4886-bae3-7adc117ae3f9.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/6/c/8/metadata_6c89d97b-c3e0-4d27-b107-46f63fac5baf.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/20; print(frac > 1 ? 28080+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "ef4a335c1e858aa1", "src": "hda", "uuid": "82763dc7-7220-4886-bae3-7adc117ae3f9"}}, "outputs": {"outputsam": {"id": "b422b476ad2e6a18", "src": "hda", "uuid": "a4d607b5-d925-46bd-bcc0-7be4e4f01c70"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:57:55", "plugin": "core", "name": "end_epoch", "raw_value": "1728896275.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:57:55", "plugin": "core", "name": "start_epoch", "raw_value": "1728896275.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (no_reads.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-24", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 24, "time_seconds": 32.55360722541809, "inputs": {"input": {"src": "hda", "id": "689e4a566bfa6c3c"}, "mode|subsample_config|subsampling_mode|target": "2", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "565475939013d26a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:58:25.671504", "update_time": "2024-10-14T08:58:38.368328", "galaxy_version": "24.1", "external_id": "gxy-8g9b6", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/9/a/1/dataset_9a1453cd-1bb6-485b-ac12-f815f95cc859.dat' infile &&         sample_fragment=`samtools view -c  infile  | awk '{s=$1} END {frac=s/2; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -h    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"sam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"2\"}}}"}, "inputs": {"input": {"id": "689e4a566bfa6c3c", "src": "hda", "uuid": "9a1453cd-1bb6-485b-ac12-f815f95cc859"}}, "outputs": {"outputsam": {"id": "002a71516db1f7f6", "src": "hda", "uuid": "b32da38c-e1df-4d40-b72a-ba3c184ede33"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:58:27", "plugin": "core", "name": "end_epoch", "raw_value": "1728896307.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:58:27", "plugin": "core", "name": "start_epoch", "raw_value": "1728896307.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.sam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-25", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 25, "time_seconds": 11.716219902038574, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "samtools_view/1.9+galaxy3-26", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 26, "time_seconds": 31.441619157791138, "inputs": {"input": {"src": "hda", "id": "29e5445e0b097ee0"}, "mode|subsample_config|subsampling_mode|target": "20", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "target", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "4868ad341a8df528", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:59:09.438458", "update_time": "2024-10-14T08:59:21.922722", "galaxy_version": "24.1", "external_id": "gxy-6bznm", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/5/f/4/dataset_5f4a98a5-39c4-4ac8-b642-c83cc4dff894.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/5/f/5/metadata_5f512021-909f-4eb9-bd6e-417240e4833a.dat' infile.bai &&         sample_fragment=`samtools idxstats infile | awk '{s+=$4+$3} END {frac=s/20; print(frac > 1 ? 7+1/frac : \".0\")}'` &&  samtools view -@ $addthreads -b    -s ${sample_fragment}   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 1, \"seed\": \"7\", \"select_subsample\": \"target\", \"target\": \"20\"}}}"}, "inputs": {"input": {"id": "29e5445e0b097ee0", "src": "hda", "uuid": "5f4a98a5-39c4-4ac8-b642-c83cc4dff894"}}, "outputs": {"outputsam": {"id": "e55fe5e69ba8d3c2", "src": "hda", "uuid": "1151f6c5-3ccc-4011-a92d-f6f4674198ee"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:59:11", "plugin": "core", "name": "end_epoch", "raw_value": "1728896351.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:59:11", "plugin": "core", "name": "start_epoch", "raw_value": "1728896351.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-27", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 27, "time_seconds": 31.064964056015015, "inputs": {"input": {"src": "hda", "id": "449546b90b839f77"}, "mode|subsample_config|subsampling_mode|factor": "5", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "fraction", "mode|output_options|output_format|oformat": "input", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "6e71a22bfe5d371a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:59:41.763096", "update_time": "2024-10-14T08:59:53.278348", "galaxy_version": "24.1", "external_id": "gxy-xvm4h", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/5/a/1/dataset_5a1a1a9b-7461-4239-b7ae-b4c230cb1c24.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/5/b/9/metadata_5b99fcdb-88ad-45b7-b208-90fe4b5125cc.dat' infile.bai &&          samtools view -@ $addthreads -b    -s 7.2   -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"5.0\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "449546b90b839f77", "src": "hda", "uuid": "5a1a1a9b-7461-4239-b7ae-b4c230cb1c24"}}, "outputs": {"outputsam": {"id": "d75ecec2e1bdb737", "src": "hda", "uuid": "9f385db5-5e35-4748-a8d1-71090e41d973"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:59:43", "plugin": "core", "name": "end_epoch", "raw_value": "1728896383.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:59:43", "plugin": "core", "name": "start_epoch", "raw_value": "1728896383.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-28", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 28, "time_seconds": 32.57358431816101, "inputs": {"input": {"src": "hda", "id": "b24d00ae4c57ee5f"}, "mode|subsample_config|subsampling_mode|factor": "1.25", "mode|subsample_config|subsampling_mode|seed": "7", "mode|subsample_config|subsampling_mode|select_subsample": "fraction", "mode|output_options|output_format|oformat": "input", "mode|output_options|reads_report_type": "dropped", "mode|outtype": "selected_reads"}, "job": {"model_class": "Job", "id": "6155260d143bb1ee", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:00:12.946922", "update_time": "2024-10-14T09:00:25.666267", "galaxy_version": "24.1", "external_id": "gxy-ngq66", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/8/3/d/dataset_83d73a4b-09f9-4108-8169-fff2da2a3b7d.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/c/8/2/metadata_c8237c71-b66a-45b7-a6dc-3ef39b11e535.dat' infile.bai &&          samtools view -@ $addthreads -b    -s 7.8   -U outfile -o /dev/null      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 1, \"filter_config\": {\"cigarcons\": \"\", \"cond_region\": {\"__current_case__\": 0, \"select_region\": \"no\"}, \"cond_rg\": {\"__current_case__\": 0, \"select_rg\": \"no\"}, \"exclusive_filter\": null, \"exclusive_filter_all\": null, \"inclusive_filter\": null, \"library\": null, \"quality\": \"\"}, \"output_options\": {\"__current_case__\": 1, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"complementary_output\": false, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"dropped\"}, \"outtype\": \"selected_reads\", \"subsample_config\": {\"subsampling_mode\": {\"__current_case__\": 0, \"factor\": \"1.25\", \"seed\": \"7\", \"select_subsample\": \"fraction\"}}}"}, "inputs": {"input": {"id": "b24d00ae4c57ee5f", "src": "hda", "uuid": "83d73a4b-09f9-4108-8169-fff2da2a3b7d"}}, "outputs": {"outputsam": {"id": "995ce9753f7b0364", "src": "hda", "uuid": "e7aa4692-1d5e-4c29-a059-dd5784d450f1"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:00:14", "plugin": "core", "name": "end_epoch", "raw_value": "1728896414.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:00:14", "plugin": "core", "name": "start_epoch", "raw_value": "1728896414.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (test_ds.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-3", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 3, "time_seconds": 24.355663061141968, "inputs": {"input": {"src": "hda", "id": "df79cbad3483054b"}, "addref_cond|ref": {"src": "hda", "id": "c212c62a87db4fd2"}, "addref_cond|addref_select": "history"}, "job": {"model_class": "Job", "id": "d9bcdeab1294863f", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "error", "exit_code": null, "create_time": "2024-10-14T08:47:56.104820", "update_time": "2024-10-14T08:48:00.780633", "galaxy_version": "24.1", "external_id": "gxy-n2797", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&   ln -s '/galaxy/server/database/objects/9/9/f/dataset_99f7749e-7d3a-4ad9-9782-03fd5a28339b.dat' reference.fa && samtools faidx reference.fa &&   ln -s '/galaxy/server/database/objects/b/3/0/dataset_b3035da2-5f92-4c49-afea-1e4429e7a3a2.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/6/b/e/metadata_6be071b4-5ec6-4586-b440-89fc0a73c2d4.dat' infile.crai &&        samtools view -@ $addthreads -b      -o outfile    -T 'reference.fa' -t 'reference.fa.fai'   infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"cram\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 1, \"addref_select\": \"history\", \"ref\": {\"values\": [{\"id\": 551, \"src\": \"hda\"}]}}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "df79cbad3483054b", "src": "hda", "uuid": "b3035da2-5f92-4c49-afea-1e4429e7a3a2"}, "addref_cond|ref": {"id": "c212c62a87db4fd2", "src": "hda", "uuid": "99f7749e-7d3a-4ad9-9782-03fd5a28339b"}}, "outputs": {"outputsam": {"id": "282506f0b3bd29a4", "src": "hda", "uuid": "ee16bfe6-66cb-411d-a967-10b0cfe73dba"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-4", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 4, "time_seconds": 36.39955234527588, "inputs": {"input": {"src": "hda", "id": "21e0274e60518656"}}, "job": {"model_class": "Job", "id": "4bc0fda0db243856", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:48:25.433160", "update_time": "2024-10-14T08:48:37.172158", "galaxy_version": "24.1", "external_id": "gxy-nrt2c", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/7/e/a/dataset_7ea01c76-5b67-4f5b-8c4a-d619b284bbcc.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/c/5/b/metadata_c5b77c66-76cc-4a8a-bdde-96dd9d593037.dat' infile.bai &&        samtools view -@ $addthreads -b      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "21e0274e60518656", "src": "hda", "uuid": "7ea01c76-5b67-4f5b-8c4a-d619b284bbcc"}}, "outputs": {"outputsam": {"id": "604c64c2ac5a8887", "src": "hda", "uuid": "90ccc368-1725-459c-b8a3-aa93b8ea25d2"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:48:27", "plugin": "core", "name": "end_epoch", "raw_value": "1728895707.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:48:27", "plugin": "core", "name": "start_epoch", "raw_value": "1728895707.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-5", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 5, "time_seconds": 32.054383993148804, "inputs": {"input": {"src": "hda", "id": "67fbf2717abaa27a"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "ce39520f41faab0c", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:48:56.875077", "update_time": "2024-10-14T08:49:09.470342", "galaxy_version": "24.1", "external_id": "gxy-mpz77", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/3/9/f/dataset_39f16902-5689-47b2-b3f1-c7cb78823590.dat' infile && ln -s '/galaxy/server/database/objects/_metadata_files/9/e/1/metadata_9e1637b4-5abb-4b25-ba1e-68135b503d4f.dat' infile.bai &&        samtools view -@ $addthreads -b      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "67fbf2717abaa27a", "src": "hda", "uuid": "39f16902-5689-47b2-b3f1-c7cb78823590"}}, "outputs": {"outputsam": {"id": "164a646ad6fcbcfa", "src": "hda", "uuid": "9b4863e9-8db9-4962-9186-46e5dcff5f36"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 08:48:59", "plugin": "core", "name": "end_epoch", "raw_value": "1728895739.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:48:58", "plugin": "core", "name": "start_epoch", "raw_value": "1728895738.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-6", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 6, "time_seconds": 30.254416704177856, "inputs": {"input": {"src": "hda", "id": "2cfb2cc11b9ca00f"}}, "job": {"model_class": "Job", "id": "637977b1ac987b88", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:49:27.918578", "update_time": "2024-10-14T08:49:39.811694", "galaxy_version": "24.1", "external_id": "gxy-jjf59", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/0/8/0/dataset_080b10c0-6498-4891-abd9-447f64a2c778.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"qname_sorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "2cfb2cc11b9ca00f", "src": "hda", "uuid": "080b10c0-6498-4891-abd9-447f64a2c778"}}, "outputs": {"outputsam": {"id": "4b9138938079cb63", "src": "hda", "uuid": "39af2d72-f5ef-4c8b-9b57-8dda3dfcc903"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:49:29", "plugin": "core", "name": "end_epoch", "raw_value": "1728895769.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:49:29", "plugin": "core", "name": "start_epoch", "raw_value": "1728895769.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-7", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 7, "time_seconds": 23.81677556037903, "inputs": {"input": {"src": "hda", "id": "7fb830647834c03e"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "b30306ca47c34d28", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "error", "exit_code": null, "create_time": "2024-10-14T08:49:58.345951", "update_time": "2024-10-14T08:50:03.453458", "galaxy_version": "24.1", "external_id": "gxy-rwl7j", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/2/a/c/dataset_2ac321e8-89a5-4f93-82cd-51cd7914e3ac.dat' infile &&        samtools view -@ $addthreads -h      -o outfile      infile", "user_email": "tests@fake.org", "command_version": null, "params": {"__input_ext": "\"qname_sorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "7fb830647834c03e", "src": "hda", "uuid": "2ac321e8-89a5-4f93-82cd-51cd7914e3ac"}}, "outputs": {"outputsam": {"id": "c16420b381223c97", "src": "hda", "uuid": "b08dc396-5085-4b27-84e8-731f90feee7f"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stdout": "", "stderr": "", "job_messages": null, "dependencies": [], "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-8", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 8, "time_seconds": 29.85860013961792, "inputs": {"input": {"src": "hda", "id": "7c19539145ea57f5"}}, "job": {"model_class": "Job", "id": "363eb8024485fbff", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:50:21.883084", "update_time": "2024-10-14T08:50:33.461116", "galaxy_version": "24.1", "external_id": "gxy-vjx4t", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/b/0/e/dataset_b0e8db69-01b8-40e9-90c1-4c3e03141a66.dat' infile &&        samtools view -@ $addthreads -b      -o outfile      infile    && samtools sort -@ $addthreads -m $addmemory\"M\" -T \"${TMPDIR:-.}\" -O bam -o tmpsam outfile && mv tmpsam outfile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"unsorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 2, \"oformat\": \"bam\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "7c19539145ea57f5", "src": "hda", "uuid": "b0e8db69-01b8-40e9-90c1-4c3e03141a66"}}, "outputs": {"outputsam": {"id": "f3b9dcda2b45662b", "src": "hda", "uuid": "56ce2bdf-ea7c-4b4d-9ab3-a948b86027f4"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:50:23", "plugin": "core", "name": "end_epoch", "raw_value": "1728895823.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:50:23", "plugin": "core", "name": "start_epoch", "raw_value": "1728895823.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "samtools_view/1.9+galaxy3-9", "has_data": true, "data": {"tool_id": "samtools_view", "tool_version": "1.9+galaxy3", "test_index": 9, "time_seconds": 32.165042877197266, "inputs": {"input": {"src": "hda", "id": "bc3666395531b2d3"}, "mode|output_options|output_format|oformat": "input"}, "job": {"model_class": "Job", "id": "a0bdda77a3293958", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/samtools_view/samtools_view/1.9+galaxy3", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T08:50:53.044952", "update_time": "2024-10-14T08:51:06.030600", "galaxy_version": "24.1", "external_id": "gxy-74vlr", "handler": null, "job_runner_name": null, "command_line": "addthreads=${GALAXY_SLOTS:-1} && (( addthreads-- )) &&   addmemory=${GALAXY_MEMORY_MB_PER_SLOT:-768} && ((addmemory=addmemory*75/100)) &&     ln -s '/galaxy/server/database/objects/2/d/c/dataset_2dc7d45e-d100-48a8-8a37-821fe55ae26e.dat' infile &&        samtools view -@ $addthreads -h      -o outfile      infile", "user_email": "tests@fake.org", "command_version": "Version: 1.9 (using htslib 1.9)", "params": {"__input_ext": "\"unsorted.bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "addref_cond": "{\"__current_case__\": 0, \"addref_select\": \"no\"}", "mode": "{\"__current_case__\": 0, \"output_options\": {\"__current_case__\": 0, \"adv_output\": {\"collapsecigar\": false, \"readtags\": []}, \"output_format\": {\"__current_case__\": 0, \"oformat\": \"input\"}, \"reads_report_type\": \"retained\"}, \"outtype\": \"all_reads\"}"}, "inputs": {"input": {"id": "bc3666395531b2d3", "src": "hda", "uuid": "2dc7d45e-d100-48a8-8a37-821fe55ae26e"}}, "outputs": {"outputsam": {"id": "794d9cd149b3d581", "src": "hda", "uuid": "4ca98510-093d-4327-8668-7f9b72c5229e"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 08:50:55", "plugin": "core", "name": "end_epoch", "raw_value": "1728895855.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 08:50:55", "plugin": "core", "name": "start_epoch", "raw_value": "1728895855.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output outputsam: Test output file (1_sort_read_names.bam) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "scanpy_plot_embed/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "scanpy_plot_embed", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.34963202476501465, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "scanpy_plot_embed/1.9.3+galaxy0-0", "has_data": true, "data": {"tool_id": "scanpy_plot_embed", "tool_version": "1.9.3+galaxy0", "test_index": 0, "time_seconds": 0.347942590713501, "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error"}}, {"id": "scater_normalize/1.12.2-0", "has_data": true, "data": {"tool_id": "scater_normalize", "tool_version": "1.12.2", "test_index": 0, "time_seconds": 64.53780484199524, "inputs": {"input_loom": {"src": "hda", "id": "c1575539e68438b6"}}, "job": {"model_class": "Job", "id": "3fe0ac5996f68118", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/scater_normalize/1.12.2", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:01:26.040009", "update_time": "2024-10-14T09:02:10.049268", "galaxy_version": "24.1", "external_id": "gxy-mtx87", "handler": null, "job_runner_name": null, "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/946179ef029c/scater_normalize/scater-normalize.R' -i '/galaxy/server/database/objects/7/c/7/dataset_7c74072d-4332-4d23-841f-74206f112cf0.dat' -o '/galaxy/server/database/objects/b/b/5/dataset_bb5a6b85-aa88-4122-b694-0c7c1e8d5aab.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"loom\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input_loom": {"id": "c1575539e68438b6", "src": "hda", "uuid": "7c74072d-4332-4d23-841f-74206f112cf0"}}, "outputs": {"output_loom": {"id": "869a4ee58d4c629e", "src": "hda", "uuid": "bb5a6b85-aa88-4122-b694-0c7c1e8d5aab"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "[1] \"Normalising....\"\n[1] \"Finished normalising\"\n[1] TRUE\n", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\nLoading required package: rhdf5\nLoading required package: rtracklayer\nLoading required package: ggplot2\n\nAttaching package: 'scater'\n\nThe following object is masked from 'package:S4Vectors':\n\n    rename\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nWarning message:\nIn .local(object, ...) : using library sizes as size factors\n", "job_stdout": "", "job_stderr": "", "stdout": "[1] \"Normalising....\"\n[1] \"Finished normalising\"\n[1] TRUE\n", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\nLoading required package: parallel\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:parallel':\n\n    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    clusterExport, clusterMap, parApply, parCapply, parLapply,\n    parLapplyLB, parRapply, parSapply, parSapplyLB\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    Filter, Find, Map, Position, Reduce, anyDuplicated, append,\n    as.data.frame, basename, cbind, colnames, dirname, do.call,\n    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,\n    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,\n    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,\n    tapply, union, unique, unsplit, which, which.max, which.min\n\n\nAttaching package: 'S4Vectors'\n\nThe following object is masked from 'package:base':\n\n    expand.grid\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nLoading required package: DelayedArray\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\nLoading required package: BiocParallel\n\nAttaching package: 'DelayedArray'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges\n\nThe following objects are masked from 'package:base':\n\n    aperm, apply, rowsum\n\nLoading required package: rhdf5\nLoading required package: rtracklayer\nLoading required package: ggplot2\n\nAttaching package: 'scater'\n\nThe following object is masked from 'package:S4Vectors':\n\n    rename\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nWarning message:\nIn .local(object, ...) : using library sizes as size factors\n", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "10 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "10.0000000"}, {"title": "Job End Time", "value": "2024-10-14 09:01:53", "plugin": "core", "name": "end_epoch", "raw_value": "1728896513.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:01:43", "plugin": "core", "name": "start_epoch", "raw_value": "1728896503.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-0", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 0, "time_seconds": 208.5733208656311, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "0ef228bbda99821b"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "007325b744780688"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "5ebaf51d5e4b2114", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:28:53.505069", "update_time": "2024-10-14T06:31:55.526211", "galaxy_version": "24.1", "external_id": "gxy-5pr2h", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/5/d/c/dataset_5dc9b90a-bf2b-4ade-b4f3-710ae96b4810.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/f/b/8/dataset_fb88c149-3cc0-4b0e-99be-916c21b812d5.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"0\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "long": null, "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"paired_unpaired|fastq_input2": {"id": "007325b744780688", "src": "hda", "uuid": "fb88c149-3cc0-4b0e-99be-916c21b812d5"}, "paired_unpaired|fastq_input1": {"id": "0ef228bbda99821b", "src": "hda", "uuid": "5dc9b90a-bf2b-4ade-b4f3-710ae96b4810"}}, "outputs": {"assembly": {"id": "df0b36f8c34d2c20", "src": "hda", "uuid": "f08d0f27-d35f-4e08-8a0f-099a236c7590"}, "assembly_graph": {"id": "5ebaf51d5e4b2114", "src": "hda", "uuid": "733452ad-2daf-49de-9160-97ef9b8fda7d"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-10-14 06:29:31)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/3/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:29:31)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:29:32)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.074    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.077    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.089    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.090    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.096    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.132     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.145     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.145     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.145     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.145     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.146     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.146     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.146     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.895     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.898     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.103     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.103     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.137     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.137     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.138     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.138     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.138     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.843  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.843  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.843     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.064     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.064     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.109     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.109     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.263     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.273     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.290     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.294     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.296     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.298     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.301     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.301     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.301     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.301     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.301     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.305     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.305     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.334     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.335     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.401     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.403     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.467     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.565     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.859     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.373     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.849     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.672     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.672     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.673     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.673     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.673     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.673     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: early_gap\n..\n        : 292)   SPAdes finished\n  0:00:04.377     1M / 160M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:31:35)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:31:35)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:31:35)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:31:35)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:31:35)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-10-14 06:31:35)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:31:35)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:31:35)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:31:35)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:31:44)\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-10-14 06:29:31)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/3/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:29:31)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:29:32)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/3/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/3/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/3/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/3/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/3/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/3/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.074    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.077    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.089    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.090    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.096    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.132     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.145     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.145     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.145     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.145     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.146     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.146     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.146     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.895     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.898     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.103     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.103     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.137     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.137     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.138     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.138     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.138     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.843  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.843  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.843     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.064     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.064     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.109     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.109     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.263     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.273     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.290     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.294     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.296     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.298     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.301     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.301     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.301     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.301     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.301     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.303     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.305     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.305     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.334     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.335     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.401     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.403     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.467     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.467     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.565     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.859     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.373     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.849     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.672     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.672     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.673     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.673     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.673     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.673     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.673     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: early_gap\n..\n        : 292)   SPAdes finished\n  0:00:04.377     1M / 160M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:31:35)\nFilter by read depth        (2024-10-14 06:31:35)\nFilter homopolymer loops    (2024-10-14 06:31:35)\nMerge all possible          (2024-10-14 06:31:35)\nNormalise read depths       (2024-10-14 06:31:35)\nRemove zero length segments (2024-10-14 06:31:35)\nSort link order             (2024-10-14 06:31:35)\nGraph cleaning finished     (2024-10-14 06:31:35)\nSaving /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:31:35)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/3/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:31:35)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:31:35)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:31:35)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:31:35)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-10-14 06:31:35)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:31:35)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:31:35)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:31:35)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:31:44)\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/3/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "133.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:31:44", "plugin": "core", "name": "end_epoch", "raw_value": "1728887504.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:29:31", "plugin": "core", "name": "start_epoch", "raw_value": "1728887371.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-1", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 1, "time_seconds": 174.07043361663818, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "21ba2aa2eb613c41"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "183375d7bfa3b417"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "529211bf2f189fcc"}, "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "529211bf2f189fcc", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:32:26.068752", "update_time": "2024-10-14T06:34:49.654030", "galaxy_version": "24.1", "external_id": "gxy-jvj49", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/5/e/dataset_45ef0285-4d70-44e1-9387-4b615f5a348f.dat' fq1.fastq.gz && ln -s '/galaxy/server/database/objects/0/5/5/dataset_055e9fee-f3f3-41b0-a788-3854a6a30ee2.dat' fq2.fastq.gz && ln -s '/galaxy/server/database/objects/4/b/d/dataset_4bdab97b-5fa3-4c4a-8a4d-2a7b19e3a217.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq.gz' -2 'fq2.fastq.gz' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 5, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 6, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "529211bf2f189fcc", "src": "hda", "uuid": "4bdab97b-5fa3-4c4a-8a4d-2a7b19e3a217"}, "paired_unpaired|fastq_input2": {"id": "183375d7bfa3b417", "src": "hda", "uuid": "055e9fee-f3f3-41b0-a788-3854a6a30ee2"}, "paired_unpaired|fastq_input1": {"id": "21ba2aa2eb613c41", "src": "hda", "uuid": "45ef0285-4d70-44e1-9387-4b615f5a348f"}}, "outputs": {"assembly": {"id": "be699bbc74739a1f", "src": "hda", "uuid": "b1af9ba1-07bd-4bbb-9d0d-969abb30f404"}, "assembly_graph": {"id": "3a88e5694d42c29c", "src": "hda", "uuid": "5462f5f7-f58a-4fd1-8d54-469b3e1c5dc7"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-10-14 06:32:27)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq.gz -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:32:28)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:32:28)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.072    82M / 82M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.075    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.088    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.089    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.097    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.135     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.149     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.149     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.149     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.149     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.150     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.882     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.884     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.089     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.089     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.121     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.121     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.122     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.123     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.123     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.833  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.833  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.834     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.035     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.035     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.072     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.073     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.221     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.232     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.246     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.249     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.251     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.253     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.256     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.256     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.257     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.257     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.257     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.260     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.260     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.288     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.289     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.353     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.354     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.402     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.499     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.791     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.311     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.775     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.561     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.561     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.563     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.563     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.563     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.563     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\n34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:34:30)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:34:30)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:34:30)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:34:30)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:34:30)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-10-14 06:34:30)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:34:30)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-10-14 06:34:30)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-10-14 06:34:30)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-10-14 06:34:30)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-10-14 06:34:30)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-10-14 06:34:30)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-10-14 06:34:30)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-10-14 06:34:30)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:34:30)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:34:30)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:34:30)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:34:39)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-10-14 06:32:27)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq.gz -2 fq2.fastq.gz -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/7/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:32:28)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:32:28)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/7/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz -2 /galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz']\n      right reads: ['/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/7/working/fq1.fastq.gz: max reads length: 251\n/galaxy/server/database/jobs_directory/000/7/working/fq2.fastq.gz: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/7/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.000     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.072    82M / 82M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.075    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.088    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.089    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.097    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.135     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.149     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.149     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.149     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.149     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.150     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.150     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.882     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.884     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.089     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.089     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.121     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.121     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.122     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.123     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.123     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.833  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.833  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.834     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:02.035     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:02.035     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.072     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:02.073     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.221     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.232     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.246     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.249     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.251     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.253     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.256     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.256     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.257     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.257     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.257     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.258     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.260     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.260     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.288     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.289     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.353     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.354     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.402     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.403     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.499     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.791     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.311     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.775     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.561     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.561     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.563     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.563     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.563     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.563     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.563     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Clo\n..\n34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:34:30)\nFilter by read depth        (2024-10-14 06:34:30)\nFilter homopolymer loops    (2024-10-14 06:34:30)\nMerge all possible          (2024-10-14 06:34:30)\nNormalise read depths       (2024-10-14 06:34:30)\nRemove zero length segments (2024-10-14 06:34:30)\nSort link order             (2024-10-14 06:34:30)\nGraph cleaning finished     (2024-10-14 06:34:30)\nSaving /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:34:30)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/7/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:34:30)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:34:30)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:34:30)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:34:30)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-10-14 06:34:30)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:34:30)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/7/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-10-14 06:34:30)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/7/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-10-14 06:34:30)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-10-14 06:34:30)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-10-14 06:34:30)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.056 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-10-14 06:34:30)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/7/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-10-14 06:34:30)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-10-14 06:34:30)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:34:30)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:34:30)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:34:30)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:34:39)\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/7/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "132.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:34:39", "plugin": "core", "name": "end_epoch", "raw_value": "1728887679.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:32:27", "plugin": "core", "name": "start_epoch", "raw_value": "1728887547.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-2", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 2, "time_seconds": 159.58067536354065, "inputs": {"paired_unpaired|fastq_input1": {"src": "hdca", "id": "0ef228bbda99821b"}, "paired_unpaired|fastq_input_selector": "paired_collection", "mode": "normal", "min_fasta_length": "100", "linear_seqs": "0", "spades|min_kmer_frac": "0.2", "spades|max_kmer_frac": "0.95", "spades|kmer_count": "10", "spades|depth_filter": "0.25", "rotation|no_rotate": false, "rotation|start_gene_id": "90", "rotation|start_gene_cov": "95", "graph_clean|min_component_size": "1000", "graph_clean|min_dead_end_size": "1000", "lr_align|scores": "3,-6,-5,-2", "keep": "0"}, "job": {"model_class": "Job", "id": "c3df636fee09c514", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:35:11.049981", "update_time": "2024-10-14T06:37:29.472704", "galaxy_version": "24.1", "external_id": "gxy-pm57n", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/4/a/e/dataset_4ae01549-8972-4639-a6ec-59405e0c8077.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/8/e/5/dataset_8e5f7df2-3117-4308-a879-663566f6bd44.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 1, \"fastq_input1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"fastq_input_selector\": \"paired_collection\"}", "long": null, "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"paired_unpaired|fastq_input12": {"id": "c7f5fec6865b3688", "src": "hda", "uuid": "8e5f7df2-3117-4308-a879-663566f6bd44"}, "paired_unpaired|fastq_input11": {"id": "c3df636fee09c514", "src": "hda", "uuid": "4ae01549-8972-4639-a6ec-59405e0c8077"}}, "outputs": {"assembly": {"id": "30a201a7378f38fe", "src": "hda", "uuid": "ab46bfbf-0d5e-4104-9274-fe39540addba"}, "assembly_graph": {"id": "bbc1688255f3c54a", "src": "hda", "uuid": "7366cc50-ff27-452b-8afc-018fbf58d6cc"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-10-14 06:35:13)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:35:13)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:35:13)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.065    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.067    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.081    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.082    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.088    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.118     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.130     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.131     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.131     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.131     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.132     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.796     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.799     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:00.967     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:00.967     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.000     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.000     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.001     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.001     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.001     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.623  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.623  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.623     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.817     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.817     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.855     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.855     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:01.974     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:01.985     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.000     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.002     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.005     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.007     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.010     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.011     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.011     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.011     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.011     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.012     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.014     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.014     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.040     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.041     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.106     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.107     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.151     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.249     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.543     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.062     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.523     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.311     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.311     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.312     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.313     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.313     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.313     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Cl\n..\n / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:37:11)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:37:11)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:37:11)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:37:11)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:37:11)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-10-14 06:37:11)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:37:11)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:37:11)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:37:11)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:37:19)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-10-14 06:35:13)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/10/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:35:13)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:35:13)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/10/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/10/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/10/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/10/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/10/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/10/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.065    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.067    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.081    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.082    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.088    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.118     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.130     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.131     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.131     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.131     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.132     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.796     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.799     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:00.967     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:00.967     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.000     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.000     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.001     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.001     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.001     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.623  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.623  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.623     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.817     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.817     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.855     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.855     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:01.974     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:01.985     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.000     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.002     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.005     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.007     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.010     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.011     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.011     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.011     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.011     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.012     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.013     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.014     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.014     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.040     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.041     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.106     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.107     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.151     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.151     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.249     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.543     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.062     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.523     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.311     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.311     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.312     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.312     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.313     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.313     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.313     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Cl\n..\n / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:37:11)\nFilter by read depth        (2024-10-14 06:37:11)\nFilter homopolymer loops    (2024-10-14 06:37:11)\nMerge all possible          (2024-10-14 06:37:11)\nNormalise read depths       (2024-10-14 06:37:11)\nRemove zero length segments (2024-10-14 06:37:11)\nSort link order             (2024-10-14 06:37:11)\nGraph cleaning finished     (2024-10-14 06:37:11)\nSaving /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:37:11)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/10/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:37:11)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:37:11)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:37:11)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:37:11)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-10-14 06:37:11)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:37:11)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:37:11)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:37:11)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:37:19)\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/10/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "126.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:37:19", "plugin": "core", "name": "end_epoch", "raw_value": "1728887839.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:35:13", "plugin": "core", "name": "start_epoch", "raw_value": "1728887713.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-3", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 3, "time_seconds": 33.233829498291016, "inputs": {"paired_unpaired|fastq_input_selector": "none", "long": {"src": "hda", "id": "11d25db356339d2a"}, "min_anchor_seg_len": "10", "spades|kmers": "21,23", "keep": "0"}, "job": {"model_class": "Job", "id": "bbc1688255f3c54a", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:37:49.143050", "update_time": "2024-10-14T06:38:02.713471", "galaxy_version": "24.1", "external_id": "gxy-jrcfd", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/1/3/f/dataset_13f8ec58-0008-41c5-a07e-8b125472adb0.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_anchor_seg_len '10' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmers '21,23' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"0\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"21,23\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"10\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "paired_unpaired": "{\"__current_case__\": 3, \"fastq_input_selector\": \"none\"}"}, "inputs": {"long": {"id": "11d25db356339d2a", "src": "hda", "uuid": "13f8ec58-0008-41c5-a07e-8b125472adb0"}}, "outputs": {"assembly": {"id": "9ae595e7ab9876e7", "src": "hda", "uuid": "52bb1bc9-f6f1-42b0-97e5-52a91e9c4e8c"}, "assembly_graph": {"id": "e19ace934509ece2", "src": "hda", "uuid": "7b78d92c-e095-48b2-a97e-342dc5f66312"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-10-14 06:37:50)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py               not used                             \n  racon         1.5.0     good       /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nLoading reads (2024-10-14 06:37:51)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:37:51)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2024-10-14 06:37:51)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\n\n\nAssembly complete (2024-10-14 06:37:51)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-10-14 06:37:50)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only long reads, Unicycler will assemble the reads with miniasm and\nthen run repeated polishing rounds using Racon.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_anchor_seg_len 10 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmers 21,23 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/12/working\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py               not used                             \n  racon         1.5.0     good       /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nLoading reads (2024-10-14 06:37:51)\n\r0 / 40 (0.0%)\r1 / 40 (2.5%) - 412 bp\r2 / 40 (5.0%) - 4,847 bp\r3 / 40 (7.5%) - 8,974 bp\r4 / 40 (10.0%) - 13,249 bp\r5 / 40 (12.5%) - 14,258 bp\r6 / 40 (15.0%) - 14,806 bp\r7 / 40 (17.5%) - 19,262 bp\r8 / 40 (20.0%) - 19,737 bp\r9 / 40 (22.5%) - 20,395 bp\r10 / 40 (25.0%) - 32,024 bp\r11 / 40 (27.5%) - 32,698 bp\r12 / 40 (30.0%) - 34,509 bp\r13 / 40 (32.5%) - 39,018 bp\r14 / 40 (35.0%) - 43,351 bp\r15 / 40 (37.5%) - 44,224 bp\r16 / 40 (40.0%) - 45,978 bp\r17 / 40 (42.5%) - 46,402 bp\r18 / 40 (45.0%) - 61,596 bp\r19 / 40 (47.5%) - 62,279 bp\r20 / 40 (50.0%) - 63,700 bp\r21 / 40 (52.5%) - 66,412 bp\r22 / 40 (55.0%) - 66,845 bp\r23 / 40 (57.5%) - 67,316 bp\r24 / 40 (60.0%) - 69,428 bp\r25 / 40 (62.5%) - 73,964 bp\r26 / 40 (65.0%) - 75,608 bp\r27 / 40 (67.5%) - 80,223 bp\r28 / 40 (70.0%) - 84,810 bp\r29 / 40 (72.5%) - 92,076 bp\r30 / 40 (75.0%) - 92,832 bp\r31 / 40 (77.5%) - 92,939 bp\r32 / 40 (80.0%) - 93,532 bp\r33 / 40 (82.5%) - 96,370 bp\r34 / 40 (85.0%) - 100,656 bp\r35 / 40 (87.5%) - 119,222 bp\r36 / 40 (90.0%) - 123,827 bp\r37 / 40 (92.5%) - 155,106 bp\r38 / 40 (95.0%) - 156,254 bp\r39 / 40 (97.5%) - 157,993 bp\r40 / 40 (100.0%) - 162,406 bp\r40 / 40 (100.0%) - 162,406 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:37:51)\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/01_assembly_reads.fastq:\n  40 long reads\n\nFinding overlaps with minimap... success\n  120 overlaps\n\nAssembling reads with miniasm... success\n  7 segments, 6 links\n\n    Unicycler removes any links from the string graph which create branches.\nI.e. if any segment has two or more links connected to one end, those links are\nremoved. This will result in a graph with only simple linear paths that is\nsuitable for creating unambiguous bridges.\n\nNo links needed removal\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/11_branching_paths_removed.gfa\nMerging segments into unitigs:\n\nLinear unitig: 3708:125-4288- -> f49b:293-4469+ -> 9e6d:143-4411- -> 9780:142-4271- -> a53e:333-4400+ -> b949:140-4359- -> 054c:932-4389-\n\n  1 linear unitig\n  total size = 5,836 bp\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/12_unitig_graph.gfa\n\n\nPolishing miniasm assembly with Racon (2024-10-14 06:37:51)\n    Unicycler now uses Racon to polish the miniasm assembly. It does multiple\nrounds of polishing to get the best consensus. Circular unitigs are rotated\nbetween rounds such that all parts (including the ends) are polished well.\n\nSaving to /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/polishing_reads.fastq:\n  40 long reads\n\nPolish       Assembly          Mapping\nround            size          quality\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t210\t4010\t+\t1\t5836\t1061\t4603\t1147\t3800\t255\tcm:i:200\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t5836\t5221\t5833\t179\t612\t255\tcm:i:27\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t5836\t2376\t5833\t3457\t3457\t255\tcm:i:1153\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2525\t-\t1\t5836\t30\t2314\t787\t2399\t255\tcm:i:144\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t280\t4284\t-\t1\t5836\t4\t3936\t1481\t4004\t255\tcm:i:246\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4286\t-\t1\t5836\t4215\t5833\t546\t1618\t255\tcm:i:88\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t170\t4027\t+\t1\t5836\t1680\t5833\t1032\t4153\t255\tcm:i:174\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4082\t+\t1\t5836\t4\t1602\t220\t1598\t255\tcm:i:30\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1334\t4566\t-\t1\t5836\t2699\t5786\t1281\t3232\t255\tcm:i:243\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t5836\t50\t2663\t772\t2680\t255\tcm:i:129\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t5836\t2657\t5833\t1469\t3386\t255\tcm:i:268\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2786\t-\t1\t5836\t30\t2636\t905\t2689\t255\tcm:i:157\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t143\t4271\t-\t1\t5836\t338\t4254\t1834\t4128\t255\tcm:i:470\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3092\t4330\t-\t1\t5836\t4503\t5798\t430\t1295\t255\tcm:i:77\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t544\t4408\t-\t1\t5836\t69\t3927\t1208\t3864\t255\tcm:i:237\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3008\t4472\t-\t1\t5836\t4215\t5748\t351\t1533\t255\tcm:i:53\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t5836\t2909\t3222\t131\t313\t255\tcm:i:22\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t335\t4397\t+\t1\t5836\t1321\t5257\t1351\t4062\t255\tcm:i:280\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4349\t+\t1\t5836\t23\t961\t238\t938\t255\tcm:i:40\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t537\t+\t1\t5836\t5334\t5798\t154\t464\t255\tcm:i:26\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t111\t4359\t-\t1\t5836\t1673\t5798\t2062\t4248\t255\tcm:i:487\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t109\t1619\t-\t1\t5836\t30\t1525\t472\t1510\t255\tcm:i:68\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t5836\t1733\t5833\t1303\t4100\t255\tcm:i:230\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t5836\t4\t1690\t311\t1712\t255\tcm:i:43\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4205\t+\t1\t5836\t23\t3939\t1039\t3916\t255\tcm:i:166\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t296\t1782\t+\t1\t5836\t4242\t5798\t367\t1556\t255\tcm:i:63\nbegin           5,836             5.33\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6290\t1009\t5054\t2431\t4045\t255\tcm:i:529\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6290\t5670\t6287\t297\t617\t255\tcm:i:63\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6290\t4\t404\t122\t400\t255\tcm:i:19\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6290\t2540\t6287\t2249\t3747\t255\tcm:i:527\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6290\t51\t2474\t1276\t2423\t255\tcm:i:245\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6290\t4\t4316\t2322\t4312\t255\tcm:i:486\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6290\t4354\t6287\t943\t1933\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t116\t4027\t+\t1\t6290\t1774\t6287\t2145\t4513\t255\tcm:i:426\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6290\t4\t1741\t421\t1737\t255\tcm:i:61\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6290\t2854\t6226\t2257\t3372\t255\tcm:i:501\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6290\t51\t2831\t1459\t2780\t255\tcm:i:289\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6290\t2825\t6287\t2268\t3462\t255\tcm:i:513\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t97\t2745\t-\t1\t6290\t74\t2805\t1501\t2731\t255\tcm:i:289\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6290\t354\t4699\t2022\t4345\t255\tcm:i:377\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6290\t4984\t6271\t614\t1287\t255\tcm:i:117\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6290\t72\t4534\t1921\t4462\t255\tcm:i:337\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6290\t4597\t6206\t580\t1609\t255\tcm:i:103\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6290\t3083\t3386\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6290\t1126\t5708\t2368\t4582\t255\tcm:i:487\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4392\t+\t1\t6290\t23\t1039\t362\t1016\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t539\t+\t1\t6290\t5785\t6254\t217\t469\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6290\t1806\t6258\t2777\t4452\t255\tcm:i:600\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6290\t74\t1603\t761\t1529\t255\tcm:i:150\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t795\t+\t1\t6290\t5209\t5912\t149\t703\t255\tcm:i:24\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6290\t585\t1307\t155\t722\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t93\t4048\t+\t1\t6290\t1886\t6287\t2070\t4401\t255\tcm:i:456\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6290\t4\t1838\t656\t1834\t255\tcm:i:109\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6290\t2060\t2358\t156\t298\t255\tcm:i:35\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6290\t23\t4436\t2106\t4413\t255\tcm:i:421\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6290\t4488\t6273\t744\t1785\t255\tcm:i:131\n1               6,290             7.82\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6242\t1016\t5009\t2460\t3993\t255\tcm:i:530\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6242\t5626\t6239\t283\t613\t255\tcm:i:61\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6242\t4\t408\t117\t404\t255\tcm:i:18\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6242\t2535\t6239\t2234\t3704\t255\tcm:i:514\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6242\t51\t2469\t1387\t2418\t255\tcm:i:271\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6242\t4\t4276\t2380\t4272\t255\tcm:i:494\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6242\t4314\t6239\t955\t1925\t255\tcm:i:196\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6242\t1759\t6239\t2194\t4480\t255\tcm:i:440\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6242\t4\t1735\t450\t1731\t255\tcm:i:67\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6242\t2848\t6178\t2284\t3330\t255\tcm:i:509\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6242\t51\t2825\t1504\t2774\t255\tcm:i:295\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6242\t2819\t6239\t2235\t3420\t255\tcm:i:510\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t109\t2745\t-\t1\t6242\t74\t2787\t1517\t2713\t255\tcm:i:304\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6242\t358\t4659\t2051\t4301\t255\tcm:i:391\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4304\t-\t1\t6242\t4939\t6223\t618\t1284\t255\tcm:i:114\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6242\t72\t4493\t1941\t4421\t255\tcm:i:345\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6242\t4556\t6158\t579\t1602\t255\tcm:i:105\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6242\t3077\t3380\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6242\t1133\t5664\t2405\t4531\t255\tcm:i:507\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6242\t23\t1051\t353\t1028\t255\tcm:i:59\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6242\t5759\t6206\t204\t447\t255\tcm:i:40\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6242\t1799\t6210\t2749\t4411\t255\tcm:i:591\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6242\t74\t1601\t795\t1527\t255\tcm:i:165\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6242\t5166\t5916\t224\t750\t255\tcm:i:35\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t160\t847\t+\t1\t6242\t602\t1310\t144\t708\t255\tcm:i:16\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6242\t1908\t6239\t2061\t4331\t255\tcm:i:454\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6242\t4\t1831\t667\t1827\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6242\t2053\t2352\t157\t299\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6242\t23\t4395\t2130\t4372\t255\tcm:i:425\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6242\t4447\t6225\t762\t1778\t255\tcm:i:138\n2               6,242             8.02\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t4010\t+\t1\t6265\t1028\t5025\t2436\t3997\t255\tcm:i:527\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t129\t722\t+\t1\t6265\t5642\t6262\t281\t620\t255\tcm:i:59\n0237bf86-5cb0-4480-a66f-3eefdb9ef759_Basecall_1D_template\t4286\t3632\t4010\t+\t1\t6265\t4\t408\t105\t404\t255\tcm:i:17\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t934\t4391\t-\t1\t6265\t2544\t6262\t2228\t3718\t255\tcm:i:507\n054cd546-5f45-4edd-a9a4-b53d513cbc8c_Basecall_1D_template\t4413\t126\t2508\t-\t1\t6265\t51\t2478\t1353\t2427\t255\tcm:i:260\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t110\t4284\t-\t1\t6265\t4\t4293\t2377\t4289\t255\tcm:i:492\n3708cda9-3400-4482-b378-0644f4868ccc_Basecall_1D_template\t4605\t2719\t4590\t-\t1\t6265\t4331\t6262\t967\t1931\t255\tcm:i:194\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t108\t4027\t+\t1\t6265\t1772\t6262\t2190\t4490\t255\tcm:i:436\n4850ae22-4e87-4dbf-83ee-c13cc2c33f9e_Basecall_1D_template\t4127\t2893\t4124\t+\t1\t6265\t4\t1748\t448\t1744\t255\tcm:i:62\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t1345\t4580\t-\t1\t6265\t2857\t6201\t2270\t3344\t255\tcm:i:503\n598f0c09-1917-4ee2-ac23-f021e152cfbf_Basecall_1D_template\t4587\t98\t2778\t-\t1\t6265\t51\t2834\t1463\t2783\t255\tcm:i:284\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t1225\t4611\t-\t1\t6265\t2828\t6262\t2251\t3434\t255\tcm:i:515\n771b73f3-1234-4c52-bb54-14c89e6e5e17_Basecall_1D_template\t4615\t102\t2745\t-\t1\t6265\t74\t2804\t1511\t2730\t255\tcm:i:305\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t140\t4284\t-\t1\t6265\t358\t4676\t2063\t4318\t255\tcm:i:392\n9780e420-c7e3-4229-b406-d3d4b590ab2d_Basecall_1D_template\t4333\t3069\t4328\t-\t1\t6265\t4930\t6246\t623\t1316\t255\tcm:i:113\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t138\t4408\t-\t1\t6265\t72\t4510\t1987\t4438\t255\tcm:i:350\n9e6d95e5-24f9-43ca-b3a0-4989848e3005_Basecall_1D_template\t4536\t3002\t4533\t-\t1\t6265\t4573\t6181\t569\t1608\t255\tcm:i:102\na152496f-c70a-4869-b7f7-2342f431585f_Basecall_1D_template\t433\t106\t396\t+\t1\t6265\t3089\t3392\t169\t303\t255\tcm:i:32\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t86\t4397\t+\t1\t6265\t1145\t5680\t2423\t4535\t255\tcm:i:509\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t3437\t4397\t+\t1\t6265\t23\t1063\t337\t1040\t255\tcm:i:56\na53eb8ee-85b3-4015-aeaa-00c7d69a359e_Basecall_1D_template\t4456\t107\t539\t+\t1\t6265\t5779\t6229\t223\t450\t255\tcm:i:45\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t4374\t-\t1\t6265\t1812\t6233\t2769\t4421\t255\tcm:i:601\nb9497173-8976-48fa-a822-93edea3f0baf_Basecall_1D_template\t4435\t105\t1578\t-\t1\t6265\t74\t1615\t764\t1541\t255\tcm:i:156\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t122\t847\t+\t1\t6265\t5182\t5936\t236\t754\t255\tcm:i:36\nbca7e454-f5a3-4320-b2bf-d50cd6cbfa2a_Basecall_1D_template\t1421\t149\t847\t+\t1\t6265\t589\t1322\t155\t733\t255\tcm:i:17\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t124\t4048\t+\t1\t6265\t1921\t6262\t2062\t4341\t255\tcm:i:449\nbd2c355e-c70e-42c7-a02f-810dd87fab35_Basecall_1D_template\t4275\t2532\t4244\t+\t1\t6265\t4\t1844\t660\t1840\t255\tcm:i:111\nc2f682b3-3774-41a5-8663-32d081b558ee_Basecall_1D_template\t1148\t97\t391\t+\t1\t6265\t2063\t2361\t157\t298\t255\tcm:i:37\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t289\t4485\t+\t1\t6265\t23\t4412\t2182\t4389\t255\tcm:i:436\nf49ba5d3-abc3-4fc1-8efc-380b3238b0de_Basecall_1D_template\t4509\t111\t1803\t+\t1\t6265\t4464\t6248\t787\t1784\t255\tcm:i:141\n3               6,265             8.04\n\nBest polish: /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/racon_polish/016_rotated.fasta\nSaving /galaxy/server/database/jobs_directory/000/12/working/miniasm_assembly/13_racon_polished.gfa\n\n\nAssembly complete (2024-10-14 06:37:51)\nSaving /galaxy/server/database/jobs_directory/000/12/working/assembly.gfa\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:37:51", "plugin": "core", "name": "end_epoch", "raw_value": "1728887871.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:37:50", "plugin": "core", "name": "start_epoch", "raw_value": "1728887870.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-4", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 4, "time_seconds": 19.460062742233276, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "unicycler/0.5.1+galaxy0-5", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 5, "time_seconds": 159.30267882347107, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "958bb64d810d9b28"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "0711920ca02f0d35"}, "paired_unpaired|fastq_input_selector": "paired", "mode": "normal", "keep": "1"}, "job": {"model_class": "Job", "id": "ed75c4869e405a06", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:38:44.591476", "update_time": "2024-10-14T06:41:01.501787", "galaxy_version": "24.1", "external_id": "gxy-r5xr8", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/8/e/7/dataset_8e75354b-8d92-4aa7-bd2e-ac9287968d84.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/d/1/2/dataset_d12ea406-8a43-4626-ab62-93ffd546f7ef.dat' fq2.fastq && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 1 && mkdir 'spades_graphs' && mv 00*gfa './spades_graphs/'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "reuse": "[]", "keep": "\"1\"", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "min_anchor_seg_len": "\"\"", "linear_seqs": "\"0\"", "min_fasta_length": "\"100\"", "mode": "\"normal\"", "long": null, "paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 21, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 22, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}"}, "inputs": {"paired_unpaired|fastq_input1": {"id": "958bb64d810d9b28", "src": "hda", "uuid": "8e75354b-8d92-4aa7-bd2e-ac9287968d84"}, "paired_unpaired|fastq_input2": {"id": "0711920ca02f0d35", "src": "hda", "uuid": "d12ea406-8a43-4626-ab62-93ffd546f7ef"}}, "outputs": {"assembly_graph": {"id": "a20d697c445cc6dd", "src": "hda", "uuid": "5c6ff120-7222-472d-ab89-0d27936d73dd"}, "assembly": {"id": "ae5f340c2b06f31b", "src": "hda", "uuid": "4f89fd7a-a7f4-4678-b838-c2ac04f07322"}, "__new_primary_file_spades_collection|001_spades_graph_k027__": {"id": "bfd0b6d71901fe8d", "src": "hda", "uuid": "3df1b6dd-05bd-4f83-b2e6-da9091faccc7"}, "__new_primary_file_spades_collection|001_spades_graph_k047__": {"id": "a98c344333ba6e10", "src": "hda", "uuid": "b55eeac4-e36d-4466-900f-56acc6c6ed3d"}, "__new_primary_file_spades_collection|001_spades_graph_k063__": {"id": "9ca54a64e5ccc8ed", "src": "hda", "uuid": "88d4664f-4803-4800-b3be-cbdae1e59559"}, "__new_primary_file_spades_collection|001_spades_graph_k077__": {"id": "47de3ff9f7582a5b", "src": "hda", "uuid": "d86f51e4-009e-4369-8bdd-2143c2d0b8bc"}, "__new_primary_file_spades_collection|001_spades_graph_k089__": {"id": "15cf17e02d5b317a", "src": "hda", "uuid": "288445b5-8527-468c-90a4-9f87eefd891c"}, "__new_primary_file_spades_collection|001_spades_graph_k099__": {"id": "167539e115f83675", "src": "hda", "uuid": "71bee8f2-4107-4705-924e-fda3edba7b20"}, "__new_primary_file_spades_collection|001_spades_graph_k107__": {"id": "654e03481990754d", "src": "hda", "uuid": "f7c6deca-87e4-458a-bffd-73cf15ad6b69"}, "__new_primary_file_spades_collection|001_spades_graph_k115__": {"id": "cfd7ac2071a3f258", "src": "hda", "uuid": "327d2d25-b1bb-41c2-ab39-df163796b757"}, "__new_primary_file_spades_collection|001_spades_graph_k121__": {"id": "38b931c13d073815", "src": "hda", "uuid": "9694aec3-9934-4263-b7a3-5a3543771b4e"}, "__new_primary_file_spades_collection|001_spades_graph_k127__": {"id": "2454808a363d50cf", "src": "hda", "uuid": "d9b1bf81-c112-49b4-bb1d-1a0bac46befe"}, "__new_primary_file_spades_collection|002_depth_filter__": {"id": "32361b15ce3cada7", "src": "hda", "uuid": "5c813cbd-aa93-400a-9d56-427cdce0ffd6"}, "__new_primary_file_spades_collection|003_overlaps_removed__": {"id": "c3af7d58467c956b", "src": "hda", "uuid": "2e8ea28d-b850-4887-9605-961e03a7ffb6"}, "__new_primary_file_spades_collection|004_bridges_applied__": {"id": "4942c953d8fc14db", "src": "hda", "uuid": "c25e8fbb-d768-488c-929a-32d6d77f4f51"}, "__new_primary_file_spades_collection|005_final_clean__": {"id": "389dc292830bfc18", "src": "hda", "uuid": "222a4f7a-570e-4b5b-ac8a-16c7b5a52729"}}, "copied_from_job_id": null, "output_collections": {"spades_collection": {"src": "hdca", "id": "007325b744780688"}}, "tool_stdout": "\nStarting Unicycler (2024-10-14 06:38:46)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 1\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/19/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:38:46)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:38:46)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/19/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/19/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/19/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/19/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/19/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/19/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/19/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/19/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/19/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/19/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/19/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.065    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.068    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.081    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.081    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.088    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.117     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.129     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.129     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.129     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.129     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.130     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.130     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.130     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.778     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.780     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:00.958     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:00.958     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.992     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:00.992     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.993     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.993     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.993     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.619  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.619  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.620     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.797     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.797     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.836     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.836     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:01.954     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:01.965     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:01.979     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:01.982     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:01.984     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:01.986     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:01.989     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:01.990     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:01.990     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:01.990     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:01.990     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:01.991     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:01.994     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:01.994     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.021     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.021     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.081     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.083     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.127     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.225     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.518     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.035     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.502     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.290     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.290     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.292     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.292     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.292     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.292     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Cl\n..\ntabase/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.fasta\n  0:00:04.277     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 107)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.paths\n  0:00:04.281     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 114)   Populating GFA with scaffold paths\n  0:00:04.289     3M / 159M  INFO    General                 (pipeline.cpp              : 292)   SPAdes finished\n  0:00:04.291     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:40:43)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:40:43)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/19/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-10-14 06:40:43)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/19/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:40:43)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:40:43)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-10-14 06:40:43)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/19/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-10-14 06:40:43)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:40:43)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/19/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:40:43)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:40:51)\nSaving /galaxy/server/database/jobs_directory/000/19/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/19/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-10-14 06:38:46)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided only short reads, Unicycler will essentially function as a SPAdes-\noptimiser. It will try many k-mer sizes, choose the best based on contig length\nand graph connectivity, and scaffold the graph using SPAdes repeat resolution.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 1\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/19/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status     Path                      \n  spades.py     4.0.0     good       /usr/local/bin/spades.py  \n  racon                   not used                             \n  makeblastdb   2.16.0+   good       /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good       /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:38:46)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:38:46)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/19/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/19/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/19/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/19/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/19/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/19/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/19/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/19/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/19/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/19/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/19/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.000     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.006     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.065    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.068    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.081    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.081    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.088    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.117     1M / 41M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.129     1M / 41M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.129     1M / 41M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.129     1M / 41M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.129     1M / 41M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.130     1M / 41M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.130     1M / 41M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.130     1M / 41M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.778     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.780     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:00.958     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:00.958     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:00.992     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:00.992     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.993     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.993     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.993     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.619  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.619  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.620     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.797     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.797     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.836     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.836     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:01.954     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:01.965     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:01.979     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:01.982     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:01.984     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:01.986     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:01.989     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:01.990     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:01.990     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:01.990     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:01.990     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:01.991     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:01.992     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:01.994     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:01.994     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.021     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.021     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.081     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.083     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.127     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.127     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.225     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.518     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.035     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.502     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.290     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.290     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.292     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.292     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.292     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.292     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.292     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Cl\n..\ntabase/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.fasta\n  0:00:04.277     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 107)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.paths\n  0:00:04.281     3M / 159M  INFO    General                 (contig_output_stage.cpp   : 114)   Populating GFA with scaffold paths\n  0:00:04.289     3M / 159M  INFO    General                 (pipeline.cpp              : 292)   SPAdes finished\n  0:00:04.291     1M / 159M  INFO    General                 (main.cpp                  : 131)   Assembling time: 0 hours 0 minutes 4 seconds\n===== K127 finished.\n===== Copy files started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/copy_files.py /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/before_rr.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/before_rr.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph_after_simplification.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/final_contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/first_pe_contigs.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/strain_graph.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/strain_graph.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.fasta /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/scaffolds.paths /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.paths /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph_with_scaffolds.gfa /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph.fastg /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/K127/final_contigs.paths /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.paths\n===== Copy files finished.\n===== Assembling finished.\n===== Breaking scaffolds started.\n== Running: /usr/local/bin/python3 /usr/local/share/spades/spades_pipeline/scripts/breaking_scaffolds_script.py --result_scaffolds_filename /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.fasta --misc_dir /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/misc --threshold_for_breaking_scaffolds 3\n===== Breaking scaffolds finished.\n===== Terminate started.\n===== Terminate finished.\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.fasta\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/scaffolds.paths\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/assembly_graph_with_scaffolds.gfa\n======= SPAdes pipeline finished.\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/spades.log\nThank you for using SPAdes! If you use it in your research, please cite:\n  Prjibelski, A., Antipov, D., Meleshko, D., Lapidus, A. and Korobeynikov, A., 2020. Using SPAdes de novo assembler. Current protocols in bioinformatics, 70(1), p.e102.\n  doi.org/10.1002/cpbi.102\n\n\nInsert size mean: 367.3 bp\nInsert size stdev: 37.3 bp\n\n\nCleaning k27 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:40:43)\nFilter by read depth        (2024-10-14 06:40:43)\nFilter homopolymer loops    (2024-10-14 06:40:43)\nMerge all possible          (2024-10-14 06:40:43)\nNormalise read depths       (2024-10-14 06:40:43)\nRemove zero length segments (2024-10-14 06:40:43)\nSort link order             (2024-10-14 06:40:43)\nGraph cleaning finished     (2024-10-14 06:40:43)\nSaving /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:40:43)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/19/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:40:43)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/19/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-10-14 06:40:43)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/19/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:40:43)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:40:43)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nApplying bridges (2024-10-14 06:40:43)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/19/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-10-14 06:40:43)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:40:43)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/19/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:40:43)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:40:51)\nSaving /galaxy/server/database/jobs_directory/000/19/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/19/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:38:46", "plugin": "core", "name": "start_epoch", "raw_value": "1728887926.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:40:51", "plugin": "core", "name": "end_epoch", "raw_value": "1728888051.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "125.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-6", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 6, "time_seconds": 167.5909960269928, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "4c0288c0366f2637"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "439790c70183d164"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "61902d852c1c124d"}, "mode": "normal", "keep": "2"}, "job": {"model_class": "Job", "id": "a20d697c445cc6dd", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:41:27.334375", "update_time": "2024-10-14T06:43:47.722939", "galaxy_version": "24.1", "external_id": "gxy-gjxm8", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/b/4/9/dataset_b490515c-07f2-46a9-9616-085906ea35ca.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/e/9/8/dataset_e98f3b26-a85f-423f-92d6-84886da36777.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/b/c/0/dataset_bc00c3f9-5039-4946-8c6a-8f1c86e0be1b.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2'  --keep 2 && mkdir 'spades_graphs' && mv 00*gfa './spades_graphs/' && samtools view -@ \"${GALAXY_SLOTS:-4}\" -u 'read_alignment/long_read_alignments.sam' | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -o 'read_alignment/long_read_alignments.bam'", "user_email": "tests@fake.org", "command_version": null, "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 39, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 40, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": false, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"2\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "61902d852c1c124d", "src": "hda", "uuid": "bc00c3f9-5039-4946-8c6a-8f1c86e0be1b"}, "paired_unpaired|fastq_input2": {"id": "439790c70183d164", "src": "hda", "uuid": "e98f3b26-a85f-423f-92d6-84886da36777"}, "paired_unpaired|fastq_input1": {"id": "4c0288c0366f2637", "src": "hda", "uuid": "b490515c-07f2-46a9-9616-085906ea35ca"}}, "outputs": {"__new_primary_file_spades_collection|005_final_clean__": {"id": "c0178ddad4e07b60", "src": "hda", "uuid": "1419c6ee-fe2d-4929-8395-b17e377ae9a8"}, "__new_primary_file_spades_collection|004_bridges_applied__": {"id": "caa8c9bcbffa88fa", "src": "hda", "uuid": "a63d91d9-4294-4845-9acd-a886e53c8a51"}, "__new_primary_file_spades_collection|003_overlaps_removed__": {"id": "74951d26c361e203", "src": "hda", "uuid": "8b60161e-45d4-4875-816d-f238e1dba790"}, "__new_primary_file_spades_collection|002_depth_filter__": {"id": "fec2f7699010ce28", "src": "hda", "uuid": "719abcc3-c3bc-4d1f-b83d-4b138543a8e2"}, "__new_primary_file_spades_collection|001_spades_graph_k127__": {"id": "acbe88b2c2d13be3", "src": "hda", "uuid": "9b5c0540-70cd-4a05-8898-f00ad63dbe56"}, "__new_primary_file_spades_collection|001_spades_graph_k121__": {"id": "f59da90a55a5ff43", "src": "hda", "uuid": "0a105977-f492-4222-a7d7-2997325006fd"}, "__new_primary_file_spades_collection|001_spades_graph_k115__": {"id": "cb231cc4143ac5b8", "src": "hda", "uuid": "24967b48-83d1-4057-8f17-d77135ef36bc"}, "__new_primary_file_spades_collection|001_spades_graph_k107__": {"id": "37903171106b182b", "src": "hda", "uuid": "50cee79a-b44e-406f-b9d8-ed87e5373bec"}, "__new_primary_file_spades_collection|001_spades_graph_k099__": {"id": "0092958b6f767a0a", "src": "hda", "uuid": "cc2c3ab3-fde2-427c-8e90-c73816f7dbca"}, "__new_primary_file_spades_collection|001_spades_graph_k089__": {"id": "32edcbb5d2e0476d", "src": "hda", "uuid": "534e80b3-da95-447f-8155-2531ffe1403c"}, "__new_primary_file_spades_collection|001_spades_graph_k077__": {"id": "c44f0cd636f73c4d", "src": "hda", "uuid": "b819dabd-1e97-4789-a2a2-34825a6340b6"}, "__new_primary_file_spades_collection|001_spades_graph_k063__": {"id": "151eb3774db75706", "src": "hda", "uuid": "07da7e03-bc3c-4f9f-a1ab-5f67f1882320"}, "__new_primary_file_spades_collection|001_spades_graph_k047__": {"id": "2dc4ca94e88de01d", "src": "hda", "uuid": "2d4f33f5-4cb5-4b0d-a462-144f164d40b4"}, "__new_primary_file_spades_collection|001_spades_graph_k027__": {"id": "915e9e7d10c77483", "src": "hda", "uuid": "55016735-7ea1-4564-9176-cdf33cf3930d"}, "bam_file": {"id": "a5cc9d4ce526fa12", "src": "hda", "uuid": "058dbc9b-bb87-4dd8-8b32-8378f6b0a9ac"}, "assembly": {"id": "3f244e5f56e8e686", "src": "hda", "uuid": "539b02c4-af91-4d2f-906e-f3e7f8801b0a"}, "assembly_graph": {"id": "611a5f577a5df615", "src": "hda", "uuid": "587d0c0f-4de2-487f-9cef-8451d65b3aee"}}, "copied_from_job_id": null, "output_collections": {"spades_collection": {"src": "hdca", "id": "5ebaf51d5e4b2114"}}, "tool_stdout": "\nStarting Unicycler (2024-10-14 06:41:29)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 2\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/23/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:41:30)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:41:30)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/23/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/23/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/23/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/23/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/23/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/23/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/23/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/23/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/23/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/23/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/23/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/23/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.066    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.069    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.082    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.083    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.090    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.119     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.130     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.130     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.130     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.130     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.132     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.820     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.823     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.002     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.002     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.034     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.034     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.035     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.035     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.035     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.708  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.708  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.708     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.900     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.900     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.940     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.940     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.089     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.099     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.117     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.120     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.122     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.124     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.127     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.127     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.127     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.127     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.127     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.131     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.131     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.156     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.157     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.222     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.223     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.268     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.366     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.660     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.176     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.643     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.432     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.432     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.433     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.434     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.434     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.434     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: ea\n..\nall possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:43:27)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:43:27)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/23/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-10-14 06:43:27)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/23/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:43:27)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:43:27)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-10-14 06:43:27)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:43:27)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/23/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/23/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-10-14 06:43:27)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/23/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-10-14 06:43:27)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-10-14 06:43:27)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-10-14 06:43:27)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.054 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-10-14 06:43:27)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-10-14 06:43:27)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-10-14 06:43:27)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/23/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-10-14 06:43:27)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:43:27)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/23/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:43:27)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:43:36)\nSaving /galaxy/server/database/jobs_directory/000/23/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/23/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-10-14 06:41:29)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --keep 2\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/23/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:41:30)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:41:30)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/23/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/23/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/23/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/23/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/23/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/23/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/23/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/23/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/23/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/23/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/23/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/23/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 20M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/23/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.000     1M / 20M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.000     1M / 20M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 20M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 20M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 20M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 20M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 20M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.008     1M / 20M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.066    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.069    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.082    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.083    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.090    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.119     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.130     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.130     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.130     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.130     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.132     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.132     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.820     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.823     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.002     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.002     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.034     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.034     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.035     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.035     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.035     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.708  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.708  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.708     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.900     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.900     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.940     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.940     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.089     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.099     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.117     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.120     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.122     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.124     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.127     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.127     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.127     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.127     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.127     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.129     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.131     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.131     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.156     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.157     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.222     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.223     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.268     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.268     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.366     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.660     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.176     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.643     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.432     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.432     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.433     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.433     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.434     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.434     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.434     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Gap Closer (id: ea\n..\nall possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:43:27)\nFilter by read depth        (2024-10-14 06:43:27)\nFilter homopolymer loops    (2024-10-14 06:43:27)\nMerge all possible          (2024-10-14 06:43:27)\nNormalise read depths       (2024-10-14 06:43:27)\nRemove zero length segments (2024-10-14 06:43:27)\nSort link order             (2024-10-14 06:43:27)\nGraph cleaning finished     (2024-10-14 06:43:27)\nSaving /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:43:27)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/23/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:43:27)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\nSaving /galaxy/server/database/jobs_directory/000/23/working/002_depth_filter.gfa\n\n\nCleaning graph (2024-10-14 06:43:27)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\nSaving /galaxy/server/database/jobs_directory/000/23/working/003_overlaps_removed.gfa\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:43:27)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:43:27)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-10-14 06:43:27)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:43:27)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/23/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/23/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nCreating simple long read bridges (2024-10-14 06:43:27)\n    Unicycler uses long read alignments (from minimap) to resolve simple repeat\nstructures in the graph. This takes care of some \"low-hanging fruit\" of the\ngraph simplification.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/23/working/simple_bridging/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\n    Two-way junctions are defined as cases where two graph contigs (A and B)\njoin together (C) and then split apart again (D and E). This usually represents\na simple 2-copy repeat, and there are two possible options for its resolution:\n(A->C->D and B->C->E) or (A->C->E and B->C->D). Each read which spans such a\njunction gets to \"vote\" for option 1, option 2 or neither. Unicycler creates a\nbridge at each junction for the most voted for option.\n\nNo suitable two-way junctions present\n\n    Simple loops are parts of the graph where two contigs (A and B) are\nconnected via a repeat (C) which loops back to itself (via D). It is possible\nto traverse the loop zero times (A->C->B), one time (A->C->D->C->B), two times\n(A->C->D->C->D->C->B), etc. Long reads which span the loop inform which is the\ncorrect number of times through. In this step, such reads are found and each is\naligned against alternative loop counts. A reads casts its \"vote\" for the loop\ncount it agrees best with, and Unicycler creates a bridge using the most voted\nfor count.\n\nNo suitable simple loops present\n\n\nDetermining low score threshold (2024-10-14 06:43:27)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-10-14 06:43:27)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-10-14 06:43:27)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.054 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-10-14 06:43:27)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-10-14 06:43:27)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-10-14 06:43:27)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\nSaving /galaxy/server/database/jobs_directory/000/23/working/004_bridges_applied.gfa\n\n\nCleaning up leftover segments (2024-10-14 06:43:27)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:43:27)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\nSaving /galaxy/server/database/jobs_directory/000/23/working/005_final_clean.gfa\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:43:27)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:43:36)\nSaving /galaxy/server/database/jobs_directory/000/23/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/23/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:41:29", "plugin": "core", "name": "start_epoch", "raw_value": "1728888089.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:43:36", "plugin": "core", "name": "end_epoch", "raw_value": "1728888216.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "127.0000000"}]}, "status": "success"}}, {"id": "unicycler/0.5.1+galaxy0-7", "has_data": true, "data": {"tool_id": "unicycler", "tool_version": "0.5.1+galaxy0", "test_index": 7, "time_seconds": 162.361900806427, "inputs": {"paired_unpaired|fastq_input1": {"src": "hda", "id": "bb4523482831d223"}, "paired_unpaired|fastq_input2": {"src": "hda", "id": "fdee97e134a3ac4b"}, "paired_unpaired|fastq_input_selector": "paired", "long": {"src": "hda", "id": "fb16a13ec4c91696"}, "mode": "normal", "lr_align|no_simple_bridges": true, "keep": "0"}, "job": {"model_class": "Job", "id": "9ca54a64e5ccc8ed", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/unicycler/unicycler/0.5.1+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T06:44:14.547707", "update_time": "2024-10-14T06:46:31.811206", "galaxy_version": "24.1", "external_id": "gxy-qbd2x", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/3/2/9/dataset_32942e2a-f05e-4870-b849-ffb8f58642e7.dat' fq1.fastq && ln -s '/galaxy/server/database/objects/b/1/5/dataset_b1588d09-24e7-4359-a1ee-783797e3d526.dat' fq2.fastq && ln -s '/galaxy/server/database/objects/2/f/4/dataset_2f42c507-0bf4-45c0-83b3-a09ae94e80c5.dat' 'lr.fasta' && unicycler -t \"${GALAXY_SLOTS:-4}\" -o ./ --verbosity 3 -1 'fq1.fastq' -2 'fq2.fastq' -l lr.fasta --mode 'normal' --min_fasta_length '100' --linear_seqs '0' --min_kmer_frac '0.2' --max_kmer_frac '0.95' --kmer_count '10' --depth_filter '0.25'  --start_gene_id '90.0' --start_gene_cov '95.0' --min_component_size '1000' --min_dead_end_size '1000' --scores '3,-6,-5,-2' --no_simple_bridges --keep 0", "user_email": "tests@fake.org", "command_version": "", "params": {"paired_unpaired": "{\"__current_case__\": 0, \"fastq_input1\": {\"values\": [{\"id\": 59, \"src\": \"hda\"}]}, \"fastq_input2\": {\"values\": [{\"id\": 60, \"src\": \"hda\"}]}, \"fastq_input_selector\": \"paired\"}", "mode": "\"normal\"", "min_fasta_length": "\"100\"", "linear_seqs": "\"0\"", "min_anchor_seg_len": "\"\"", "spades": "{\"depth_filter\": \"0.25\", \"kmer_count\": \"10\", \"kmers\": \"\", \"largest_component\": false, \"max_kmer_frac\": \"0.95\", \"min_kmer_frac\": \"0.2\"}", "rotation": "{\"no_rotate\": false, \"start_gene_cov\": \"95.0\", \"start_gene_id\": \"90.0\", \"start_genes\": null}", "graph_clean": "{\"min_component_size\": \"1000\", \"min_dead_end_size\": \"1000\"}", "lr_align": "{\"contamination\": null, \"low_score\": \"\", \"no_simple_bridges\": true, \"scores\": \"3,-6,-5,-2\"}", "keep": "\"0\"", "reuse": "[]", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"input\""}, "inputs": {"long": {"id": "fb16a13ec4c91696", "src": "hda", "uuid": "2f42c507-0bf4-45c0-83b3-a09ae94e80c5"}, "paired_unpaired|fastq_input2": {"id": "fdee97e134a3ac4b", "src": "hda", "uuid": "b1588d09-24e7-4359-a1ee-783797e3d526"}, "paired_unpaired|fastq_input1": {"id": "bb4523482831d223", "src": "hda", "uuid": "32942e2a-f05e-4870-b849-ffb8f58642e7"}}, "outputs": {"assembly_graph": {"id": "055399286a1aeb72", "src": "hda", "uuid": "31d9e6a1-1f52-4d51-81a1-44fc7d1c7301"}, "assembly": {"id": "387e09508d40623f", "src": "hda", "uuid": "66336087-f8d0-4452-bf0b-ff179c23e518"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "\nStarting Unicycler (2024-10-14 06:44:16)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --no_simple_bridges --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/27/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:44:17)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:44:17)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/27/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/27/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/27/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/27/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/27/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/27/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/27/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/27/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/27/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/27/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/27/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/27/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 21M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 21M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.070    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.072    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.084    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.091    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.120     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.133     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.133     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.133     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.133     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.134     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.134     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.134     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.824     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.827     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.014     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.015     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.052     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.053     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.054     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.054     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.054     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.650  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.651  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.652     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.840     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.840     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.884     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.884     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.024     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.035     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.052     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.054     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.057     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.059     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.062     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.063     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.063     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.063     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.063     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.067     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.067     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.099     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.100     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.163     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.164     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.202     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.299     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.590     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.107     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.577     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.375     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.376     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.377     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.377     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.377     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.377     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE =\n..\n-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:46:12)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:46:13)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:46:13)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:46:13)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:46:13)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-10-14 06:46:13)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:46:13)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/27/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/27/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nDetermining low score threshold (2024-10-14 06:46:13)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-10-14 06:46:13)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-10-14 06:46:13)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.055 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-10-14 06:46:13)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/27/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-10-14 06:46:13)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-10-14 06:46:13)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:46:13)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:46:13)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:46:13)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:46:21)\nSaving /galaxy/server/database/jobs_directory/000/27/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/27/working/assembly.fasta\n\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "\nStarting Unicycler (2024-10-14 06:44:16)\n    Welcome to Unicycler, an assembly pipeline for bacterial genomes. Since you\nprovided both short and long reads, Unicycler will perform a hybrid assembly.\nIt will first use SPAdes to make a short-read assembly graph, and then it will\nuse various methods to scaffold that graph with the long reads.\n    For more information, please see https://github.com/rrwick/Unicycler\n\nCommand: /usr/local/bin/unicycler -t 8 -o ./ --verbosity 3 -1 fq1.fastq -2 fq2.fastq -l lr.fasta --mode normal --min_fasta_length 100 --linear_seqs 0 --min_kmer_frac 0.2 --max_kmer_frac 0.95 --kmer_count 10 --depth_filter 0.25 --start_gene_id 90.0 --start_gene_cov 95.0 --min_component_size 1000 --min_dead_end_size 1000 --scores 3,-6,-5,-2 --no_simple_bridges --keep 0\n\nUnicycler version: v0.5.1\nUsing 8 threads\n\nThe output directory already exists and files may be reused or overwritten:\n  /galaxy/server/database/jobs_directory/000/27/working\n\nBridging mode: normal\n  using default normal bridge quality cutoff: 10.00\n\nDependencies:\n  Program       Version   Status   Path                      \n  spades.py     4.0.0     good     /usr/local/bin/spades.py  \n  racon         1.5.0     good     /usr/local/bin/racon      \n  makeblastdb   2.16.0+   good     /usr/local/bin/makeblastdb\n  tblastn       2.16.0+   good     /usr/local/bin/tblastn    \n\n\nChoosing k-mer range for assembly (2024-10-14 06:44:17)\n    Unicycler chooses a k-mer range for SPAdes based on the length of the input\nreads. It uses a wide range of many k-mer sizes to maximise the chance of\nfinding an ideal assembly.\n\nSPAdes maximum k-mer: 127\nMedian read length: 251\nK-mer range: 27, 47, 63, 77, 89, 99, 107, 115, 121, 127\n\n\nSPAdes assemblies (2024-10-14 06:44:17)\n    Unicycler now uses SPAdes to assemble the short reads. It scores the\nassembly graph for each k-mer using the number of contigs (fewer is better) and\nthe number of dead ends (fewer is better). The score function is 1/(c*(d+2)),\nwhere c is the contig count and d is the dead end count.\n\nspades.py -o /galaxy/server/database/jobs_directory/000/27/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/27/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/27/working/fq2.fastq -m 1024\n== Warning ==  output dir is not empty! Please, clean output directory before run.\nCommand: /usr/local/bin/spades.py -o /galaxy/server/database/jobs_directory/000/27/working/spades_assembly -k 27 --threads 8 --gfa11 --isolate -1 /galaxy/server/database/jobs_directory/000/27/working/fq1.fastq -2 /galaxy/server/database/jobs_directory/000/27/working/fq2.fastq -m 1024\n\nSystem information:\n  SPAdes version: 4.0.0\n  Python version: 3.12.4\n  OS: Linux-6.1.100+-x86_64-with-glibc2.36\nOutput dir: /galaxy/server/database/jobs_directory/000/27/working/spades_assembly\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\nDataset parameters:\n  Isolate mode\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/jobs_directory/000/27/working/fq1.fastq']\n      right reads: ['/galaxy/server/database/jobs_directory/000/27/working/fq2.fastq']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [27]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\n  Assembly graph output will use GFA v1.1 format\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/tmp\n  Threads: 8\n  Memory limit (in Gb): 1024\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/spades.log\n/galaxy/server/database/jobs_directory/000/27/working/fq1.fastq: max reads length: 251\n/galaxy/server/database/jobs_directory/000/27/working/fq2.fastq: max reads length: 251\nReads length: 251\n===== Before start started.\n===== Assembling started.\n===== K27 started.\n== Running: /usr/local/bin/spades-core /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/config.info /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/isolate_mode.info\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/config.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (main.cpp                  :  94)   Loaded config from \"/galaxy/server/database/jobs_directory/000/27/working/spades_assembly/K27/configs/isolate_mode.info\"\n  0:00:00.000     1M / 21M   INFO    General                 (memory_limit.cpp          :  55)   Memory limit set to 1024 Gb\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 102)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 103)   Maximum k-mer length: 128\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 104)   Assembling dataset (\"/galaxy/server/database/jobs_directory/000/27/working/spades_assembly/dataset.info\") with K=27\n  0:00:00.001     1M / 21M   INFO    General                 (main.cpp                  : 105)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 212)   SPAdes started\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 225)   Starting from stage: read_conversion\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 234)   Two-step repeat resolution disabled\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 689)   Graph created, vertex min_id: 3, edge min_id: 3\n  0:00:00.001     1M / 21M   INFO   GraphCore                (graph_core.hpp            : 690)   Vertex size: 48, edge size: 40\n  0:00:00.001     1M / 21M   INFO    General                 (edge_index.hpp            : 132)   Size of edge index entries: 12/8\n  0:00:00.001     1M / 21M   INFO    General                 (pipeline.cpp              : 245)   Will need read mapping, kmer mapper will be attached\n  0:00:00.001     1M / 21M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == Binary Read Conversion (id: read_conversion)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  78)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.007     1M / 21M   INFO    General                 (read_converter.cpp        :  99)   Converting paired reads\n  0:00:00.070    81M / 81M   INFO    General                 (binary_converter.cpp      : 143)   7925 reads written\n  0:00:00.072    50M / 50M   INFO    General                 (read_converter.cpp        : 113)   Converting single reads\n  0:00:00.084    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.085    50M / 50M   INFO    General                 (read_converter.cpp        : 119)   Converting merged reads\n  0:00:00.091    63M / 63M   INFO    General                 (binary_converter.cpp      : 143)   0 reads written\n  0:00:00.120     1M / 42M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == de Bruijn graph construction (id: construction)\n  0:00:00.133     1M / 42M   INFO    General                 (construction.cpp          : 150)   Max read length 251\n  0:00:00.133     1M / 42M   INFO    General                 (construction.cpp          : 156)   Average read length 250.525\n  0:00:00.133     1M / 42M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == k+1-mer counting (id: construction:kpomer_counting)\n  0:00:00.133     1M / 42M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:00.134     1M / 42M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:00.134     1M / 42M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:00.134     1M / 42M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:00.824     1M / 55M   INFO    General                 (kmer_splitters.hpp        : 134)   Used 31700 reads\n  0:00:00.827     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.014     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 35249 kmers in total.\n  0:00:01.015     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Extension index construction (id: construction:extension_index_construction)\n  0:00:01.052     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 453)   Building kmer index\n  0:00:01.053     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 258)   Splitting kmer instances into 80 files using 8 threads. This might take a while.\n  0:00:01.054     1M / 55M   INFO    General                 (file_limit.hpp            :  43)   Open file limit set to 1048576\n  0:00:01.054     1M / 55M   INFO    General                 (kmer_splitter.hpp         :  94)   Memory available for splitting buffers: 42.6666 Gb\n  0:00:01.054     1M / 55M   INFO    General                 (kmer_splitter.hpp         : 102)   Using cell size of 838860\n  0:00:01.650  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 197)   Processed 35249 kmers\n  0:00:01.651  4641M / 4641M INFO    General                 (kmer_splitters.hpp        : 202)   Used 35249 kmers.\n  0:00:01.652     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 264)   Starting k-mer counting.\n  0:00:01.840     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 275)   K-mer counting done. There are 34510 kmers in total.\n  0:00:01.840     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:01.884     1M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 34510 kmers, 86928 bytes occupied (20.1514 bits per kmer).\n  0:00:01.884     1M / 55M   INFO    General                 (kmer_index_builder.hpp    : 168)   Merging final buckets.\n  0:00:02.024     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 101)   Building k-mer extensions from k+1-mers\n  0:00:02.035     1M / 55M   INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 106)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.052     1M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Condensing graph (id: construction:graph_condensing)\n  0:00:02.054     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 381)   Extracting unbranching paths\n  0:00:02.057     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 400)   Extracting unbranching paths finished. 2775 sequences extracted\n  0:00:02.059     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 336)   Collecting perfect loops\n  0:00:02.062     1M / 55M   INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 369)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.063     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 586)   Sorting edges...\n  0:00:02.063     1M / 55M   INFO   DeBruijnGraphConstructor (debruijn_graph_constructor: 588)   Edges sorted\n  0:00:02.063     1M / 55M   INFO    General                 (debruijn_graph_constructor: 516)   Total 5550 edges to create\n  0:00:02.063     2M / 55M   INFO    General                 (debruijn_graph_constructor: 519)   Collecting link records\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 521)   Ordering link records\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 524)   Sorting done\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 537)   Sorting LinkRecords...\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 540)   LinkRecords sorted\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 542)   Total 2036 vertices to create\n  0:00:02.065     2M / 55M   INFO    General                 (debruijn_graph_constructor: 545)   Connecting the graph\n  0:00:02.067     2M / 55M   INFO    General                 (stage.cpp                 : 121)   PROCEDURE == Filling coverage indices (PHM) (id: construction:coverage_filling_phm)\n  0:00:02.067     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 410)   Building perfect hash indices\n  0:00:02.099     2M / 55M   INFO   K-mer Index Building     (kmer_index_builder.hpp    : 446)   Index built. Total 35249 kmers, 87400 bytes occupied (19.836 bits per kmer).\n  0:00:02.100     2M / 55M   INFO    General                 (coverage_hash_map_builder.:  49)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.163     2M / 55M   INFO    General                 (construction.cpp          : 427)   Filling coverage and flanking coverage from PHM\n  0:00:02.164     2M / 55M   INFO    General                 (coverage_filling.hpp      :  83)   Processed 5550 edges\n  0:00:02.202     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE == EC Threshold Finding (id: ec_threshold_finder)\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 182)   Kmer coverage valley at: 7\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 202)   K-mer histogram maximum: 695\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 238)   Estimated median coverage: 695. Coverage mad: 91.9212\n  0:00:02.203     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 260)   Fitting coverage model\n  0:00:02.299     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 2\n  0:00:02.590     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 4\n  0:00:03.107     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 8\n  0:00:03.577     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 16\n  0:00:04.375     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 296)   ... iteration 32\n  0:00:04.376     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 310)   Fitted mean coverage: 671.577. Fitted coverage std. dev: 114.418\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 335)   Probability of erroneous kmer at valley: 1\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 359)   Preliminary threshold calculated as: 275\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 363)   Threshold adjusted to: 275\n  0:00:04.377     1M / 55M   INFO    General                 (kmer_coverage_model.cpp   : 376)   Estimated genome size (ignoring repeats): 5132\n  0:00:04.377     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  56)   Mean coverage was calculated as 671.577\n  0:00:04.377     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  71)   EC coverage threshold value was calculated as 275\n  0:00:04.377     1M / 55M   INFO    General                 (genomic_info_filler.cpp   :  72)   Trusted kmer low bound: 0\n  0:00:04.377     1M / 55M   INFO   StageManager             (stage.cpp                 : 189)   STAGE =\n..\n-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k027_assembly_graph.gfa\n\nCleaning k47 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k047_assembly_graph.gfa\n\nCleaning k63 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k063_assembly_graph.gfa\n\nCleaning k77 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k077_assembly_graph.gfa\n\nCleaning k89 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k089_assembly_graph.gfa\n\nCleaning k99 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k099_assembly_graph.gfa\n\nCleaning k107 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k107_assembly_graph.gfa\n\nCleaning k115 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k115_assembly_graph.gfa\n\nCleaning k121 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k121_assembly_graph.gfa\n\nCleaning k127 graph\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k127_assembly_graph.gfa\n\nRepair multi way junctions  (2024-10-14 06:46:12)\nFilter by read depth        (2024-10-14 06:46:12)\nFilter homopolymer loops    (2024-10-14 06:46:12)\nMerge all possible          (2024-10-14 06:46:12)\nNormalise read depths       (2024-10-14 06:46:12)\nRemove zero length segments (2024-10-14 06:46:12)\nSort link order             (2024-10-14 06:46:12)\nGraph cleaning finished     (2024-10-14 06:46:12)\nSaving /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/k27_assembly_graph.gfa\n\n\nSPAdes assembly graph summary (2024-10-14 06:46:12)\nK-mer   Contigs   Links   Total length   N50     Longest contig   Dead ends   Score   \n   27         1       1          5,413   5,413            5,413           0   5.00e-01 <-best\n   47         1       1          5,433   5,433            5,433           0   5.00e-01\n   63         1       1          5,449   5,449            5,449           0   5.00e-01\n   77         1       1          5,463   5,463            5,463           0   5.00e-01\n   89         1       1          5,475   5,475            5,475           0   5.00e-01\n   99         1       1          5,485   5,485            5,485           0   5.00e-01\n  107         1       1          5,493   5,493            5,493           0   5.00e-01\n  115         1       1          5,501   5,501            5,501           0   5.00e-01\n  121         1       1          5,507   5,507            5,507           0   5.00e-01\n  127         1       1          5,513   5,513            5,513           0   5.00e-01\n\nRead depth filter: removed 0 contigs totalling 0 bp\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k027.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k047.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k063.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k077.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k089.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k099.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k107.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k115.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k121.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/001_spades_graph_k127.gfa\nDeleting /galaxy/server/database/jobs_directory/000/27/working/spades_assembly/\n\n\nDetermining graph multiplicity (2024-10-14 06:46:13)\n    Multiplicity is the number of times a sequence occurs in the underlying\nsequence. Single-copy contigs (those with a multiplicity of one, occurring only\nonce in the underlying sequence) are particularly useful.\n    Multiplicity determination begins by identifying contigs which are clearly\nsingle-copy because they are of low depth and do not have more than one link\nper side.\n\nMedian depth of 10 longest contigs: 1.00\n\n\nInitial single copy segments:\n    1\n\n    Unicycler now uses a greedy algorithm to propagate multiplicity through the\ngraph. For example, if two single-copy contigs merge together, the resulting\ncontig will get a multiplicity of two. When no more propagation is possible,\nadditional single-copy contigs are added and the process is repeated. This\nallows for multiplicity to be correctly assigned to the chromosome (at the\nmedian depth) but also for plasmids (which may be higher or lower in depth).\n\n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n       FINDING NEW SINGLE-COPY        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \nREMOVING PROPAGATION TOLERANCE        \n          MERGING MULTIPLICITY        \n        SPLITTING MULTIPLICITY        \n\n\nCleaning graph (2024-10-14 06:46:13)\n    Unicycler now performs various cleaning procedures on the graph to remove\noverlaps and simplify the graph structure. The end result is a graph ready for\nbridging.\n\nGrouping graph edges based on overlap removal\n\r0 / 2 (0.0%)\r1 / 2 (50.0%)\r2 / 2 (100.0%)\n\nRemoving graph overlaps\n\n             Bases     Bases\n           trimmed   trimmed\n Segment      from      from\n  number     start       end\n       1        13        14\nGraph overlaps removed\n\n    Unicycler now selects a set of anchor contigs from the single-copy contigs.\nThese are the contigs which will be connected via bridges to form the final\nassembly.\n\n\n1 anchor segments (5,386 bp) out of 1 total segments (5,386 bp)\n\nAnchor segments:\n    1\n\n\nCreating SPAdes contig bridges (2024-10-14 06:46:13)\n    SPAdes uses paired-end information to perform repeat resolution (RR) and\nproduce contigs from the assembly graph. SPAdes saves the graph paths\ncorresponding to these contigs in the contigs.paths file. When one of these\npaths contains two or more anchor contigs, Unicycler can create a bridge from\nthe path.\n\nNo SPAdes contig bridges\n\n\nCreating loop unrolling bridges (2024-10-14 06:46:13)\n    When a SPAdes contig path connects an anchor contig with the middle contig\nof a simple loop, Unicycler concludes that the sequences are contiguous (i.e.\nthe loop is not a separate piece of DNA). It then uses the read depth of the\nmiddle and repeat contigs to guess the number of times to traverse the loop and\nmakes a bridge.\n\nNo loop unrolling bridges made\nnone found\n\n\nLoading reads (2024-10-14 06:46:13)\n\r0 / 1 (0.0%)\r1 / 1 (100.0%) - 5,386 bp\r1 / 1 (100.0%) - 5,386 bp\n\n\nAssembling contigs and long reads with miniasm (2024-10-14 06:46:13)\n    Unicycler uses miniasm to construct a string graph assembly using both the\nshort read contigs and the long reads. It will then use the resulting string\ngraph to produce bridges between contigs. This method requires decent coverage\nof long reads and therefore may not be fruitful if long reads are sparse.\nHowever, it does not rely on the short read assembly graph having good\nconnectivity and is able to bridge an assembly graph even when it contains many\ndead ends.\n    Unicycler uses two types of \"reads\" as assembly input: anchor contigs from\nthe short-read assembly and actual long reads which overlap two or more of\nthese contigs. It then assembles them with miniasm.\n\nAligning long reads to graph using minimap\nSaving /galaxy/server/database/jobs_directory/000/27/working/miniasm_assembly/all_segments.fasta\n1\t5386\t3\t5158\t+\t1\t5386\t227\t5382\t5155\t5155\t255\tcm:i:1149\n1\t5386\t5163\t5383\t+\t1\t5386\t1\t221\t220\t220\t255\tcm:i:47\nNumber of minimap alignments: 1\n\nSaving to /galaxy/server/database/jobs_directory/000/27/working/miniasm_assembly/01_assembly_reads.fastq:\n  0 short-read contigs\n  1 long reads\n\nFinding overlaps with minimap... failed\nAssembling reads with miniasm... empty result\n\n\nDetermining low score threshold (2024-10-14 06:46:13)\n    Before conducting semi-global alignment of the long reads to the assembly\ngraph, Unicycler must determine a minimum alignment score threshold such that\nnonsense alignments are excluded. To choose a threshold automatically, it\nexamines alignments between random sequences and selects a score a few standard\ndeviations above the mean.\n\nAutomatically choosing a threshold using random alignment scores.\n\nRandom alignment mean score: 61.66\n         standard deviation:  1.31\n        Low score threshold: 61.66 + (7 x 1.31) = 70.86\n\n\nAligning reads with minimap (2024-10-14 06:46:13)\n1\t5386\t5\t5161\t+\t1\t5386\t229\t5385\t5156\t5156\t255\tcm:i:959\n1\t5386\t5168\t5384\t+\t1\t5386\t6\t222\t216\t216\t255\tcm:i:39\n\nDone! 1 out of 1 reads aligned\n\n\nAligning reads (2024-10-14 06:46:13)\n1/1: 1 (5386 bp)\nminimap alignments:\n    5,5161,+,1,229,5385\n    5168,5384,+,1,6,222\nReference ranges:\n    1+: 0 - 5386\nRange: 1: 0 - 5386\n    common 10-mers: 5464\n    line 1: 215 points, score=213.009259 (good)\n    line 2: 5153 points, score=5151.000388 (good)\nAll Seqan alignments (time to align = 0.055 s):\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1          0      224        5162      5386       +        672        100.00   100.00%\n         1        224     5386           0      5162       +      15486        100.00   100.00%\nFinal alignments:\n  Ref name  Ref start  Ref end  Read start  Read end  Strand  Raw score  Scaled score  Identity\n         1        224     5386           0      5162       +      15486        100.00   100.00%\n         1          0      224        5162      5386       +        672        100.00   100.00%\n\n\nRead alignment summary (2024-10-14 06:46:13)\nTotal read count:            1\nFully aligned reads:         1\nPartially aligned reads:     0\nUnaligned reads:             0\nTotal bases aligned:     5,386 bp\nMean alignment identity:   100.0%\n\nDeleting /galaxy/server/database/jobs_directory/000/27/working/read_alignment/\n\nSetting the minimum scaled score to the 5.0th percentile of full read alignments: 0.00\n\n\nBuilding long read bridges (2024-10-14 06:46:13)\n    Unicycler uses the long read alignments to produce bridges between anchor\nsegments. These bridges can be formed using as few as one long read, giving\nUnicycler the ability to bridge the graph even when long-read depth is low.\n\nMedian depth of 10 longest contigs: 1.00\n\n                          Consensus  Consensus  Target                 Search    Path                                             Best path  Best path  Best path     Best path           \n     Start -> end  Reads  len (bp)   time (s)   len (bp)  Search type  time (s)  count  Best path                                 len (bp)   raw score  scaled score  length disc  Quality\n\n\nApplying bridges (2024-10-14 06:46:13)\n    Unicycler now applies to the graph in decreasing order of quality. This\nensures that when multiple, contradictory bridges exist, the most supported\noption is used.\n\nBridge type   Start -> end   Path   Quality   Result\n\n\nCleaning up leftover segments (2024-10-14 06:46:13)\nSegments eligible for deletion:\n\n\nBridged assembly graph (2024-10-14 06:46:13)\n    The assembly is now mostly finished and no more structural changes will be\nmade. Ideally the assembly graph should now have one contig per replicon and no\nerroneous contigs (i.e. a complete assembly). If there are more contigs, then\nthe assembly is not complete.\n\n\nComponent   Segments   Links   Length   N50     Longest segment   Status  \n        1          1       1    5,386   5,386             5,386   complete\n\n\nRotating completed replicons (2024-10-14 06:46:13)\n    Any completed circular contigs (i.e. single contigs which have one link\nconnecting end to start) can have their start position changed without altering\nthe sequence. For consistency, Unicycler now searches for a starting gene (dnaA\nor repA) in each such contig, and if one is found, the contig is rotated to\nstart with that gene on the forward strand.\n\nSegment 1:\n  makeblastdb -dbtype nucl -in replicon.fasta\n  tblastn -db replicon.fasta -query /usr/local/lib/python3.12/site-packages/unicycler/gene_data/start_genes.fasta -outfmt 6 qseqid sstart send pident qlen qseq qstart bitscore -num_threads 1\n\nSegment   Length   Depth   Starting gene   Position   Strand   Identity   Coverage\n      1    5,386   1.00x   none found                                             \n\n\nAssembly complete (2024-10-14 06:46:21)\nSaving /galaxy/server/database/jobs_directory/000/27/working/assembly.gfa\nSaving /galaxy/server/database/jobs_directory/000/27/working/assembly.fasta\n\n", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 06:44:16", "plugin": "core", "name": "start_epoch", "raw_value": "1728888256.0000000"}, {"title": "Job End Time", "value": "2024-10-14 06:46:21", "plugin": "core", "name": "end_epoch", "raw_value": "1728888381.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 minutes", "plugin": "core", "name": "runtime_seconds", "raw_value": "125.0000000"}]}, "status": "success"}}, {"id": "vcfcheck/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfcheck", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 39.28851318359375, "inputs": {"reference_source|ref_file": {"src": "hda", "id": "f5e41a857fdbed88"}, "reference_source|input_vcf": {"src": "hda", "id": "318f7e487b5272cb"}, "reference_source|reference_source_selector": "history", "failure_selector": "-x"}, "job": {"model_class": "Job", "id": "9a1df486a23bc8d4", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcheck/vcfcheck/1.0.0_rc3+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:10:20.778932", "update_time": "2024-10-14T09:10:39.390054", "galaxy_version": "24.1", "external_id": "gxy-7mn7x", "handler": null, "job_runner_name": null, "command_line": "ln -s '/galaxy/server/database/objects/7/7/7/dataset_777b688a-9b6d-4c8a-83f2-faf27563cd92.dat' 'localref.fa' && vcfcheck -x -f 'localref.fa' '/galaxy/server/database/objects/6/f/0/dataset_6f0d4e01-46ab-468d-9905-8fb24ecffbea.dat' > '/galaxy/server/database/objects/d/0/7/dataset_d073c8da-68de-4f20-9afc-3e82af2fc563.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "failure_selector": "\"-x\"", "reference_source": "{\"__current_case__\": 1, \"input_vcf\": {\"values\": [{\"id\": 643, \"src\": \"hda\"}]}, \"ref_file\": {\"values\": [{\"id\": 642, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}"}, "inputs": {"reference_source|input_vcf": {"id": "318f7e487b5272cb", "src": "hda", "uuid": "6f0d4e01-46ab-468d-9905-8fb24ecffbea"}, "reference_source|ref_file": {"id": "f5e41a857fdbed88", "src": "hda", "uuid": "777b688a-9b6d-4c8a-83f2-faf27563cd92"}}, "outputs": {"out_file1": {"id": "54e7c78bebcda1ae", "src": "hda", "uuid": "d073c8da-68de-4f20-9afc-3e82af2fc563"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "index file localref.fa.fai not found, generating...\n", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "index file localref.fa.fai not found, generating...\n", "job_messages": [{"code_desc": null, "desc": "Warning: Matched on index file", "error_level": 2, "match": "index file", "stream": "stderr", "type": "regex"}], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:10:27", "plugin": "core", "name": "end_epoch", "raw_value": "1728897027.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:10:27", "plugin": "core", "name": "start_epoch", "raw_value": "1728897027.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "vcfdistance/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfdistance", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 32.113852739334106, "inputs": {"input1": {"src": "hda", "id": "2f96f2e592ad966e"}}, "job": {"model_class": "Job", "id": "e89481eb9084ceea", "history_id": "0ef228bbda99821b", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfdistance/vcfdistance/1.0.0_rc3+galaxy0", "state": "ok", "exit_code": 0, "create_time": "2024-10-14T09:11:00.989698", "update_time": "2024-10-14T09:11:12.753715", "galaxy_version": "24.1", "external_id": "gxy-zbn67", "handler": null, "job_runner_name": null, "command_line": "cat '/galaxy/server/database/objects/7/8/d/dataset_78d8bcb0-52f9-437a-9045-96a2de5f242b.dat' | vcfdistance > '/galaxy/server/database/objects/5/a/0/dataset_5a0b979c-5265-4954-a51d-0c0339c5a6ec.dat'", "user_email": "tests@fake.org", "command_version": "", "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input1": {"id": "2f96f2e592ad966e", "src": "hda", "uuid": "78d8bcb0-52f9-437a-9045-96a2de5f242b"}}, "outputs": {"out_file1": {"id": "a13cec8f7af3d673", "src": "hda", "uuid": "5a0b979c-5265-4954-a51d-0c0339c5a6ec"}}, "copied_from_job_id": null, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stdout": "", "stderr": "", "job_messages": [], "dependencies": [], "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2024-10-14 09:11:02", "plugin": "core", "name": "end_epoch", "raw_value": "1728897062.0000000"}, {"title": "Job Start Time", "value": "2024-10-14 09:11:02", "plugin": "core", "name": "start_epoch", "raw_value": "1728897062.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}], "galaxy_url": "http://34.139.129.124:8000/galaxy/"}