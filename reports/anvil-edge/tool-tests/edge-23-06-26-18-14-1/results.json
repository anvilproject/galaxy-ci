{"version": "0.1", "suitename": "Galaxy Tool Tests", "results": {"total": 73, "errors": 6, "failures": 9, "skips": 2}, "tests": [{"id": "bcftools_filter/1.10-0", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 0, "time_seconds": 30.449180603027344, "inputs": {"input_file": {"src": "hda", "id": "88ba7b1f31215f68"}, "sec_filter|SnpGap": "2", "sec_filter|IndelGap": "2", "sec_filter|mode": "x", "output_type": "v"}, "job": {"model_class": "Job", "id": "0dbbc78985c8d74f", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:59:45.827571", "create_time": "2023-06-26T18:59:30.004794", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-fh5sl", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/1/7/9/dataset_179ff300-9a68-4707-8474-3a52e3affe67.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --SnpGap \"2\" --IndelGap \"2\" --mode 'x'                --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/6/f/d/dataset_6fdd1071-8fdd-40be-be58-151b0161ecc4.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"2\", \"SnpGap\": \"2\", \"mode\": \"x\", \"select_set_GTs\": null, \"soft_filter\": \"\"}", "sec_restrict": "{\"exclude\": null, \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "88ba7b1f31215f68", "src": "hda", "uuid": "179ff300-9a68-4707-8474-3a52e3affe67"}}, "outputs": {"output_file": {"id": "703885271a746f1b", "src": "hda", "uuid": "6fdd1071-8fdd-40be-be58-151b0161ecc4"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:59:36", "plugin": "core", "name": "end_epoch", "raw_value": "1687805976.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:59:35", "plugin": "core", "name": "start_epoch", "raw_value": "1687805975.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-1", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 1, "time_seconds": 23.95481038093567, "inputs": {"input_file": {"src": "hda", "id": "4ebbbd3e722fa6ac"}, "sec_restrict|exclude": "QUAL==59.2 || (INDEL=0 & (FMT/GQ=25 | FMT/DP=10))", "sec_filter|soft_filter": "Modified", "sec_filter|select_set_GTs": ".", "output_type": "v"}, "job": {"model_class": "Job", "id": "510a6ba987de56e7", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T19:00:10.026615", "create_time": "2023-06-26T18:59:59.212629", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-kww29", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/8/b/7/dataset_8b7376f8-9198-468b-a0b7-d21d8ebacbb0.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --soft-filter \"Modified\" --set-GTs \".\"             --exclude 'QUAL==59.2 || (INDEL=0 & (FMT/GQ=25 | FMT/DP=10))'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/c/d/4/dataset_cd4053ac-fceb-4de6-a373-43cbff3d2e00.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": \".\", \"soft_filter\": \"Modified\"}", "sec_restrict": "{\"exclude\": \"QUAL==59.2 || (INDEL=0 & (FMT/GQ=25 | FMT/DP=10))\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "4ebbbd3e722fa6ac", "src": "hda", "uuid": "8b7376f8-9198-468b-a0b7-d21d8ebacbb0"}}, "outputs": {"output_file": {"id": "b4f61b500c00be1a", "src": "hda", "uuid": "cd4053ac-fceb-4de6-a373-43cbff3d2e00"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 19:00:01", "plugin": "core", "name": "end_epoch", "raw_value": "1687806001.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 19:00:01", "plugin": "core", "name": "start_epoch", "raw_value": "1687806001.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-2", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 2, "time_seconds": 23.24290633201599, "inputs": {"input_file": {"src": "hda", "id": "3b3e56378a3fd189"}, "sec_restrict|exclude": "INFO/DP=19", "output_type": "v"}, "job": {"model_class": "Job", "id": "cbf4de2a053889a2", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T19:00:33.331137", "create_time": "2023-06-26T19:00:23.459451", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-b2pk2", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/c/9/f/dataset_c9f9ca85-c15e-4be3-af12-537717e3b894.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter              --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/b/3/f/dataset_b3f6c5fe-2e96-408c-bd18-4d9d6f121c76.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "3b3e56378a3fd189", "src": "hda", "uuid": "c9f9ca85-c15e-4be3-af12-537717e3b894"}}, "outputs": {"output_file": {"id": "5ea7b37ce0ceea1c", "src": "hda", "uuid": "b3f6c5fe-2e96-408c-bd18-4d9d6f121c76"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 19:00:24", "plugin": "core", "name": "end_epoch", "raw_value": "1687806024.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 19:00:24", "plugin": "core", "name": "start_epoch", "raw_value": "1687806024.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-3", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 3, "time_seconds": 24.48389196395874, "inputs": {"input_file": {"src": "hda", "id": "478652366fc45df4"}, "sec_restrict|exclude": "INFO/DP=19", "sec_filter|soft_filter": "XX", "output_type": "v"}, "job": {"model_class": "Job", "id": "98adf46d9bd273c4", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T19:00:57.778015", "create_time": "2023-06-26T19:00:46.774237", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-5k5bk", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/c/3/4/dataset_c3423b2b-4618-4fd0-9a1d-b655e7a48b59.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --soft-filter \"XX\"             --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/1/f/3/dataset_1f3c1368-2331-49b0-ba9e-722368cbecf5.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"XX\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "478652366fc45df4", "src": "hda", "uuid": "c3423b2b-4618-4fd0-9a1d-b655e7a48b59"}}, "outputs": {"output_file": {"id": "4f41d4c7d15e6f34", "src": "hda", "uuid": "1f3c1368-2331-49b0-ba9e-722368cbecf5"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 19:00:48", "plugin": "core", "name": "end_epoch", "raw_value": "1687806048.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 19:00:48", "plugin": "core", "name": "start_epoch", "raw_value": "1687806048.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-4", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 4, "time_seconds": 7.644054651260376, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "bcftools_filter/1.10-5", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 5, "time_seconds": 23.53083372116089, "inputs": {"input_file": {"src": "hda", "id": "1c09e24375a74cca"}, "sec_restrict|exclude": "INFO/DP=19", "sec_filter|mode": "x", "sec_filter|soft_filter": "XX", "output_type": "v"}, "job": {"model_class": "Job", "id": "3e4c49259485f800", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T19:01:29.140792", "create_time": "2023-06-26T19:01:18.687846", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-mdw8p", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/3/3/dataset_233f0652-c7d8-4cdf-a893-c8ed72692a11.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --mode 'x' --soft-filter \"XX\"             --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/2/4/1/dataset_2417ab17-0674-4bb3-8840-d2ec121ab107.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": \"x\", \"select_set_GTs\": null, \"soft_filter\": \"XX\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "1c09e24375a74cca", "src": "hda", "uuid": "233f0652-c7d8-4cdf-a893-c8ed72692a11"}}, "outputs": {"output_file": {"id": "98f95b54ee3b6f93", "src": "hda", "uuid": "2417ab17-0674-4bb3-8840-d2ec121ab107"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 19:01:20", "plugin": "core", "name": "end_epoch", "raw_value": "1687806080.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 19:01:20", "plugin": "core", "name": "start_epoch", "raw_value": "1687806080.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-6", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 6, "time_seconds": 23.476967573165894, "inputs": {"input_file": {"src": "hda", "id": "594b258620b5ab3f"}, "sec_restrict|exclude": "INFO/DP=19", "sec_filter|mode": ["+", "x"], "sec_filter|soft_filter": "XX", "output_type": "v"}, "job": {"model_class": "Job", "id": "d79e9c7d169f7848", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T19:01:52.433704", "create_time": "2023-06-26T19:01:42.501370", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-8kp4b", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/7/1/b/dataset_71bdf7eb-6c9d-4232-8f94-5ba6353653cd.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter  --mode '+x' --soft-filter \"XX\"             --exclude 'INFO/DP=19'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/9/5/e/dataset_95e81d62-1b42-43af-ad9d-5823a472353f.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": [\"+\", \"x\"], \"select_set_GTs\": null, \"soft_filter\": \"XX\"}", "sec_restrict": "{\"exclude\": \"INFO/DP=19\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "594b258620b5ab3f", "src": "hda", "uuid": "71bdf7eb-6c9d-4232-8f94-5ba6353653cd"}}, "outputs": {"output_file": {"id": "3eff8054f5602282", "src": "hda", "uuid": "95e81d62-1b42-43af-ad9d-5823a472353f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-26 19:01:44", "plugin": "core", "name": "end_epoch", "raw_value": "1687806104.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 19:01:43", "plugin": "core", "name": "start_epoch", "raw_value": "1687806103.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-7", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 7, "time_seconds": 23.20578646659851, "inputs": {"input_file": {"src": "hda", "id": "644b02104791c14a"}, "sec_restrict|exclude": "FMT/GT=\"0/2\"", "output_type": "v"}, "job": {"model_class": "Job", "id": "6d728edd7e3edb65", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T19:02:15.782229", "create_time": "2023-06-26T19:02:05.762333", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_filter/bcftools_filter/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-422bt", "command_line": "export BCFTOOLS_PLUGINS=`which bcftools | sed 's,bin/bcftools,libexec/bcftools,'`;     bgzip -c '/galaxy/server/database/objects/2/9/b/dataset_29bb3d31-c148-48cb-a170-418c8ddae3f9.dat' > input.vcf.gz && bcftools index input.vcf.gz &&            bcftools filter              --exclude 'FMT/GT=\"0/2\"'    --output-type 'v'   --threads ${GALAXY_SLOTS:-4}    input.vcf.gz  > '/galaxy/server/database/objects/e/0/1/dataset_e014eeda-b018-431f-b0c9-347ae39b0782.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_filter": "{\"IndelGap\": \"\", \"SnpGap\": \"\", \"mode\": null, \"select_set_GTs\": null, \"soft_filter\": \"\"}", "sec_restrict": "{\"exclude\": \"FMT/GT=\\\"0/2\\\"\", \"include\": null, \"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}"}, "inputs": {"input_file": {"id": "644b02104791c14a", "src": "hda", "uuid": "29bb3d31-c148-48cb-a170-418c8ddae3f9"}}, "outputs": {"output_file": {"id": "56b1e8bf8b068c0c", "src": "hda", "uuid": "e014eeda-b018-431f-b0c9-347ae39b0782"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 19:02:07", "plugin": "core", "name": "end_epoch", "raw_value": "1687806127.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 19:02:07", "plugin": "core", "name": "start_epoch", "raw_value": "1687806127.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "bcftools_filter/1.10-8", "has_data": true, "data": {"tool_id": "bcftools_filter", "tool_version": "1.10", "test_index": 8, "time_seconds": 7.899355888366699, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "bcftools_mpileup/1.10-0", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 0, "time_seconds": 30.42647886276245, "inputs": {"input|input_bam": {"src": "hda", "id": "622e85ddc93b8870"}, "input|input_number": "single", "reference_source|ref_file": {"src": "hda", "id": "10886f348a3c3ec2"}, "reference_source|reference_source_selector": "history", "output_type": "v"}, "job": {"model_class": "Job", "id": "f1b0b1849e1ba6f9", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:57:25.882961", "create_time": "2023-06-26T18:57:10.108806", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-4vz77", "command_line": "ln -s '/galaxy/server/database/objects/0/0/6/dataset_00696fb5-8d74-4cf7-a5d5-9d36492ceb0f.dat' mpileup_1.bam && ln -s '/galaxy/server/database/objects/_metadata_files/1/9/8/metadata_198369e1-adf2-43f3-96ac-0aae68d47366.dat' mpileup_1.bam.bai &&  ln -s '/galaxy/server/database/objects/6/d/f/dataset_6df90729-6703-498f-9601-11f0d892b1b5.dat' ref.fa && samtools faidx ref.fa &&           bcftools mpileup  --fasta-ref 'ref.fa'   -d \"250\"                 --threads ${GALAXY_SLOTS:-4}    --output-type 'v'   mpileup_1.bam > '/galaxy/server/database/objects/d/8/a/dataset_d8ab0108-9133-41a2-aec4-d141024d0cac.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}", "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 203, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "input": "{\"__current_case__\": 0, \"input_bam\": {\"values\": [{\"id\": 202, \"src\": \"hda\"}]}, \"input_number\": \"single\"}"}, "inputs": {"input_bam": {"id": "622e85ddc93b8870", "src": "hda", "uuid": "00696fb5-8d74-4cf7-a5d5-9d36492ceb0f"}, "ref_file": {"id": "10886f348a3c3ec2", "src": "hda", "uuid": "6df90729-6703-498f-9601-11f0d892b1b5"}}, "outputs": {"output_file": {"id": "035947a722eeb719", "src": "hda", "uuid": "d8ab0108-9133-41a2-aec4-d141024d0cac"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "job_stdout": "", "job_stderr": "", "stderr": "[mpileup] 1 samples in 1 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:57:16", "plugin": "core", "name": "end_epoch", "raw_value": "1687805836.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:57:16", "plugin": "core", "name": "start_epoch", "raw_value": "1687805836.0000000"}, {"title": "Memory Allocated (MB)", "value": "28561", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "28561.0000000"}, {"title": "Cores Allocated", "value": "7", "plugin": "core", "name": "galaxy_slots", "raw_value": "7.0000000"}]}, "status": "success"}}, {"id": "bcftools_mpileup/1.10-1", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 1, "status": "skip"}}, {"id": "bcftools_mpileup/1.10-2", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 2, "time_seconds": 9.728639125823975, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "bcftools_mpileup/1.10-3", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 3, "time_seconds": 32.33084559440613, "inputs": {"input|input_bams": [{"src": "hda", "id": "89835374be02ffbb"}, {"src": "hda", "id": "ea0409b5af7d3f0e"}, {"src": "hda", "id": "8c0b9124f557aafe"}], "input|input_number": "multiple", "reference_source|ref_file": {"src": "hda", "id": "07911bb083402ebb"}, "reference_source|reference_source_selector": "history", "sec_restrict|regions|regions_0|chrom": "17", "sec_restrict|regions|regions_0|start": "100", "sec_restrict|regions|regions_0|stop": "110", "sec_restrict|regions|regions_src": "regions", "sec_output_options|output_tags": ["DP", "INFO/AD", "DV"], "output_type": "v"}, "job": {"model_class": "Job", "id": "db100e5ad1f04055", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:58:08.219039", "create_time": "2023-06-26T18:57:56.720652", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-mrz6h", "command_line": "ln -s '/galaxy/server/database/objects/b/c/c/dataset_bcc606f8-79ce-4660-b02d-fc2738608dcd.dat' mpileup_1.bam && ln -s '/galaxy/server/database/objects/_metadata_files/5/e/a/metadata_5ea9bbad-3158-45e7-9ff3-73ac0cc4a27f.dat' mpileup_1.bam.bai && ln -s '/galaxy/server/database/objects/3/6/4/dataset_3645a343-8629-4d99-824b-7ac9621730ab.dat' mpileup_2.bam && ln -s '/galaxy/server/database/objects/_metadata_files/2/c/c/metadata_2cc1e59d-776c-4efc-8a36-4e5f8c6da0f0.dat' mpileup_2.bam.bai && ln -s '/galaxy/server/database/objects/c/3/2/dataset_c322275b-8df0-4a80-8999-7ab956547717.dat' mpileup_3.bam && ln -s '/galaxy/server/database/objects/_metadata_files/3/a/f/metadata_3afcd8c0-a3b9-46f4-9bad-16037c4eec73.dat' mpileup_3.bam.bai &&  ln -s '/galaxy/server/database/objects/6/2/6/dataset_626759be-e23a-4feb-8d74-feb869f797b0.dat' ref.fa && samtools faidx ref.fa &&           bcftools mpileup  --fasta-ref 'ref.fa'   -d \"250\"   --annotate \"DP,INFO/AD,DV\"            --regions '17:100-110'         --threads ${GALAXY_SLOTS:-4}    --output-type 'v'   mpileup_1.bam mpileup_2.bam mpileup_3.bam > '/galaxy/server/database/objects/1/7/b/dataset_17b8eb3d-96c2-4940-ac89-0180f414f85f.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}", "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"100\", \"stop\": \"110\"}], \"regions_src\": \"regions\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 210, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 207, \"src\": \"hda\"}, {\"id\": 208, \"src\": \"hda\"}, {\"id\": 209, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}"}, "inputs": {"input_bams1": {"id": "89835374be02ffbb", "src": "hda", "uuid": "bcc606f8-79ce-4660-b02d-fc2738608dcd"}, "input_bams": {"id": "89835374be02ffbb", "src": "hda", "uuid": "bcc606f8-79ce-4660-b02d-fc2738608dcd"}, "input_bams2": {"id": "ea0409b5af7d3f0e", "src": "hda", "uuid": "3645a343-8629-4d99-824b-7ac9621730ab"}, "input_bams3": {"id": "8c0b9124f557aafe", "src": "hda", "uuid": "c322275b-8df0-4a80-8999-7ab956547717"}, "ref_file": {"id": "07911bb083402ebb", "src": "hda", "uuid": "626759be-e23a-4feb-8d74-feb869f797b0"}}, "outputs": {"output_file": {"id": "f5dc3f5e26b2d829", "src": "hda", "uuid": "17b8eb3d-96c2-4940-ac89-0180f414f85f"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "job_stdout": "", "job_stderr": "", "stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:57:58", "plugin": "core", "name": "end_epoch", "raw_value": "1687805878.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:57:58", "plugin": "core", "name": "start_epoch", "raw_value": "1687805878.0000000"}, {"title": "Memory Allocated (MB)", "value": "28561", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "28561.0000000"}, {"title": "Cores Allocated", "value": "7", "plugin": "core", "name": "galaxy_slots", "raw_value": "7.0000000"}]}, "status": "success"}}, {"id": "bcftools_mpileup/1.10-4", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 4, "time_seconds": 35.170716285705566, "inputs": {"input|input_bams": [{"src": "hda", "id": "60cc609bc2274735"}, {"src": "hda", "id": "dbecf09624648d5f"}, {"src": "hda", "id": "eff04cd6652b1434"}], "input|input_number": "multiple", "reference_source|ref_file": {"src": "hda", "id": "8888d06cd23dd25c"}, "reference_source|reference_source_selector": "history", "sec_restrict|targets|targets_0|chrom": "17", "sec_restrict|targets|targets_0|start": "100", "sec_restrict|targets|targets_0|stop": "104", "sec_restrict|targets|targets_src": "targets", "sec_output_options|output_tags": ["DP", "INFO/AD", "DV"], "output_type": "v"}, "job": {"model_class": "Job", "id": "d69bb980543af57f", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:58:43.182175", "create_time": "2023-06-26T18:58:32.622128", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-gjppp", "command_line": "ln -s '/galaxy/server/database/objects/e/9/c/dataset_e9c255a6-b52e-4314-a2eb-f08d8b2554c9.dat' mpileup_1.bam && ln -s '/galaxy/server/database/objects/_metadata_files/9/b/1/metadata_9b1e7a63-c039-4031-a1bb-995617f6390d.dat' mpileup_1.bam.bai && ln -s '/galaxy/server/database/objects/d/2/4/dataset_d2435bf6-dd7a-446f-97ab-2c7a82394598.dat' mpileup_2.bam && ln -s '/galaxy/server/database/objects/_metadata_files/0/6/8/metadata_06884512-80eb-48e0-8b82-ef6f48e717ac.dat' mpileup_2.bam.bai && ln -s '/galaxy/server/database/objects/6/f/c/dataset_6fc74df9-4033-4ab6-a08e-89cea74f8889.dat' mpileup_3.bam && ln -s '/galaxy/server/database/objects/_metadata_files/a/a/3/metadata_aa31cba1-02cc-4da9-ba90-3d731f01fcd5.dat' mpileup_3.bam.bai &&  ln -s '/galaxy/server/database/objects/9/0/3/dataset_903c9429-57fa-449f-9ed0-c1f0719252bb.dat' ref.fa && samtools faidx ref.fa &&           bcftools mpileup  --fasta-ref 'ref.fa'   -d \"250\"   --annotate \"DP,INFO/AD,DV\"                --targets '17:100-104'     --threads ${GALAXY_SLOTS:-4}    --output-type 'v'   mpileup_1.bam mpileup_2.bam mpileup_3.bam > '/galaxy/server/database/objects/c/b/b/dataset_cbb82b4f-484c-4e89-bd23-6a74412806fe.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": [\"DP\", \"INFO/AD\", \"DV\"]}", "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 0, \"regions_src\": \"__none__\"}, \"targets\": {\"__current_case__\": 1, \"invert_targets_file\": false, \"targets\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"100\", \"stop\": \"104\"}], \"targets_src\": \"targets\"}}", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 215, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 212, \"src\": \"hda\"}, {\"id\": 213, \"src\": \"hda\"}, {\"id\": 214, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}"}, "inputs": {"input_bams": {"id": "60cc609bc2274735", "src": "hda", "uuid": "e9c255a6-b52e-4314-a2eb-f08d8b2554c9"}, "input_bams1": {"id": "60cc609bc2274735", "src": "hda", "uuid": "e9c255a6-b52e-4314-a2eb-f08d8b2554c9"}, "input_bams2": {"id": "dbecf09624648d5f", "src": "hda", "uuid": "d2435bf6-dd7a-446f-97ab-2c7a82394598"}, "input_bams3": {"id": "eff04cd6652b1434", "src": "hda", "uuid": "6fc74df9-4033-4ab6-a08e-89cea74f8889"}, "ref_file": {"id": "8888d06cd23dd25c", "src": "hda", "uuid": "903c9429-57fa-449f-9ed0-c1f0719252bb"}}, "outputs": {"output_file": {"id": "6489082929cde14a", "src": "hda", "uuid": "cbb82b4f-484c-4e89-bd23-6a74412806fe"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "job_stdout": "", "job_stderr": "", "stderr": "[warning] tag DV functional, but deprecated. Please switch to `AD` in future.\n[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:58:34", "plugin": "core", "name": "end_epoch", "raw_value": "1687805914.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:58:34", "plugin": "core", "name": "start_epoch", "raw_value": "1687805914.0000000"}, {"title": "Memory Allocated (MB)", "value": "28561", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "28561.0000000"}, {"title": "Cores Allocated", "value": "7", "plugin": "core", "name": "galaxy_slots", "raw_value": "7.0000000"}]}, "status": "success"}}, {"id": "bcftools_mpileup/1.10-5", "has_data": true, "data": {"tool_id": "bcftools_mpileup", "tool_version": "1.10", "test_index": 5, "time_seconds": 30.94412398338318, "inputs": {"input|input_bams": [{"src": "hda", "id": "a1059ebffe5b4115"}, {"src": "hda", "id": "dd6e0fa2b4fbcecb"}, {"src": "hda", "id": "dd4354648d4e0502"}], "input|input_number": "multiple", "reference_source|ref_file": {"src": "hda", "id": "6ae66bc27bb36380"}, "reference_source|reference_source_selector": "history", "sec_filtering|filter_by_flags|exclude_flags": ["4", "16"], "sec_filtering|filter_by_flags|filter_flags": "filter", "sec_restrict|regions|regions_0|chrom": "17", "sec_restrict|regions|regions_0|start": "1050", "sec_restrict|regions|regions_0|stop": "1060", "sec_restrict|regions|regions_src": "regions", "output_type": "v"}, "job": {"model_class": "Job", "id": "74a5e78fd6decc6f", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:59:14.271114", "create_time": "2023-06-26T18:59:03.639638", "galaxy_version": "23.0", "command_version": "Version: 1.10.2 (using htslib 1.10.2)", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10", "history_id": "32841e823f71086a", "external_id": "gxy-88qpm", "command_line": "ln -s '/galaxy/server/database/objects/b/8/5/dataset_b853199e-2b5a-4405-904b-d9c51ed807f0.dat' mpileup_1.bam && ln -s '/galaxy/server/database/objects/_metadata_files/b/4/0/metadata_b4094b3a-0c6a-4be2-bcfe-2fe102b1deea.dat' mpileup_1.bam.bai && ln -s '/galaxy/server/database/objects/a/e/a/dataset_aea846b0-7000-44cd-bcd8-1462f0fd2a6e.dat' mpileup_2.bam && ln -s '/galaxy/server/database/objects/_metadata_files/b/2/9/metadata_b2927a84-34c9-407d-bb08-aef7f30f0e25.dat' mpileup_2.bam.bai && ln -s '/galaxy/server/database/objects/0/b/9/dataset_0b9b22c9-2cfe-461c-adf9-473b44d7f8b7.dat' mpileup_3.bam && ln -s '/galaxy/server/database/objects/_metadata_files/c/5/3/metadata_c5387536-4b1b-493b-a934-1d19a388821f.dat' mpileup_3.bam.bai &&  ln -s '/galaxy/server/database/objects/d/d/a/dataset_ddab6ef8-67c5-4efe-beca-36e34593ef2e.dat' ref.fa && samtools faidx ref.fa &&           bcftools mpileup  --fasta-ref 'ref.fa'   --ff 20 -d \"250\"              --regions '17:1050-1060'         --threads ${GALAXY_SLOTS:-4}    --output-type 'v'   mpileup_1.bam mpileup_2.bam mpileup_3.bam > '/galaxy/server/database/objects/f/b/d/dataset_fbd2957b-60f2-4f1c-b925-f7b87d979565.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_type": "\"v\"", "sec_output_options": "{\"gvcf\": \"\", \"output_tags\": null}", "sec_subset": "{\"invert_samples\": false, \"invert_samples_file\": false, \"samples\": \"\", \"samples_file\": null}", "sec_restrict": "{\"regions\": {\"__current_case__\": 1, \"regions\": [{\"__index__\": 0, \"chrom\": \"17\", \"start\": \"1050\", \"stop\": \"1060\"}], \"regions_src\": \"regions\"}, \"targets\": {\"__current_case__\": 0, \"targets_src\": \"__none__\"}}", "sec_filtering": "{\"filter_by_flags\": {\"__current_case__\": 0, \"exclude_flags\": [\"4\", \"16\"], \"filter_flags\": \"filter\", \"require_flags\": null}, \"ignore_overlaps\": false, \"max_reads_per_bam\": \"250\", \"quality\": {\"__current_case__\": 1, \"quality_settings\": \"none\"}, \"read_groups\": {\"__current_case__\": 3, \"read_groups_selector\": \"no_limit\"}, \"skip_anomalous_read_pairs\": false}", "sec_indel": "{\"perform_indel_calling\": {\"__current_case__\": 0, \"perform_indel_calling_selector\": \"perform_indel_calling_def\"}}", "reference_source": "{\"__current_case__\": 1, \"ref_file\": {\"values\": [{\"id\": 220, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}", "input": "{\"__current_case__\": 1, \"input_bams\": {\"values\": [{\"id\": 217, \"src\": \"hda\"}, {\"id\": 218, \"src\": \"hda\"}, {\"id\": 219, \"src\": \"hda\"}]}, \"input_number\": \"multiple\"}"}, "inputs": {"input_bams": {"id": "a1059ebffe5b4115", "src": "hda", "uuid": "b853199e-2b5a-4405-904b-d9c51ed807f0"}, "input_bams1": {"id": "a1059ebffe5b4115", "src": "hda", "uuid": "b853199e-2b5a-4405-904b-d9c51ed807f0"}, "input_bams2": {"id": "dd6e0fa2b4fbcecb", "src": "hda", "uuid": "aea846b0-7000-44cd-bcd8-1462f0fd2a6e"}, "input_bams3": {"id": "dd4354648d4e0502", "src": "hda", "uuid": "0b9b22c9-2cfe-461c-adf9-473b44d7f8b7"}, "ref_file": {"id": "6ae66bc27bb36380", "src": "hda", "uuid": "ddab6ef8-67c5-4efe-beca-36e34593ef2e"}}, "outputs": {"output_file": {"id": "2c132c7951973956", "src": "hda", "uuid": "fbd2957b-60f2-4f1c-b925-f7b87d979565"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "job_stdout": "", "job_stderr": "", "stderr": "[mpileup] 3 samples in 3 input files\n[mpileup] maximum number of reads per input file set to -d 250\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:59:05", "plugin": "core", "name": "end_epoch", "raw_value": "1687805945.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:59:05", "plugin": "core", "name": "start_epoch", "raw_value": "1687805945.0000000"}, {"title": "Memory Allocated (MB)", "value": "28561", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "28561.0000000"}, {"title": "Cores Allocated", "value": "7", "plugin": "core", "name": "galaxy_slots", "raw_value": "7.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_pe_fragmentsize/3.3.2.0.0-0", "has_data": true, "data": {"tool_id": "deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 0, "time_seconds": 53.6154580116272, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "bfffe3421140fe80"}, "histogram": true, "plotTitle": "Test Plot"}, "job": {"model_class": "Job", "id": "5106badfe8857c9c", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:36:01.308384", "create_time": "2023-06-26T18:35:21.727413", "galaxy_version": "23.0", "command_version": "bamPEFragmentSize 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "32841e823f71086a", "external_id": "gxy-lkw7h", "command_line": "ln -s '/galaxy/server/database/objects/4/b/9/dataset_4b99dde5-495d-4202-88ff-2faf69c448ea.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/8/8/f/metadata_88fb61e2-561c-48e6-bdae-9b192f6d2f7d.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --histogram '/galaxy/server/database/objects/6/0/4/dataset_60425204-a87a-40c0-955d-939340465dfe.dat' --plotFileFormat 'png' --plotTitle 'Test Plot' > '/galaxy/server/database/objects/e/b/0/dataset_eb041dee-12cf-4602-9c3f-4c4f03ac2403.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 0, \"showAdvancedOpt\": \"no\"}", "plotTitle": "\"Test Plot\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "true", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 59, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"bamfiles": {"id": "bfffe3421140fe80", "src": "hda", "uuid": "4b99dde5-495d-4202-88ff-2faf69c448ea"}, "bamfiles1": {"id": "bfffe3421140fe80", "src": "hda", "uuid": "4b99dde5-495d-4202-88ff-2faf69c448ea"}}, "outputs": {"outfile": {"id": "c35e24de38089aba", "src": "hda", "uuid": "eb041dee-12cf-4602-9c3f-4c4f03ac2403"}, "histogram_outfile": {"id": "fb3eb81f35ed69f7", "src": "hda", "uuid": "60425204-a87a-40c0-955d-939340465dfe"}, "table": {"id": "eb8e759217bb29d6", "src": "hda", "uuid": "b284fac7-004f-4f99-b4db-91a1c80c9c3d"}, "fragLengths": {"id": "440b3854c8b481d1", "src": "hda", "uuid": "3c7cd5cc-96de-451c-bf13-ed555aac8bea"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:35:43", "plugin": "core", "name": "start_epoch", "raw_value": "1687804543.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:35:46", "plugin": "core", "name": "end_epoch", "raw_value": "1687804546.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "3 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "3.0000000"}]}, "status": "success"}}, {"id": "deeptools_bam_pe_fragmentsize/3.3.2.0.0-1", "has_data": true, "data": {"tool_id": "deeptools_bam_pe_fragmentsize", "tool_version": "3.3.2.0.0", "test_index": 1, "time_seconds": 25.29455828666687, "inputs": {"multibam_conditional|bamfiles": {"src": "hda", "id": "9b33ee0a7873f353"}, "advancedOpt|table": true, "advancedOpt|outRawFragmentLengths": true, "advancedOpt|showAdvancedOpt": "yes"}, "job": {"model_class": "Job", "id": "84665e531daa9685", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:36:26.597267", "create_time": "2023-06-26T18:36:13.767530", "galaxy_version": "23.0", "command_version": "bamPEFragmentSize 3.3.2", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_pe_fragmentsize/deeptools_bam_pe_fragmentsize/3.3.2.0.0", "history_id": "32841e823f71086a", "external_id": "gxy-2mlrf", "command_line": "ln -s '/galaxy/server/database/objects/1/b/d/dataset_1bd38808-1e6a-498f-a354-05a0e0206dad.dat' './0.bam' && ln -s '/galaxy/server/database/objects/_metadata_files/1/9/2/metadata_19231809-8b2c-47ae-a691-39a64ac4a12b.dat' './0.bam.bai' &&   bamPEFragmentSize --numberOfProcessors \"${GALAXY_SLOTS:-4}\" --bamfiles '0.bam' --samplesLabel 'bowtie2 test1.bam' --plotTitle '' --binSize '1000' --distanceBetweenBins '1000000'  --maxFragmentLength '0'     --table '/galaxy/server/database/objects/d/6/d/dataset_d6d00cd5-d246-47bc-a028-67ececf96c6b.dat' --outRawFragmentLengths '/galaxy/server/database/objects/6/a/3/dataset_6a350080-2df1-4ce6-a2e1-34471ad9154f.dat' > '/galaxy/server/database/objects/2/6/2/dataset_262e5771-d338-431e-bff4-33f904085936.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "advancedOpt": "{\"__current_case__\": 1, \"binSize\": \"1000\", \"blackListFileName\": null, \"distanceBetweenBins\": \"1000000\", \"logScale\": false, \"maxFragmentLength\": \"0\", \"outRawFragmentLengths\": true, \"showAdvancedOpt\": \"yes\", \"table\": true}", "plotTitle": "\"\"", "samplesLabel": null, "outFileFormat": "\"png\"", "histogram": "false", "custom_sample_labels_conditional": "{\"__current_case__\": 0, \"custom_labels_select\": \"No\"}", "multibam_conditional": "{\"__current_case__\": 0, \"bamfiles\": {\"values\": [{\"id\": 64, \"src\": \"hda\"}]}, \"orderMatters\": \"No\"}"}, "inputs": {"bamfiles1": {"id": "9b33ee0a7873f353", "src": "hda", "uuid": "1bd38808-1e6a-498f-a354-05a0e0206dad"}, "bamfiles": {"id": "9b33ee0a7873f353", "src": "hda", "uuid": "1bd38808-1e6a-498f-a354-05a0e0206dad"}}, "outputs": {"fragLengths": {"id": "24cc9f36aa263c41", "src": "hda", "uuid": "6a350080-2df1-4ce6-a2e1-34471ad9154f"}, "outfile": {"id": "614685fbad15d0d3", "src": "hda", "uuid": "262e5771-d338-431e-bff4-33f904085936"}, "table": {"id": "15fa962582600865", "src": "hda", "uuid": "d6d00cd5-d246-47bc-a028-67ececf96c6b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "25769", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "25769.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:36:15", "plugin": "core", "name": "start_epoch", "raw_value": "1687804575.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:36:17", "plugin": "core", "name": "end_epoch", "raw_value": "1687804577.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}]}, "status": "success"}}, {"id": "dropletutils_empty_drops/1.0.4+galaxy0-0", "has_data": true, "data": {"tool_id": "dropletutils_empty_drops", "tool_version": "1.0.4+galaxy0", "test_index": 0, "time_seconds": 0.09235048294067383, "execution_problem": "Input staging problem: Test input file (raw_sce.rds) cannot be found.", "status": "error"}}, {"id": "fastq_filter/1.1.5-0", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 0, "time_seconds": 30.922377824783325, "inputs": {"input_file": {"src": "hda", "id": "439688a1ba02776f"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "728d3bab6b596d7d", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:36:58.962647", "create_time": "2023-06-26T18:36:41.765061", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-qnp4h", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/a/1/3/dataset_a137152f-62e0-4d84-82ed-d963a33a5b70.dat' '/galaxy/server/database/jobs_directory/000/30/configs/tmp8rg2w_14' '/galaxy/server/database/objects/8/2/3/dataset_823a416e-ff62-4123-9afc-c7722524da9b.dat' '/galaxy/server/database/jobs_directory/000/30/working/dataset_823a416e-ff62-4123-9afc-c7722524da9b_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "439688a1ba02776f", "src": "hda", "uuid": "a137152f-62e0-4d84-82ed-d963a33a5b70"}}, "outputs": {"output_file": {"id": "efc385d474497bba", "src": "hda", "uuid": "823a416e-ff62-4123-9afc-c7722524da9b"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:36:48", "plugin": "core", "name": "start_epoch", "raw_value": "1687804608.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:36:48", "plugin": "core", "name": "end_epoch", "raw_value": "1687804608.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-1", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 1, "time_seconds": 22.447620630264282, "inputs": {"input_file": {"src": "hda", "id": "191563651d272903"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "2ddffc644e58e1fc", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:37:21.391376", "create_time": "2023-06-26T18:37:11.459760", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-brcp2", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/4/a/7/dataset_4a7a6265-c152-4dff-8c49-e5bba970ccbb.dat' '/galaxy/server/database/jobs_directory/000/32/configs/tmp2ep6j8qj' '/galaxy/server/database/objects/2/c/a/dataset_2ca68f84-0036-494f-a0b2-295b9f8a3d7b.dat' '/galaxy/server/database/jobs_directory/000/32/working/dataset_2ca68f84-0036-494f-a0b2-295b9f8a3d7b_files' 'sanger.gz'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "191563651d272903", "src": "hda", "uuid": "4a7a6265-c152-4dff-8c49-e5bba970ccbb"}}, "outputs": {"output_file": {"id": "56d46cad9fc56039", "src": "hda", "uuid": "2ca68f84-0036-494f-a0b2-295b9f8a3d7b"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:37:13", "plugin": "core", "name": "start_epoch", "raw_value": "1687804633.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:37:13", "plugin": "core", "name": "end_epoch", "raw_value": "1687804633.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-2", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 2, "time_seconds": 21.779739379882812, "inputs": {"input_file": {"src": "hda", "id": "dc31ced9e2577988"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "ac3521351983f170", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:37:43.528972", "create_time": "2023-06-26T18:37:33.661845", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-t7s7g", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/9/9/8/dataset_99806d34-c187-484c-85b3-6a20345ea474.dat' '/galaxy/server/database/jobs_directory/000/34/configs/tmpn7k7hxmm' '/galaxy/server/database/objects/0/e/8/dataset_0e8a9e02-fc93-4e86-8de6-a17091aafd36.dat' '/galaxy/server/database/jobs_directory/000/34/working/dataset_0e8a9e02-fc93-4e86-8de6-a17091aafd36_files' 'cssanger'", "traceback": null, "params": {"__input_ext": "\"fastqcssanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "dc31ced9e2577988", "src": "hda", "uuid": "99806d34-c187-484c-85b3-6a20345ea474"}}, "outputs": {"output_file": {"id": "6e51c6cd69981c97", "src": "hda", "uuid": "0e8a9e02-fc93-4e86-8de6-a17091aafd36"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:37:35", "plugin": "core", "name": "start_epoch", "raw_value": "1687804655.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:37:35", "plugin": "core", "name": "end_epoch", "raw_value": "1687804655.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-3", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 3, "time_seconds": 23.752607107162476, "inputs": {"input_file": {"src": "hda", "id": "1bc4bbf6b56c22cd"}, "min_size": "0", "max_size": "0", "min_quality": "1", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "eadea9f23a5bf1a9", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:38:07.126541", "create_time": "2023-06-26T18:37:57.059064", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-t9gf6", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/0/1/0/dataset_0106cf8b-bbc2-4963-ab90-5c332cc0da62.dat' '/galaxy/server/database/jobs_directory/000/36/configs/tmp5qm_dqpk' '/galaxy/server/database/objects/5/0/7/dataset_507ee06b-a5c9-4c0d-b97f-635783a2ff51.dat' '/galaxy/server/database/jobs_directory/000/36/working/dataset_507ee06b-a5c9-4c0d-b97f-635783a2ff51_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"1.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "1bc4bbf6b56c22cd", "src": "hda", "uuid": "0106cf8b-bbc2-4963-ab90-5c332cc0da62"}}, "outputs": {"output_file": {"id": "323e9d058b367b87", "src": "hda", "uuid": "507ee06b-a5c9-4c0d-b97f-635783a2ff51"}}, "output_collections": {}, "tool_stdout": "Kept 0 of 2 reads (0.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 0 of 2 reads (0.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:37:58", "plugin": "core", "name": "start_epoch", "raw_value": "1687804678.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:37:58", "plugin": "core", "name": "end_epoch", "raw_value": "1687804678.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-4", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 4, "time_seconds": 24.433475971221924, "inputs": {"input_file": {"src": "hda", "id": "1a842a6a9b424671"}, "min_size": "0", "max_size": "0", "min_quality": "1", "max_quality": "0", "max_num_deviants": "1", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "0", "fastq_filters_0|offset_type|right_column_offset": "0", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "0"}, "job": {"model_class": "Job", "id": "efa32e14e2e2c274", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:38:31.505566", "create_time": "2023-06-26T18:38:21.568939", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-5vpdt", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/8/a/1/dataset_8a112b03-84f4-4f18-ad01-23dccb78c14a.dat' '/galaxy/server/database/jobs_directory/000/38/configs/tmp3mwdxlsd' '/galaxy/server/database/objects/6/6/0/dataset_6602e3f6-38fe-40a4-8b29-3a180b510239.dat' '/galaxy/server/database/jobs_directory/000/38/working/dataset_6602e3f6-38fe-40a4-8b29-3a180b510239_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"0\", \"right_column_offset\": \"0\"}, \"score\": \"0.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"1\"", "max_quality": "\"0.0\"", "min_quality": "\"1.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "1a842a6a9b424671", "src": "hda", "uuid": "8a112b03-84f4-4f18-ad01-23dccb78c14a"}}, "outputs": {"output_file": {"id": "f0b0b0163358bfe3", "src": "hda", "uuid": "6602e3f6-38fe-40a4-8b29-3a180b510239"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:38:23", "plugin": "core", "name": "start_epoch", "raw_value": "1687804703.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:38:23", "plugin": "core", "name": "end_epoch", "raw_value": "1687804703.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-5", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 5, "time_seconds": 24.096517086029053, "inputs": {"input_file": {"src": "hda", "id": "9e253130b1fb4032"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "1", "fastq_filters_0|offset_type|right_column_offset": "1", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "1"}, "job": {"model_class": "Job", "id": "1d072450acebe7b0", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:38:55.748577", "create_time": "2023-06-26T18:38:45.739564", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-gpv5v", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/a/d/9/dataset_ad9c275f-339d-4d01-b32b-143dec5593a5.dat' '/galaxy/server/database/jobs_directory/000/40/configs/tmp51m5h_e1' '/galaxy/server/database/objects/0/c/9/dataset_0c9f3194-d5ac-4ead-937b-3aafaf1a0864.dat' '/galaxy/server/database/jobs_directory/000/40/working/dataset_0c9f3194-d5ac-4ead-937b-3aafaf1a0864_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"1\", \"right_column_offset\": \"1\"}, \"score\": \"1.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "9e253130b1fb4032", "src": "hda", "uuid": "ad9c275f-339d-4d01-b32b-143dec5593a5"}}, "outputs": {"output_file": {"id": "cf53fd05fe9b5527", "src": "hda", "uuid": "0c9f3194-d5ac-4ead-937b-3aafaf1a0864"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:38:47", "plugin": "core", "name": "start_epoch", "raw_value": "1687804727.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:38:47", "plugin": "core", "name": "end_epoch", "raw_value": "1687804727.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-6", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 6, "time_seconds": 24.304835319519043, "inputs": {"input_file": {"src": "hda", "id": "e6f9f0017b92abec"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "1", "fastq_filters_0|offset_type|right_column_offset": "1", "fastq_filters_0|offset_type|base_offset_type": "offsets_absolute", "fastq_filters_0|score_operation": "max", "fastq_filters_0|score_comparison": "<=", "fastq_filters_0|score": "92"}, "job": {"model_class": "Job", "id": "4e140471d3f88884", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:39:20.140181", "create_time": "2023-06-26T18:39:09.152735", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-89cj6", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/6/f/7/dataset_6f730da4-ef64-4622-a2c6-a4edc9826444.dat' '/galaxy/server/database/jobs_directory/000/42/configs/tmpikgrqhjx' '/galaxy/server/database/objects/b/9/2/dataset_b92277cc-d731-4f17-851a-b007c165dfb2.dat' '/galaxy/server/database/jobs_directory/000/42/working/dataset_b92277cc-d731-4f17-851a-b007c165dfb2_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 0, \"base_offset_type\": \"offsets_absolute\", \"left_column_offset\": \"1\", \"right_column_offset\": \"1\"}, \"score\": \"92.0\", \"score_comparison\": \"<=\", \"score_operation\": \"max\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "e6f9f0017b92abec", "src": "hda", "uuid": "6f730da4-ef64-4622-a2c6-a4edc9826444"}}, "outputs": {"output_file": {"id": "a83773353b9093d8", "src": "hda", "uuid": "b92277cc-d731-4f17-851a-b007c165dfb2"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:39:11", "plugin": "core", "name": "end_epoch", "raw_value": "1687804751.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:39:11", "plugin": "core", "name": "start_epoch", "raw_value": "1687804751.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-7", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 7, "time_seconds": 23.328205347061157, "inputs": {"input_file": {"src": "hda", "id": "eaa367cf3fec5fe4"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": false, "fastq_filters_0|offset_type|left_column_offset": "1.075", "fastq_filters_0|offset_type|right_column_offset": "1.075", "fastq_filters_0|offset_type|base_offset_type": "offsets_percent", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "1"}, "job": {"model_class": "Job", "id": "c23c91a4b7a90cf8", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:39:43.456030", "create_time": "2023-06-26T18:39:33.538275", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-5sksh", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/9/0/f/dataset_90f41683-de95-4945-8386-17bda8fbf640.dat' '/galaxy/server/database/jobs_directory/000/44/configs/tmpxmqeflkv' '/galaxy/server/database/objects/8/c/4/dataset_8c414d85-e317-487e-a5d8-1914df304d48.dat' '/galaxy/server/database/jobs_directory/000/44/working/dataset_8c414d85-e317-487e-a5d8-1914df304d48_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 1, \"base_offset_type\": \"offsets_percent\", \"left_column_offset\": \"1.075\", \"right_column_offset\": \"1.075\"}, \"score\": \"1.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "false", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "eaa367cf3fec5fe4", "src": "hda", "uuid": "90f41683-de95-4945-8386-17bda8fbf640"}}, "outputs": {"output_file": {"id": "f053e4cbb0f7c4fe", "src": "hda", "uuid": "8c414d85-e317-487e-a5d8-1914df304d48"}}, "output_collections": {}, "tool_stdout": "Kept 2 of 2 reads (100.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 2 of 2 reads (100.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:39:34", "plugin": "core", "name": "end_epoch", "raw_value": "1687804774.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:39:34", "plugin": "core", "name": "start_epoch", "raw_value": "1687804774.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "fastq_filter/1.1.5-8", "has_data": true, "data": {"tool_id": "fastq_filter", "tool_version": "1.1.5", "test_index": 8, "time_seconds": 21.17677927017212, "inputs": {"input_file": {"src": "hda", "id": "193fa199da468db8"}, "min_size": "0", "max_size": "0", "min_quality": "0", "max_quality": "0", "max_num_deviants": "0", "paired_end": true, "fastq_filters_0|offset_type|left_column_offset": "1", "fastq_filters_0|offset_type|right_column_offset": "1", "fastq_filters_0|offset_type|base_offset_type": "offsets_percent", "fastq_filters_0|score_operation": "min", "fastq_filters_0|score_comparison": ">=", "fastq_filters_0|score": "1"}, "job": {"model_class": "Job", "id": "8442c227b3083f2c", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:40:04.698361", "create_time": "2023-06-26T18:39:55.961802", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/fastq_filter/fastq_filter/1.1.5", "history_id": "32841e823f71086a", "external_id": "gxy-ncfsd", "command_line": "gx-fastq-filter '/galaxy/server/database/objects/1/d/d/dataset_1dd970ad-a3e7-46ea-a2ef-89c5c904df50.dat' '/galaxy/server/database/jobs_directory/000/46/configs/tmpj8gcrmru' '/galaxy/server/database/objects/3/b/c/dataset_3bcc9f15-fdfe-49a0-996b-1540be8dc743.dat' '/galaxy/server/database/jobs_directory/000/46/working/dataset_3bcc9f15-fdfe-49a0-996b-1540be8dc743_files' 'sanger'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "fastq_filters": "[{\"__index__\": 0, \"offset_type\": {\"__current_case__\": 1, \"base_offset_type\": \"offsets_percent\", \"left_column_offset\": \"1.0\", \"right_column_offset\": \"1.0\"}, \"score\": \"1.0\", \"score_comparison\": \">=\", \"score_operation\": \"min\"}]", "paired_end": "true", "max_num_deviants": "\"0\"", "max_quality": "\"0.0\"", "min_quality": "\"0.0\"", "max_size": "\"0\"", "min_size": "\"0\""}, "inputs": {"input_file": {"id": "193fa199da468db8", "src": "hda", "uuid": "1dd970ad-a3e7-46ea-a2ef-89c5c904df50"}}, "outputs": {"output_file": {"id": "f9a49d4b3029f5e8", "src": "hda", "uuid": "3bcc9f15-fdfe-49a0-996b-1540be8dc743"}}, "output_collections": {}, "tool_stdout": "Kept 0 of 2 reads (0.00%).\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Kept 0 of 2 reads (0.00%).\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:39:57", "plugin": "core", "name": "end_epoch", "raw_value": "1687804797.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:39:57", "plugin": "core", "name": "start_epoch", "raw_value": "1687804797.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "filter_tabular/3.1.2-0", "has_data": true, "data": {"tool_id": "filter_tabular", "tool_version": "3.1.2", "test_index": 0, "time_seconds": 28.309336185455322, "inputs": {"input": {"src": "hda", "id": "0bbfd3d65cc1a0bb"}, "linefilters_0|filter|regex_pattern": "^\\d+", "linefilters_0|filter|regex_action": "include_find", "linefilters_0|filter|filter_type": "regex", "linefilters_1|filter|filter_type": "append_line_num", "linefilters_2|filter|columns": "7,2,3,4,1", "linefilters_2|filter|filter_type": "select_columns", "linefilters_3|filter|column": "c4", "linefilters_3|filter|regex_pattern": "(\\d+)/(\\d+)/(\\d+)", "linefilters_3|filter|regex_replace": "19\\3-\\2-\\1", "linefilters_3|filter|filter_type": "replace"}, "job": {"model_class": "Job", "id": "fcafd45fd8ebb356", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:56:03.592060", "create_time": "2023-06-26T18:55:48.735777", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2", "history_id": "32841e823f71086a", "external_id": "gxy-gtdm6", "command_line": "python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py' -i '/galaxy/server/database/objects/f/2/f/dataset_f2f8e8f2-9305-4680-8ee7-fd3c135a968f.dat' -j '/galaxy/server/database/jobs_directory/000/129/configs/tmpy2g_1qmg' -o '/galaxy/server/database/objects/b/f/7/dataset_bf7cc6a3-d612-400b-94cf-daee74ab9c01.dat'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 3, \"filter_type\": \"append_line_num\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 7, \"columns\": \"7,2,3,4,1\", \"filter_type\": \"select_columns\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 8, \"add\": null, \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \"(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"regex_replace\": \"19\\\\3-\\\\2-\\\\1\"}}]"}, "inputs": {"input": {"id": "0bbfd3d65cc1a0bb", "src": "hda", "uuid": "f2f8e8f2-9305-4680-8ee7-fd3c135a968f"}}, "outputs": {"output": {"id": "fc94ae13f8b8e35f", "src": "hda", "uuid": "bf7cc6a3-d612-400b-94cf-daee74ab9c01"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:55:54", "plugin": "core", "name": "end_epoch", "raw_value": "1687805754.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:55:54", "plugin": "core", "name": "start_epoch", "raw_value": "1687805754.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "filter_tabular/3.1.2-1", "has_data": true, "data": {"tool_id": "filter_tabular", "tool_version": "3.1.2", "test_index": 1, "time_seconds": 24.40430998802185, "inputs": {"input": {"src": "hda", "id": "7b8f1a8bfdfff4d7"}, "linefilters_0|filter|comment_char": "35", "linefilters_0|filter|filter_type": "comment", "linefilters_1|filter|regex_pattern": "^\\d+", "linefilters_1|filter|regex_action": "include_find", "linefilters_1|filter|filter_type": "regex", "linefilters_2|filter|filter_type": "append_line_num", "linefilters_3|filter|columns": "c7,c5,c6", "linefilters_3|filter|filter_type": "select_columns", "linefilters_4|filter|columns": "c2,c3", "linefilters_4|filter|separator": ",", "linefilters_4|filter|filter_type": "normalize", "linefilters_5|filter|regex_pattern": "^\\d+\\t\\t", "linefilters_5|filter|regex_action": "exclude_match", "linefilters_5|filter|filter_type": "regex"}, "job": {"model_class": "Job", "id": "31a4c03c8aa57009", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:56:28.023758", "create_time": "2023-06-26T18:56:17.005104", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2", "history_id": "32841e823f71086a", "external_id": "gxy-kfxd9", "command_line": "python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py' -i '/galaxy/server/database/objects/7/0/c/dataset_70c73b68-20c6-4460-8d27-cde463081f7d.dat' -j '/galaxy/server/database/jobs_directory/000/131/configs/tmp548y0uas' -o '/galaxy/server/database/objects/a/c/2/dataset_ac23e501-0082-4d02-bd22-2cbd27a14dcf.dat'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 1, \"comment_char\": \"35\", \"filter_type\": \"comment\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 3, \"filter_type\": \"append_line_num\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 7, \"columns\": \"c7,c5,c6\", \"filter_type\": \"select_columns\"}}, {\"__index__\": 4, \"filter\": {\"__current_case__\": 9, \"columns\": \"c2,c3\", \"filter_type\": \"normalize\", \"separator\": \",\"}}, {\"__index__\": 5, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"exclude_match\", \"regex_pattern\": \"^\\\\d+\\\\t\\\\t\"}}]"}, "inputs": {"input": {"id": "7b8f1a8bfdfff4d7", "src": "hda", "uuid": "70c73b68-20c6-4460-8d27-cde463081f7d"}}, "outputs": {"output": {"id": "9abadea5413f9f8f", "src": "hda", "uuid": "ac23e501-0082-4d02-bd22-2cbd27a14dcf"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:56:18", "plugin": "core", "name": "end_epoch", "raw_value": "1687805778.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:56:18", "plugin": "core", "name": "start_epoch", "raw_value": "1687805778.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "filter_tabular/3.1.2-2", "has_data": true, "data": {"tool_id": "filter_tabular", "tool_version": "3.1.2", "test_index": 2, "time_seconds": 23.113876819610596, "inputs": {"input": {"src": "hda", "id": "ed30ed0b724abc22"}, "linefilters_0|filter|regex_pattern": "^\\d+", "linefilters_0|filter|regex_action": "include_find", "linefilters_0|filter|filter_type": "regex", "linefilters_1|filter|column": "c4", "linefilters_1|filter|regex_pattern": ".*@(.*)", "linefilters_1|filter|regex_replace": "\\1", "linefilters_1|filter|add": "after", "linefilters_1|filter|filter_type": "replace", "linefilters_2|filter|column": "c4", "linefilters_2|filter|regex_pattern": ".*(com|org|net)$", "linefilters_2|filter|regex_replace": "\\1", "linefilters_2|filter|add": "append", "linefilters_2|filter|filter_type": "replace", "linefilters_3|filter|column": "c6", "linefilters_3|filter|regex_pattern": "^(\\d+)-(\\d+)-(\\d+)$", "linefilters_3|filter|regex_replace": "\\1", "linefilters_3|filter|add": "prepend", "linefilters_3|filter|filter_type": "replace"}, "job": {"model_class": "Job", "id": "b07db9abd47420a9", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:56:51.171991", "create_time": "2023-06-26T18:56:41.148538", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.1.2", "history_id": "32841e823f71086a", "external_id": "gxy-6l8m9", "command_line": "python '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/6544e4b87a4f/filter_tabular/filter_tabular.py' -i '/galaxy/server/database/objects/a/1/d/dataset_a1d63a3f-0c86-4d4c-917b-dadeeed2b4e2.dat' -j '/galaxy/server/database/jobs_directory/000/133/configs/tmph406z3pl' -o '/galaxy/server/database/objects/3/3/3/dataset_333b9f52-3e59-4544-9500-3133055fbacb.dat'", "traceback": null, "params": {"__input_ext": "\"tabular\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "linefilters": "[{\"__index__\": 0, \"filter\": {\"__current_case__\": 6, \"filter_type\": \"regex\", \"regex_action\": \"include_find\", \"regex_pattern\": \"^\\\\d+\"}}, {\"__index__\": 1, \"filter\": {\"__current_case__\": 8, \"add\": \"after\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*@(.*)\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 2, \"filter\": {\"__current_case__\": 8, \"add\": \"append\", \"column\": \"c4\", \"filter_type\": \"replace\", \"regex_pattern\": \".*(com|org|net)$\", \"regex_replace\": \"\\\\1\"}}, {\"__index__\": 3, \"filter\": {\"__current_case__\": 8, \"add\": \"prepend\", \"column\": \"c6\", \"filter_type\": \"replace\", \"regex_pattern\": \"^(\\\\d+)-(\\\\d+)-(\\\\d+)$\", \"regex_replace\": \"\\\\1\"}}]"}, "inputs": {"input": {"id": "ed30ed0b724abc22", "src": "hda", "uuid": "a1d63a3f-0c86-4d4c-917b-dadeeed2b4e2"}}, "outputs": {"output": {"id": "c260f31bc7c909f5", "src": "hda", "uuid": "333b9f52-3e59-4544-9500-3133055fbacb"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:56:42", "plugin": "core", "name": "end_epoch", "raw_value": "1687805802.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:56:42", "plugin": "core", "name": "start_epoch", "raw_value": "1687805802.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "mummer_nucmer/4.0.0beta2+galaxy1-0", "has_data": true, "data": {"tool_id": "mummer_nucmer", "tool_version": "4.0.0beta2+galaxy1", "test_index": 0, "time_seconds": 49.16346979141235, "inputs": {"reference_sequence": {"src": "hda", "id": "d26b83400a84be7e"}, "query_sequence": {"src": "hda", "id": "db100e5ad1f04055"}, "options|advanced": "defaults", "mumplot|sequences|seq_input": "yes", "mumplot|plot": "yes"}, "job": {"model_class": "Job", "id": "eaa367cf3fec5fe4", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:46:03.921455", "create_time": "2023-06-26T18:45:30.068099", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/mummer_nucmer/mummer_nucmer/4.0.0beta2+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-ngrsr", "command_line": "ln -s /galaxy/server/database/objects/b/5/9/dataset_b5975cd8-0f77-4afc-aa03-e005cd2ef24a.dat reference.fa && ln -s /galaxy/server/database/objects/6/b/c/dataset_6bc5979c-8f94-4071-8301-10cd411e47b0.dat query.fa && nucmer  -b '200' -c '65' -D '5' -d '0.12'   -g '90' -l '20' -L '0'   --threads \"${GALAXY_SLOTS:-1}\" 'reference.fa' 'query.fa' && mummerplot -R '/galaxy/server/database/objects/b/5/9/dataset_b5975cd8-0f77-4afc-aa03-e005cd2ef24a.dat' -Q '/galaxy/server/database/objects/6/b/c/dataset_6bc5979c-8f94-4071-8301-10cd411e47b0.dat'  -b '20'     -s 'small' -terminal png -title 'Title'  'out.delta' && gnuplot < out.gp", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "mumplot": "{\"__current_case__\": 0, \"breaklen\": \"20\", \"color\": \"\", \"coverage\": \"\", \"fat\": false, \"filter\": false, \"labels\": {\"IDs\": \"no\", \"__current_case__\": 1}, \"plot\": \"yes\", \"range\": {\"__current_case__\": 1, \"custom\": \"no\"}, \"sequences\": {\"__current_case__\": 0, \"layout\": false, \"query_sequence\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"reference_sequence\": {\"values\": [{\"id\": 143, \"src\": \"hda\"}]}, \"seq_input\": \"yes\"}, \"size\": \"small\", \"snp\": false, \"title\": \"Title\"}", "options": "{\"__current_case__\": 1, \"advanced\": \"defaults\"}", "nosimplify": "false", "nooptimize": "false", "minalign": "\"0\"", "minmatch": "\"20\"", "maxgap": "\"90\"", "direction": "\"\"", "noextend": "false", "diagfactor": "\"0.12\"", "diagdiff": "\"5\"", "mincluster": "\"65\"", "breaklen": "\"200\"", "anchoring": "\"\""}, "inputs": {"reference_sequence": {"id": "d26b83400a84be7e", "src": "hda", "uuid": "b5975cd8-0f77-4afc-aa03-e005cd2ef24a"}, "query_sequence": {"id": "db100e5ad1f04055", "src": "hda", "uuid": "6bc5979c-8f94-4071-8301-10cd411e47b0"}, "mumplot|reference_sequence": {"id": "db100e5ad1f04055", "src": "hda", "uuid": "6bc5979c-8f94-4071-8301-10cd411e47b0"}, "mumplot|query_sequence": {"id": "db100e5ad1f04055", "src": "hda", "uuid": "6bc5979c-8f94-4071-8301-10cd411e47b0"}, "mumplot|query_sequence1": {"id": "db100e5ad1f04055", "src": "hda", "uuid": "6bc5979c-8f94-4071-8301-10cd411e47b0"}}, "outputs": {"delta_output": {"id": "41cd970aa1b581d7", "src": "hda", "uuid": "c5e0f99d-ed07-4a4f-8813-fc3951853d27"}, "png_output": {"id": "76aa804ac68b21a6", "src": "hda", "uuid": "01fd35a6-1142-4620-8ec8-e9b63ed202a3"}}, "output_collections": {}, "tool_stdout": "gnuplot 5.2 patchlevel 7\n", "tool_stderr": "Reading delta file out.delta\nWriting plot files out.fplot, out.rplot, out.hplot\nWriting gnuplot script out.gp\nRendering plot out.png\nWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device\n", "job_stdout": "", "job_stderr": "", "stderr": "Reading delta file out.delta\nWriting plot files out.fplot, out.rplot, out.hplot\nWriting gnuplot script out.gp\nRendering plot out.png\nWARNING: Unable to run 'false out.gp', Inappropriate ioctl for device\n", "stdout": "gnuplot 5.2 patchlevel 7\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:45:49", "plugin": "core", "name": "end_epoch", "raw_value": "1687805149.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:45:49", "plugin": "core", "name": "start_epoch", "raw_value": "1687805149.0000000"}, {"title": "Memory Allocated (MB)", "value": "20401", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "20401.0000000"}, {"title": "Cores Allocated", "value": "5", "plugin": "core", "name": "galaxy_slots", "raw_value": "5.0000000"}]}, "status": "success"}}, {"id": "poretools_occupancy/0.6.1a1.1-0", "has_data": true, "data": {"tool_id": "poretools_occupancy", "tool_version": "0.6.1a1.1", "test_index": 0, "time_seconds": 52.48704767227173, "inputs": {"input": {"src": "hda", "id": "37ada57c2461db15"}, "extension": "png", "plot_type": "read_count"}, "job": {"model_class": "Job", "id": "193fa199da468db8", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:46:57.841744", "create_time": "2023-06-26T18:46:19.701466", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/poretools_occupancy/poretools_occupancy/0.6.1a1.1", "history_id": "32841e823f71086a", "external_id": "gxy-w9lmj", "command_line": "export MPLBACKEND=\"agg\" && poretools occupancy '/galaxy/server/database/objects/7/b/1/dataset_7b160010-9ca9-4937-bc07-5964d6dda628.dat' --saveas occupancy.png --plot-type read_count && mv occupancy.png '/galaxy/server/database/objects/e/5/a/dataset_e5a96c5d-b325-45a1-aeab-3cc3b3b8e39f.dat'", "traceback": null, "params": {"__input_ext": "\"fast5.tar\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_type": "\"read_count\"", "extension": "\"png\""}, "inputs": {"input": {"id": "37ada57c2461db15", "src": "hda", "uuid": "7b160010-9ca9-4937-bc07-5964d6dda628"}}, "outputs": {"output": {"id": "77d5039672e88f5a", "src": "hda", "uuid": "e5a96c5d-b325-45a1-aeab-3cc3b3b8e39f"}}, "output_collections": {}, "tool_stdout": "channel_number\tstart_time\tduration\n128\t1457127626\t1\n128\t1457129549\t4\n126\t1457148908\t5\n126\t1457129771\t6\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "channel_number\tstart_time\tduration\n128\t1457127626\t1\n128\t1457129549\t4\n126\t1457148908\t5\n126\t1457129771\t6\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:46:41", "plugin": "core", "name": "end_epoch", "raw_value": "1687805201.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:46:39", "plugin": "core", "name": "start_epoch", "raw_value": "1687805199.0000000"}, {"title": "Memory Allocated (MB)", "value": "12240", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12240.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "poretools_occupancy/0.6.1a1.1-1", "has_data": true, "data": {"tool_id": "poretools_occupancy", "tool_version": "0.6.1a1.1", "test_index": 1, "time_seconds": 8.4828040599823, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "retrieve_scxa/v0.0.2+galaxy2-0", "has_data": true, "data": {"tool_id": "retrieve_scxa", "tool_version": "v0.0.2+galaxy2", "test_index": 0, "time_seconds": 43.61914539337158, "inputs": {"accession": "E-GEOD-100058", "matrix_type": "tpm"}, "job": {"model_class": "Job", "id": "30482341f0453b22", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:55:24.977704", "create_time": "2023-06-26T18:54:51.167252", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2", "history_id": "32841e823f71086a", "external_id": "gxy-lrzpq", "command_line": "wget -O exp_quant.zip 'https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=' && unzip exp_quant.zip; mv 'E-GEOD-100058'.expression_tpm.mtx /galaxy/server/database/objects/d/e/e/dataset_dee21d09-65c5-4f7d-9260-8be4995dc3ca.dat && awk '{OFS=\"\\t\"; print $2,$2}' 'E-GEOD-100058'.expression_tpm.mtx_rows > /galaxy/server/database/objects/b/6/f/dataset_b6fc114f-c8d7-4999-afdd-98c92839ec7b.dat && cut -f2 'E-GEOD-100058'.expression_tpm.mtx_cols > /galaxy/server/database/objects/7/b/2/dataset_7b25c736-7804-48e2-a91b-4d064b2010d5.dat;   wget -O exp_design.tsv 'https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=';", "traceback": null, "params": {"__input_ext": "\"data\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "matrix_type": "\"tpm\"", "accession": "\"E-GEOD-100058\""}, "inputs": {}, "outputs": {"matrix_mtx": {"id": "5f715c482bfe562f", "src": "hda", "uuid": "dee21d09-65c5-4f7d-9260-8be4995dc3ca"}, "genes_tsv": {"id": "543b4c60c7891954", "src": "hda", "uuid": "b6fc114f-c8d7-4999-afdd-98c92839ec7b"}, "barcode_tsv": {"id": "1a518ad3f4e88f4a", "src": "hda", "uuid": "7b25c736-7804-48e2-a91b-4d064b2010d5"}, "design_tsv": {"id": "a03707a66bffa62e", "src": "hda", "uuid": "3099ad7a-e3e5-45d6-ba70-c8b8264a0863"}}, "output_collections": {}, "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n", "tool_stderr": "--2023-06-26 18:54:54--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: 'exp_quant.zip'\n\n     0K .......... .......... .......... .......... ..........  181K\n    50K .......... .......... .......... .......... ..........  273K\n   100K .......... .......... .......... .......... ..........  548K\n   150K .......... .......... .......... .......... ..........  549K\n   200K .......... .......... .......... .......... ..........  548K\n   250K .......... .......... .......... .......... ..........  549K\n   300K .......... .......... .......... .......... ..........  544K\n   350K .......... .......... .......... .......... ..........  548K\n   400K .......... .......... .......... .......... ..........  547K\n   450K .......... .......... .......... .......... .......... 6.04M\n   500K .......... .......... .......... .......... ..........  599K\n   550K .......... .......... .......... .......... ..........  947K\n   600K .......... .......... .......... .......... .......... 1.26M\n   650K .......... .......... .......... .......... ..........  912K\n   700K .......... .......... .......... .......... .......... 1.22M\n   750K .......... .......... .......... .......... ..........  564K\n   800K .......... .......... .......... .......... .......... 8.99M\n   850K .......... .......... .......... .......... ..........  580K\n   900K .......... .......... .......... .......... .......... 19.9M\n   950K .......... .......... .......... .......... ..........  936K\n  1000K .......... .......... .......... .......... .......... 1.37M\n  1050K .......... .......... .......... .......... .......... 7.75M\n  1100K .......... .......... .......... .......... ..........  980K\n  1150K .......... .......... .......... .......... .......... 1.34M\n  1200K .......... .......... .......... .......... .......... 11.3M\n  1250K .......... .......... .......... .......... ..........  588K\n  1300K .......... .......... .......... .......... .......... 19.6M\n  1350K .......... .......... .......... .......... .......... 12.7M\n  1400K .......... .......... .......... .......... ..........  952K\n  1450K .......... .......... .......... .......... .......... 1.49M\n  1500K .......... .......... .......... .......... .......... 8.46M\n  1550K .......... .......... .......... .......... ..........  939K\n  1600K .......... .......... .......... .......... .......... 1.47M\n  1650K .......... .......... .......... .......... .......... 23.0M\n  1700K .......... .......... .......... .......... ..........  910K\n  1750K .......... .......... .......... .......... .......... 1.42M\n  1800K .......... .......... .......... .......... ..........  363M\n  1850K .......... .......... .......... .......... .......... 8.16M\n  1900K .......... .......... .......... .......... ..........  949K\n  1950K .......... .......... .......... .......... .......... 1.48M\n  2000K .......... .......... .......... .......... .......... 26.3M\n  2050K .......... .......... .......... .......... .......... 9.83M\n  2100K .......... .......... .......... .......... ..........  945K\n  2150K .......... .......... .......... .......... .......... 1.54M\n  2200K .......... .......... .......... .......... .......... 11.2M\n  2250K .......... .......... .......... .......... .......... 15.2M\n  2300K .......... .......... .......... .......... ..........  981K\n  2350K .......... .......... .......... .......... .......... 1.49M\n  2400K .......... .......... .......... .......... .......... 10.9M\n  2450K .......... .......... .......... .......... .......... 14.2M\n  2500K .......... .......... .......... .......... ..........  986K\n  2550K .......... .......... .......... .......... .......... 1.49M\n  2600K .......... .......... .......... .......... ..........  200M\n  2650K .......... .......... .......... .......... .......... 10.3M\n  2700K .......... .......... .......... .......... .......... 14.1M\n  2750K .......... .......... .......... .......... ..........  955K\n  2800K .......... .......... .......... .......... .......... 1.57M\n  2850K .......... .......... .......... .......... .......... 9.36M\n  2900K .......... .......... .......... .......... .......... 15.7M\n  2950K .......... .......... .......... .......... ..........  996K\n  3000K .......... .......... .......... .......... .......... 25.5M\n  3050K .......... .......... .......... .......... .......... 1.57M\n  3100K .......... .......... .......... .......... .......... 9.50M\n  3150K .......... .......... .......... .......... .......... 15.3M\n  3200K .......... .......... .......... .......... ..........  994K\n  3250K .......... .......... .......... .......... .......... 1.52M\n  3300K .......... .......... .......... .......... ..........  132M\n  3350K .......... .......... .......... .......... .......... 8.77M\n  3400K .......... .......... .......... .......... .......... 17.7M\n  3450K .......... .......... .......... .......... ..........  989K\n  3500K .......... .......... .......... .......... .......... 16.2M\n  3550K .......... .......... .......... .......... .......... 1.64M\n  3600K .......... .......... .......... .......... .......... 9.16M\n  3650K .......... .......... .......... .......... .......... 15.2M\n  3700K .......... .......... .......... .......... ..........  996K\n  3750K .......... .......... .......... .......... .......... 8.71M\n  3800K .......... .......... .......... .......... .......... 1.83M\n  3850K .......... .......... .......... .......... ..........  483M\n  3900K .......... .......... .......... .......... .......... 8.26M\n  3950K .......... .......... .......... .......... ..........  944K\n  4000K .......... .......... .......... .......... .......... 5.76M\n  4050K .......... .......... .......... .......... .......... 2.07M\n  4100K .......... .......... .......... .......... ..........  110M\n  4150K .......... .......... .......... .......... .......... 8.10M\n  4200K .......... .......... .......... .......... .......... 16.8M\n  4250K .......... .......... .......... .......... ..........  995K\n  4300K .......... .......... .......... .......... .......... 5.78M\n  4350K .......... .......... .......... .......... .......... 2.06M\n  4400K .......... .......... .......... .......... ..........  141M\n  4450K .......... .......... .......... .......... .......... 8.07M\n  4500K .......... .......... .......... .......... .......... 17.7M\n  4550K .......... .......... .......... .......... ..........  985K\n  4600K .......... .......... .......... .......... .......... 6.33M\n  4650K .......... .......... .......... .......... .......... 2.05M\n  4700K .......... .......... .......... .......... ..........  107M\n  4750K .......... .......... .......... .......... .......... 7.52M\n  4800K .......... .......... .......... .......... .......... 25.3M\n  4850K .......... .......... .......... .......... ..........  972K\n  4900K .......... .......... .......... .......... .......... 6.34M\n  4950K .......... .......... .......... .......... .......... 2.11M\n  5000K .......... .......... .......... .......... .......... 20.9M\n  5050K .......... .......... .......... .......... .......... 9.90M\n  5100K .......... .......... .......... .......... .......... 29.5M\n  5150K .......... .......... .......... .......... ..........  965K\n  5200K .......... .......... .......... .......... ..........  132M\n  5250K .......... .......... .......... .......... .......... 6.74M\n  5300K .......... .......... .......... .......... .......... 2.08M\n  5350K .......... .......... .......... .......... .......... 12.2M\n  5400K .......... .......... .......... .......... .......... 16.5M\n  5450K .......... .......... .......... .......... .......... 30.9M\n  5500K .......... .......... .......... .......... ..........  955K\n  5550K .......... .......... .......... .......... .......... 6.95M\n  5600K .......... .......... .......... .......... .......... 2.11M\n  5650K .......... .......... .......... .......... .......... 38.0M\n  5700K .......... .......... .......... .......... .......... 8.31M\n  5750K .......... .......... .......... .......... ..........  105M\n  5800K .......... .......... .......... .......... .......... 34.7M\n  5850K .......... .......... .......... .......... ..........  958K\n  5900K .......... .......... .......... .......... ..........  116M\n  5950K .......... .......... .......... .......... .......... 1.65M\n  6000K .......... .......... .......... .......... .......... 34.9M\n  6050K .......... .......... .......... .......... .......... 8.42M\n  6100K .......... .......... .......... .......... ..........  332M\n  6150K .......... .......... .......... .......... .......... 21.6M\n  6200K .......... .......... .......... .......... ..........  966K\n  6250K .......... .......... .......... .......... .......... 96.2M\n  6300K .......... .......... .......... .......... .......... 6.94M\n  6350K .......... .......... .......... .......... .......... 2.13M\n  6400K .......... .......... .......... .......... .......... 12.3M\n  6450K .......... .......... .......... .......... .......... 16.3M\n  6500K .......... .......... .......... .......... .......... 20.7M\n  6550K .......... .......... .......... .......... ..........  129M\n  6600K .......... .......... .......... .......... ..........  967K\n  6650K .......... .......... .......... .......... .......... 7.46M\n  6700K .......... .......... .......... .......... .......... 8.22M\n  6750K .......... .......... .......... .......... .......... 2.75M\n  6800K .......... .......... .......... .......... .......... 9.21M\n  6850K .......... .......... .......... .......... .......... 33.0M\n  6900K .......... .......... .......... .......... .......... 19.7M\n  6950K .......... .......... .......... .......... .......... 16.3M\n  7000K .......... .......... .......... .......... .......... 1024K\n  7050K .......... .......... .......... .......... ..........  366M\n  7100K .......... .......... .......... .......... .......... 1.65M\n  7150K .......... .......... .......... .......... ..........  227M\n  7200K .......... .......... .......... .......... .......... 7.50M\n  7250K .......... .......... .......... .......... ..........  294M\n  7300K .......... .......... .......... .......... .......... 66.0M\n  7350K .......... .......... .......... .......... .......... 20.3M\n  7400K .......... .......... .......... .......... .......... 4.04M\n  7450K .......... .......... .......... .......... .......... 1.23M\n  7500K .......... .......... .......... .......... .......... 7.32M\n  7550K .......... .......... .......... .......... .......... 2.10M\n  7600K .......... .......... .......... .......... ..........  232M\n  7650K .......... .......... .......... .......... .......... 7.51M\n  7700K .......... .......... .......... .......... ..........  216M\n  7750K .......... .......... .......... .......... ..........  208M\n  7800K .......... .......... .......... .......... .......... 19.9M\n  7850K .......... .......... .......... .......... .......... 4.12M\n  7900K .......... .......... .......... .......... .......... 1.22M\n  7950K .......... .......... .......... .......... .......... 7.58M\n  8000K .......... .......... .......... .......... .......... 2.09M\n  8050K .......... .......... .......... .......... ..........  146M\n  8100K .......... .......... .......... .......... .......... 7.91M\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  133M\n  8250K .......... .......... .......... .......... .......... 23.6M\n  8300K .......... .......... .......... .......... .......... 4.02M\n  8350K .......... .......... .......... .......... .......... 1.22M\n  8400K .......... .......... .......... .......... .......... 7.64M\n  8450K .......... .......... .......... .......... ..........  371M\n  8500K .......... .......... .......... .......... .......... 2.09M\n  8550K .......... .......... .......... .......... .......... 89.8M\n  8600K .......... .......... .......... .......... .......... 8.23M\n  8650K .......... .......... .......... .......... ..........  157M\n  8700K .......... .......... .......... .......... .......... 19.9M\n  8750K .......... .......... .......... .......... ..........  101M\n  8800K .......... .......... .......... .......... ..........  966K\n  8850K .......... .......... .......... .......... ..........  113M\n  8900K .......... .......... .......... .......... .......... 7.78M\n  8950K .......... .......... .......... .......... ..........  359M\n  9000K .......... .......... .......... .......... .......... 2.09M\n  9050K .......... .......... .......... .......... ..........  169M\n  9100K .......... .......... .......... .......... .......... 6.97M\n  9150K .......... .......... .......... .......... ..........  344M\n  9200K .......... .......... .......... .......... ..........  449M\n  9250K .......... .......... .......... .......... ..........  533K\n  9300K .......... .......... .......... .......... ..........  425M\n  9350K .......... .......... .......... .......... ..........  497M\n  9400K .......... .......... .......... .......... ..........  453M\n  9450K .......... .......... .......... .......... ..........  520M\n  9500K .......... .......... .......... .......... ..........  439M\n  9550K .......... .......... .......... .......... ..........  532M\n  9600K .......... .......... .......... .......... ..........  496M\n  9650K .......... .......... .......... .......... ..........  406M\n  9700K .......... .......... .......... .......... ..........  414M\n  9750K .......... .......... .......... .......... ..........  343M\n  9800K .......... .......... .......... .......... .......... 74.8M\n  9850K .......... .......... .......... .......... ..........  984K\n  9900K .......... .......... .......... .......... .......... 6.79M\n  9950K .......... .......... .......... .......... .......... 1.63M\n 10000K .......... .......... .......... .......... .......... 45.4M\n 10050K .......... .......... .......... .......... ..........  195M\n 10100K .......... .......... .......... .......... ..........  338M\n 10150K .......... .......... .......... .......... .......... 19.2M\n 10200K .......... .......... .......... .......... ..........  993K\n 10250K .......... .......... .......... .......... .......... 86.3M\n 10300K .......... .......... .......... .......... .......... 2.03M\n 10350K .......... .......... .......... .......... .......... 3.83M\n 10400K .......... .......... .......... .......... .......... 71.9M\n 10450K .......... .......... .......... .......... ..........  228M\n 10500K .......... .......... .......... .......... .......... 27.7M\n 10550K .......... .......... .......... .......... .......... 18.1M\n 10600K .......... .......... .......... .......... .......... 1.00M\n 10650K .......... .......... .......... .......... .......... 6.93M\n 10700K .......... .......... .......... .......... .......... 2.03M\n 10750K .......... .......... .......... .......... .......... 7.56M\n 10800K .......... .......... .......... .......... ..........  126M\n 10850K .......... .......... .......... .......... ..........  128M\n 10900K .......... .......... .......... .......... .......... 15.0M\n 10950K .......... .......... .......... .......... .......... 1.33M\n 11000K .......... .......... .......... .......... .......... 3.70M\n 11050K .......... .......... .......... .......... .......... 7.15M\n 11100K .......... .......... .......... .......... .......... 1.61M\n 11150K .......... .......... .......... .......... ..........  131M\n 11200K .......... .......... .......... .......... ..........  358M\n 11250K .......... .......... .......... .......... ..........  477M\n 11300K .......... .......... .......... .......... .......... 8.35M\n 11350K .......... .......... .......... .......... .......... 1.02M\n 11400K .......... .......... .......... .......... ..........  167M\n 11450K .......... .......... .......... .......... .......... 5.20M\n 11500K .......... .......... .......... .......... .......... 1.59M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 6.25M\n 50150K .......... .......... .......... .......... .......... 5.28M\n 50200K .......... .......... .......... .......... .......... 4.77M\n 50250K .......... .......... .......... .......... .......... 8.66M\n 50300K .......... .......... .......... .......... .......... 4.69M\n 50350K .......... .......... .......... .......... .......... 4.47M\n 50400K .......... .......... .......... .......... .......... 4.06M\n 50450K .......... .......... .......... .......... .......... 10.3M\n 50500K .......... .......... .......... .......... .......... 4.83M\n 50550K .......... .......... .......... .......... .......... 4.61M\n 50600K .......... .......... .......... .......... .......... 4.70M\n 50650K .......... .......... .......... .......... .......... 9.31M\n 50700K .......... .......... .......... .......... .......... 4.55M\n 50750K .......... .......... .......... .......... .......... 4.26M\n 50800K .......... .......... .......... .......... .......... 4.81M\n 50850K .......... .......... .......... .......... .......... 7.26M\n 50900K .......... .......... .......... .......... .......... 4.31M\n 50950K .......... .......... .......... .......... .......... 5.44M\n 51000K .......... .......... .......... .......... .......... 4.53M\n 51050K .......... .......... .......... .......... .......... 8.64M\n 51100K .......... .......... .......... .......... .......... 4.76M\n 51150K .......... .......... .......... .......... .......... 4.13M\n 51200K .......... .......... .......... .......... .......... 4.58M\n 51250K .......... .......... .......... .......... .......... 4.69M\n 51300K .......... .......... .......... .......... .......... 8.58M\n 51350K .......... .......... .......... .......... .......... 4.33M\n 51400K .......... .......... .......... .......... .......... 5.03M\n 51450K .......... .......... .......... .......... .......... 4.49M\n 51500K .......... .......... .......... .......... .......... 8.56M\n 51550K .......... .......... .......... .......... .......... 4.47M\n 51600K .......... .......... .......... .......... .......... 4.81M\n 51650K .......... .......... .......... .......... .......... 4.68M\n 51700K .......... .......... .......... .......... .......... 4.41M\n 51750K .......... .......... .......... .......... .......... 8.80M\n 51800K .......... .......... .......... .......... .......... 4.58M\n 51850K .......... .......... .......... .......... .......... 4.58M\n 51900K .......... .......... .......... .......... .......... 4.69M\n 51950K .......... .......... .......... .......... .......... 8.93M\n 52000K .......... .......... .......... .......... .......... 4.52M\n 52050K .......... .......... .......... .......... .......... 4.61M\n 52100K .......... .......... .......... .......... .......... 4.66M\n 52150K .......... .......... .......... .......... .......... 8.67M\n 52200K .......... .......... .......... .......... .......... 4.34M\n 52250K .......... .......... .......... .......... .......... 4.72M\n 52300K .......... .......... .......... .......... .......... 4.61M\n 52350K .......... .......... .......... .......... .......... 8.70M\n 52400K .......... .......... .......... .......... .......... 3.99M\n 52450K .......... .......... .......... .......... .......... 5.20M\n 52500K .......... .......... .......... .......... .......... 4.68M\n 52550K .......... .......... .......... .......... .......... 8.94M\n 52600K .......... .......... .......... .......... .......... 4.34M\n 52650K .......... .......... .......... .......... .......... 4.76M\n 52700K .......... .......... .......... .......... .......... 4.61M\n 52750K .......... .......... .......... .......... .......... 8.81M\n 52800K .......... .......... .......... .......... .......... 4.34M\n 52850K .......... .......... .......... .......... .......... 4.96M\n 52900K .......... .......... .......... .......... .......... 4.26M\n 52950K .......... .......... .......... .......... .......... 10.3M\n 53000K .......... .......... .......... .......... .......... 4.49M\n 53050K .......... .......... .......... .......... .......... 4.75M\n 53100K .......... .......... .......... .......... .......... 4.55M\n 53150K .......... .......... .......... .......... .......... 8.51M\n 53200K .......... .......... .......... .......... .......... 4.63M\n 53250K .......... .......... .......... .......... .......... 4.53M\n 53300K .......... .......... .......... .......... .......... 4.69M\n 53350K .......... .......... .......... .......... .......... 8.88M\n 53400K .......... .......... .......... .......... .......... 4.68M\n 53450K .......... .......... .......... .......... .......... 4.56M\n 53500K .......... .......... .......... .......... .......... 4.52M\n 53550K .......... .......... .......... .......... .......... 8.58M\n 53600K .......... .......... .......... .......... .......... 4.75M\n 53650K .......... .......... .......... .......... .......... 4.29M\n 53700K .......... .......... .......... .......... .......... 4.74M\n 53750K .......... .......... .......... .......... .......... 8.67M\n 53800K .......... .......... .......... .......... .......... 4.77M\n 53850K .......... .......... .......... .......... .......... 4.49M\n 53900K .......... .......... .......... .......... .......... 4.56M\n 53950K .......... .......... .......... .......... .......... 4.61M\n 54000K .......... .......... .......... .......... .......... 8.20M\n 54050K .......... .......... .......... .......... .......... 4.50M\n 54100K .......... .......... .......... .......... .......... 4.58M\n 54150K .......... .......... .......... .......... .......... 4.69M\n 54200K .......... .......... .......... .......... .......... 8.60M\n 54250K .......... .......... .......... .......... .......... 4.45M\n 54300K .......... .......... .......... .......... .......... 4.56M\n 54350K .......... .......... .......... .......... .......... 4.69M\n 54400K .......... .......... .......... .......... .......... 9.11M\n 54450K .......... .......... .......... .......... .......... 4.40M\n 54500K .......... .......... .......... .......... .......... 4.60M\n 54550K .......... .......... .......... .......... .......... 4.62M\n 54600K .......... .......... .......... .......... .......... 8.71M\n 54650K .......... .......... .......... .......... .......... 4.66M\n 54700K .......... .......... .......... .......... .......... 4.50M\n 54750K .......... .......... .......... .......... .......... 4.78M\n 54800K .......... .......... .......... .......... .......... 8.17M\n 54850K .......... .......... .......... .......... .......... 4.75M\n 54900K .......... .......... .......... .......... .......... 4.37M\n 54950K .......... .......... .......... .......... .......... 4.57M\n 55000K .......... .......... .......... .......... .......... 8.72M\n 55050K .......... .......... .......... .......... .......... 4.72M\n 55100K .......... .......... .......... .......... .......... 4.49M\n 55150K .......... .......... .......... .......... .......... 4.58M\n 55200K .......... .......... .......... .......... .......... 4.62M\n 55250K .......... .......... .......... .......... .......... 8.86M\n 55300K .......... .......... .......... .......... .......... 4.27M\n 55350K .......... .......... .......... .......... .......... 4.67M\n 55400K .......... .......... .......... .......... .......... 4.65M\n 55450K .......... .......... .......... .......... .......... 7.57M\n 55500K .......... .......... .......... .......... .......... 4.78M\n 55550K .......... .......... .......... .......... .......... 4.62M\n 55600K .......... .......... .......... .......... .......... 4.65M\n 55650K .......... .......... .......... .......... .......... 8.11M\n 55700K .......... .......... .......... .......... .......... 4.66M\n 55750K .......... .......... .......... .......... .......... 4.64M\n 55800K .......... .......... .......... .......... .......... 4.46M\n 55850K .......... .......... .......... .......... .......... 9.44M\n 55900K .......... .......... .......... .......... .......... 4.49M\n 55950K .......... .......... .......... .......... .......... 4.57M\n 56000K .......... .......... .......... .......... .......... 4.58M\n 56050K .......... .......... .......... .......... .......... 6.44M\n 56100K .......... .......... .......... .......... .......... 5.48M\n 56150K .......... .......... .......... .......... .......... 4.77M\n 56200K .......... .......... .......... .......... .......... 4.75M\n 56250K .......... .......... .......... .......... .......... 8.63M\n 56300K .......... .......... .......... .......... .......... 4.52M\n 56350K .......... .......... .......... .......... .......... 4.73M\n 56400K .......... .......... .......... .......... .......... 4.49M\n 56450K .......... .......... .......... .......... .......... 8.60M\n 56500K .......... .......... .......... .......... .......... 4.66M\n 56550K .......... .......... .......... .......... .......... 4.64M\n 56600K .......... .......... .......... .......... .......... 4.13M\n 56650K .......... .......... .......... .......... .......... 10.6M\n 56700K .......... .......... .......... .......... .......... 4.62M\n 56750K .......... .......... .......... .......... .......... 4.39M\n 56800K .......... .......... .......... .......... .......... 3.85M\n 56850K .......... .......... .......... .......... .......... 6.05M\n 56900K .......... .......... .......... .......... .......... 8.38M\n 56950K .......... .......... .......... .......... .......... 4.50M\n 57000K .......... .......... .......... .......... .......... 4.56M\n 57050K .......... .......... .......... .......... .......... 4.52M\n 57100K .......... .......... .......... .......... .......... 9.22M\n 57150K .......... .......... .......... .......... .......... 4.51M\n 57200K .......... .......... .......... .......... .......... 4.19M\n 57250K .......... .......... .......... .......... .......... 11.3M\n 57300K .......... .......... .......... .......... .......... 4.54M\n 57350K .......... .......... .......... .......... .......... 4.43M\n 57400K .......... .......... .......... .......... .......... 4.61M\n 57450K .......... .......... .......... .......... .......... 8.58M\n 57500K .......... .......... .......... .......... .......... 4.74M\n 57550K .......... .......... .......... .......... .......... 4.61M\n 57600K .......... .......... .......... .......... .......... 4.37M\n 57650K .......... .......... .......... .......... .......... 9.17M\n 57700K .......... .......... .......... .......... .......... 4.62M\n 57750K .......... .......... .......... .......... .......... 4.53M\n 57800K .......... .......... .......... .......... .......... 4.39M\n 57850K .......... .......... .......... .......... .......... 9.02M\n 57900K .......... .......... .......... .......... .......... 4.66M\n 57950K .......... .......... .......... .......... .......... 4.57M\n 58000K .......... .......... .......... .......... .......... 4.53M\n 58050K .......... .......... .......... .......... .......... 8.59M\n 58100K .......... .......... .......... .......... .......... 4.64M\n 58150K .......... .......... .......... .......... .......... 4.01M\n 58200K .......... .......... .......... .......... .......... 5.32M\n 58250K .......... .......... .......... .......... .......... 8.56M\n 58300K .......... .......... .......... .......... .......... 4.59M\n 58350K .......... .......... .......... .......... .......... 4.69M\n 58400K .......... .......... .......... .......... .......... 4.57M\n 58450K .......... .......... .......... .......... .......... 8.14M\n 58500K .......... .......... .......... .......... .......... 4.65M\n 58550K .......... .......... .......... .......... .......... 3.85M\n 58600K .......... .......... .......... .......... .......... 5.77M\n 58650K .......... .......... .......... .......... .......... 8.92M\n 58700K .......... .......... .......... .......... .......... 4.62M\n 58750K .......... .......... .......... .......... .......... 4.56M\n 58800K .......... .......... .......... .......... .......... 4.43M\n 58850K .......... .......... .......... .......... .......... 8.16M\n 58900K .......... .......... .......... .......... .......... 4.70M\n 58950K .......... .......... .......... .......... .......... 4.58M\n 59000K .......... .......... .......... .......... .......... 4.84M\n 59050K .......... .......... .......... .......... .......... 4.50M\n 59100K .......... .......... .......... .......... .......... 9.44M\n 59150K .......... .......... .......... .......... .......... 4.59M\n 59200K .......... .......... .......... .......... .......... 4.60M\n 59250K .......... .......... .......... .......... .......... 4.46M\n 59300K .......... .......... .......... .......... .......... 4.24M\n 59350K .......... .......... .......... .......... .......... 11.2M\n 59400K .......... .......... .......... .......... .......... 4.34M\n 59450K .......... .......... .......... .......... .......... 4.71M\n 59500K .......... .......... .......... .......... .......... 4.72M\n 59550K .......... .......... .......... .......... .......... 9.08M\n 59600K .......... .......... .......... .......... .......... 4.56M\n 59650K .......... .......... .......... .......... .......... 4.32M\n 59700K .......... .......... .......... .......... .......... 4.71M\n 59750K .......... .......... .......... .......... .......... 7.21M\n 59800K .......... .......... .......... .......... .......... 4.61M\n 59850K .......... .......... .......... .......... .......... 5.09M\n 59900K .......... .......... .......... .......... .......... 4.67M\n 59950K .......... .......... .......... .......... .......... 8.24M\n 60000K .......... .......... .......... .......... .......... 4.86M\n 60050K .......... .......... .......... .......... .......... 4.38M\n 60100K .......... .......... .......... .......... .......... 4.58M\n 60150K .......... .......... .......... .......... .......... 9.84M\n 60200K .......... .......... .......... .......... .......... 4.62M\n 60250K .......... .......... .......... .......... .......... 4.64M\n 60300K .......... .......... .......... .......... .......... 4.60M\n 60350K .......... .......... .......... .......... .......... 8.88M\n 60400K .......... .......... .......... .......... .......... 4.27M\n 60450K .......... .......... .......... .......... .......... 5.04M\n 60500K .......... .......... .......... .......... .......... 4.83M\n 60550K .......... .......... .......... .......... .......... 8.44M\n 60600K .......... .......... .......... .......... ..........  892K\n 60650K .......... .........                                   37.4M=14s\n\n2023-06-26 18:55:10 (4.12 MB/s) - 'exp_quant.zip' saved [62125370]\n\n--2023-06-26 18:55:12--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: 'exp_design.tsv'\n\n     0K .......... .......... .......... .......... ..........  6%  270K 3s\n    50K .......... .......... .......... .......... .......... 12%  271K 3s\n   100K .......... .......... .......... .......... .......... 18%  274K 2s\n   150K .......... .......... .......... .......... .......... 24%  543K 2s\n   200K .......... .......... .......... .......... .......... 30%  541K 2s\n   250K .......... .......... .......... .......... .......... 36%  537K 1s\n   300K .......... .......... .......... .......... .......... 42%  546K 1s\n   350K .......... .......... .......... .......... .......... 48%  545K 1s\n   400K .......... .......... .......... .......... .......... 54%  545K 1s\n   450K .......... .......... .......... .......... .......... 60%  815K 1s\n   500K .......... .......... .......... .......... .......... 66% 1.60M 1s\n   550K .......... .......... .......... .......... .......... 72%  762K 0s\n   600K .......... .......... .......... .......... .......... 78% 1.59M 0s\n   650K .......... .......... .......... .......... .......... 84%  578K 0s\n   700K .......... .......... .......... .......... .......... 90% 8.88M 0s\n   750K .......... .......... .......... .......... .......... 96%  824K 0s\n   800K .......... .......... .......                         100% 1.01M=1.5s\n\n2023-06-26 18:55:14 (562 KB/s) - 'exp_design.tsv' saved [847657/847657]\n\n", "job_stdout": "", "job_stderr": "", "stderr": "--2023-06-26 18:54:54--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: 'exp_quant.zip'\n\n     0K .......... .......... .......... .......... ..........  181K\n    50K .......... .......... .......... .......... ..........  273K\n   100K .......... .......... .......... .......... ..........  548K\n   150K .......... .......... .......... .......... ..........  549K\n   200K .......... .......... .......... .......... ..........  548K\n   250K .......... .......... .......... .......... ..........  549K\n   300K .......... .......... .......... .......... ..........  544K\n   350K .......... .......... .......... .......... ..........  548K\n   400K .......... .......... .......... .......... ..........  547K\n   450K .......... .......... .......... .......... .......... 6.04M\n   500K .......... .......... .......... .......... ..........  599K\n   550K .......... .......... .......... .......... ..........  947K\n   600K .......... .......... .......... .......... .......... 1.26M\n   650K .......... .......... .......... .......... ..........  912K\n   700K .......... .......... .......... .......... .......... 1.22M\n   750K .......... .......... .......... .......... ..........  564K\n   800K .......... .......... .......... .......... .......... 8.99M\n   850K .......... .......... .......... .......... ..........  580K\n   900K .......... .......... .......... .......... .......... 19.9M\n   950K .......... .......... .......... .......... ..........  936K\n  1000K .......... .......... .......... .......... .......... 1.37M\n  1050K .......... .......... .......... .......... .......... 7.75M\n  1100K .......... .......... .......... .......... ..........  980K\n  1150K .......... .......... .......... .......... .......... 1.34M\n  1200K .......... .......... .......... .......... .......... 11.3M\n  1250K .......... .......... .......... .......... ..........  588K\n  1300K .......... .......... .......... .......... .......... 19.6M\n  1350K .......... .......... .......... .......... .......... 12.7M\n  1400K .......... .......... .......... .......... ..........  952K\n  1450K .......... .......... .......... .......... .......... 1.49M\n  1500K .......... .......... .......... .......... .......... 8.46M\n  1550K .......... .......... .......... .......... ..........  939K\n  1600K .......... .......... .......... .......... .......... 1.47M\n  1650K .......... .......... .......... .......... .......... 23.0M\n  1700K .......... .......... .......... .......... ..........  910K\n  1750K .......... .......... .......... .......... .......... 1.42M\n  1800K .......... .......... .......... .......... ..........  363M\n  1850K .......... .......... .......... .......... .......... 8.16M\n  1900K .......... .......... .......... .......... ..........  949K\n  1950K .......... .......... .......... .......... .......... 1.48M\n  2000K .......... .......... .......... .......... .......... 26.3M\n  2050K .......... .......... .......... .......... .......... 9.83M\n  2100K .......... .......... .......... .......... ..........  945K\n  2150K .......... .......... .......... .......... .......... 1.54M\n  2200K .......... .......... .......... .......... .......... 11.2M\n  2250K .......... .......... .......... .......... .......... 15.2M\n  2300K .......... .......... .......... .......... ..........  981K\n  2350K .......... .......... .......... .......... .......... 1.49M\n  2400K .......... .......... .......... .......... .......... 10.9M\n  2450K .......... .......... .......... .......... .......... 14.2M\n  2500K .......... .......... .......... .......... ..........  986K\n  2550K .......... .......... .......... .......... .......... 1.49M\n  2600K .......... .......... .......... .......... ..........  200M\n  2650K .......... .......... .......... .......... .......... 10.3M\n  2700K .......... .......... .......... .......... .......... 14.1M\n  2750K .......... .......... .......... .......... ..........  955K\n  2800K .......... .......... .......... .......... .......... 1.57M\n  2850K .......... .......... .......... .......... .......... 9.36M\n  2900K .......... .......... .......... .......... .......... 15.7M\n  2950K .......... .......... .......... .......... ..........  996K\n  3000K .......... .......... .......... .......... .......... 25.5M\n  3050K .......... .......... .......... .......... .......... 1.57M\n  3100K .......... .......... .......... .......... .......... 9.50M\n  3150K .......... .......... .......... .......... .......... 15.3M\n  3200K .......... .......... .......... .......... ..........  994K\n  3250K .......... .......... .......... .......... .......... 1.52M\n  3300K .......... .......... .......... .......... ..........  132M\n  3350K .......... .......... .......... .......... .......... 8.77M\n  3400K .......... .......... .......... .......... .......... 17.7M\n  3450K .......... .......... .......... .......... ..........  989K\n  3500K .......... .......... .......... .......... .......... 16.2M\n  3550K .......... .......... .......... .......... .......... 1.64M\n  3600K .......... .......... .......... .......... .......... 9.16M\n  3650K .......... .......... .......... .......... .......... 15.2M\n  3700K .......... .......... .......... .......... ..........  996K\n  3750K .......... .......... .......... .......... .......... 8.71M\n  3800K .......... .......... .......... .......... .......... 1.83M\n  3850K .......... .......... .......... .......... ..........  483M\n  3900K .......... .......... .......... .......... .......... 8.26M\n  3950K .......... .......... .......... .......... ..........  944K\n  4000K .......... .......... .......... .......... .......... 5.76M\n  4050K .......... .......... .......... .......... .......... 2.07M\n  4100K .......... .......... .......... .......... ..........  110M\n  4150K .......... .......... .......... .......... .......... 8.10M\n  4200K .......... .......... .......... .......... .......... 16.8M\n  4250K .......... .......... .......... .......... ..........  995K\n  4300K .......... .......... .......... .......... .......... 5.78M\n  4350K .......... .......... .......... .......... .......... 2.06M\n  4400K .......... .......... .......... .......... ..........  141M\n  4450K .......... .......... .......... .......... .......... 8.07M\n  4500K .......... .......... .......... .......... .......... 17.7M\n  4550K .......... .......... .......... .......... ..........  985K\n  4600K .......... .......... .......... .......... .......... 6.33M\n  4650K .......... .......... .......... .......... .......... 2.05M\n  4700K .......... .......... .......... .......... ..........  107M\n  4750K .......... .......... .......... .......... .......... 7.52M\n  4800K .......... .......... .......... .......... .......... 25.3M\n  4850K .......... .......... .......... .......... ..........  972K\n  4900K .......... .......... .......... .......... .......... 6.34M\n  4950K .......... .......... .......... .......... .......... 2.11M\n  5000K .......... .......... .......... .......... .......... 20.9M\n  5050K .......... .......... .......... .......... .......... 9.90M\n  5100K .......... .......... .......... .......... .......... 29.5M\n  5150K .......... .......... .......... .......... ..........  965K\n  5200K .......... .......... .......... .......... ..........  132M\n  5250K .......... .......... .......... .......... .......... 6.74M\n  5300K .......... .......... .......... .......... .......... 2.08M\n  5350K .......... .......... .......... .......... .......... 12.2M\n  5400K .......... .......... .......... .......... .......... 16.5M\n  5450K .......... .......... .......... .......... .......... 30.9M\n  5500K .......... .......... .......... .......... ..........  955K\n  5550K .......... .......... .......... .......... .......... 6.95M\n  5600K .......... .......... .......... .......... .......... 2.11M\n  5650K .......... .......... .......... .......... .......... 38.0M\n  5700K .......... .......... .......... .......... .......... 8.31M\n  5750K .......... .......... .......... .......... ..........  105M\n  5800K .......... .......... .......... .......... .......... 34.7M\n  5850K .......... .......... .......... .......... ..........  958K\n  5900K .......... .......... .......... .......... ..........  116M\n  5950K .......... .......... .......... .......... .......... 1.65M\n  6000K .......... .......... .......... .......... .......... 34.9M\n  6050K .......... .......... .......... .......... .......... 8.42M\n  6100K .......... .......... .......... .......... ..........  332M\n  6150K .......... .......... .......... .......... .......... 21.6M\n  6200K .......... .......... .......... .......... ..........  966K\n  6250K .......... .......... .......... .......... .......... 96.2M\n  6300K .......... .......... .......... .......... .......... 6.94M\n  6350K .......... .......... .......... .......... .......... 2.13M\n  6400K .......... .......... .......... .......... .......... 12.3M\n  6450K .......... .......... .......... .......... .......... 16.3M\n  6500K .......... .......... .......... .......... .......... 20.7M\n  6550K .......... .......... .......... .......... ..........  129M\n  6600K .......... .......... .......... .......... ..........  967K\n  6650K .......... .......... .......... .......... .......... 7.46M\n  6700K .......... .......... .......... .......... .......... 8.22M\n  6750K .......... .......... .......... .......... .......... 2.75M\n  6800K .......... .......... .......... .......... .......... 9.21M\n  6850K .......... .......... .......... .......... .......... 33.0M\n  6900K .......... .......... .......... .......... .......... 19.7M\n  6950K .......... .......... .......... .......... .......... 16.3M\n  7000K .......... .......... .......... .......... .......... 1024K\n  7050K .......... .......... .......... .......... ..........  366M\n  7100K .......... .......... .......... .......... .......... 1.65M\n  7150K .......... .......... .......... .......... ..........  227M\n  7200K .......... .......... .......... .......... .......... 7.50M\n  7250K .......... .......... .......... .......... ..........  294M\n  7300K .......... .......... .......... .......... .......... 66.0M\n  7350K .......... .......... .......... .......... .......... 20.3M\n  7400K .......... .......... .......... .......... .......... 4.04M\n  7450K .......... .......... .......... .......... .......... 1.23M\n  7500K .......... .......... .......... .......... .......... 7.32M\n  7550K .......... .......... .......... .......... .......... 2.10M\n  7600K .......... .......... .......... .......... ..........  232M\n  7650K .......... .......... .......... .......... .......... 7.51M\n  7700K .......... .......... .......... .......... ..........  216M\n  7750K .......... .......... .......... .......... ..........  208M\n  7800K .......... .......... .......... .......... .......... 19.9M\n  7850K .......... .......... .......... .......... .......... 4.12M\n  7900K .......... .......... .......... .......... .......... 1.22M\n  7950K .......... .......... .......... .......... .......... 7.58M\n  8000K .......... .......... .......... .......... .......... 2.09M\n  8050K .......... .......... .......... .......... ..........  146M\n  8100K .......... .......... .......... .......... .......... 7.91M\n  8150K .......... .......... .......... .......... ..........  109M\n  8200K .......... .......... .......... .......... ..........  133M\n  8250K .......... .......... .......... .......... .......... 23.6M\n  8300K .......... .......... .......... .......... .......... 4.02M\n  8350K .......... .......... .......... .......... .......... 1.22M\n  8400K .......... .......... .......... .......... .......... 7.64M\n  8450K .......... .......... .......... .......... ..........  371M\n  8500K .......... .......... .......... .......... .......... 2.09M\n  8550K .......... .......... .......... .......... .......... 89.8M\n  8600K .......... .......... .......... .......... .......... 8.23M\n  8650K .......... .......... .......... .......... ..........  157M\n  8700K .......... .......... .......... .......... .......... 19.9M\n  8750K .......... .......... .......... .......... ..........  101M\n  8800K .......... .......... .......... .......... ..........  966K\n  8850K .......... .......... .......... .......... ..........  113M\n  8900K .......... .......... .......... .......... .......... 7.78M\n  8950K .......... .......... .......... .......... ..........  359M\n  9000K .......... .......... .......... .......... .......... 2.09M\n  9050K .......... .......... .......... .......... ..........  169M\n  9100K .......... .......... .......... .......... .......... 6.97M\n  9150K .......... .......... .......... .......... ..........  344M\n  9200K .......... .......... .......... .......... ..........  449M\n  9250K .......... .......... .......... .......... ..........  533K\n  9300K .......... .......... .......... .......... ..........  425M\n  9350K .......... .......... .......... .......... ..........  497M\n  9400K .......... .......... .......... .......... ..........  453M\n  9450K .......... .......... .......... .......... ..........  520M\n  9500K .......... .......... .......... .......... ..........  439M\n  9550K .......... .......... .......... .......... ..........  532M\n  9600K .......... .......... .......... .......... ..........  496M\n  9650K .......... .......... .......... .......... ..........  406M\n  9700K .......... .......... .......... .......... ..........  414M\n  9750K .......... .......... .......... .......... ..........  343M\n  9800K .......... .......... .......... .......... .......... 74.8M\n  9850K .......... .......... .......... .......... ..........  984K\n  9900K .......... .......... .......... .......... .......... 6.79M\n  9950K .......... .......... .......... .......... .......... 1.63M\n 10000K .......... .......... .......... .......... .......... 45.4M\n 10050K .......... .......... .......... .......... ..........  195M\n 10100K .......... .......... .......... .......... ..........  338M\n 10150K .......... .......... .......... .......... .......... 19.2M\n 10200K .......... .......... .......... .......... ..........  993K\n 10250K .......... .......... .......... .......... .......... 86.3M\n 10300K .......... .......... .......... .......... .......... 2.03M\n 10350K .......... .......... .......... .......... .......... 3.83M\n 10400K .......... .......... .......... .......... .......... 71.9M\n 10450K .......... .......... .......... .......... ..........  228M\n 10500K .......... .......... .......... .......... .......... 27.7M\n 10550K .......... .......... .......... .......... .......... 18.1M\n 10600K .......... .......... .......... .......... .......... 1.00M\n 10650K .......... .......... .......... .......... .......... 6.93M\n 10700K .......... .......... .......... .......... .......... 2.03M\n 10750K .......... .......... .......... .......... .......... 7.56M\n 10800K .......... .......... .......... .......... ..........  126M\n 10850K .......... .......... .......... .......... ..........  128M\n 10900K .......... .......... .......... .......... .......... 15.0M\n 10950K .......... .......... .......... .......... .......... 1.33M\n 11000K .......... .......... .......... .......... .......... 3.70M\n 11050K .......... .......... .......... .......... .......... 7.15M\n 11100K .......... .......... .......... .......... .......... 1.61M\n 11150K .......... .......... .......... .......... ..........  131M\n 11200K .......... .......... .......... .......... ..........  358M\n 11250K .......... .......... .......... .......... ..........  477M\n 11300K .......... .......... .......... .......... .......... 8.35M\n 11350K .......... .......... .......... .......... .......... 1.02M\n 11400K .......... .......... .......... .......... ..........  167M\n 11450K .......... .......... .......... .......... .......... 5.20M\n 11500K .......... .......... .......... .......... .......... 1.59M\n 11550K .......... .......... .......... .......... ..........\n..\n...... 6.25M\n 50150K .......... .......... .......... .......... .......... 5.28M\n 50200K .......... .......... .......... .......... .......... 4.77M\n 50250K .......... .......... .......... .......... .......... 8.66M\n 50300K .......... .......... .......... .......... .......... 4.69M\n 50350K .......... .......... .......... .......... .......... 4.47M\n 50400K .......... .......... .......... .......... .......... 4.06M\n 50450K .......... .......... .......... .......... .......... 10.3M\n 50500K .......... .......... .......... .......... .......... 4.83M\n 50550K .......... .......... .......... .......... .......... 4.61M\n 50600K .......... .......... .......... .......... .......... 4.70M\n 50650K .......... .......... .......... .......... .......... 9.31M\n 50700K .......... .......... .......... .......... .......... 4.55M\n 50750K .......... .......... .......... .......... .......... 4.26M\n 50800K .......... .......... .......... .......... .......... 4.81M\n 50850K .......... .......... .......... .......... .......... 7.26M\n 50900K .......... .......... .......... .......... .......... 4.31M\n 50950K .......... .......... .......... .......... .......... 5.44M\n 51000K .......... .......... .......... .......... .......... 4.53M\n 51050K .......... .......... .......... .......... .......... 8.64M\n 51100K .......... .......... .......... .......... .......... 4.76M\n 51150K .......... .......... .......... .......... .......... 4.13M\n 51200K .......... .......... .......... .......... .......... 4.58M\n 51250K .......... .......... .......... .......... .......... 4.69M\n 51300K .......... .......... .......... .......... .......... 8.58M\n 51350K .......... .......... .......... .......... .......... 4.33M\n 51400K .......... .......... .......... .......... .......... 5.03M\n 51450K .......... .......... .......... .......... .......... 4.49M\n 51500K .......... .......... .......... .......... .......... 8.56M\n 51550K .......... .......... .......... .......... .......... 4.47M\n 51600K .......... .......... .......... .......... .......... 4.81M\n 51650K .......... .......... .......... .......... .......... 4.68M\n 51700K .......... .......... .......... .......... .......... 4.41M\n 51750K .......... .......... .......... .......... .......... 8.80M\n 51800K .......... .......... .......... .......... .......... 4.58M\n 51850K .......... .......... .......... .......... .......... 4.58M\n 51900K .......... .......... .......... .......... .......... 4.69M\n 51950K .......... .......... .......... .......... .......... 8.93M\n 52000K .......... .......... .......... .......... .......... 4.52M\n 52050K .......... .......... .......... .......... .......... 4.61M\n 52100K .......... .......... .......... .......... .......... 4.66M\n 52150K .......... .......... .......... .......... .......... 8.67M\n 52200K .......... .......... .......... .......... .......... 4.34M\n 52250K .......... .......... .......... .......... .......... 4.72M\n 52300K .......... .......... .......... .......... .......... 4.61M\n 52350K .......... .......... .......... .......... .......... 8.70M\n 52400K .......... .......... .......... .......... .......... 3.99M\n 52450K .......... .......... .......... .......... .......... 5.20M\n 52500K .......... .......... .......... .......... .......... 4.68M\n 52550K .......... .......... .......... .......... .......... 8.94M\n 52600K .......... .......... .......... .......... .......... 4.34M\n 52650K .......... .......... .......... .......... .......... 4.76M\n 52700K .......... .......... .......... .......... .......... 4.61M\n 52750K .......... .......... .......... .......... .......... 8.81M\n 52800K .......... .......... .......... .......... .......... 4.34M\n 52850K .......... .......... .......... .......... .......... 4.96M\n 52900K .......... .......... .......... .......... .......... 4.26M\n 52950K .......... .......... .......... .......... .......... 10.3M\n 53000K .......... .......... .......... .......... .......... 4.49M\n 53050K .......... .......... .......... .......... .......... 4.75M\n 53100K .......... .......... .......... .......... .......... 4.55M\n 53150K .......... .......... .......... .......... .......... 8.51M\n 53200K .......... .......... .......... .......... .......... 4.63M\n 53250K .......... .......... .......... .......... .......... 4.53M\n 53300K .......... .......... .......... .......... .......... 4.69M\n 53350K .......... .......... .......... .......... .......... 8.88M\n 53400K .......... .......... .......... .......... .......... 4.68M\n 53450K .......... .......... .......... .......... .......... 4.56M\n 53500K .......... .......... .......... .......... .......... 4.52M\n 53550K .......... .......... .......... .......... .......... 8.58M\n 53600K .......... .......... .......... .......... .......... 4.75M\n 53650K .......... .......... .......... .......... .......... 4.29M\n 53700K .......... .......... .......... .......... .......... 4.74M\n 53750K .......... .......... .......... .......... .......... 8.67M\n 53800K .......... .......... .......... .......... .......... 4.77M\n 53850K .......... .......... .......... .......... .......... 4.49M\n 53900K .......... .......... .......... .......... .......... 4.56M\n 53950K .......... .......... .......... .......... .......... 4.61M\n 54000K .......... .......... .......... .......... .......... 8.20M\n 54050K .......... .......... .......... .......... .......... 4.50M\n 54100K .......... .......... .......... .......... .......... 4.58M\n 54150K .......... .......... .......... .......... .......... 4.69M\n 54200K .......... .......... .......... .......... .......... 8.60M\n 54250K .......... .......... .......... .......... .......... 4.45M\n 54300K .......... .......... .......... .......... .......... 4.56M\n 54350K .......... .......... .......... .......... .......... 4.69M\n 54400K .......... .......... .......... .......... .......... 9.11M\n 54450K .......... .......... .......... .......... .......... 4.40M\n 54500K .......... .......... .......... .......... .......... 4.60M\n 54550K .......... .......... .......... .......... .......... 4.62M\n 54600K .......... .......... .......... .......... .......... 8.71M\n 54650K .......... .......... .......... .......... .......... 4.66M\n 54700K .......... .......... .......... .......... .......... 4.50M\n 54750K .......... .......... .......... .......... .......... 4.78M\n 54800K .......... .......... .......... .......... .......... 8.17M\n 54850K .......... .......... .......... .......... .......... 4.75M\n 54900K .......... .......... .......... .......... .......... 4.37M\n 54950K .......... .......... .......... .......... .......... 4.57M\n 55000K .......... .......... .......... .......... .......... 8.72M\n 55050K .......... .......... .......... .......... .......... 4.72M\n 55100K .......... .......... .......... .......... .......... 4.49M\n 55150K .......... .......... .......... .......... .......... 4.58M\n 55200K .......... .......... .......... .......... .......... 4.62M\n 55250K .......... .......... .......... .......... .......... 8.86M\n 55300K .......... .......... .......... .......... .......... 4.27M\n 55350K .......... .......... .......... .......... .......... 4.67M\n 55400K .......... .......... .......... .......... .......... 4.65M\n 55450K .......... .......... .......... .......... .......... 7.57M\n 55500K .......... .......... .......... .......... .......... 4.78M\n 55550K .......... .......... .......... .......... .......... 4.62M\n 55600K .......... .......... .......... .......... .......... 4.65M\n 55650K .......... .......... .......... .......... .......... 8.11M\n 55700K .......... .......... .......... .......... .......... 4.66M\n 55750K .......... .......... .......... .......... .......... 4.64M\n 55800K .......... .......... .......... .......... .......... 4.46M\n 55850K .......... .......... .......... .......... .......... 9.44M\n 55900K .......... .......... .......... .......... .......... 4.49M\n 55950K .......... .......... .......... .......... .......... 4.57M\n 56000K .......... .......... .......... .......... .......... 4.58M\n 56050K .......... .......... .......... .......... .......... 6.44M\n 56100K .......... .......... .......... .......... .......... 5.48M\n 56150K .......... .......... .......... .......... .......... 4.77M\n 56200K .......... .......... .......... .......... .......... 4.75M\n 56250K .......... .......... .......... .......... .......... 8.63M\n 56300K .......... .......... .......... .......... .......... 4.52M\n 56350K .......... .......... .......... .......... .......... 4.73M\n 56400K .......... .......... .......... .......... .......... 4.49M\n 56450K .......... .......... .......... .......... .......... 8.60M\n 56500K .......... .......... .......... .......... .......... 4.66M\n 56550K .......... .......... .......... .......... .......... 4.64M\n 56600K .......... .......... .......... .......... .......... 4.13M\n 56650K .......... .......... .......... .......... .......... 10.6M\n 56700K .......... .......... .......... .......... .......... 4.62M\n 56750K .......... .......... .......... .......... .......... 4.39M\n 56800K .......... .......... .......... .......... .......... 3.85M\n 56850K .......... .......... .......... .......... .......... 6.05M\n 56900K .......... .......... .......... .......... .......... 8.38M\n 56950K .......... .......... .......... .......... .......... 4.50M\n 57000K .......... .......... .......... .......... .......... 4.56M\n 57050K .......... .......... .......... .......... .......... 4.52M\n 57100K .......... .......... .......... .......... .......... 9.22M\n 57150K .......... .......... .......... .......... .......... 4.51M\n 57200K .......... .......... .......... .......... .......... 4.19M\n 57250K .......... .......... .......... .......... .......... 11.3M\n 57300K .......... .......... .......... .......... .......... 4.54M\n 57350K .......... .......... .......... .......... .......... 4.43M\n 57400K .......... .......... .......... .......... .......... 4.61M\n 57450K .......... .......... .......... .......... .......... 8.58M\n 57500K .......... .......... .......... .......... .......... 4.74M\n 57550K .......... .......... .......... .......... .......... 4.61M\n 57600K .......... .......... .......... .......... .......... 4.37M\n 57650K .......... .......... .......... .......... .......... 9.17M\n 57700K .......... .......... .......... .......... .......... 4.62M\n 57750K .......... .......... .......... .......... .......... 4.53M\n 57800K .......... .......... .......... .......... .......... 4.39M\n 57850K .......... .......... .......... .......... .......... 9.02M\n 57900K .......... .......... .......... .......... .......... 4.66M\n 57950K .......... .......... .......... .......... .......... 4.57M\n 58000K .......... .......... .......... .......... .......... 4.53M\n 58050K .......... .......... .......... .......... .......... 8.59M\n 58100K .......... .......... .......... .......... .......... 4.64M\n 58150K .......... .......... .......... .......... .......... 4.01M\n 58200K .......... .......... .......... .......... .......... 5.32M\n 58250K .......... .......... .......... .......... .......... 8.56M\n 58300K .......... .......... .......... .......... .......... 4.59M\n 58350K .......... .......... .......... .......... .......... 4.69M\n 58400K .......... .......... .......... .......... .......... 4.57M\n 58450K .......... .......... .......... .......... .......... 8.14M\n 58500K .......... .......... .......... .......... .......... 4.65M\n 58550K .......... .......... .......... .......... .......... 3.85M\n 58600K .......... .......... .......... .......... .......... 5.77M\n 58650K .......... .......... .......... .......... .......... 8.92M\n 58700K .......... .......... .......... .......... .......... 4.62M\n 58750K .......... .......... .......... .......... .......... 4.56M\n 58800K .......... .......... .......... .......... .......... 4.43M\n 58850K .......... .......... .......... .......... .......... 8.16M\n 58900K .......... .......... .......... .......... .......... 4.70M\n 58950K .......... .......... .......... .......... .......... 4.58M\n 59000K .......... .......... .......... .......... .......... 4.84M\n 59050K .......... .......... .......... .......... .......... 4.50M\n 59100K .......... .......... .......... .......... .......... 9.44M\n 59150K .......... .......... .......... .......... .......... 4.59M\n 59200K .......... .......... .......... .......... .......... 4.60M\n 59250K .......... .......... .......... .......... .......... 4.46M\n 59300K .......... .......... .......... .......... .......... 4.24M\n 59350K .......... .......... .......... .......... .......... 11.2M\n 59400K .......... .......... .......... .......... .......... 4.34M\n 59450K .......... .......... .......... .......... .......... 4.71M\n 59500K .......... .......... .......... .......... .......... 4.72M\n 59550K .......... .......... .......... .......... .......... 9.08M\n 59600K .......... .......... .......... .......... .......... 4.56M\n 59650K .......... .......... .......... .......... .......... 4.32M\n 59700K .......... .......... .......... .......... .......... 4.71M\n 59750K .......... .......... .......... .......... .......... 7.21M\n 59800K .......... .......... .......... .......... .......... 4.61M\n 59850K .......... .......... .......... .......... .......... 5.09M\n 59900K .......... .......... .......... .......... .......... 4.67M\n 59950K .......... .......... .......... .......... .......... 8.24M\n 60000K .......... .......... .......... .......... .......... 4.86M\n 60050K .......... .......... .......... .......... .......... 4.38M\n 60100K .......... .......... .......... .......... .......... 4.58M\n 60150K .......... .......... .......... .......... .......... 9.84M\n 60200K .......... .......... .......... .......... .......... 4.62M\n 60250K .......... .......... .......... .......... .......... 4.64M\n 60300K .......... .......... .......... .......... .......... 4.60M\n 60350K .......... .......... .......... .......... .......... 8.88M\n 60400K .......... .......... .......... .......... .......... 4.27M\n 60450K .......... .......... .......... .......... .......... 5.04M\n 60500K .......... .......... .......... .......... .......... 4.83M\n 60550K .......... .......... .......... .......... .......... 8.44M\n 60600K .......... .......... .......... .......... ..........  892K\n 60650K .......... .........                                   37.4M=14s\n\n2023-06-26 18:55:10 (4.12 MB/s) - 'exp_quant.zip' saved [62125370]\n\n--2023-06-26 18:55:12--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 847657 (828K) [text/plain]\nSaving to: 'exp_design.tsv'\n\n     0K .......... .......... .......... .......... ..........  6%  270K 3s\n    50K .......... .......... .......... .......... .......... 12%  271K 3s\n   100K .......... .......... .......... .......... .......... 18%  274K 2s\n   150K .......... .......... .......... .......... .......... 24%  543K 2s\n   200K .......... .......... .......... .......... .......... 30%  541K 2s\n   250K .......... .......... .......... .......... .......... 36%  537K 1s\n   300K .......... .......... .......... .......... .......... 42%  546K 1s\n   350K .......... .......... .......... .......... .......... 48%  545K 1s\n   400K .......... .......... .......... .......... .......... 54%  545K 1s\n   450K .......... .......... .......... .......... .......... 60%  815K 1s\n   500K .......... .......... .......... .......... .......... 66% 1.60M 1s\n   550K .......... .......... .......... .......... .......... 72%  762K 0s\n   600K .......... .......... .......... .......... .......... 78% 1.59M 0s\n   650K .......... .......... .......... .......... .......... 84%  578K 0s\n   700K .......... .......... .......... .......... .......... 90% 8.88M 0s\n   750K .......... .......... .......... .......... .......... 96%  824K 0s\n   800K .......... .......... .......                         100% 1.01M=1.5s\n\n2023-06-26 18:55:14 (562 KB/s) - 'exp_design.tsv' saved [847657/847657]\n\n", "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "20 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "20.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:55:14", "plugin": "core", "name": "end_epoch", "raw_value": "1687805714.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:54:54", "plugin": "core", "name": "start_epoch", "raw_value": "1687805694.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "output_problems": ["Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.", "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.", "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.", "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it."], "status": "failure"}}, {"id": "salmon/1.3.0+galaxy1-0", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 0, "time_seconds": 36.02932095527649, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "88023cad6e10cdab"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|writeMappings": true, "quant_type|qtype": "reads"}, "job": {"model_class": "Job", "id": "ca32464a4daf5a86", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:47:43.613777", "create_time": "2023-06-26T18:47:20.366761", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-rc65t", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/7/3/6/dataset_736171a4-8680-4805-b690-d1a569a39d7b.dat' &&    ln -s /galaxy/server/database/objects/7/3/6/dataset_736171a4-8680-4805-b690-d1a569a39d7b.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"     --writeMappings=./output/samout.sam         --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output   && samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/samout.sam", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 149, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": true}"}, "inputs": {"quant_type|refTranscriptSource|fasta": {"id": "88023cad6e10cdab", "src": "hda", "uuid": "736171a4-8680-4805-b690-d1a569a39d7b"}, "quant_type|input|input_singles": {"id": "88023cad6e10cdab", "src": "hda", "uuid": "736171a4-8680-4805-b690-d1a569a39d7b"}}, "outputs": {"output_quant": {"id": "401eb79459ce13b3", "src": "hda", "uuid": "ee230a3a-d238-4f32-bb85-e8b3cce4a052"}, "output_bam": {"id": "e03f726da15d163b", "src": "hda", "uuid": "c4932bf6-4d4e-4f55-b15b-87ebdcf8be56"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:47:32.057] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:47:32.057] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:47:32.058] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:47:32.072] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:47:32.072] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:47:32.086] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:47:32.088] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:47:32.139] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:47:32.139] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.0289 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 654.91 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:47:32.142] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:47:32.142] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:47:32.142] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:47:32.152] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:47:32.152] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:47:32.152] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:47:32.226] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:47:32.226] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:47:32.239] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:47:32.244] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ writeMappings ] => { ./output/samout.sam }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:47:32.515] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:47:32.515] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:47:32.515] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2023-06-26 18:47:32.515] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:47:32.515] [jointLog] [info] parsing read library format\n[2023-06-26 18:47:32.515] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 543.51 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 1.2795 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 462.23 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 546.61 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 721.48 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 605.04 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.1131 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 649.52 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 312.02 us\n-----------------------------------------\n[2023-06-26 18:47:32.560] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:47:32.561] [jointLog] [info] Loading dense pufferfish index.\n[2023-06-26 18:47:32.569] [jointLog] [info] done\n[2023-06-26 18:47:32.569] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:47:32.569] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:47:32.611] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:47:32.611] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:47:32.613] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2023-06-26 18:47:32.613] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:47:32.613] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:47:32.613] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2023-06-26 18:47:32.613] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:47:32.613] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:47:32.613] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:47:32.617] [jointLog] [info] Starting optimizer\n[2023-06-26 18:47:32.617] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:47:32.617] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2023-06-26 18:47:32.618] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:47:32.618] [jointLog] [info] Finished optimizer\n[2023-06-26 18:47:32.618] [jointLog] [info] writing output \n\n[2023-06-26 18:47:32.623] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:47:32.057] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:47:32.057] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:47:32.058] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:47:32.072] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:47:32.072] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:47:32.086] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:47:32.088] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:47:32.139] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:47:32.139] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.0289 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 654.91 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:47:32.141] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:47:32.142] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:47:32.142] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:47:32.142] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:47:32.152] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:47:32.152] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:47:32.152] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:47:32.161] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:47:32.224] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:47:32.226] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:47:32.226] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:47:32.239] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:47:32.244] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ writeMappings ] => { ./output/samout.sam }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:47:32.515] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:47:32.515] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:47:32.515] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2023-06-26 18:47:32.515] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:47:32.515] [jointLog] [info] parsing read library format\n[2023-06-26 18:47:32.515] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 543.51 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 1.2795 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 462.23 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 546.61 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 721.48 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 605.04 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 1.1131 ms\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 649.52 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 312.02 us\n-----------------------------------------\n[2023-06-26 18:47:32.560] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:47:32.561] [jointLog] [info] Loading dense pufferfish index.\n[2023-06-26 18:47:32.569] [jointLog] [info] done\n[2023-06-26 18:47:32.569] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:47:32.569] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:47:32.611] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:47:32.611] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:47:32.613] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2023-06-26 18:47:32.613] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:47:32.613] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:47:32.613] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2023-06-26 18:47:32.613] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:47:32.613] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:47:32.613] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:47:32.617] [jointLog] [info] Starting optimizer\n[2023-06-26 18:47:32.617] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:47:32.617] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2023-06-26 18:47:32.618] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:47:32.618] [jointLog] [info] Finished optimizer\n[2023-06-26 18:47:32.618] [jointLog] [info] writing output \n\n[2023-06-26 18:47:32.623] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:47:33", "plugin": "core", "name": "end_epoch", "raw_value": "1687805253.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:47:31", "plugin": "core", "name": "start_epoch", "raw_value": "1687805251.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-1", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 1, "time_seconds": 24.242729425430298, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "33058367750e712d"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|qtype": "reads"}, "job": {"model_class": "Job", "id": "79a2679f1498763d", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:48:07.931207", "create_time": "2023-06-26T18:47:57.064401", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-mtfwz", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/0/d/f/dataset_0df0e99e-491d-42f5-a8e1-603ddf88985a.dat' &&    ln -s /galaxy/server/database/objects/0/d/f/dataset_0df0e99e-491d-42f5-a8e1-603ddf88985a.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"              --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 152, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": false}"}, "inputs": {"quant_type|refTranscriptSource|fasta": {"id": "33058367750e712d", "src": "hda", "uuid": "0df0e99e-491d-42f5-a8e1-603ddf88985a"}, "quant_type|input|input_singles": {"id": "33058367750e712d", "src": "hda", "uuid": "0df0e99e-491d-42f5-a8e1-603ddf88985a"}}, "outputs": {"output_quant": {"id": "74a5e78fd6decc6f", "src": "hda", "uuid": "95dfb05d-a1f9-45c3-baa0-edd2b4cb237a"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 18\nHash table size = 32\nCandidate marks count = 55\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:47:58.925] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:47:58.925] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:47:58.926] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:47:58.932] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:47:58.932] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:47:58.942] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:47:58.944] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:47:58.988] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:47:58.988] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.4055 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 931.58 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:47:58.990] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:47:58.990] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:47:59.001] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:47:59.001] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:47:59.001] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n%   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:47:59.064] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:47:59.064] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:47:59.075] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:47:59.080] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:47:59.141] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:47:59.141] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:47:59.141] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2023-06-26 18:47:59.141] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:47:59.141] [jointLog] [info] parsing read library format\n[2023-06-26 18:47:59.141] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 435.57 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 1.107 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 413.11 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 604.63 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 674.23 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 606.23 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 804.4 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 485.56 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 304.32 us\n-----------------------------------------\n[2023-06-26 18:47:59.183] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:47:59.184] [jointLog] [info] Loading dense pufferfish index.\n[2023-06-26 18:47:59.191] [jointLog] [info] done\n[2023-06-26 18:47:59.191] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:47:59.191] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:47:59.233] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:47:59.233] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:47:59.234] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2023-06-26 18:47:59.234] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:47:59.234] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:47:59.234] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2023-06-26 18:47:59.235] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:47:59.235] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:47:59.235] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:47:59.239] [jointLog] [info] Starting optimizer\n[2023-06-26 18:47:59.239] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:47:59.239] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2023-06-26 18:47:59.240] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:47:59.240] [jointLog] [info] Finished optimizer\n[2023-06-26 18:47:59.240] [jointLog] [info] writing output \n\n[2023-06-26 18:47:59.244] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:47:58.925] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:47:58.925] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:47:58.926] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:47:58.932] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:47:58.932] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:47:58.942] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:47:58.944] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:47:58.988] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:47:58.988] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.4055 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 931.58 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:47:58.990] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:47:58.990] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:47:58.991] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:47:59.001] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:47:59.001] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:47:59.001] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:47:59.010] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\n%   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:47:59.063] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:47:59.064] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:47:59.064] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:47:59.075] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:47:59.080] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:47:59.141] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:47:59.141] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:47:59.141] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2023-06-26 18:47:59.141] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:47:59.141] [jointLog] [info] parsing read library format\n[2023-06-26 18:47:59.141] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 435.57 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 1.107 ms\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 413.11 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 604.63 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 674.23 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 606.23 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 804.4 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 485.56 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 304.32 us\n-----------------------------------------\n[2023-06-26 18:47:59.183] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:47:59.184] [jointLog] [info] Loading dense pufferfish index.\n[2023-06-26 18:47:59.191] [jointLog] [info] done\n[2023-06-26 18:47:59.191] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:47:59.191] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:47:59.233] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:47:59.233] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:47:59.234] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2023-06-26 18:47:59.234] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:47:59.234] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:47:59.234] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2023-06-26 18:47:59.235] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:47:59.235] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:47:59.235] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:47:59.239] [jointLog] [info] Starting optimizer\n[2023-06-26 18:47:59.239] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:47:59.239] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2023-06-26 18:47:59.240] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:47:59.240] [jointLog] [info] Finished optimizer\n[2023-06-26 18:47:59.240] [jointLog] [info] writing output \n\n[2023-06-26 18:47:59.244] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 18\nHash table size = 32\nCandidate marks count = 55\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:47:59", "plugin": "core", "name": "end_epoch", "raw_value": "1687805279.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:47:58", "plugin": "core", "name": "start_epoch", "raw_value": "1687805278.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-2", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 2, "time_seconds": 19.089110851287842, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "f3661369bcd3a2bd"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|qtype": "reads"}, "job": {"model_class": "Job", "id": "6187e01b0448cec1", "state": "error", "exit_code": null, "update_time": "2023-06-26T18:48:27.220154", "create_time": "2023-06-26T18:48:21.351713", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-wzqp8", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/f/6/1/dataset_f61be2f9-c9cd-41a2-9bc3-5667672db7b8.dat' &&    ln -s /galaxy/server/database/objects/f/6/1/dataset_f61be2f9-c9cd-41a2-9bc3-5667672db7b8.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"              --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 154, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": false}"}, "inputs": {"quant_type|refTranscriptSource|fasta": {"id": "f3661369bcd3a2bd", "src": "hda", "uuid": "f61be2f9-c9cd-41a2-9bc3-5667672db7b8"}, "quant_type|input|input_singles": {"id": "f3661369bcd3a2bd", "src": "hda", "uuid": "f61be2f9-c9cd-41a2-9bc3-5667672db7b8"}}, "outputs": {"output_quant": {"id": "0dbbc78985c8d74f", "src": "hda", "uuid": "a2960ba2-abf0-4faa-b948-bc3b62654173"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "salmon/1.3.0+galaxy1-3", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 3, "time_seconds": 26.854430675506592, "inputs": {"quant_type|afile": {"src": "hda", "id": "f2e2f098179ef868"}, "quant_type|transcript": {"src": "hda", "id": "510a6ba987de56e7"}, "quant_type|noErrorModel": true, "quant_type|numErrorBins": "5", "quant_type|sampleOut": true, "quant_type|sampleUnaligned": true, "quant_type|qtype": "alignment"}, "job": {"model_class": "Job", "id": "5cfe6d81ab01e63f", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:48:53.825601", "create_time": "2023-06-26T18:48:41.927703", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-cm9q9", "command_line": "salmon quant -t '/galaxy/server/database/objects/6/7/d/dataset_67d6bdab-a9d2-4136-ade7-0cf5644af08d.dat' -l 'U' -a '/galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat' --threads \"${GALAXY_SLOTS:-4}\"  --noErrorModel --numErrorBins '5' --sampleOut --sampleUnaligned         --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output   && samtools sort -@ ${GALAXY_SLOTS} --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 1, \"afile\": {\"values\": [{\"id\": 156, \"src\": \"hda\"}]}, \"discardOrphans\": false, \"gencode\": false, \"noErrorModel\": true, \"numErrorBins\": \"5\", \"qtype\": \"alignment\", \"sampleOut\": true, \"sampleUnaligned\": true, \"strandedness\": \"U\", \"transcript\": {\"values\": [{\"id\": 157, \"src\": \"hda\"}]}}"}, "inputs": {"afile": {"id": "f2e2f098179ef868", "src": "hda", "uuid": "60dbf9dc-bfc3-4fda-8d47-42ab3370d78d"}, "transcript": {"id": "510a6ba987de56e7", "src": "hda", "uuid": "67d6bdab-a9d2-4136-ade7-0cf5644af08d"}}, "outputs": {"output_quant": {"id": "b692bd5c0e70d352", "src": "hda", "uuid": "e4d733fa-8420-46c6-824e-c797c3d216a8"}, "postSample": {"id": "cbf4de2a053889a2", "src": "hda", "uuid": "cc9491cf-0aa8-4db3-86f1-3765845d6d38"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] => salmon \n# [ command ] => quant \n# [ targets ] => { /galaxy/server/database/objects/6/7/d/dataset_67d6bdab-a9d2-4136-ade7-0cf5644af08d.dat }\n# [ libType ] => { U }\n# [ alignments ] => { /galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat }\n# [ threads ] => { 6 }\n# [ noErrorModel ] => { }\n# [ numErrorBins ] => { 5 }\n# [ sampleOut ] => { }\n# [ sampleUnaligned ] => { }\n# [ incompatPrior ] => { 0.0 }\n# [ biasSpeedSamp ] => { 5 }\n# [ fldMax ] => { 1000 }\n# [ fldMean ] => { 250 }\n# [ fldSD ] => { 25 }\n# [ forgettingFactor ] => { 0.65 }\n# [ maxReadOcc ] => { 100 }\n# [ numBiasSamples ] => { 2000000 }\n# [ numAuxModelSamples ] => { 5000000 }\n# [ numPreAuxModelSamples ] => { 5000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\n# [ thinningFactor ] => { 16 }\n# [ sigDigits ] => { 3 }\n# [ vbPrior ] => { 1e-05 }\n# [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:48:44.010] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:48:44.010] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-06-26 18:48:44.010] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat\", fasta = \"/galaxy/server/database/objects/6/7/d/dataset_67d6bdab-a9d2-4136-ade7-0cf5644af08d.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[2023-06-26 18:48:44.243] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2023-06-26 18:48:44.415] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-06-26 18:48:44.418] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-06-26 18:48:44.418] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-06-26 18:48:44.418] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:48:44.419] [jointLog] [info] starting optimizer\n[2023-06-26 18:48:44.419] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:48:44.419] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-06-26 18:48:44.421] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:48:44.421] [jointLog] [info] finished optimizer\n[2023-06-26 18:48:44.421] [jointLog] [info] writing output\n[2023-06-26 18:48:44.425] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n# salmon (alignment-based) v1.3.0\n# [ program ] => salmon \n# [ command ] => quant \n# [ targets ] => { /galaxy/server/database/objects/6/7/d/dataset_67d6bdab-a9d2-4136-ade7-0cf5644af08d.dat }\n# [ libType ] => { U }\n# [ alignments ] => { /galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat }\n# [ threads ] => { 6 }\n# [ noErrorModel ] => { }\n# [ numErrorBins ] => { 5 }\n# [ sampleOut ] => { }\n# [ sampleUnaligned ] => { }\n# [ incompatPrior ] => { 0.0 }\n# [ biasSpeedSamp ] => { 5 }\n# [ fldMax ] => { 1000 }\n# [ fldMean ] => { 250 }\n# [ fldSD ] => { 25 }\n# [ forgettingFactor ] => { 0.65 }\n# [ maxReadOcc ] => { 100 }\n# [ numBiasSamples ] => { 2000000 }\n# [ numAuxModelSamples ] => { 5000000 }\n# [ numPreAuxModelSamples ] => { 5000 }\n# [ numGibbsSamples ] => { 0 }\n# [ numBootstraps ] => { 0 }\n# [ thinningFactor ] => { 16 }\n# [ sigDigits ] => { 3 }\n# [ vbPrior ] => { 1e-05 }\n# [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:48:44.010] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:48:44.010] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\nLibrary format { type:single end, relative orientation:none, strandedness:unstranded }\n[2023-06-26 18:48:44.010] [jointLog] [info] numQuantThreads = 3\nparseThreads = 3\nChecking that provided alignment files have consistent headers . . . done\nPopulating targets from aln = \"/galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat\", fasta = \"/galaxy/server/database/objects/6/7/d/dataset_67d6bdab-a9d2-4136-ade7-0cf5644af08d.dat\" . . .done\n\n\n\n\n\r\r\u001b[0;32mprocessed\u001b[0;31m 0 \u001b[0;32mreads in current round\u001b[0;0m\r\r\u001b[0;32mprocessed\u001b[0;31m 28503 \u001b[0;32mreads in current round\u001b[0;0m\n\r\rkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\n\n# observed = 28503 / # required = 50000000\u001b[A\u001b[A\u001b[A\u001b[A\u001b[A\n\n\n\nResetting BAMQueue from file(s) [ \"/galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat\" ] . . . done\n\r\r\u001b[32mprocessed\u001b[31m 0 \u001b[32mreads\u001b[0m\nkilling thread 0 . . . done\r\rkilling thread 1 . . . done\r\rkilling thread 2 . . . done\r\r\n# observed = 28503 mapped fragments.\u001b[F\u001b[F\u001b[F\u001b[FWaiting on output thread\ndone\n\n\n\n\n\nFreeing memory used by read queue . . . \nJoined parsing thread . . . \"/galaxy/server/database/objects/6/0/d/dataset_60dbf9dc-bfc3-4fda-8d47-42ab3370d78d.dat\" \nClosed all files . . . \nEmptied frag queue. . . \nEmptied Alignemnt Group Pool. . \nEmptied Alignment Group Queue. . . done\n[2023-06-26 18:48:44.243] [jointLog] [info] replaced 0 non-ACGT nucleotides with random nucleotides\n[2023-06-26 18:48:44.415] [jointLog] [info] \n\n\nCompleted first pass through the alignment file.\nTotal # of mapped reads : 28503\n# of uniquely mapped reads : 28502\n# ambiguously mapped reads : 1\n\n\n\n[2023-06-26 18:48:44.418] [jointLog] [info] Computed 18 rich equivalence classes for further processing\n[2023-06-26 18:48:44.418] [jointLog] [info] Counted 28503 total reads in the equivalence classes \n[2023-06-26 18:48:44.418] [jointLog] [warning] Only 28503 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:48:44.419] [jointLog] [info] starting optimizer\n[2023-06-26 18:48:44.419] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:48:44.419] [jointLog] [info] iteration = 0 | max rel diff. = 21.8815\n[2023-06-26 18:48:44.421] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:48:44.421] [jointLog] [info] finished optimizer\n[2023-06-26 18:48:44.421] [jointLog] [info] writing output\n[2023-06-26 18:48:44.425] [jointLog] [info] Sampling alignments; outputting results to ./output/postSample.bam\n\n[bam_sort_core] merging from 0 files and 6 in-memory blocks...\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "2 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "2.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:48:45", "plugin": "core", "name": "end_epoch", "raw_value": "1687805325.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:48:43", "plugin": "core", "name": "start_epoch", "raw_value": "1687805323.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "output_problems": ["Output postSample:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_73lfi4pq.sam v. /tmp/history_bam_converted_to_sam_ma52stij.sam )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n @HD\tVN:1.0\tSO:coordinate\n @PG\tID:rapmap\tPN:rapmap\tVN:0.6.0\n+@PG\tID:samtools\tPN:samtools\tPP:rapmap\tVN:1.10\tCL:samtools sort -@ 6 --output-fmt=BAM -o ./output/bamout.bam ./output/postSample.bam\n @SQ\tSN:NM_001168316\tLN:2283\n @SQ\tSN:NM_174914\tLN:2385\n @SQ\tSN:NR_031764\tLN:1853\n@@ -5014,8 +5015,8 @@\n 1043:NM_174914:1249:169\t419\tNM_174914\t1250\t1\t50M\t=\t1369\t169\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6249:NR_031764:1249:146\t355\tNM_174914\t1250\t1\t50M\t=\t1346\t146\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 1366:NM_174914:1104:195\t339\tNM_174914\t1250\t1\t50M\t=\t1105\t-195\tTGAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGC\t*\tNH:i:3\tHI:i:2\tAS:i:0\n+6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 2822:NR_031764:1132:169\t403\tNM_174914\t1252\t1\t50M\t=\t1133\t-169\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n-6246:NM_174914:1117:184\t403\tNM_174914\t1252\t1\t50M\t=\t1118\t-184\tAGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCAT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 6516:NM_174914:1111:191\t403\tNM_174914\t1253\t1\t50M\t=\t1112\t-191\tGAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATT\t*\tNH:i:3\tHI:i:2\tAS:i:0\n 7029:NM_174914:1253:199\t419\tNM_174914\t1254\t1\t50M\t=\t1403\t199\tAACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTG\t*\tNH:i:2\tHI:i:2\tAS:i:0\n 6563:NM_174914:1254:180\t419\tNM_174914\t1255\t1\t50M\t=\t1385\t180\tACACTGACACTTCCATATCACCCCTTGGGGTAGGTGAGCAAAGGCATTGT\t*\tNH:i:2\tHI:i:2\tAS:i:0\n@@ -18013,9 +18014,9 @@\n 2071:NM_022658:827:189\t83\tNM_022658\t967\t1\t50M\t=\t828\t-189\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 2980:NM_022658:826:190\t83\tNM_022658\t967\t1\t50M\t=\t827\t-190\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9883:NM_022658:822:194\t147\tNM_022658\t967\t1\t50M\t=\t823\t-194\tGCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1395:NM_022658:967:112\t99\tNM_022658\t968\t1\t50M\t=\t1030\t112\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 5474:NM_022658:967:171\t99\tNM_022658\t968\t1\t50M\t=\t1089\t171\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+8889:NM_022658:967:163\t163\tNM_022658\t968\t1\t50M\t=\t1081\t163\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1989:NM_022658:833:184\t147\tNM_022658\t968\t1\t50M\t=\t834\t-184\tCAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7622:NM_022658:968:140\t99\tNM_022658\t969\t1\t50M\t=\t1059\t140\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 1913:NM_022658:831:187\t83\tNM_022658\t969\t1\t50M\t=\t832\t-187\tAGATAAATTGAGAAGTTTACGACTGTCATTTGCTTTTATAGAGAATAGAA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n@@ -27014,8 +27015,8 @@\n 3076:NM_173860:414:198\t99\tNM_173860\t415\t1\t50M\t=\t563\t198\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3326:NM_173860:414:135\t163\tNM_173860\t415\t1\t50M\t=\t500\t135\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 8790:NM_173860:286:178\t147\tNM_173860\t415\t1\t50M\t=\t287\t-178\tTACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGG\t*\tNH:i:1\tHI:i:1\tAS:i:0\n+1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 7340:NM_173860:415:212\t99\tNM_173860\t416\t1\t50M\t=\t578\t212\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n-1503:NM_173860:415:193\t163\tNM_173860\t416\t1\t50M\t=\t559\t193\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 614:NM_173860:277:188\t83\tNM_173860\t416\t1\t50M\t=\t278\t-188\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 9840:NM_173860:284:181\t147\tNM_173860\t416\t1\t50M\t=\t285\t-181\tACGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGA\t*\tNH:i:1\tHI:i:1\tAS:i:0\n 3019:NM_173860:416:157\t163\tNM_173860\t417\t1\t50M\t=\t524\t157\tCGACTACGCGGCGGGCGGCGGCGGTGGCGACGGCGGCGGCGGCGCAGGAC\t*\tNH:i:1\tHI:i:1\tAS:i:0\n"], "status": "failure"}}, {"id": "salmon/1.3.0+galaxy1-4", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 4, "time_seconds": 22.91907000541687, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "c535a2fbf180b0ac"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|discardOrphansQuasi": false, "quant_type|validmap|validateMappings": true, "quant_type|dovetail": true, "quant_type|recoverOrphans": true, "quant_type|qtype": "reads"}, "job": {"model_class": "Job", "id": "400e621b9dc46023", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:49:17.167669", "create_time": "2023-06-26T18:49:07.352941", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-8dgj7", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/6/3/a/dataset_63ac5f14-976e-4288-a758-fa30e19f102c.dat' &&    ln -s /galaxy/server/database/objects/6/3/a/dataset_63ac5f14-976e-4288-a758-fa30e19f102c.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"  --validateMappings --minScoreFraction '0.65' --ma '2' --mp '4' --go '5' --ge '3'    --allowDovetail --recoverOrphans          --incompatPrior '0.0'       --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65'  --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000'  --numGibbsSamples '0'  --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": false, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": false, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": false, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": false, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "false", "seqBias": "false", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": true, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": true, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 160, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 0, \"gapExtensionPenalty\": \"3\", \"gapOpenPenalty\": \"5\", \"hardFilter\": false, \"matchScore\": \"2\", \"maxMMPExtension\": \"\", \"mimicBT2\": false, \"mimicStrictBT2\": false, \"minScoreFraction\": \"0.65\", \"mismatchPenalty\": \"4\", \"validateMappings\": true}, \"writeMappings\": false}"}, "inputs": {"quant_type|refTranscriptSource|fasta": {"id": "c535a2fbf180b0ac", "src": "hda", "uuid": "63ac5f14-976e-4288-a758-fa30e19f102c"}, "quant_type|input|input_singles": {"id": "c535a2fbf180b0ac", "src": "hda", "uuid": "63ac5f14-976e-4288-a758-fa30e19f102c"}}, "outputs": {"output_quant": {"id": "98adf46d9bd273c4", "src": "hda", "uuid": "8efd30a3-b960-41f1-b99b-64990c67ed3d"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:49:08.633] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:49:08.633] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:49:08.633] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:49:08.644] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:49:08.644] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:49:08.655] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:49:08.656] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:49:08.704] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:49:08.704] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.5205 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.2523 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:49:08.718] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:49:08.718] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:49:08.718] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\nsec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:49:08.784] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:49:08.784] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:49:08.795] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:49:08.799] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ validateMappings ] => { }\n### [ minScoreFraction ] => { 0.65 }\n### [ ma ] => { 2 }\n### [ mp ] => { 4 }\n### [ go ] => { 5 }\n### [ ge ] => { 3 }\n### [ allowDovetail ] => { }\n### [ recoverOrphans ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:49:08.861] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:49:08.861] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:49:08.861] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2023-06-26 18:49:08.861] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:49:08.861] [jointLog] [info] parsing read library format\n[2023-06-26 18:49:08.862] [jointLog] [info] There is 1 library.\n[2023-06-26 18:49:08.901] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:49:08.902] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading contig table | Time = 458.74 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 720.36 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 229.46 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 360.4 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 667.18 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 421.13 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 641.47 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 416.08 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 292.46 us\n-----------------------------------------\n[2023-06-26 18:49:08.907] [jointLog] [info] done\n[2023-06-26 18:49:08.907] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:49:08.907] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:49:08.954] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:49:08.954] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:49:08.955] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2023-06-26 18:49:08.955] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2023-06-26 18:49:08.955] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:49:08.955] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:49:08.955] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:49:08.955] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:49:08.955] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:49:08.960] [jointLog] [info] Starting optimizer\n[2023-06-26 18:49:08.960] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:49:08.960] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2023-06-26 18:49:08.961] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:49:08.961] [jointLog] [info] Finished optimizer\n[2023-06-26 18:49:08.961] [jointLog] [info] writing output \n\n[2023-06-26 18:49:08.965] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:49:08.633] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:49:08.633] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:49:08.633] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:49:08.644] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:49:08.644] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:49:08.655] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:49:08.656] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:49:08.704] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:49:08.704] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 1.5205 ms\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 1.2523 ms\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:49:08.707] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:49:08.718] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:49:08.718] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:49:08.718] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:49:08.726] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  18.6 %   ela\n..\nsec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  88.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:49:08.783] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:49:08.784] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:49:08.784] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:49:08.795] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:49:08.799] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ validateMappings ] => { }\n### [ minScoreFraction ] => { 0.65 }\n### [ ma ] => { 2 }\n### [ mp ] => { 4 }\n### [ go ] => { 5 }\n### [ ge ] => { 3 }\n### [ allowDovetail ] => { }\n### [ recoverOrphans ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ numGibbsSamples ] => { 0 }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:49:08.861] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:49:08.861] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:49:08.861] [jointLog] [warning] You set the mismatch penalty as 4, but it should be negative.  It is being negated to -4.\n[2023-06-26 18:49:08.861] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:49:08.861] [jointLog] [info] parsing read library format\n[2023-06-26 18:49:08.862] [jointLog] [info] There is 1 library.\n[2023-06-26 18:49:08.901] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:49:08.902] [jointLog] [info] Loading dense pufferfish index.\n-----------------------------------------\n| Loading contig table | Time = 458.74 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 720.36 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 229.46 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 360.4 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 667.18 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 421.13 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 641.47 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 416.08 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 292.46 us\n-----------------------------------------\n[2023-06-26 18:49:08.907] [jointLog] [info] done\n[2023-06-26 18:49:08.907] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:49:08.907] [jointLog] [info] Number of decoys : 0\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:49:08.954] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:49:08.954] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:49:08.955] [jointLog] [info] Number of orphans recovered using orphan rescue : 0\n[2023-06-26 18:49:08.955] [jointLog] [info] Number of mappings discarded because of alignment score : 6\n[2023-06-26 18:49:08.955] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:49:08.955] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:49:08.955] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:49:08.955] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:49:08.955] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:49:08.960] [jointLog] [info] Starting optimizer\n[2023-06-26 18:49:08.960] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:49:08.960] [jointLog] [info] iteration = 0 | max rel diff. = 0\n[2023-06-26 18:49:08.961] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:49:08.961] [jointLog] [info] Finished optimizer\n[2023-06-26 18:49:08.961] [jointLog] [info] writing output \n\n[2023-06-26 18:49:08.965] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:49:09", "plugin": "core", "name": "end_epoch", "raw_value": "1687805349.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:49:08", "plugin": "core", "name": "start_epoch", "raw_value": "1687805348.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-5", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 5, "time_seconds": 23.600374460220337, "inputs": {"quant_type|refTranscriptSource|s_index|fasta": {"src": "hda", "id": "c658a220acccc6a9"}, "quant_type|refTranscriptSource|TranscriptSource": "history", "quant_type|qtype": "reads", "seqBias": true, "gcBias": true, "adv|dumpEq": true, "adv|minAssignedFrags": "10", "adv|initUniform": true, "adv|noLengthCorrection": false, "adv|useEM": true, "adv|noGammaDraw": true}, "job": {"model_class": "Job", "id": "623c924f1d1c9949", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:49:40.538989", "create_time": "2023-06-26T18:49:30.634866", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/1.3.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-lrkxb", "command_line": "mkdir ./index && mkdir ./output && salmon index -i ./index --kmerLen '31' --gencode --transcripts '/galaxy/server/database/objects/5/2/d/dataset_52d6ef73-6371-4621-9a1f-e773b7458daa.dat' &&    ln -s /galaxy/server/database/objects/5/2/d/dataset_52d6ef73-6371-4621-9a1f-e773b7458daa.dat ./single.fasta &&  salmon quant --index './index' --libType U --unmatedReads ./single.fasta --threads \"${GALAXY_SLOTS:-4}\"            --seqBias --gcBias --incompatPrior '0.0'     --dumpEq  --minAssignedFrags '10' --biasSpeedSamp '5' --fldMax '1000' --fldMean '250' --fldSD '25' --forgettingFactor '0.65' --initUniform --maxReadOcc '100'     --numBiasSamples '2000000' --numAuxModelSamples '5000000' --numPreAuxModelSamples '5000' --useEM --numGibbsSamples '0' --noGammaDraw --numBootstraps '0'  --thinningFactor '16'  --sigDigits '3' --vbPrior '1e-05'   -o ./output", "traceback": null, "params": {"__input_ext": "\"fasta\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "adv": "{\"biasSpeedSamp\": \"5\", \"bootstrapReproject\": false, \"dumpEq\": true, \"dumpEqWeights\": false, \"fldMax\": \"1000\", \"fldMean\": \"250\", \"fldSD\": \"25\", \"forgettingFactor\": \"0.65\", \"initUniform\": true, \"maxReadOcc\": \"100\", \"minAssignedFrags\": \"10\", \"noBiasLengthThreshold\": false, \"noEffectiveLengthCorrection\": false, \"noFragLengthDist\": false, \"noGammaDraw\": true, \"noLengthCorrection\": false, \"numAuxModelSamples\": \"5000000\", \"numBiasSamples\": \"2000000\", \"numBootstraps\": \"0\", \"numGibbsSamples\": \"0\", \"numPreAuxModelSamples\": \"5000\", \"perTranscriptPrior\": false, \"rangeFactorizationBins\": \"0\", \"sigDigits\": \"3\", \"skipQuant\": false, \"thinningFactor\": \"16\", \"useEM\": true, \"vbPrior\": \"1e-05\", \"writeOrphanLinks\": false, \"writeUnmappedNames\": false}", "meta": "false", "incompatPrior": "\"0.0\"", "gcBias": "true", "seqBias": "true", "geneMap": null, "quant_type": "{\"__current_case__\": 0, \"consensusSlack\": \"0\", \"consistentHits\": false, \"discardOrphansQuasi\": false, \"dovetail\": false, \"input\": {\"single_or_paired\": {\"__current_case__\": 0, \"input_singles\": {\"values\": [{\"id\": 162, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"single\", \"strandedness\": \"U\"}}, \"qtype\": \"reads\", \"quasiCoverage\": \"\", \"recoverOrphans\": false, \"refTranscriptSource\": {\"TranscriptSource\": \"history\", \"__current_case__\": 1, \"s_index\": {\"fasta\": {\"values\": [{\"id\": 162, \"src\": \"hda\"}]}, \"kmer\": \"31\", \"phash\": false}}, \"type\": \"quasi\", \"validmap\": {\"__current_case__\": 1, \"validateMappings\": false}, \"writeMappings\": false}"}, "inputs": {"quant_type|refTranscriptSource|fasta": {"id": "c658a220acccc6a9", "src": "hda", "uuid": "52d6ef73-6371-4621-9a1f-e773b7458daa"}, "quant_type|input|input_singles": {"id": "c658a220acccc6a9", "src": "hda", "uuid": "52d6ef73-6371-4621-9a1f-e773b7458daa"}}, "outputs": {"output_quant": {"id": "03f2d6d0d1c33991", "src": "hda", "uuid": "4cc435e6-b1f3-4100-b0c2-9ac8e701b91c"}}, "output_collections": {}, "tool_stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "tool_stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:49:32.309] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:49:32.309] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:49:32.310] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:49:32.316] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:49:32.316] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:49:32.327] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:49:32.328] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:49:32.377] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:49:32.377] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 586.04 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 586.45 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:49:32.389] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:49:32.389] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:49:32.389] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:49:32.397] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\n %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:49:32.455] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:49:32.455] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:49:32.466] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:49:32.470] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ seqBias ] => { }\n### [ gcBias ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ dumpEq ] => { }\n### [ minAssignedFrags ] => { 10 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ initUniform ] => { }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ useEM ] => { }\n### [ numGibbsSamples ] => { 0 }\n### [ noGammaDraw ] => { }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:49:32.544] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:49:32.544] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:49:32.544] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2023-06-26 18:49:32.544] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:49:32.544] [jointLog] [info] parsing read library format\n[2023-06-26 18:49:32.544] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 388.88 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 823.6 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 304.41 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 621.11 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 630.1 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 886.25 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 874.59 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 563.24 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 238.7 us\n-----------------------------------------\n[2023-06-26 18:49:32.585] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:49:32.586] [jointLog] [info] Loading dense pufferfish index.\n[2023-06-26 18:49:32.593] [jointLog] [info] done\n[2023-06-26 18:49:32.593] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:49:32.593] [jointLog] [info] Number of decoys : 0\n[2023-06-26 18:49:32.593] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:49:32.635] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:49:32.635] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:49:32.637] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2023-06-26 18:49:32.637] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:49:32.637] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:49:32.637] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2023-06-26 18:49:32.637] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:49:32.637] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:49:32.637] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:49:32.641] [jointLog] [info] Starting optimizer\n[2023-06-26 18:49:32.642] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:49:32.642] [jointLog] [info] iteration = 0 | max rel diff. = 49\n[2023-06-26 18:49:32.642] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases\n[2023-06-26 18:49:32.646] [jointLog] [info] Computed expected counts (for bias correction)\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 13.3% of the transcripts\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 60.0% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 66.7% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 73.3% of the transcripts\n[2023-06-26 18:49:32.649] [jointLog] [info] processed bias for 73.3% of the transcripts\n[2023-06-26 18:49:32.650] [jointLog] [info] processed bias for 100.0% of the transcripts\n[2023-06-26 18:49:32.650] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:49:32.650] [jointLog] [info] Finished optimizer\n[2023-06-26 18:49:32.650] [jointLog] [info] writing output \n\n[2023-06-26 18:49:32.654] [jointLog] [info] writing equivalence class counts.\n[2023-06-26 18:49:32.654] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.\n[2023-06-26 18:49:32.654] [jointLog] [info] done.\n[2023-06-26 18:49:32.658] [jointLog] [info] done writing equivalence class counts.\n[2023-06-26 18:49:32.659] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "job_stdout": "", "job_stderr": "", "stderr": "Version Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n[2023-06-26 18:49:32.309] [jLog] [warning] The salmon index is being built without any decoy sequences.  It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.\n[2023-06-26 18:49:32.309] [jLog] [info] building index\nout : ./index\n[2023-06-26 18:49:32.310] [puff::index::jointLog] [info] Running fixFasta\n\n[Step 1 of 4] : counting k-mers\n\n[2023-06-26 18:49:32.316] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides\n[2023-06-26 18:49:32.316] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts\nwrote 15 cleaned references\n[2023-06-26 18:49:32.327] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers\n[2023-06-26 18:49:32.328] [puff::index::jointLog] [info] ntHll estimated 54811 distinct k-mers, setting filter size to 2^20\nallowedIn: 12\nMax Junction ID: 70\nseen.size():569 kmerInfo.size():71\napproximateContigTotalLength: 17465\ncounters for complex kmers:\n(prec>1 & succ>1)=0 | (succ>1 & isStart)=0 | (prec>1 & isEnd)=0 | (isStart & isEnd)=0\ncontig count: 24 element count: 19592 complex nodes: 0\n# of ones in rank vector: 23\n[2023-06-26 18:49:32.377] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.\n[2023-06-26 18:49:32.377] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory ./index\nsize = 19592\n-----------------------------------------\n| Loading contigs | Time = 586.04 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading contig boundaries | Time = 586.45 us\n-----------------------------------------\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] contig count for validation: 23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Total # of Contigs : 23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Total # of numerical Contigs : 23\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Total # of contig vec entries: 36\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] bits per offset entry 6\n[2023-06-26 18:49:32.379] [puff::index::jointLog] [info] Done constructing the contig vector. 24\n[2023-06-26 18:49:32.389] [puff::index::jointLog] [info] # segments = 23\n[2023-06-26 18:49:32.389] [puff::index::jointLog] [info] total length = 19592\n[2023-06-26 18:49:32.389] [puff::index::jointLog] [info] Reading the reference files ...\n[2023-06-26 18:49:32.397] [puff::index::jointLog] [info] positional integer width = 15\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] seqSize = 19592\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] rankSize = 19592\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] edgeVecSize = 0\n[2023-06-26 18:49:32.398] [puff::index::jointLog] [info] num keys = 18902\n\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  2.32 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  4.65 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  6.97 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  9.3  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  11.6 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  13.9 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  16.3 %   ela\n..\n %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  90.7 %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\r[Building BooPHF]  100  %   elapsed:   0 min 0  sec   remaining:   0 min 0  sec\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] mphf size = 0.0125198 MB\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] chunk size = 9796\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] chunk 0 = [0, 9796)\n[2023-06-26 18:49:32.454] [puff::index::jointLog] [info] chunk 1 = [9796, 19562)\n[2023-06-26 18:49:32.455] [puff::index::jointLog] [info] finished populating pos vector\n[2023-06-26 18:49:32.455] [puff::index::jointLog] [info] writing index components\n[2023-06-26 18:49:32.466] [puff::index::jointLog] [info] finished writing dense pufferfish index\n[2023-06-26 18:49:32.470] [jLog] [info] done building index\nVersion Info: ### PLEASE UPGRADE SALMON ###\n### A newer version of salmon with important bug fixes and improvements is available. ####\n###\nThe newest version, available at https://github.com/COMBINE-lab/salmon/releases\ncontains new features, improvements, and bug fixes; please upgrade at your\nearliest convenience.\n###\nSign up for the salmon mailing list to hear about new versions, features and updates at:\nhttps://oceangenomics.com/subscribe\n###\n### salmon (selective-alignment-based) v1.3.0\n### [ program ] => salmon \n### [ command ] => quant \n### [ index ] => { ./index }\n### [ libType ] => { U }\n### [ unmatedReads ] => { ./single.fasta }\n### [ threads ] => { 6 }\n### [ seqBias ] => { }\n### [ gcBias ] => { }\n### [ incompatPrior ] => { 0.0 }\n### [ dumpEq ] => { }\n### [ minAssignedFrags ] => { 10 }\n### [ biasSpeedSamp ] => { 5 }\n### [ fldMax ] => { 1000 }\n### [ fldMean ] => { 250 }\n### [ fldSD ] => { 25 }\n### [ forgettingFactor ] => { 0.65 }\n### [ initUniform ] => { }\n### [ maxReadOcc ] => { 100 }\n### [ numBiasSamples ] => { 2000000 }\n### [ numAuxModelSamples ] => { 5000000 }\n### [ numPreAuxModelSamples ] => { 5000 }\n### [ useEM ] => { }\n### [ numGibbsSamples ] => { 0 }\n### [ noGammaDraw ] => { }\n### [ numBootstraps ] => { 0 }\n### [ thinningFactor ] => { 16 }\n### [ sigDigits ] => { 3 }\n### [ vbPrior ] => { 1e-05 }\n### [ output ] => { ./output }\nLogs will be written to ./output/logs\n[2023-06-26 18:49:32.544] [jointLog] [info] setting maxHashResizeThreads to 6\n[2023-06-26 18:49:32.544] [jointLog] [info] Fragment incompatibility prior below threshold.  Incompatible fragments will be ignored.\n[2023-06-26 18:49:32.544] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65\n[2023-06-26 18:49:32.544] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.\n[2023-06-26 18:49:32.544] [jointLog] [info] parsing read library format\n[2023-06-26 18:49:32.544] [jointLog] [info] There is 1 library.\n-----------------------------------------\n| Loading contig table | Time = 388.88 us\n-----------------------------------------\nsize = 24\n-----------------------------------------\n| Loading contig offsets | Time = 823.6 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference lengths | Time = 304.41 us\n-----------------------------------------\n-----------------------------------------\n| Loading mphf table | Time = 621.11 us\n-----------------------------------------\nsize = 19592\nNumber of ones: 23\nNumber of ones per inventory item: 512\nInventory entries filled: 1\n-----------------------------------------\n| Loading contig boundaries | Time = 630.1 us\n-----------------------------------------\nsize = 19592\n-----------------------------------------\n| Loading sequence | Time = 886.25 us\n-----------------------------------------\nsize = 18902\n-----------------------------------------\n| Loading positions | Time = 874.59 us\n-----------------------------------------\nsize = 28562\n-----------------------------------------\n| Loading reference sequence | Time = 563.24 us\n-----------------------------------------\n-----------------------------------------\n| Loading reference accumulative lengths | Time = 238.7 us\n-----------------------------------------\n[2023-06-26 18:49:32.585] [jointLog] [info] Loading pufferfish index\n[2023-06-26 18:49:32.586] [jointLog] [info] Loading dense pufferfish index.\n[2023-06-26 18:49:32.593] [jointLog] [info] done\n[2023-06-26 18:49:32.593] [jointLog] [info] Index contained 15 targets\n[2023-06-26 18:49:32.593] [jointLog] [info] Number of decoys : 0\n[2023-06-26 18:49:32.593] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in single-end libraries.  Please use this option with caution.\n\n\n\n\n\n\n\n\n\n\n\n\n[2023-06-26 18:49:32.635] [jointLog] [info] Computed 15 rich equivalence classes for further processing\n[2023-06-26 18:49:32.635] [jointLog] [info] Counted 15 total reads in the equivalence classes \n[2023-06-26 18:49:32.637] [jointLog] [info] Number of mappings discarded because of alignment score : 5\n[2023-06-26 18:49:32.637] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 0\n[2023-06-26 18:49:32.637] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0\n[2023-06-26 18:49:32.637] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0\n[2023-06-26 18:49:32.637] [jointLog] [warning] Only 15 fragments were mapped, but the number of burn-in fragments was set to 5000000.\nThe effective lengths have been computed using the observed mappings.\n\n[2023-06-26 18:49:32.637] [jointLog] [info] Mapping rate = 100%\n\n[2023-06-26 18:49:32.637] [jointLog] [info] finished quantifyLibrary()\n[2023-06-26 18:49:32.641] [jointLog] [info] Starting optimizer\n[2023-06-26 18:49:32.642] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate\n[2023-06-26 18:49:32.642] [jointLog] [info] iteration = 0 | max rel diff. = 49\n[2023-06-26 18:49:32.642] [jointLog] [info] iteration 3, adjusting effective lengths to account for biases\n[2023-06-26 18:49:32.646] [jointLog] [info] Computed expected counts (for bias correction)\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 13.3% of the transcripts\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.647] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 33.3% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 40.0% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 60.0% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 66.7% of the transcripts\n[2023-06-26 18:49:32.648] [jointLog] [info] processed bias for 73.3% of the transcripts\n[2023-06-26 18:49:32.649] [jointLog] [info] processed bias for 73.3% of the transcripts\n[2023-06-26 18:49:32.650] [jointLog] [info] processed bias for 100.0% of the transcripts\n[2023-06-26 18:49:32.650] [jointLog] [info] iteration = 100 | max rel diff. = 0\n[2023-06-26 18:49:32.650] [jointLog] [info] Finished optimizer\n[2023-06-26 18:49:32.650] [jointLog] [info] writing output \n\n[2023-06-26 18:49:32.654] [jointLog] [info] writing equivalence class counts.\n[2023-06-26 18:49:32.654] [jointLog] [info] Collapsing factorization information into simplified equivalence classes.\n[2023-06-26 18:49:32.654] [jointLog] [info] done.\n[2023-06-26 18:49:32.658] [jointLog] [info] done writing equivalence class counts.\n[2023-06-26 18:49:32.659] [jointLog] [warning] NOTE: Read Lib [[ ./single.fasta ]] :\n\nDetected a *potential* strand bias > 1% in an unstranded protocol check the file: ./output/lib_format_counts.json for details\n\n", "stdout": "Threads = 2\nVertex length = 31\nHash functions = 5\nFilter size = 1048576\nCapacity = 2\nFiles: \n./index/ref_k31_fixed.fa\n--------------------------------------------------------------------------------\nRound 0, 0:1048576\nPass\tFilling\tFiltering\n1\t0\t0\t\n2\t0\t0\nTrue junctions count = 14\nFalse junctions count = 17\nHash table size = 31\nCandidate marks count = 54\n--------------------------------------------------------------------------------\nReallocating bifurcations time: 0\nTrue marks count: 51\nEdges construction time: 0\n--------------------------------------------------------------------------------\nDistinct junctions = 14\n\nfor info, total work write each  : 2.331    total work inram from level 3 : 4.322  total work raw : 25.000 \nBitarray          105024  bits (100.00 %)   (array + ranks )\nfinal hash             0  bits (0.00 %) (nb in final hash 0)\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:49:32", "plugin": "core", "name": "end_epoch", "raw_value": "1687805372.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:49:32", "plugin": "core", "name": "start_epoch", "raw_value": "1687805372.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "salmon/1.3.0+galaxy1-6", "has_data": true, "data": {"tool_id": "salmon", "tool_version": "1.3.0+galaxy1", "test_index": 6, "status": "skip"}}, {"id": "samtools_bedcov/2.0.2-0", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 0, "time_seconds": 25.18263268470764, "inputs": {"input_bed": {"src": "hda", "id": "bc08f339ac6e7f83"}, "input_bams": {"src": "hda", "id": "6a6ed9e50b2a3b6a"}}, "job": {"model_class": "Job", "id": "e9d686f8bbd81797", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:51:02.050179", "create_time": "2023-06-26T18:50:52.086504", "galaxy_version": "23.0", "command_version": "Version: 1.9 (using htslib 1.9)", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "32841e823f71086a", "external_id": "gxy-9fflh", "command_line": "ln -s '/galaxy/server/database/objects/c/a/8/dataset_ca88b249-102c-414d-9c7b-355bacc80622.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/5/3/5/metadata_53512213-8f05-4f65-b75a-08943aafac52.dat' '0.bai' &&   samtools bedcov  '/galaxy/server/database/objects/2/9/2/dataset_29253c4e-965e-4e6e-9db5-6158328552ad.dat' '0' > '/galaxy/server/database/objects/7/d/d/dataset_7dd3e7be-ef8d-446e-b342-7737993f81fb.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "false", "mapq": "\"\""}, "inputs": {"input_bed": {"id": "bc08f339ac6e7f83", "src": "hda", "uuid": "29253c4e-965e-4e6e-9db5-6158328552ad"}, "input_bams": {"id": "6a6ed9e50b2a3b6a", "src": "hda", "uuid": "ca88b249-102c-414d-9c7b-355bacc80622"}, "input_bams1": {"id": "6a6ed9e50b2a3b6a", "src": "hda", "uuid": "ca88b249-102c-414d-9c7b-355bacc80622"}}, "outputs": {"output": {"id": "70f6d10dff4a6ee7", "src": "hda", "uuid": "7dd3e7be-ef8d-446e-b342-7737993f81fb"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:50:53", "plugin": "core", "name": "end_epoch", "raw_value": "1687805453.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:50:53", "plugin": "core", "name": "start_epoch", "raw_value": "1687805453.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtools_bedcov/2.0.2-1", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 1, "time_seconds": 28.79447364807129, "inputs": {"input_bed": {"src": "hda", "id": "29ef34178e9d6b3f"}, "input_bams": [{"src": "hda", "id": "b99e27bf94028aa2"}, {"src": "hda", "id": "5b53022a0ec6b678"}]}, "job": {"model_class": "Job", "id": "beaba93c4eb25ceb", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:51:30.793140", "create_time": "2023-06-26T18:51:20.539262", "galaxy_version": "23.0", "command_version": "Version: 1.9 (using htslib 1.9)", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "32841e823f71086a", "external_id": "gxy-stbz6", "command_line": "ln -s '/galaxy/server/database/objects/2/1/9/dataset_219a75ef-02a0-4dd7-849a-e712912ed724.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/3/a/c/metadata_3ac896fd-ff0e-4622-b2bf-00e12532d997.dat' '0.bai' && ln -s '/galaxy/server/database/objects/8/e/c/dataset_8ecfadf9-bdb0-4518-9119-b5ba994a5dda.dat' '1' && ln -s '/galaxy/server/database/objects/_metadata_files/e/f/c/metadata_efc001b1-dab2-46f8-8415-aa242509209a.dat' '1.bai' &&   samtools bedcov  '/galaxy/server/database/objects/e/4/2/dataset_e4298786-7c5a-439d-b2cc-7d1aa4337230.dat' '0' '1' > '/galaxy/server/database/objects/8/5/f/dataset_85f91c0f-1df8-4f76-b917-778590f34df0.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "false", "mapq": "\"\""}, "inputs": {"input_bed": {"id": "29ef34178e9d6b3f", "src": "hda", "uuid": "e4298786-7c5a-439d-b2cc-7d1aa4337230"}, "input_bams": {"id": "b99e27bf94028aa2", "src": "hda", "uuid": "219a75ef-02a0-4dd7-849a-e712912ed724"}, "input_bams1": {"id": "b99e27bf94028aa2", "src": "hda", "uuid": "219a75ef-02a0-4dd7-849a-e712912ed724"}, "input_bams2": {"id": "5b53022a0ec6b678", "src": "hda", "uuid": "8ecfadf9-bdb0-4518-9119-b5ba994a5dda"}}, "outputs": {"output": {"id": "8f2ecd276dec4914", "src": "hda", "uuid": "85f91c0f-1df8-4f76-b917-778590f34df0"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:51:22", "plugin": "core", "name": "end_epoch", "raw_value": "1687805482.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:51:22", "plugin": "core", "name": "start_epoch", "raw_value": "1687805482.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtools_bedcov/2.0.2-2", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 2, "time_seconds": 25.247334241867065, "inputs": {"input_bed": {"src": "hda", "id": "301c19ac043e065c"}, "input_bams": {"src": "hda", "id": "1d425edd156d4c15"}, "mapq": "40"}, "job": {"model_class": "Job", "id": "7f2e340b4db865a7", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:51:56.342949", "create_time": "2023-06-26T18:51:46.520014", "galaxy_version": "23.0", "command_version": "Version: 1.9 (using htslib 1.9)", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "32841e823f71086a", "external_id": "gxy-2tpx4", "command_line": "ln -s '/galaxy/server/database/objects/c/d/c/dataset_cdc99c18-fa8a-4ddc-9c3a-088cb9590ad8.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/5/3/a/metadata_53a36f89-ac17-4009-aaac-a31d8b23a098.dat' '0.bai' &&   samtools bedcov -Q 40  '/galaxy/server/database/objects/f/a/3/dataset_fa34a816-5f31-411c-bfbd-43e25ea7a545.dat' '0' > '/galaxy/server/database/objects/e/8/6/dataset_e86f1769-6005-4df7-93e1-e9223aab0b89.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "false", "mapq": "\"40\""}, "inputs": {"input_bed": {"id": "301c19ac043e065c", "src": "hda", "uuid": "fa34a816-5f31-411c-bfbd-43e25ea7a545"}, "input_bams": {"id": "1d425edd156d4c15", "src": "hda", "uuid": "cdc99c18-fa8a-4ddc-9c3a-088cb9590ad8"}, "input_bams1": {"id": "1d425edd156d4c15", "src": "hda", "uuid": "cdc99c18-fa8a-4ddc-9c3a-088cb9590ad8"}}, "outputs": {"output": {"id": "95b3cdf114833c01", "src": "hda", "uuid": "e86f1769-6005-4df7-93e1-e9223aab0b89"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:51:47", "plugin": "core", "name": "end_epoch", "raw_value": "1687805507.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:51:47", "plugin": "core", "name": "start_epoch", "raw_value": "1687805507.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtools_bedcov/2.0.2-3", "has_data": true, "data": {"tool_id": "samtools_bedcov", "tool_version": "2.0.2", "test_index": 3, "time_seconds": 24.518370389938354, "inputs": {"input_bed": {"src": "hda", "id": "dc7e8ef05708fc51"}, "input_bams": [{"src": "hda", "id": "a879c146b6170975"}, {"src": "hda", "id": "3bfc333d66bf014a"}], "countdel": true}, "job": {"model_class": "Job", "id": "63cef111e31e8475", "state": "error", "exit_code": null, "update_time": "2023-06-26T18:52:20.998934", "create_time": "2023-06-26T18:52:14.630282", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2", "history_id": "32841e823f71086a", "external_id": "gxy-2gm9s", "command_line": "ln -s '/galaxy/server/database/objects/d/7/d/dataset_d7dad4a1-b40f-411f-8704-b00300c42d46.dat' '0' && ln -s '/galaxy/server/database/objects/_metadata_files/1/4/0/metadata_1405fed4-3fdb-49d2-85f3-44b2a2cbfd88.dat' '0.bai' && ln -s '/galaxy/server/database/objects/e/5/4/dataset_e549f758-d670-4c33-a2dd-6082ab85803c.dat' '1' && ln -s '/galaxy/server/database/objects/_metadata_files/7/0/c/metadata_70cd821e-3c7b-42ee-8a67-4af88507f045.dat' '1.bai' &&   samtools bedcov -j '/galaxy/server/database/objects/d/4/f/dataset_d4f25373-48c6-4cbf-bf7c-a7c316346bcd.dat' '0' '1' > '/galaxy/server/database/objects/7/f/2/dataset_7f29a534-8b4d-4e48-a557-92e3126dee6b.dat'", "traceback": null, "params": {"__input_ext": "\"bed\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "countdel": "true", "mapq": "\"\""}, "inputs": {"input_bed": {"id": "dc7e8ef05708fc51", "src": "hda", "uuid": "d4f25373-48c6-4cbf-bf7c-a7c316346bcd"}, "input_bams": {"id": "a879c146b6170975", "src": "hda", "uuid": "d7dad4a1-b40f-411f-8704-b00300c42d46"}, "input_bams1": {"id": "a879c146b6170975", "src": "hda", "uuid": "d7dad4a1-b40f-411f-8704-b00300c42d46"}, "input_bams2": {"id": "3bfc333d66bf014a", "src": "hda", "uuid": "e549f758-d670-4c33-a2dd-6082ab85803c"}}, "outputs": {"output": {"id": "cf2c33a9496023d0", "src": "hda", "uuid": "7f29a534-8b4d-4e48-a557-92e3126dee6b"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/devteam/samtools_bedcov/samtools_bedcov/2.0.2, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "samtools_reheader/2.0.1+galaxy1-0", "has_data": true, "data": {"tool_id": "samtools_reheader", "tool_version": "2.0.1+galaxy1", "test_index": 0, "time_seconds": 28.161672592163086, "inputs": {"input_header": {"src": "hda", "id": "3e4c49259485f800"}, "input_file": {"src": "hda", "id": "73d7eb1683bbcdd3"}}, "job": {"model_class": "Job", "id": "7d5817249dd26139", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:50:10.050447", "create_time": "2023-06-26T18:49:57.379417", "galaxy_version": "23.0", "command_version": "Version: 1.9 (using htslib 1.9)", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_reheader/samtools_reheader/2.0.1+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-t9cdn", "command_line": "samtools reheader '/galaxy/server/database/objects/3/9/d/dataset_39d4a774-a711-4737-8c58-e3bca76d191b.dat' '/galaxy/server/database/objects/e/5/3/dataset_e53d5bcb-5a41-484f-a996-6baeb4ba44c3.dat'  > '/galaxy/server/database/objects/1/d/3/dataset_1d3a61d6-3d0e-426d-a3de-b47eb488c347.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "no_pg": "false"}, "inputs": {"input_header": {"id": "3e4c49259485f800", "src": "hda", "uuid": "39d4a774-a711-4737-8c58-e3bca76d191b"}, "input_file": {"id": "73d7eb1683bbcdd3", "src": "hda", "uuid": "e53d5bcb-5a41-484f-a996-6baeb4ba44c3"}}, "outputs": {"output": {"id": "d79e9c7d169f7848", "src": "hda", "uuid": "1d3a61d6-3d0e-426d-a3de-b47eb488c347"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:50:01", "plugin": "core", "name": "end_epoch", "raw_value": "1687805401.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:50:01", "plugin": "core", "name": "start_epoch", "raw_value": "1687805401.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "samtools_reheader/2.0.1+galaxy1-1", "has_data": true, "data": {"tool_id": "samtools_reheader", "tool_version": "2.0.1+galaxy1", "test_index": 1, "time_seconds": 25.64113974571228, "inputs": {"input_header": {"src": "hda", "id": "4104449591476e8c"}, "input_file": {"src": "hda", "id": "6d728edd7e3edb65"}, "no_pg": true}, "job": {"model_class": "Job", "id": "c1f0864146ba7655", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:50:35.515908", "create_time": "2023-06-26T18:50:24.622399", "galaxy_version": "23.0", "command_version": "Version: 1.9 (using htslib 1.9)", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/samtools_reheader/samtools_reheader/2.0.1+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-48qch", "command_line": "samtools reheader '/galaxy/server/database/objects/6/d/5/dataset_6d5aa21e-5aba-4194-8e9b-a3aa13cfd814.dat' '/galaxy/server/database/objects/b/0/2/dataset_b02503c4-0227-42d7-a361-8a25a78c3638.dat' --no-PG > '/galaxy/server/database/objects/e/6/5/dataset_e650f28a-473c-42fb-a64a-2df7e321a37a.dat'", "traceback": null, "params": {"__input_ext": "\"bam\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "no_pg": "true"}, "inputs": {"input_header": {"id": "4104449591476e8c", "src": "hda", "uuid": "6d5aa21e-5aba-4194-8e9b-a3aa13cfd814"}, "input_file": {"id": "6d728edd7e3edb65", "src": "hda", "uuid": "b02503c4-0227-42d7-a361-8a25a78c3638"}}, "outputs": {"output": {"id": "21a274915d43f178", "src": "hda", "uuid": "e650f28a-473c-42fb-a64a-2df7e321a37a"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:50:26", "plugin": "core", "name": "end_epoch", "raw_value": "1687805426.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:50:26", "plugin": "core", "name": "start_epoch", "raw_value": "1687805426.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "scater_plot_dist_scatter/1.22.0-0", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 0, "time_seconds": 57.6104040145874, "inputs": {"input_loom": {"src": "hda", "id": "6b5c9a5418090fe6"}, "plot_log": false}, "job": {"model_class": "Job", "id": "eb6efec86faf398c", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:53:21.884616", "create_time": "2023-06-26T18:52:37.566682", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "32841e823f71086a", "external_id": "gxy-t7mvt", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/0/7/6/dataset_07626c50-6a12-47c2-b944-706d07682db0.dat' -o '/galaxy/server/database/objects/4/3/6/dataset_436c2adb-5300-4bad-946e-492b4dfe13ae.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "false"}, "inputs": {"input_loom": {"id": "6b5c9a5418090fe6", "src": "hda", "uuid": "07626c50-6a12-47c2-b944-706d07682db0"}}, "outputs": {"output_plot": {"id": "dc273ff012605b57", "src": "hda", "uuid": "436c2adb-5300-4bad-946e-492b4dfe13ae"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "job_stdout": "", "job_stderr": "", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "7 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "7.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:53:06", "plugin": "core", "name": "end_epoch", "raw_value": "1687805586.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:52:59", "plugin": "core", "name": "start_epoch", "raw_value": "1687805579.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "scater_plot_dist_scatter/1.22.0-0", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 0, "time_seconds": 30.640957355499268, "inputs": {"input_loom": {"src": "hda", "id": "25a8e8a1e97e1b00"}, "plot_log": false}, "job": {"model_class": "Job", "id": "72f9d6cf685e0f35", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:54:19.100254", "create_time": "2023-06-26T18:54:00.831935", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "32841e823f71086a", "external_id": "gxy-89v5j", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/c/8/7/dataset_c870bb27-246e-4014-8283-61dde236b55d.dat' -o '/galaxy/server/database/objects/c/c/0/dataset_cc07fbc4-687b-4ffb-a99b-7e1030f5a74e.dat'", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "false"}, "inputs": {"input_loom": {"id": "25a8e8a1e97e1b00", "src": "hda", "uuid": "c870bb27-246e-4014-8283-61dde236b55d"}}, "outputs": {"output_plot": {"id": "bc44a0836d60c5c3", "src": "hda", "uuid": "cc07fbc4-687b-4ffb-a99b-7e1030f5a74e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "job_stdout": "", "job_stderr": "", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "7 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "7.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:54:10", "plugin": "core", "name": "end_epoch", "raw_value": "1687805650.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:54:03", "plugin": "core", "name": "start_epoch", "raw_value": "1687805643.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "scater_plot_dist_scatter/1.22.0-1", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 1, "time_seconds": 25.459074020385742, "inputs": {"input_loom": {"src": "hda", "id": "245b25c6bd31fad5"}, "plot_log": true}, "job": {"model_class": "Job", "id": "726c1cd6aa60a955", "state": "error", "exit_code": null, "update_time": "2023-06-26T18:53:47.561953", "create_time": "2023-06-26T18:53:34.529417", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "32841e823f71086a", "external_id": "gxy-p6klq", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/8/4/f/dataset_84f2f072-ab4d-459c-a2fd-ba809768834a.dat' -o '/galaxy/server/database/objects/c/5/0/dataset_c50b42ff-d334-4a6c-a2c2-e6eefb413410.dat' --log-scale", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "true"}, "inputs": {"input_loom": {"id": "245b25c6bd31fad5", "src": "hda", "uuid": "84f2f072-ab4d-459c-a2fd-ba809768834a"}}, "outputs": {"output_plot": {"id": "4c661848182ea7e4", "src": "hda", "uuid": "c50b42ff-d334-4a6c-a2c2-e6eefb413410"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "scater_plot_dist_scatter/1.22.0-1", "has_data": true, "data": {"tool_id": "scater_plot_dist_scatter", "tool_version": "1.22.0", "test_index": 1, "time_seconds": 30.258850812911987, "inputs": {"input_loom": {"src": "hda", "id": "deb88121a1910cce"}, "plot_log": true}, "job": {"model_class": "Job", "id": "2ff9d4a3a71455ec", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:54:49.451689", "create_time": "2023-06-26T18:54:33.063540", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter/1.22.0", "history_id": "32841e823f71086a", "external_id": "gxy-z95vg", "command_line": "Rscript '/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/ef4c80837bc5/scater_plot_dist_scatter/scater-plot-dist-scatter.R' -i '/galaxy/server/database/objects/d/b/4/dataset_db4c6725-b33c-487e-a36a-3d0bd204b79f.dat' -o '/galaxy/server/database/objects/3/d/6/dataset_3d63a9d3-73a2-438e-b1c7-15ba923fd16c.dat' --log-scale", "traceback": null, "params": {"__input_ext": "\"input\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "plot_log": "true"}, "inputs": {"input_loom": {"id": "deb88121a1910cce", "src": "hda", "uuid": "db4c6725-b33c-487e-a36a-3d0bd204b79f"}}, "outputs": {"output_plot": {"id": "53c4d40b08d574a5", "src": "hda", "uuid": "3d63a9d3-73a2-438e-b1c7-15ba923fd16c"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\nWarning messages:\n1: Transformation introduced infinite values in continuous y-axis \n2: Removed 7 rows containing missing values (geom_bar). \n3: Transformation introduced infinite values in continuous y-axis \n4: Removed 1 rows containing missing values (geom_bar). \n", "job_stdout": "", "job_stderr": "", "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\nSaving 7 x 7 in image\nWarning messages:\n1: Transformation introduced infinite values in continuous y-axis \n2: Removed 7 rows containing missing values (geom_bar). \n3: Transformation introduced infinite values in continuous y-axis \n4: Removed 1 rows containing missing values (geom_bar). \n", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "7 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "7.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:54:41", "plugin": "core", "name": "end_epoch", "raw_value": "1687805681.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:54:34", "plugin": "core", "name": "start_epoch", "raw_value": "1687805674.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-0", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 0, "time_seconds": 90.36396932601929, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "32841e823f71086a"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "3b2e8f61e28efc09"}}, "job": {"model_class": "Job", "id": "fa36672418710db8", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:30:40.581894", "create_time": "2023-06-26T18:29:34.596356", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-p782x", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat --pe1-2 fastq:/galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat && python '/galaxy/server/database/jobs_directory/000/3/configs/tmpbc3wnxgl' < contigs.fasta > '/galaxy/server/database/objects/1/5/a/dataset_15a5d5be-987e-409b-ad2d-85499baf409d.dat' && python '/galaxy/server/database/jobs_directory/000/3/configs/tmpbc3wnxgl' < scaffolds.fasta > '/galaxy/server/database/objects/e/9/2/dataset_e928cddf-e2b3-4a53-a2e4-1b609cca958e.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 1, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 2, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|rev_reads": {"id": "3b2e8f61e28efc09", "src": "hda", "uuid": "63542878-6618-4bd4-9aa0-8bb0943cfe58"}, "libraries_0|files_0|fwd_reads": {"id": "32841e823f71086a", "src": "hda", "uuid": "ba94ad23-b7c2-4563-81fa-6ce42a6517a7"}}, "outputs": {"out_log": {"id": "1edb4d29282bb954", "src": "hda", "uuid": "5b512759-f52e-49c9-af2b-3c226c2e5b4b"}, "out_scaffolds": {"id": "6daa19c3868b0631", "src": "hda", "uuid": "f6053a07-593b-464f-9413-46941c23929a"}, "out_contigs": {"id": "bd758c53d44b0bb1", "src": "hda", "uuid": "319389e8-b2c9-4d7b-a119-f6a7e62a46e0"}, "out_scaffold_stats": {"id": "1851c3fccb7c1175", "src": "hda", "uuid": "e928cddf-e2b3-4a53-a2e4-1b609cca958e"}, "out_contig_stats": {"id": "fa36672418710db8", "src": "hda", "uuid": "15a5d5be-987e-409b-ad2d-85499baf409d"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/3/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat']\n      right reads: ['/galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat\n  0:00:00.937     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\n  0:00:01.775     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.784    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.071    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.071    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.209    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.227    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.248    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.250    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.252    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.253    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.259    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.259    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.260    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat\n  0:00:02.275    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\n  0:00:02.288    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.288    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.288    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.305    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.305    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.319    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.319    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat and /galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\n  0:00:02.343    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.348    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.351    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.377    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.377    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.377    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n  0:00:02.380    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.052    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.055     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.136   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.140     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.217   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.310     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.311     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.311     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.311     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.311     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.311     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.311     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.737     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.928    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.929    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.013    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.014    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.014    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.015    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.843     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.853    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.193    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.193    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.348    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.369    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.387    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.393    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.393    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensi\n..\n       : 346)   Closing short gaps\n  0:00:07.804    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.806    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.806    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.806    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.806    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.814    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.814    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.814    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.817    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.817    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.818    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:07.822    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:07.825    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta\n  0:00:07.828    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta\n  0:00:07.833    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.833    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.833    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.888   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.057   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.306   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.306   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.314    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.364   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.368   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.370   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.375   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.375   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.375   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.383   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.387   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.397    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.397    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.397    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.397    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.398    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.398    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.398    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.398    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.398    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.398    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.398    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.398    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.398    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.398    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.399    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.399    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.400    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.400    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.401    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:08.405    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:08.409    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths\n  0:00:08.415    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths\n  0:00:08.427    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.428    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/3/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/3/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat']\n      right reads: ['/galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/3/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/3/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat\n  0:00:00.937     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\n  0:00:01.775     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.784    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.071    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.071    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.209    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.227    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.248    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.250    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.252    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.253    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.259    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.259    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.260    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat\n  0:00:02.275    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\n  0:00:02.288    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.288    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.288    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.304    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.305    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.305    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.319    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.319    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.319    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/b/a/9/dataset_ba94ad23-b7c2-4563-81fa-6ce42a6517a7.dat and /galaxy/server/database/objects/6/3/5/dataset_63542878-6618-4bd4-9aa0-8bb0943cfe58.dat\n  0:00:02.343    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.348    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.351    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.377    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.377    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.377    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n  0:00:02.380    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/3/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/3/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/3/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.052    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.055     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.136   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.140     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.217   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.310     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.311     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.311     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.311     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.311     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.311     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.311     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.737     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.928    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.929    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.013    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.014    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.014    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.015    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.015    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.843     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.853    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.193    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.193    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.348    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.369    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.387    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.393    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.393    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensi\n..\n       : 346)   Closing short gaps\n  0:00:07.804    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.806    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.806    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.806    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.806    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.806    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.806    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.806    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.814    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.814    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.814    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.817    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.817    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.818    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:07.822    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:07.825    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/simplified_contigs.fasta\n  0:00:07.828    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/intermediate_contigs.fasta\n  0:00:07.833    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.833    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.833    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.833    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.888   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.057   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.306   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.306   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.314    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.364   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.368   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.370   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.375   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.375   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.375   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.383   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.387   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.397    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.397    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.397    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.397    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.397    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.398    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.398    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.398    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.398    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.398    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.398    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.398    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.398    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.398    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.398    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.399    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.399    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.399    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.400    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.400    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.400    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.400    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.400    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.401    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/3/working//K33/before_rr.fasta\n  0:00:08.405    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/3/working//K33/assembly_graph.fastg\n  0:00:08.409    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/final_contigs.paths\n  0:00:08.415    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/3/working//K33/scaffolds.paths\n  0:00:08.427    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.428    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/3/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/3/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/3/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/3/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/3/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "11 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "11.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:30:30", "plugin": "core", "name": "end_epoch", "raw_value": "1687804230.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:30:19", "plugin": "core", "name": "start_epoch", "raw_value": "1687804219.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-1", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 1, "time_seconds": 34.544265031814575, "inputs": {"sc": false, "onlyassembler": true, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "17ceed3c9f528d54"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "5e3426473cc83490"}}, "job": {"model_class": "Job", "id": "6daa19c3868b0631", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:31:15.255838", "create_time": "2023-06-26T18:30:55.428307", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-t62xx", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output  --only-assembler  -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fasta:/galaxy/server/database/objects/4/a/5/dataset_4a57aa33-ea2a-444b-845a-07c6bd9dedef.dat --pe1-2 fasta:/galaxy/server/database/objects/c/1/6/dataset_c1674ece-788e-41b3-8c7b-755c89b44532.dat && python '/galaxy/server/database/jobs_directory/000/6/configs/tmpmbo9yv_9' < contigs.fasta > '/galaxy/server/database/objects/f/1/6/dataset_f167f4e0-a5a3-4b18-a689-62b2e77f0b4e.dat' && python '/galaxy/server/database/jobs_directory/000/6/configs/tmpmbo9yv_9' < scaffolds.fasta > '/galaxy/server/database/objects/5/0/2/dataset_502d2276-8b49-4a74-91b1-62020e1e3cc9.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "true", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 8, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 9, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fasta\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "17ceed3c9f528d54", "src": "hda", "uuid": "4a57aa33-ea2a-444b-845a-07c6bd9dedef"}, "libraries_0|files_0|rev_reads": {"id": "5e3426473cc83490", "src": "hda", "uuid": "c1674ece-788e-41b3-8c7b-755c89b44532"}}, "outputs": {"out_contig_stats": {"id": "d9da6e76cfdcb2ab", "src": "hda", "uuid": "f167f4e0-a5a3-4b18-a689-62b2e77f0b4e"}, "out_scaffold_stats": {"id": "edc9a528d608d463", "src": "hda", "uuid": "502d2276-8b49-4a74-91b1-62020e1e3cc9"}, "out_contigs": {"id": "ef58c95856458014", "src": "hda", "uuid": "2d9fc662-5176-4260-9609-6a68b6ccb51c"}, "out_scaffolds": {"id": "28f79cfb9037221e", "src": "hda", "uuid": "81a472f9-69a8-4b23-b658-879c3807005f"}, "out_log": {"id": "ba561522cd4eea99", "src": "hda", "uuid": "46550e88-14fa-447e-87f5-326b59b58f7f"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/6/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/4/a/5/dataset_4a57aa33-ea2a-444b-845a-07c6bd9dedef.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/c/1/6/dataset_c1674ece-788e-41b3-8c7b-755c89b44532.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/a/5/dataset_4a57aa33-ea2a-444b-845a-07c6bd9dedef.dat']\n      right reads: ['/galaxy/server/database/objects/c/1/6/dataset_c1674ece-788e-41b3-8c7b-755c89b44532.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.050    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.053     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.127   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.132     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.207   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.290     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.291     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.291     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.291     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.292     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.292     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.292     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.742     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.750    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.751    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.923    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:00.924    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.997    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.998    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.998    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.999    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.999    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.999    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.865     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:01.876    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.345    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.367    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.384    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:02.384    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.387    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:02.388    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:02.388    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:02.388    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:02.390    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.390    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:02.390    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:02.390    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.405    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:02.405    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.410    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:02.417    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:02.453    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:02.546    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:02.888    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:03.467    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:04.522    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.233    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:06.234    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:06.234    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:06.234    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:06.235    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:06.235    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:06.236    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:06.236    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:06.236    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:06.236    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:06.236    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:07.099     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:07.107    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:07.437    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:07.437    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:07.575    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:07.592    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:07.607    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:07.607    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:07.610    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:07.612    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:07.612    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:07.614    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:07.614    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:07.614    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:07.614    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.616    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:07.616    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:07.616    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:07.617    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:07.617    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:07.617    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:07.617    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:07.617    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.617 \n..\n indices\n  0:00:08.953    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:08.953    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.955    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:08.955    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:08.955    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:08.955    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:08.955    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:08.955    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.955    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.964    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:08.964    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:08.964    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:08.967    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.967    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.968    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:08.972    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:08.975    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta\n  0:00:08.978    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta\n  0:00:08.986    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:08.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.986    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:08.986    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:08.986    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.034   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.200   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.448   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.448   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:09.456    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.504   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.507   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.510   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.513   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.513   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.513   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.520   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.524   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.535    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.535    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.535    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.535    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.535    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.536    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.536    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.536    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.536    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.536    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.536    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.536    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.536    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.537    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.537    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:09.538    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:09.544    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:09.548    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths\n  0:00:09.554    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths\n  0:00:09.565    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.566    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/6/working\t--disable-gzip-output\t--only-assembler\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfasta:/galaxy/server/database/objects/4/a/5/dataset_4a57aa33-ea2a-444b-845a-07c6bd9dedef.dat\t--pe1-2\tfasta:/galaxy/server/database/objects/c/1/6/dataset_c1674ece-788e-41b3-8c7b-755c89b44532.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/6/working\nMode: ONLY assembling (without read error correction)\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/4/a/5/dataset_4a57aa33-ea2a-444b-845a-07c6bd9dedef.dat']\n      right reads: ['/galaxy/server/database/objects/c/1/6/dataset_c1674ece-788e-41b3-8c7b-755c89b44532.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/6/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/6/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/6/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.050    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.053     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.127   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.132     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.207   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.290     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.291     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1611\n  0:00:00.291     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.291     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.292     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.292     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.292     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.742     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.750    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.751    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.923    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:00.924    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.997    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.998    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.998    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.999    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.999    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.999    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.865     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 974 kmers.\n  0:00:01.876    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 975 kmers in total.\n  0:00:02.209    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.345    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.367    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.384    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.2133 bits per kmer).\n  0:00:02.384    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.387    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Condensing graph\n  0:00:02.388    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 355)   Extracting unbranching paths\n  0:00:02.388    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 374)   Extracting unbranching paths finished. 5 sequences extracted\n  0:00:02.388    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 310)   Collecting perfect loops\n  0:00:02.390    32M / 8G    INFO   UnbranchingPathExtractor (debruijn_graph_constructor: 343)   Collecting perfect loops finished. 0 loops collected\n  0:00:02.390    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Filling coverage indices (PHM)\n  0:00:02.390    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:02.390    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.405    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 5072 bytes occupied (41.6591 bits per kmer).\n  0:00:02.405    32M / 8G    INFO    General                 (construction.cpp          : 388)   Collecting k-mer coverage information from reads, this takes a while.\n  0:00:02.410    32M / 8G    INFO    General                 (construction.cpp          : 508)   Filling coverage and flanking coverage from PHM\n  0:00:02.417    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == EC Threshold Finding\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 181)   Kmer coverage valley at: 0\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 201)   K-mer histogram maximum: 356\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 237)   Estimated median coverage: 356. Coverage mad: 44.478\n  0:00:02.417    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 259)   Fitting coverage model\n  0:00:02.453    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 2\n  0:00:02.546    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 4\n  0:00:02.888    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 8\n  0:00:03.467    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 16\n  0:00:04.522    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 295)   ... iteration 32\n  0:00:06.233    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 309)   Fitted mean coverage: 271.705. Fitted coverage std. dev: 78.9849\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 334)   Probability of erroneous kmer at valley: 0.978568\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 358)   Preliminary threshold calculated as: 251\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 362)   Threshold adjusted to: 135\n  0:00:06.234    32M / 8G    INFO    General                 (kmer_coverage_model.cpp   : 375)   Estimated genome size (ignoring repeats): 738\n  0:00:06.234    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 112)   Mean coverage was calculated as 271.705\n  0:00:06.234    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 127)   EC coverage threshold value was calculated as 135\n  0:00:06.234    32M / 8G    INFO    General                 (genomic_info_filler.cpp   : 128)   Trusted kmer low bound: 0\n  0:00:06.235    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Gap Closer\n  0:00:06.235    32M / 8G    INFO    General                 (graph_pack.hpp            : 101)   Index refill\n  0:00:06.236    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:06.236    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:06.236    32M / 8G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:06.236    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:06.236    32M / 8G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:07.099     8G / 8G    INFO    General                 (edge_index_builders.hpp   :  82)   Used 10 sequences.\n  0:00:07.107    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:07.437    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 974 kmers in total.\n  0:00:07.437    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:07.575    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:07.592    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:07.607    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9784 bytes occupied (80.3614 bits per kmer).\n  0:00:07.607    32M / 8G    INFO    General                 (edge_index_builders.hpp   : 107)   Collecting edge information from graph, this takes a while.\n  0:00:07.610    32M / 8G    INFO    General                 (edge_index.hpp            :  92)   Index refilled\n  0:00:07.612    32M / 8G    INFO    General                 (gap_closer.cpp            : 159)   Preparing shift maps\n  0:00:07.612    32M / 8G    INFO    General                 (gap_closer.cpp            : 119)   Processing paired reads (takes a while)\n  0:00:07.614    32M / 8G    INFO    General                 (gap_closer.cpp            : 138)   Used 2054 paired reads\n  0:00:07.614    32M / 8G    INFO    General                 (gap_closer.cpp            : 140)   Merging paired indices\n  0:00:07.614    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:07.614    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.616    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Raw Simplification\n  0:00:07.616    32M / 8G    INFO    General                 (simplification.cpp        : 128)   PROCEDURE == InitialCleaning\n  0:00:07.616    32M / 8G    INFO    General                 (graph_simplification.hpp  : 662)   Flanking coverage based disconnection disabled\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Self conjugate edge remover\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Self conjugate edge remover triggered 0 times\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial tip clipper\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial tip clipper triggered 2 times\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial ec remover\n  0:00:07.616    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial ec remover triggered 0 times\n  0:00:07.617    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Initial isolated edge remover\n  0:00:07.617    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Initial isolated edge remover triggered 0 times\n  0:00:07.617    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification\n  0:00:07.617    32M / 8G    INFO    General                 (simplification.cpp        : 357)   Graph simplification started\n  0:00:07.617    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.617 \n..\n indices\n  0:00:08.953    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 346)   Closing short gaps\n  0:00:08.953    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:08.955    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:08.955    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:08.955    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:08.955    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:08.955    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:08.955    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.865\n  0:00:08.955    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:08.955    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.955    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.964    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:08.964    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:08.964    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:08.967    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.967    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.968    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:08.972    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:08.975    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/simplified_contigs.fasta\n  0:00:08.978    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/intermediate_contigs.fasta\n  0:00:08.986    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:08.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.986    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.986    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:08.986    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:08.986    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:09.034   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.200   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.448   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:09.448   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2010 paired reads (97.8578% of all) aligned to long edges\n  0:00:09.456    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.606, deviation = 10.5347, left quantile = 201, right quantile = 228, read length = 100\n  0:00:09.504   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:09.507   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.510   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.513   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:09.513   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:09.513   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:09.520   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:09.524   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:09.535    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:09.535    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.535    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.535    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:09.535    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:09.535    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.536    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:09.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:09.536    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:09.536    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:09.536    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:09.536    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:09.536    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:09.536    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:09.536    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:09.536    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.865\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:09.537    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:09.537    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:09.537    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:09.537    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:09.537    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:09.537    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:09.538    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/6/working//K33/before_rr.fasta\n  0:00:09.544    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/6/working//K33/assembly_graph.fastg\n  0:00:09.548    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/final_contigs.paths\n  0:00:09.554    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/6/working//K33/scaffolds.paths\n  0:00:09.565    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:09.566    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 9 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/6/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/6/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/6/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/6/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "11 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "11.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:31:07", "plugin": "core", "name": "end_epoch", "raw_value": "1687804267.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:30:56", "plugin": "core", "name": "start_epoch", "raw_value": "1687804256.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-2", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 2, "time_seconds": 38.665358781814575, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "dbaf23e8db3b7cb0"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "93ef55f4639879fb"}}, "job": {"model_class": "Job", "id": "5e3426473cc83490", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:31:53.905197", "create_time": "2023-06-26T18:31:31.610903", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-njg6v", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat && python '/galaxy/server/database/jobs_directory/000/9/configs/tmph_5t0in7' < contigs.fasta > '/galaxy/server/database/objects/d/1/4/dataset_d143e3ad-9fd3-4218-bc6d-e3987f9bf26a.dat' && python '/galaxy/server/database/jobs_directory/000/9/configs/tmph_5t0in7' < scaffolds.fasta > '/galaxy/server/database/objects/7/6/3/dataset_763bd124-056c-46c9-aa96-b4cc96d53c5e.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 15, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 16, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq.gz\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "dbaf23e8db3b7cb0", "src": "hda", "uuid": "819ac31b-7650-4dca-9461-87a33d63ebe1"}, "libraries_0|files_0|rev_reads": {"id": "93ef55f4639879fb", "src": "hda", "uuid": "e8d32058-ae6d-4c94-b030-d00d2d36df91"}}, "outputs": {"out_contig_stats": {"id": "324cb789855f2a2a", "src": "hda", "uuid": "d143e3ad-9fd3-4218-bc6d-e3987f9bf26a"}, "out_scaffold_stats": {"id": "ef12ed5ff2d98369", "src": "hda", "uuid": "763bd124-056c-46c9-aa96-b4cc96d53c5e"}, "out_contigs": {"id": "f0d8ef5ac0478af8", "src": "hda", "uuid": "0536f598-67f3-4861-bb82-e2d0b1bfdcb5"}, "out_scaffolds": {"id": "349d240ae16a14b1", "src": "hda", "uuid": "e739695b-abba-4ad7-bfd2-825e7426cd92"}, "out_log": {"id": "55054ba7f3eafcc7", "src": "hda", "uuid": "c8766aa4-4079-4a3c-9a96-b3b285c6b513"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/9/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/9/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat']\n      right reads: ['/galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat\n  0:00:00.872     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\n  0:00:01.693     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.702    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.976    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.976    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.104    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.126    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.149    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.150    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.153    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.154    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.162    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.162    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.162    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat\n  0:00:02.176    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\n  0:00:02.189    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.189    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.189    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.205    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.205    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.217    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.217    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.217    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.217    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat and /galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\n  0:00:02.243    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.248    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.250    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.278    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.278    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.279    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n  0:00:02.282    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.053    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.056     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.132   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.136     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.213   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.297     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.298     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.298     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.299     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.299     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.299     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.299     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.715     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.723    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.723    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.893    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.893    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.955    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.956    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.956    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.956    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.956    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.956    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.770     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.780    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.115    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.117    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.265    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.288    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.302    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.302    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.305    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.307    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Co\n..\n       : 346)   Closing short gaps\n  0:00:07.658    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.660    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.660    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.660    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.660    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.661    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.661    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.661    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.661    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.661    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.661    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.661    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.670    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.670    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.670    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.673    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.674    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.674    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:07.677    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:07.680    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta\n  0:00:07.684    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta\n  0:00:07.691    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.691    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.691    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.737   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.903   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.154   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.154   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.161    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.210   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.213   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.216   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.218   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.218   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.219   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.227   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.231   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.243    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.243    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.243    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.243    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.244    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.244    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.244    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.244    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.245    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.245    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.245    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.245    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.245    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.245    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.245    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.248    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.248    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.250    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:08.255    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:08.260    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths\n  0:00:08.266    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths\n  0:00:08.280    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.282    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/9/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/9/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat']\n      right reads: ['/galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/9/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/9/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat\n  0:00:00.872     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\n  0:00:01.693     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.702    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.976    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.976    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.104    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.126    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.149    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.150    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.153    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.154    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.162    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.162    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.162    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat\n  0:00:02.176    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\n  0:00:02.189    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.189    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.189    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.204    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.205    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.205    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.217    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.217    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.217    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.217    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/8/1/9/dataset_819ac31b-7650-4dca-9461-87a33d63ebe1.dat and /galaxy/server/database/objects/e/8/d/dataset_e8d32058-ae6d-4c94-b030-d00d2d36df91.dat\n  0:00:02.243    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.248    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.250    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.278    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.278    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.279    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n  0:00:02.282    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/9/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/9/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/9/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.053    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.056     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.132   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.136     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.213   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.297     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.298     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.298     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.299     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.299     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.299     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.299     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.715     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.723    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.723    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.893    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.893    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.955    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.956    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.956    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.956    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.956    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.956    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.770     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.780    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.115    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.117    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.265    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.288    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.302    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.302    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.305    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.307    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Co\n..\n       : 346)   Closing short gaps\n  0:00:07.658    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.660    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.660    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.660    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.660    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.661    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.661    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.661    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.661    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.661    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.661    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.661    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.661    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.670    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.670    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.670    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.673    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.674    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.674    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:07.677    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:07.680    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/simplified_contigs.fasta\n  0:00:07.684    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/intermediate_contigs.fasta\n  0:00:07.691    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.691    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.691    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.691    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.737   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.903   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.154   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.154   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.161    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.210   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.213   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.216   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.218   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.218   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.219   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.227   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.231   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.243    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.243    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.243    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.243    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.243    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.244    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.244    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.244    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.244    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.245    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.245    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.245    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.245    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.245    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.245    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.245    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.248    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.248    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.248    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.248    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.248    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.248    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.250    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/9/working//K33/before_rr.fasta\n  0:00:08.255    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/9/working//K33/assembly_graph.fastg\n  0:00:08.260    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/final_contigs.paths\n  0:00:08.266    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/9/working//K33/scaffolds.paths\n  0:00:08.280    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.282    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/9/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/9/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/9/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/9/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/9/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "11 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "11.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:31:44", "plugin": "core", "name": "end_epoch", "raw_value": "1687804304.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:31:33", "plugin": "core", "name": "start_epoch", "raw_value": "1687804293.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-3", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 3, "time_seconds": 45.29151201248169, "inputs": {"sc": false, "careful": false, "kmer_choice|auto_kmer_choice": true, "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "59dbffbef98c80fe"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "2f6cffbdf96effec"}}, "job": {"model_class": "Job", "id": "ef58c95856458014", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:32:39.705428", "create_time": "2023-06-26T18:32:09.817270", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-gxnsj", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250}  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat --pe1-2 fastq:/galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat && python '/galaxy/server/database/jobs_directory/000/12/configs/tmpo8np7xo8' < contigs.fasta > '/galaxy/server/database/objects/4/9/6/dataset_496fc393-537e-40c1-9696-e688d2d72923.dat' && python '/galaxy/server/database/jobs_directory/000/12/configs/tmpo8np7xo8' < scaffolds.fasta > '/galaxy/server/database/objects/e/a/4/dataset_ea4439bb-f91b-4859-a7fb-6c4d700b5eec.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 22, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 23, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 1, \"auto_kmer_choice\": true}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "59dbffbef98c80fe", "src": "hda", "uuid": "334a6bbb-d284-48c6-9cd0-097f1a4323a2"}, "libraries_0|files_0|rev_reads": {"id": "2f6cffbdf96effec", "src": "hda", "uuid": "558fdfa9-d7e9-4f56-912b-2966f49473b8"}}, "outputs": {"out_contig_stats": {"id": "c6459551721ef5b5", "src": "hda", "uuid": "496fc393-537e-40c1-9696-e688d2d72923"}, "out_scaffold_stats": {"id": "024cd1d19eddd1fe", "src": "hda", "uuid": "ea4439bb-f91b-4859-a7fb-6c4d700b5eec"}, "out_contigs": {"id": "5106badfe8857c9c", "src": "hda", "uuid": "ef25c6ad-8c96-47a5-9ed0-564fb764c7b9"}, "out_scaffolds": {"id": "886e9f919f8fc3a0", "src": "hda", "uuid": "b453ce98-9b2f-40d6-bb3c-181e61541549"}, "out_log": {"id": "84665e531daa9685", "src": "hda", "uuid": "3d688b25-2d9c-4f23-9293-1654d6364bb2"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/12/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/12/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat']\n      right reads: ['/galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat\n  0:00:00.847     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\n  0:00:01.681     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.690    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.968    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.968    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.114    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.135    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.157    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.159    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.163    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.164    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.171    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.171    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.171    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat\n  0:00:02.186    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\n  0:00:02.199    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.199    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.199    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.215    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.215    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.224    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.225    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.225    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.225    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat and /galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\n  0:00:02.247    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.250    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.253    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.280    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.280    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.281    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n  0:00:02.284    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.053    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.056     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.135   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.139     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.216   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.303     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.303     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.303     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.304     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.305     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.736     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.919    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:00.919    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.001    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.002    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.002    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.002    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.002    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.003    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.923     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:01.934    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.276    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:02.276    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.426    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.447    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.466    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:02.466    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.470    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.471    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:02.471    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea\n..\n short gaps\n  0:00:05.493    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:05.495    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:05.495    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:05.495    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:05.495    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:05.495    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:05.495    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.495    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.503    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:05.503    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:05.503    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:05.508    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:05.508    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:05.508    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:05.513    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:05.517    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta\n  0:00:05.520    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta\n  0:00:05.526    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:05.526    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.526    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.526    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:05.526    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:05.526    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:05.575   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:05.739   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:05.987   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:05.987   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:05.996    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:06.044   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:06.048   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.050   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.055   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:06.055   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:06.056   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:06.064   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.068   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.078    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:06.079    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.079    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.079    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:06.079    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.081    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.081    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:06.081    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:06.081    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.081    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.081    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.081    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:06.081    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:06.081    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:06.081    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:06.082    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:06.082    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:06.083    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:06.088    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:06.092    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths\n  0:00:06.098    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths\n  0:00:06.111    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:06.113    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 6 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/12/working\t--disable-gzip-output\t-t\t8\t-m\t50\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/12/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat']\n      right reads: ['/galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: automatic selection based on read length\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/12/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/12/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat\n  0:00:00.847     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\n  0:00:01.681     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.690    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.968    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.968    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.114    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.135    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.157    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.159    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.163    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.164    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.171    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.171    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.171    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat\n  0:00:02.186    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\n  0:00:02.199    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.199    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.199    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.215    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.215    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.215    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.224    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.225    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.225    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.225    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/3/3/4/dataset_334a6bbb-d284-48c6-9cd0-097f1a4323a2.dat and /galaxy/server/database/objects/5/5/8/dataset_558fdfa9-d7e9-4f56-912b-2966f49473b8.dat\n  0:00:02.247    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.250    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.253    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.280    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.280    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.281    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n  0:00:02.284    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/12/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K21\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/12/working/K21/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/12/working/dataset.info) with K=21\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.053    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.056     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.135   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.139     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.216   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.303     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.303     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.303     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.304     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.305     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 1048576\n  0:00:00.736     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.745    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.919    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 984 kmers in total.\n  0:00:00.919    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.001    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.002    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.002    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.002    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.002    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.003    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:01.923     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 984 kmers.\n  0:00:01.934    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.276    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 985 kmers in total.\n  0:00:02.276    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.426    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.447    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.466    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (79.399 bits per kmer).\n  0:00:02.466    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.470    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.471    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Early tip clipping\n  0:00:02.471    32M / 8G    INFO    General                 (construction.cpp          : 253)   Ea\n..\n short gaps\n  0:00:05.493    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:05.495    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:05.495    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:05.495    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:05.495    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:05.495    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:05.495    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 140.62\n  0:00:05.495    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:05.495    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.495    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.503    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:05.503    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:05.503    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:05.508    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:05.508    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:05.508    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:05.513    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:05.517    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/simplified_contigs.fasta\n  0:00:05.520    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/intermediate_contigs.fasta\n  0:00:05.526    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:05.526    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.526    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.526    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 945\n  0:00:05.526    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:05.526    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:05.575   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:05.739   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:05.987   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:05.987   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1636 paired reads (79.6495% of all) aligned to long edges\n  0:00:05.996    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.696, deviation = 10.4821, left quantile = 201, right quantile = 228, read length = 100\n  0:00:06.044   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:06.048   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.050   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.055   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:06.055   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:06.056   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:06.064   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.068   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.078    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:06.079    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.079    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.079    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:06.079    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:06.079    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.081    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.081    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:06.081    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:06.081    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.081    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.081    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.081    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:06.081    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:06.081    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:06.081    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 140.62\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:06.082    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.082    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.082    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.082    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:06.082    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:06.082    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph_with_scaffolds.gfa\n  0:00:06.083    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/12/working//K55/before_rr.fasta\n  0:00:06.088    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/12/working//K55/assembly_graph.fastg\n  0:00:06.092    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/final_contigs.paths\n  0:00:06.098    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/12/working//K55/scaffolds.paths\n  0:00:06.111    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:06.113    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 6 seconds\n\n===== Assembling finished. Used k-mer sizes: 21, 33, 55 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/12/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/12/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/12/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/12/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/12/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "20 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "20.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:32:31", "plugin": "core", "name": "end_epoch", "raw_value": "1687804351.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:32:11", "plugin": "core", "name": "start_epoch", "raw_value": "1687804331.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-4", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 4, "time_seconds": 33.91584539413452, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "77", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "c6be5235352b2805"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "728d3bab6b596d7d"}}, "job": {"model_class": "Job", "id": "dbaf23e8db3b7cb0", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:33:13.605584", "create_time": "2023-06-26T18:32:54.236572", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-rlpmv", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"77\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat --pe1-2 fastq:/galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat && python '/galaxy/server/database/jobs_directory/000/15/configs/tmp_vw4lfgn' < contigs.fasta > '/galaxy/server/database/objects/8/0/6/dataset_806b9747-5952-48d2-aabc-105b7d3ecb34.dat' && python '/galaxy/server/database/jobs_directory/000/15/configs/tmp_vw4lfgn' < scaffolds.fasta > '/galaxy/server/database/objects/8/5/5/dataset_8556fb40-50e8-4399-ace8-a8af80432f7d.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"77\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 29, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 30, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastq\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "c6be5235352b2805", "src": "hda", "uuid": "e24afd26-91d0-499f-be44-cb06dc7f07ef"}, "libraries_0|files_0|rev_reads": {"id": "728d3bab6b596d7d", "src": "hda", "uuid": "eb172666-39db-4091-9a40-767646c87dd4"}}, "outputs": {"out_contig_stats": {"id": "38d0784e27716098", "src": "hda", "uuid": "806b9747-5952-48d2-aabc-105b7d3ecb34"}, "out_scaffold_stats": {"id": "2ddffc644e58e1fc", "src": "hda", "uuid": "8556fb40-50e8-4399-ace8-a8af80432f7d"}, "out_contigs": {"id": "be311e5a74da0efa", "src": "hda", "uuid": "f48e076a-568f-4674-b609-0019299a2200"}, "out_scaffolds": {"id": "ac3521351983f170", "src": "hda", "uuid": "55af24e2-6309-40e7-a877-07e7bd45664a"}, "out_log": {"id": "6a77d79d0bf48167", "src": "hda", "uuid": "edfa5e24-ec65-4d5b-b843-fc0e3f0576a2"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/15/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/15/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat']\n      right reads: ['/galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat\n  0:00:00.929     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\n  0:00:01.753     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.762    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.054    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.054    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.201    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.223    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.237    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.239    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.241    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.242    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.249    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.249    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.249    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat\n  0:00:02.264    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\n  0:00:02.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.277    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.293    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.293    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.301    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.301    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.301    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.301    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat and /galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\n  0:00:02.324    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.328    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.332    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.360    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.360    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.360    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n  0:00:02.364    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.055    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.058     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.137   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.141     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.220   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.303     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.304     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.304     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.304     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.305     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:00.732     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.741    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.741    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.923    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:00.924    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.999    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.000    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.000    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:01.910     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:01.921    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.288    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:02.288    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.460    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.491    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.512    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:02.512    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.515    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.516    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:05.720    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:05.723    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:05.723    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:05.723    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:05.723    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:05.723    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:05.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.729    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:05.729    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:05.729    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:05.733    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:05.733    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:05.733    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:05.737    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:05.740    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta\n  0:00:05.744    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta\n  0:00:05.749    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:05.750    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.750    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.750    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:05.750    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:05.750    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:05.798   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:05.970   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.218   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:06.218   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:06.226    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:06.273   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:06.277   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.279   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.281   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:06.281   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:06.281   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:06.288   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.291   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.302    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:06.302    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:06.302    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.302    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:06.302    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:06.302    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:06.302    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:06.302    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:06.303    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:06.303    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:06.305    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:06.310    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:06.314    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths\n  0:00:06.321    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths\n  0:00:06.333    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:06.335    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 6 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/15/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t77\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/15/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat']\n      right reads: ['/galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [77]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/15/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/15/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat\n  0:00:00.929     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\n  0:00:01.753     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.762    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.054    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:02.054    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.201    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.223    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.237    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.239    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.241    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.242    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.249    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.249    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.249    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat\n  0:00:02.264    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\n  0:00:02.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.277    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.277    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.292    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.293    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.293    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.301    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.301    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.301    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.301    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/e/2/4/dataset_e24afd26-91d0-499f-be44-cb06dc7f07ef.dat and /galaxy/server/database/objects/e/b/1/dataset_eb172666-39db-4091-9a40-767646c87dd4.dat\n  0:00:02.324    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.328    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.332    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.360    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.360    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.360    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n  0:00:02.364    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/15/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K77\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/15/working/K77/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/15/working/dataset.info) with K=77\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.055    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.058     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.137   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.141     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.220   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.303     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.304     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.304     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.304     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.305     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.305     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 349525\n  0:00:00.732     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.741    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.741    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.923    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 876 kmers in total.\n  0:00:00.924    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.999    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.000    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.000    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.000    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 174762\n  0:00:01.910     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 876 kmers.\n  0:00:01.921    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.288    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 879 kmers in total.\n  0:00:02.288    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.460    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.491    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.512    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9736 bytes occupied (88.6098 bits per kmer).\n  0:00:02.512    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.515    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.516    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:05.720    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:05.723    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:05.723    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:05.723    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:05.723    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:05.723    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:05.723    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 64.4594\n  0:00:05.723    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:05.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.723    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.729    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:05.729    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:05.729    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:05.733    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:05.733    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:05.733    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:05.737    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:05.740    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/simplified_contigs.fasta\n  0:00:05.744    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/intermediate_contigs.fasta\n  0:00:05.749    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:05.750    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:05.750    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:05.750    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 899\n  0:00:05.750    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:05.750    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:05.798   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:05.970   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.218   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:06.218   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   1120 paired reads (54.5278% of all) aligned to long edges\n  0:00:06.226    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.791, deviation = 10.2816, left quantile = 201, right quantile = 228, read length = 100\n  0:00:06.273   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:06.277   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.279   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.281   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:06.281   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:06.281   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:06.288   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:06.291   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:06.302    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:06.302    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:06.302    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.302    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:06.302    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:06.302    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:06.302    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:06.302    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:06.302    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:06.302    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 64.4594\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:06.303    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:06.303    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:06.303    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:06.303    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:06.303    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:06.303    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph_with_scaffolds.gfa\n  0:00:06.305    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/15/working//K77/before_rr.fasta\n  0:00:06.310    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/15/working//K77/assembly_graph.fastg\n  0:00:06.314    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/final_contigs.paths\n  0:00:06.321    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/15/working//K77/scaffolds.paths\n  0:00:06.333    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:06.335    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 6 seconds\n\n===== Assembling finished. Used k-mer sizes: 77 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/15/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/15/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/15/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/15/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/15/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:32:55", "plugin": "core", "name": "start_epoch", "raw_value": "1687804375.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:33:05", "plugin": "core", "name": "end_epoch", "raw_value": "1687804385.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "10 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "10.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-5", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 5, "time_seconds": 38.18459725379944, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "eadea9f23a5bf1a9"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "e090a75ddc54c819"}, "contig_graph_out": true, "scaffold_graph_out": true}, "job": {"model_class": "Job", "id": "ef12ed5ff2d98369", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:33:51.206576", "create_time": "2023-06-26T18:33:30.109625", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-2jv9g", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat --pe1-2 fastq:/galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat && python '/galaxy/server/database/jobs_directory/000/18/configs/tmpvnmx9gan' < contigs.fasta > '/galaxy/server/database/objects/3/7/7/dataset_37742bc8-01ca-4e65-8a82-72fba1445959.dat' && python '/galaxy/server/database/jobs_directory/000/18/configs/tmpvnmx9gan' < scaffolds.fasta > '/galaxy/server/database/objects/8/5/b/dataset_85b0cf6c-aaf6-4a6c-9a7f-8b83063053b2.dat'", "traceback": null, "params": {"__input_ext": "\"fastq\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "true", "contig_graph_out": "true", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 36, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 37, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "eadea9f23a5bf1a9", "src": "hda", "uuid": "75877626-7c64-4938-9f13-21bbc897163d"}, "libraries_0|files_0|rev_reads": {"id": "e090a75ddc54c819", "src": "hda", "uuid": "ca55ec00-b91d-4485-8b03-4ad326d44921"}}, "outputs": {"out_contig_stats": {"id": "efa32e14e2e2c274", "src": "hda", "uuid": "37742bc8-01ca-4e65-8a82-72fba1445959"}, "out_scaffold_stats": {"id": "6385c1405ab3da97", "src": "hda", "uuid": "85b0cf6c-aaf6-4a6c-9a7f-8b83063053b2"}, "out_contigs": {"id": "1d072450acebe7b0", "src": "hda", "uuid": "d8062ac0-203e-4e44-99d2-94804df72775"}, "out_scaffolds": {"id": "e7528db2eff6fcaf", "src": "hda", "uuid": "d7a50de2-6866-4e7e-994f-825cc2267465"}, "out_log": {"id": "4e140471d3f88884", "src": "hda", "uuid": "60d0266b-e12f-415e-bde0-a3a7f9c9fe4d"}, "contig_graph": {"id": "2b216f4dec6d4d34", "src": "hda", "uuid": "9370138e-e745-4fb7-878a-8a04c50c6fa7"}, "scaffold_graph": {"id": "c23c91a4b7a90cf8", "src": "hda", "uuid": "fda55d28-cb9d-46da-86ad-7e7c9766482a"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/18/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/18/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat']\n      right reads: ['/galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.005     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat\n  0:00:00.865     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\n  0:00:01.662     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.672    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.934    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.934    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.066    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.086    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.103    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.104    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.106    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.107    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.114    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.114    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.114    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat\n  0:00:02.128    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\n  0:00:02.142    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.142    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.142    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.159    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.159    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.168    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.168    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.168    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.168    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat and /galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\n  0:00:02.190    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.196    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.199    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.227    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.227    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.227    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n  0:00:02.230    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/18/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/18/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.053    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.056     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.136   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.141     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.220   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.313     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.313     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.313     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.313     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.314     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.314     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.314     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.726     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.734    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.735    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.903    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.903    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.977    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.977    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.977    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.977    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.978    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.978    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.805     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.819    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.183    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.183    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.341    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.363    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.380    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.380    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.388    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:07.977    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.978    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.978    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.978    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.978    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.978    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.979    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.979    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.979    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.979    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.979    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.979    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.979    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.979    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.979    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.986    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.986    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.986    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.990    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.990    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.990    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:07.994    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:07.999    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/simplified_contigs.fasta\n  0:00:08.003    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/intermediate_contigs.fasta\n  0:00:08.009    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:08.009    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.009    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.009    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:08.009    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:08.009    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:08.058   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.225   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.473   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.473   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.480    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.529   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.533   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.535   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.537   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.537   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.537   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.545   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.549   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.561    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.561    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.561    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.561    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.562    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.562    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.562    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.562    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.563    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.563    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.563    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.563    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.563    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.563    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.563    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.563    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.564    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.564    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.564    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.564    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.564    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.565    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.565    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.566    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.566    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.566    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.566    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.566    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.566    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:08.571    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:08.574    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/final_contigs.paths\n  0:00:08.583    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/scaffolds.paths\n  0:00:08.599    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.600    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/18/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/18/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat']\n      right reads: ['/galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/18/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/18/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.005     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat\n  0:00:00.865     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\n  0:00:01.662     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.672    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.934    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.934    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.066    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.086    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.103    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.104    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.106    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.107    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.114    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.114    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.114    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat\n  0:00:02.128    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\n  0:00:02.142    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.142    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.142    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.158    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.159    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.159    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.168    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.168    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.168    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.168    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/7/5/8/dataset_75877626-7c64-4938-9f13-21bbc897163d.dat and /galaxy/server/database/objects/c/a/5/dataset_ca55ec00-b91d-4485-8b03-4ad326d44921.dat\n  0:00:02.190    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.196    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.199    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.227    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.227    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.227    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n  0:00:02.230    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/18/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/18/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/18/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.053    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.056     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.136   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.141     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.220   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.313     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.313     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.313     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.313     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.314     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.314     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.314     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.726     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.734    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.735    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.903    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.903    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.977    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.977    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.977    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.977    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.978    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.978    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.805     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.819    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.183    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.183    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.341    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.363    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.380    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.380    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.387    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.388    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:07.977    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.978    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.978    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.978    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.978    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.978    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.978    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.979    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.979    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.979    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.979    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.979    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.979    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.979    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.979    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.979    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.986    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.986    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.986    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.990    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.990    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.990    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:07.994    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:07.999    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/simplified_contigs.fasta\n  0:00:08.003    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/intermediate_contigs.fasta\n  0:00:08.009    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:08.009    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:08.009    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:08.009    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:08.009    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:08.009    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:08.058   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.225   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.473   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.473   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.480    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.529   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.533   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.535   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.537   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.537   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.537   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.545   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.549   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.561    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.561    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.561    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.561    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.562    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.562    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.562    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.562    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.562    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.563    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.563    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.563    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.563    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.563    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.563    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.563    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.563    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.564    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.564    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.564    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.564    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.564    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.564    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.564    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.565    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.565    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.565    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.565    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.566    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.566    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.566    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.566    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.566    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.566    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.566    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/18/working//K33/before_rr.fasta\n  0:00:08.571    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/18/working//K33/assembly_graph.fastg\n  0:00:08.574    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/final_contigs.paths\n  0:00:08.583    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/18/working//K33/scaffolds.paths\n  0:00:08.599    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.600    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/18/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/18/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/18/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/18/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/18/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:33:31", "plugin": "core", "name": "start_epoch", "raw_value": "1687804411.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:33:42", "plugin": "core", "name": "end_epoch", "raw_value": "1687804422.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "11 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "11.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-6", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 6, "time_seconds": 37.31865429878235, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "ad7855ef4b5c9f86"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "8442c227b3083f2c"}}, "job": {"model_class": "Job", "id": "55054ba7f3eafcc7", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:34:28.885420", "create_time": "2023-06-26T18:34:08.018548", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-ccstr", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq:/galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat --pe1-2 fastq:/galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat && python '/galaxy/server/database/jobs_directory/000/21/configs/tmpa23faa_3' < contigs.fasta > '/galaxy/server/database/objects/5/4/8/dataset_54859355-44ca-48ea-b1c3-fce96cc4df20.dat' && python '/galaxy/server/database/jobs_directory/000/21/configs/tmpa23faa_3' < scaffolds.fasta > '/galaxy/server/database/objects/e/1/2/dataset_e12f3841-0eeb-4860-a6ca-a6aeb98d6c9e.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "scaffold_graph_out": "false", "contig_graph_out": "false", "untrusted_contigs": null, "trusted_contigs": null, "sanger_reads": null, "nanopore_reads": null, "pacbio_reads": null, "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 45, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 46, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "iontorrent": "false", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "careful": "false", "onlyassembler": "false", "sc": "false"}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "ad7855ef4b5c9f86", "src": "hda", "uuid": "f245541d-c38c-4336-9e0d-4b96e5e34ac9"}, "libraries_0|files_0|rev_reads": {"id": "8442c227b3083f2c", "src": "hda", "uuid": "e99e8f74-0ef5-440f-8b0f-58ea6581bc9a"}}, "outputs": {"out_contig_stats": {"id": "a971f86b4ea06b66", "src": "hda", "uuid": "54859355-44ca-48ea-b1c3-fce96cc4df20"}, "out_scaffold_stats": {"id": "7df69412957c484b", "src": "hda", "uuid": "e12f3841-0eeb-4860-a6ca-a6aeb98d6c9e"}, "out_contigs": {"id": "ef966c1ad19eb9a6", "src": "hda", "uuid": "c3054d54-9441-4952-a846-b53add31bfdc"}, "out_scaffolds": {"id": "5a57b2fb944eae83", "src": "hda", "uuid": "47ef84c9-7c77-4c59-8204-e530cc963972"}, "out_log": {"id": "626accb84b1b8cf0", "src": "hda", "uuid": "5e28ba08-41dc-4d9d-b4cf-f7c94a4f0f25"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/21/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/21/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat']\n      right reads: ['/galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/21/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.005     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat\n  0:00:00.846     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\n  0:00:01.598     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.609    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.874    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.876    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.012    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.032    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.052    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.053    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.056    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.057    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.064    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.064    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.064    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat\n  0:00:02.079    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\n  0:00:02.093    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.093    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.093    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.110    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.110    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.119    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.119    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.119    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.119    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat and /galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\n  0:00:02.142    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.148    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.151    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.178    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.178    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.178    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n  0:00:02.181    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/21/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/21/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.052    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.055     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.134   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.139     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.218   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.309     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.309     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.309     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.310     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.310     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.310     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.310     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.710     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.719    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.719    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.880    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.880    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.945    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.946    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.946    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.946    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.946    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.946    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.767     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.778    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.257    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.279    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.295    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.295    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.300    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.300    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:07.743    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.744    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.744    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.744    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.744    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.744    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.744    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.744    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.744    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.745    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.745    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.745    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.745    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.745    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.745    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.754    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.754    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.754    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.759    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.759    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.760    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:07.764    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:07.768    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/simplified_contigs.fasta\n  0:00:07.772    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/intermediate_contigs.fasta\n  0:00:07.780    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.780    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.780    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.828   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.992   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.239   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.239   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.248    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.296   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.301   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.303   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.320   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.324   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.336    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.336    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.336    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.336    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.337    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.337    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.337    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.337    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.337    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.337    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.337    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.337    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.337    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.337    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.337    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.338    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.338    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.339    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:08.344    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:08.347    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/final_contigs.paths\n  0:00:08.354    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/scaffolds.paths\n  0:00:08.368    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.369    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/21/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/21/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq:/galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat\t--pe1-2\tfastq:/galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/21/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat']\n      right reads: ['/galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/21/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/21/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.004     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.004     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.005     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat\n  0:00:00.846     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\n  0:00:01.598     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.609    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.874    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.876    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.012    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.032    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.052    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.053    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.056    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.057    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.064    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.064    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.064    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat\n  0:00:02.079    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\n  0:00:02.093    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.093    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.093    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.109    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.110    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.110    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.119    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.119    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.119    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.119    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/f/2/4/dataset_f245541d-c38c-4336-9e0d-4b96e5e34ac9.dat and /galaxy/server/database/objects/e/9/9/dataset_e99e8f74-0ef5-440f-8b0f-58ea6581bc9a.dat\n  0:00:02.142    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.148    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.151    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.178    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.178    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.178    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n  0:00:02.181    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/21/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/21/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/21/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.004     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.052    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.055     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.134   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.139     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.218   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.309     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.309     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.309     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.310     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.310     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.310     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.310     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.710     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.719    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.719    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.880    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.880    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:00.945    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:00.946    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.946    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.946    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.946    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:00.946    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.767     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.778    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.110    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.257    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.279    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.295    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.295    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.300    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.300    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE =\n..\nosing short gaps\n  0:00:07.743    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.744    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.744    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.744    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.744    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.744    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.744    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.744    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.744    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.745    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.745    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.745    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.745    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.745    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.745    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.745    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.754    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.754    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.754    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.759    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.759    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.760    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:07.764    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:07.768    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/simplified_contigs.fasta\n  0:00:07.772    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/intermediate_contigs.fasta\n  0:00:07.780    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.780    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.780    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.780    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.828   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:07.992   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.239   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.239   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.248    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.296   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.301   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.303   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.308   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.320   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.324   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.336    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.336    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.336    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.336    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.336    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.337    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.337    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.337    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.337    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.337    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.337    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.337    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.337    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.337    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.337    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.337    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.338    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.338    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.338    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.338    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.338    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.338    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.339    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/21/working//K33/before_rr.fasta\n  0:00:08.344    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/21/working//K33/assembly_graph.fastg\n  0:00:08.347    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/final_contigs.paths\n  0:00:08.354    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/21/working//K33/scaffolds.paths\n  0:00:08.368    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.369    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/21/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/21/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/21/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/21/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/21/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:34:09", "plugin": "core", "name": "start_epoch", "raw_value": "1687804449.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:34:20", "plugin": "core", "name": "end_epoch", "raw_value": "1687804460.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "11 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "11.0000000"}]}, "status": "success"}}, {"id": "spades/3.12.0+galaxy1-7", "has_data": true, "data": {"tool_id": "spades", "tool_version": "3.12.0+galaxy1", "test_index": 7, "time_seconds": 37.68995761871338, "inputs": {"sc": false, "careful": false, "kmer_choice|kmers": "33", "libraries_0|lib_type": "paired_end", "libraries_0|files_0|file_type|fwd_reads": {"src": "hda", "id": "f32581d61c42816f"}, "libraries_0|files_0|file_type|rev_reads": {"src": "hda", "id": "eb84422177b2d88f"}}, "job": {"model_class": "Job", "id": "c6459551721ef5b5", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:35:06.563103", "create_time": "2023-06-26T18:34:44.250084", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/nml/spades/spades/3.12.0+galaxy1", "history_id": "32841e823f71086a", "external_id": "gxy-mkw8t", "command_line": "if [[ -n $GALAXY_MEMORY_MB ]]; then GALAXY_MEMORY_GB=$(( GALAXY_MEMORY_MB / 1024 )); fi &&  spades.py -o . --disable-gzip-output    -t ${GALAXY_SLOTS:-16} -m ${GALAXY_MEMORY_GB:-250} -k \"33\"  --pe1-fr --pe1-1 fastq.gz:/galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat --pe1-2 fastq.gz:/galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat && python '/galaxy/server/database/jobs_directory/000/24/configs/tmpq3gfk7k2' < contigs.fasta > '/galaxy/server/database/objects/5/e/7/dataset_5e76fe6c-e90b-439d-8e1f-f3d97b65420f.dat' && python '/galaxy/server/database/jobs_directory/000/24/configs/tmpq3gfk7k2' < scaffolds.fasta > '/galaxy/server/database/objects/3/5/0/dataset_350309be-a025-4bab-80aa-cc1c1f46fa45.dat'", "traceback": null, "params": {"sc": "false", "onlyassembler": "false", "careful": "false", "kmer_choice": "{\"__current_case__\": 0, \"auto_kmer_choice\": false, \"kmers\": \"33\"}", "cov": "{\"__current_case__\": 0, \"state\": \"off\"}", "iontorrent": "false", "libraries": "[{\"__index__\": 0, \"files\": [{\"__index__\": 0, \"file_type\": {\"__current_case__\": 0, \"fwd_reads\": {\"values\": [{\"id\": 52, \"src\": \"hda\"}]}, \"rev_reads\": {\"values\": [{\"id\": 53, \"src\": \"hda\"}]}, \"type\": \"separate\"}}], \"lib_type\": \"paired_end\", \"orientation\": \"fr\"}]", "pacbio_reads": null, "nanopore_reads": null, "sanger_reads": null, "trusted_contigs": null, "untrusted_contigs": null, "contig_graph_out": "false", "scaffold_graph_out": "false", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "dbkey": "\"?\"", "__input_ext": "\"fastqsanger.gz\""}, "inputs": {"libraries_0|files_0|fwd_reads": {"id": "f32581d61c42816f", "src": "hda", "uuid": "27f9d0fe-ca0d-442f-973d-63b6ac6d6faf"}, "libraries_0|files_0|rev_reads": {"id": "eb84422177b2d88f", "src": "hda", "uuid": "a042b253-abac-4b6a-8dfa-c12de7a1e97b"}}, "outputs": {"out_contig_stats": {"id": "e3aa9d1d84674fe5", "src": "hda", "uuid": "5e76fe6c-e90b-439d-8e1f-f3d97b65420f"}, "out_scaffold_stats": {"id": "1255ef3ded346be0", "src": "hda", "uuid": "350309be-a025-4bab-80aa-cc1c1f46fa45"}, "out_contigs": {"id": "3a95159b87d2c8c2", "src": "hda", "uuid": "3bb53e22-c739-4210-822f-77cc86f3bbd0"}, "out_scaffolds": {"id": "dad242ce9822fefe", "src": "hda", "uuid": "95909c6a-42c3-4be5-bbd5-8ea1c407545b"}, "out_log": {"id": "8fc3fc282b526961", "src": "hda", "uuid": "de9b1e35-ab19-4ad3-b77c-9fb5f37015de"}}, "output_collections": {}, "tool_stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/24/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat']\n      right reads: ['/galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.003     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat\n  0:00:00.829     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\n  0:00:01.648     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.660    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.935    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.935    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.083    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.105    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.119    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.120    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.122    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.123    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.131    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.131    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.131    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat\n  0:00:02.145    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\n  0:00:02.158    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.158    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.158    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.175    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.175    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.187    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.187    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.187    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.187    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat and /galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\n  0:00:02.214    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.219    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.222    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.251    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.251    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.251    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n  0:00:02.255    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/24/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/24/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.054    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.058     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.136   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.141     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.219   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.326     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.326     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.326     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.327     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.328     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.328     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.328     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.772     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.781    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.781    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.949    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.949    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.022    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.022    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.022    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.023    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.023    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.023    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.898     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.909    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.237    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.237    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.398    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.416    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.435    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.435    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.438    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.439    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nosing short gaps\n  0:00:07.882    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.883    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.883    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.883    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.883    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.883    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.884    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.884    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.884    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.884    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.884    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.884    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.884    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.884    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.884    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.892    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.892    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.892    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.896    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.896    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.896    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:07.900    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:07.903    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/simplified_contigs.fasta\n  0:00:07.907    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/intermediate_contigs.fasta\n  0:00:07.913    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.913    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.913    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.913    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.962   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.134   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.381   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.381   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.389    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.438   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.442   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.444   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.458   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.462   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.474    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.475    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.475    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.475    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.475    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.477    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.477    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.477    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.477    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.478    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.478    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.478    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.478    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.478    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.478    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.479    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.479    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.480    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.480    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.480    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.480    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.480    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.481    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.481    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.482    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.482    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.482    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.482    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.482    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.483    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.483    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:08.488    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:08.491    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/final_contigs.paths\n  0:00:08.499    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/scaffolds.paths\n  0:00:08.512    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.514    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/24/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\nThank you for using SPAdes!\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Command line: /usr/local/bin/spades.py\t-o\t/galaxy/server/database/jobs_directory/000/24/working\t--disable-gzip-output\t-t\t8\t-m\t50\t-k\t33\t--pe1-fr\t--pe1-1\tfastq.gz:/galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat\t--pe1-2\tfastq.gz:/galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\t\n\nSystem information:\n  SPAdes version: 3.12.0\n  Python version: 3.9.15\n  OS: Linux-5.10.176+-x86_64-with-glibc2.28\n\nOutput dir: /galaxy/server/database/jobs_directory/000/24/working\nMode: read error correction and assembling\nDebug mode is turned OFF\n\nDataset parameters:\n  Multi-cell mode (you should set '--sc' flag if input data was obtained with MDA (single-cell) technology or --meta flag if processing metagenomic dataset)\n  Reads:\n    Library number: 1, library type: paired-end\n      orientation: fr\n      left reads: ['/galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat']\n      right reads: ['/galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat']\n      interlaced reads: not specified\n      single reads: not specified\n      merged reads: not specified\nRead error correction parameters:\n  Iterations: 1\n  PHRED offset will be auto-detected\n  Corrected reads will NOT be compressed\nAssembly parameters:\n  k: [33]\n  Repeat resolution is enabled\n  Mismatch careful mode is turned OFF\n  MismatchCorrector will be SKIPPED\n  Coverage cutoff is turned OFF\nOther parameters:\n  Dir for temp files: /galaxy/server/database/jobs_directory/000/24/working/tmp\n  Threads: 8\n  Memory limit (in Gb): 50\n\n\n======= SPAdes pipeline started. Log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\n\n===== Read error correction started. \n\n\n== Running read error correction tool: /usr/local/share/spades-3.12.0-3/bin/spades-hammer /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  75)   Starting BayesHammer, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  76)   Loading config from /galaxy/server/database/jobs_directory/000/24/working/corrected/configs/config.info\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  78)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.001     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.001     4M / 4M    INFO    General                 (main.cpp                  :  86)   Trying to determine PHRED offset\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  :  92)   Determined value is 33\n  0:00:00.002     4M / 4M    INFO    General                 (hammer_tools.cpp          :  36)   Hamming graph threshold tau=1, k=21, subkmer positions = [ 0 10 ]\n  0:00:00.002     4M / 4M    INFO    General                 (main.cpp                  : 113)   Size of aux. kmer data 24 bytes\n     === ITERATION 0 begins ===\n  0:00:00.003     4M / 4M    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:00.003     4M / 4M    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.003     4M / 4M    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.004     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat\n  0:00:00.829     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             :  97)   Processing /galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\n  0:00:01.648     8G / 8G    INFO   K-mer Splitting          (kmer_data.cpp             : 112)   Total 4108 reads processed\n  0:00:01.660    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:01.935    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 1974 kmers in total.\n  0:00:01.935    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.083    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.105    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.119    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 10136 bytes occupied (41.078 bits per kmer).\n  0:00:02.120    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 356)   Arranging kmers in hash map order\n  0:00:02.122    32M / 8G    INFO    General                 (main.cpp                  : 148)   Clustering Hamming graph.\n  0:00:02.123    32M / 8G    INFO    General                 (main.cpp                  : 155)   Extracting clusters\n  0:00:02.131    32M / 8G    INFO    General                 (main.cpp                  : 167)   Clustering done. Total clusters: 1960\n  0:00:02.131    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 376)   Collecting K-mer information, this takes a while.\n  0:00:02.131    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat\n  0:00:02.145    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 382)   Processing /galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\n  0:00:02.158    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 389)   Collection done, postprocessing.\n  0:00:02.158    32M / 8G    INFO   K-mer Counting           (kmer_data.cpp             : 403)   There are 1974 kmers in total. Among them 0 (0%) are singletons.\n  0:00:02.158    32M / 8G    INFO    General                 (main.cpp                  : 173)   Subclustering Hamming graph\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 649)   Subclustering done. Total 0 non-read kmers were generated.\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 650)   Subclustering statistics:\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 651)     Total singleton hamming clusters: 1946. Among them 1946 (100%) are good\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 652)     Total singleton subclusters: 8. Among them 8 (100%) are good\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 653)     Total non-singleton subcluster centers: 10. Among them 10 (100%) are good\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 654)     Average size of non-trivial subcluster: 2.8 kmers\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 655)     Average number of sub-clusters per non-singleton cluster: 1.28571\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 656)     Total solid k-mers: 1964\n  0:00:02.174    32M / 8G    INFO   Hamming Subclustering    (kmer_cluster.cpp          : 657)     Substitution probabilities: [4,4]((0.875,0.125,0,0),(0,1,0,0),(0,0,1,0),(0,0,0.125,0.875))\n  0:00:02.175    32M / 8G    INFO    General                 (main.cpp                  : 178)   Finished clustering.\n  0:00:02.175    32M / 8G    INFO    General                 (main.cpp                  : 197)   Starting solid k-mers expansion in 8 threads.\n  0:00:02.187    32M / 8G    INFO    General                 (main.cpp                  : 218)   Solid k-mers iteration 0 produced 0 new k-mers.\n  0:00:02.187    32M / 8G    INFO    General                 (main.cpp                  : 222)   Solid k-mers finalized\n  0:00:02.187    32M / 8G    INFO    General                 (hammer_tools.cpp          : 220)   Starting read correction in 8 threads.\n  0:00:02.187    32M / 8G    INFO    General                 (hammer_tools.cpp          : 233)   Correcting pair of reads: /galaxy/server/database/objects/2/7/f/dataset_27f9d0fe-ca0d-442f-973d-63b6ac6d6faf.dat and /galaxy/server/database/objects/a/0/4/dataset_a042b253-abac-4b6a-8dfa-c12de7a1e97b.dat\n  0:00:02.214    96M / 8G    INFO    General                 (hammer_tools.cpp          : 168)   Prepared batch 0 of 2054 reads.\n  0:00:02.219    96M / 8G    INFO    General                 (hammer_tools.cpp          : 175)   Processed batch 0\n  0:00:02.222    96M / 8G    INFO    General                 (hammer_tools.cpp          : 185)   Written batch 0\n  0:00:02.251    32M / 8G    INFO    General                 (hammer_tools.cpp          : 274)   Correction done. Changed 4 bases in 4 reads.\n  0:00:02.251    32M / 8G    INFO    General                 (hammer_tools.cpp          : 275)   Failed to correct 0 bases out of 353915.\n  0:00:02.251    32M / 8G    INFO    General                 (main.cpp                  : 255)   Saving corrected dataset description to /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n  0:00:02.255    32M / 8G    INFO    General                 (main.cpp                  : 262)   All done. Exiting.\n\n== Dataset description file was created: /galaxy/server/database/jobs_directory/000/24/working/corrected/corrected.yaml\n\n\n===== Read error correction finished. \n\n\n===== Assembling started.\n\n\n== Running assembler: K33\n\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  74)   Loaded config from /galaxy/server/database/jobs_directory/000/24/working/K33/configs/config.info\n  0:00:00.000     4M / 4M    INFO    General                 (memory_limit.cpp          :  49)   Memory limit set to 50 Gb\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  87)   Starting SPAdes, built from N/A, git revision N/A\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  88)   Maximum k-mer length: 128\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  89)   Assembling dataset (/galaxy/server/database/jobs_directory/000/24/working/dataset.info) with K=33\n  0:00:00.000     4M / 4M    INFO    General                 (main.cpp                  :  90)   Maximum # of threads to use (adjusted due to OMP capabilities): 8\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  51)   SPAdes started\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  58)   Starting from stage: construction\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  65)   Two-step RR enabled: 0\n  0:00:00.000     4M / 4M    INFO    General                 (launch.hpp                :  76)   Will need read mapping, kmer mapper will be attached\n  0:00:00.000     4M / 4M    INFO   StageManager             (stage.cpp                 : 132)   STAGE == de Bruijn graph construction\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  77)   Converting reads to binary format for library #0 (takes a while)\n  0:00:00.005     4M / 4M    INFO    General                 (read_converter.hpp        :  78)   Converting paired reads\n  0:00:00.054    68M / 76M   INFO    General                 (binary_converter.hpp      : 117)   2054 reads written\n  0:00:00.058     4M / 76M   INFO    General                 (read_converter.hpp        :  87)   Converting single reads\n  0:00:00.136   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.141     4M / 148M  INFO    General                 (read_converter.hpp        :  95)   Converting merged reads\n  0:00:00.219   132M / 148M  INFO    General                 (binary_converter.hpp      : 117)   0 reads written\n  0:00:00.326     4M / 148M  INFO    General                 (construction.cpp          : 111)   Max read length 100\n  0:00:00.326     4M / 148M  INFO    General                 (construction.cpp          : 117)   Average read length 86.1526\n  0:00:00.326     4M / 148M  INFO    General                 (stage.cpp                 : 101)   PROCEDURE == k+1-mer counting\n  0:00:00.327     4M / 148M  INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 64 files using 8 threads. This might take a while.\n  0:00:00.328     4M / 148M  INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:00.328     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08317 Gb\n  0:00:00.328     4M / 148M  INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 524288\n  0:00:00.772     6G / 6G    INFO    General                 (kmer_splitters.hpp        : 295)   Adding contigs from previous K\n  0:00:00.781    32M / 6G    INFO    General                 (kmer_splitters.hpp        : 308)   Used 8216 reads\n  0:00:00.781    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:00.949    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 972 kmers in total.\n  0:00:00.949    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:01.022    32M / 6G    INFO    General                 (stage.cpp                 : 101)   PROCEDURE == Extension index construction\n  0:00:01.022    32M / 6G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 301)   Building kmer index\n  0:00:01.022    32M / 6G    INFO    General                 (kmer_index_builder.hpp    : 117)   Splitting kmer instances into 128 files using 8 threads. This might take a while.\n  0:00:01.023    32M / 6G    INFO    General                 (file_limit.hpp            :  32)   Open file limit set to 1048576\n  0:00:01.023    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  89)   Memory available for splitting buffers: 2.08203 Gb\n  0:00:01.023    32M / 6G    INFO    General                 (kmer_splitters.hpp        :  97)   Using cell size of 262144\n  0:00:01.898     8G / 8G    INFO    General                 (kmer_splitters.hpp        : 385)   Used 972 kmers.\n  0:00:01.909    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 120)   Starting k-mer counting.\n  0:00:02.237    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 127)   K-mer counting done. There are 973 kmers in total.\n  0:00:02.237    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 133)   Merging temporary buckets.\n  0:00:02.398    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 314)   Building perfect hash indices\n  0:00:02.416    32M / 8G    INFO    General                 (kmer_index_builder.hpp    : 150)   Merging final buckets.\n  0:00:02.435    32M / 8G    INFO   K-mer Index Building     (kmer_index_builder.hpp    : 336)   Index built. Total 9776 bytes occupied (80.3782 bits per kmer).\n  0:00:02.435    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build:  99)   Building k-mer extensions from k+1-mers\n  0:00:02.438    32M / 8G    INFO   DeBruijnExtensionIndexBu (kmer_extension_index_build: 103)   Building k-mer extensions from k+1-mers finished.\n  0:00:02.439    32M / 8G    INFO    General                 (stage.cpp                 : 101)   PROCE\n..\nosing short gaps\n  0:00:07.882    32M / 8G    INFO   GapCloser                (gap_closer.cpp            : 380)   Closing short gaps complete: filled 0 gaps after checking 0 candidates\n  0:00:07.883    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Simplification Cleanup\n  0:00:07.883    32M / 8G    INFO    General                 (simplification.cpp        : 196)   PROCEDURE == Post simplification\n  0:00:07.883    32M / 8G    INFO    General                 (graph_simplification.hpp  : 453)   Disconnection of relatively low covered edges disabled\n  0:00:07.883    32M / 8G    INFO    General                 (graph_simplification.hpp  : 489)   Complex tip clipping disabled\n  0:00:07.883    32M / 8G    INFO    General                 (graph_simplification.hpp  : 634)   Creating parallel br instance\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Tip clipper\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Tip clipper triggered 0 times\n  0:00:07.883    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Bulge remover\n  0:00:07.884    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Bulge remover triggered 0 times\n  0:00:07.884    32M / 8G    INFO    General                 (simplification.cpp        : 330)   Disrupting self-conjugate edges\n  0:00:07.884    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 165)   Running Removing isolated edges\n  0:00:07.884    32M / 8G    INFO   Simplification           (parallel_processing.hpp   : 167)   Removing isolated edges triggered 0 times\n  0:00:07.884    32M / 8G    INFO    General                 (simplification.cpp        : 470)   Counting average coverage\n  0:00:07.884    32M / 8G    INFO    General                 (simplification.cpp        : 476)   Average coverage = 225.839\n  0:00:07.884    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Mismatch Correction\n  0:00:07.884    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.884    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.892    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 189)   Finished collecting potential mismatches positions\n  0:00:07.892    32M / 8G    INFO    General                 (mismatch_shall_not_pass.hp: 290)   All edges processed\n  0:00:07.892    32M / 8G    INFO    General                 (mismatch_correction.cpp   :  27)   Corrected 0 nucleotides\n  0:00:07.896    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:07.896    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:07.896    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:07.900    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:07.903    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/simplified_contigs.fasta\n  0:00:07.907    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/intermediate_contigs.fasta\n  0:00:07.913    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Paired Information Counting\n  0:00:07.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 109)   Normalizing k-mer map. Total 0 kmers to process\n  0:00:07.913    32M / 8G    INFO    General                 (graph_pack.hpp            : 111)   Normalizing done\n  0:00:07.913    32M / 8G    INFO    General                 (pair_info_count.cpp       : 320)   Min edge length for estimation: 967\n  0:00:07.913    32M / 8G    INFO    General                 (pair_info_count.cpp       : 331)   Estimating insert size for library #0\n  0:00:07.913    32M / 8G    INFO    General                 (pair_info_count.cpp       : 190)   Estimating insert size (takes a while)\n  0:00:07.962   176M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.134   176M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.381   176M / 8G    INFO    General                 (pair_info_count.cpp       : 209)   Edge pairs: 67108864 (rough upper limit)\n  0:00:08.381   176M / 8G    INFO    General                 (pair_info_count.cpp       : 213)   2009 paired reads (97.8092% of all) aligned to long edges\n  0:00:08.389    32M / 8G    INFO    General                 (pair_info_count.cpp       : 354)     Insert size = 214.609, deviation = 10.5368, left quantile = 201, right quantile = 228, read length = 100\n  0:00:08.438   224M / 8G    INFO    General                 (pair_info_count.cpp       : 371)   Filtering data for library #0\n  0:00:08.442   224M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.444   224M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 383)   Mapping library #0\n  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 385)   Mapping paired reads (takes a while)\n  0:00:08.450   224M / 8G    INFO    General                 (pair_info_count.cpp       : 289)   Left insert size quantile 201, right insert size quantile 228, filtering threshold 2, rounding threshold 0\n  0:00:08.458   236M / 8G    INFO    General                 (pair_info_count.cpp       :  39)   Selecting usual mapper\n  0:00:08.462   236M / 8G    INFO    General                 (sequence_mapper_notifier.h:  98)   Total 2054 reads processed\n  0:00:08.474    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Distance Estimation\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 173)   Processing library #0\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 149)   Weight Filter Done\n  0:00:08.475    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SIMPLE distance estimator\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.475    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.475    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 156)   Refining clustered pair information\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 158)   The refining of clustered pair information has been finished\n  0:00:08.475    32M / 8G    INFO    General                 (distance_estimation.cpp   : 160)   Improving paired information\n  0:00:08.475    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.477    32M / 8G    INFO   PairInfoImprover         (pair_info_improver.hpp    : 103)   Paired info stats: missing = 0; contradictional = 0\n  0:00:08.477    32M / 8G    INFO    General                 (distance_estimation.cpp   : 103)   Filling scaffolding index\n  0:00:08.477    32M / 8G    INFO   DistanceEstimator        (distance_estimation.hpp   : 116)   Using SMOOTHING distance estimator\n  0:00:08.477    32M / 8G    INFO    General                 (distance_estimation.cpp   :  34)   Filtering info\n  0:00:08.478    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 242)   Start filtering; index size: 2\n  0:00:08.478    32M / 8G    INFO    General                 (pair_info_filters.hpp     : 263)   Done filtering\n  0:00:08.478    32M / 8G    INFO    General                 (distance_estimation.cpp   : 182)   Clearing raw paired index\n  0:00:08.478    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Repeat Resolving\n  0:00:08.478    32M / 8G    INFO    General                 (repeat_resolving.cpp      :  69)   Using Path-Extend repeat resolving\n  0:00:08.478    32M / 8G    INFO    General                 (launcher.cpp              : 477)   ExSPAnder repeat resolving tool started\n  0:00:08.479    32M / 8G    INFO    General                 (launcher.cpp              : 392)   Creating main extenders, unique edge length = 2000\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 275)   Estimated coverage of library #0 is 225.839\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 472)   Using 1 paired-end library\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 473)   Using 1 paired-end scaffolding library\n  0:00:08.479    32M / 8G    INFO    General                 (extenders_logic.cpp       : 474)   Using 0 single read libraries\n  0:00:08.479    32M / 8G    INFO    General                 (launcher.cpp              : 420)   Total number of extenders is 3\n  0:00:08.480    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.480    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.480    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.480    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.480    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.480    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.481    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 427)   Closing gaps in paths\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 455)   Gap closing completed\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 286)   Traversing tandem repeats\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 296)   Traversed 0 loops\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 234)   Finalizing paths\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 236)   Deduplicating paths\n  0:00:08.481    32M / 8G    INFO    General                 (launcher.cpp              : 240)   Paths deduplicated\n  0:00:08.481    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 295)   Removing overlaps\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 298)   Sorting paths\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 305)   Marking overlaps\n  0:00:08.482    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 130)   Marking start/end overlaps\n  0:00:08.482    32M / 8G    INFO   OverlapRemover           (pe_resolver.hpp           : 133)   Marking remaining overlaps\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 308)   Splitting paths\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 313)   Deduplicating paths\n  0:00:08.482    32M / 8G    INFO   PEResolver               (pe_resolver.hpp           : 315)   Overlaps removed\n  0:00:08.482    32M / 8G    INFO    General                 (launcher.cpp              : 257)   Paths finalized\n  0:00:08.482    32M / 8G    INFO    General                 (launcher.cpp              : 529)   ExSPAnder repeat resolving tool finished\n  0:00:08.482    32M / 8G    INFO   StageManager             (stage.cpp                 : 132)   STAGE == Contig Output\n  0:00:08.483    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  40)   Writing GFA to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph_with_scaffolds.gfa\n  0:00:08.483    32M / 8G    INFO    General                 (contig_output.hpp         :  22)   Outputting contigs to /galaxy/server/database/jobs_directory/000/24/working//K33/before_rr.fasta\n  0:00:08.488    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  51)   Outputting FastG graph to /galaxy/server/database/jobs_directory/000/24/working//K33/assembly_graph.fastg\n  0:00:08.491    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/final_contigs.paths\n  0:00:08.499    32M / 8G    INFO    General                 (contig_output_stage.cpp   :  20)   Outputting FastG paths to /galaxy/server/database/jobs_directory/000/24/working//K33/scaffolds.paths\n  0:00:08.512    32M / 8G    INFO    General                 (launch.hpp                : 149)   SPAdes finished\n  0:00:08.514    32M / 8G    INFO    General                 (main.cpp                  : 109)   Assembling time: 0 hours 0 minutes 8 seconds\n\n===== Assembling finished. Used k-mer sizes: 33 \n\n * Corrected reads are in /galaxy/server/database/jobs_directory/000/24/working/corrected/\n * Assembled contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.fasta\n * Assembled scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.fasta\n * Assembly graph is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph.fastg\n * Assembly graph in GFA format is in /galaxy/server/database/jobs_directory/000/24/working/assembly_graph_with_scaffolds.gfa\n * Paths in the assembly graph corresponding to the contigs are in /galaxy/server/database/jobs_directory/000/24/working/contigs.paths\n * Paths in the assembly graph corresponding to the scaffolds are in /galaxy/server/database/jobs_directory/000/24/working/scaffolds.paths\n\n======= SPAdes pipeline finished.\n\nSPAdes log can be found here: /galaxy/server/database/jobs_directory/000/24/working/spades.log\n\nThank you for using SPAdes!\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Cores Allocated", "value": "8", "plugin": "core", "name": "galaxy_slots", "raw_value": "8.0000000"}, {"title": "Memory Allocated (MB)", "value": "51539", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "51539.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:34:46", "plugin": "core", "name": "start_epoch", "raw_value": "1687804486.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:34:57", "plugin": "core", "name": "end_epoch", "raw_value": "1687804497.0000000"}, {"title": "Job Runtime (Wall Clock)", "value": "11 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "11.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-0", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 0, "time_seconds": 37.127007246017456, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "d5be66095be89d8e"}, "readtype|single_or_paired": "se", "operations_0|operation|name": "SLIDINGWINDOW", "output_logs": true, "output_err": true}, "job": {"model_class": "Job", "id": "7df69412957c484b", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:40:42.649770", "create_time": "2023-06-26T18:40:19.262845", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-2rmxt", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/a/6/f/dataset_a6f61b47-860f-4324-b4ac-96e085cf9709.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' SLIDINGWINDOW:4:20 -trimlog trimlog 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/3/a/d/dataset_3adbab57-fd0f-46c6-b724-35f654d5ec14.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "true", "output_logs": "true", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 86, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"fastq_in": {"id": "d5be66095be89d8e", "src": "hda", "uuid": "a6f61b47-860f-4324-b4ac-96e085cf9709"}}, "outputs": {"fastq_out": {"id": "ca32464a4daf5a86", "src": "hda", "uuid": "3adbab57-fd0f-46c6-b724-35f654d5ec14"}, "log_file": {"id": "2faf58390267aeeb", "src": "hda", "uuid": "0ea37352-e034-4c49-99a5-5beec4d5ce8f"}, "err_file": {"id": "79a2679f1498763d", "src": "hda", "uuid": "dc2595a1-9b1c-422d-9278-dc7b3ff7a821"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:40:31", "plugin": "core", "name": "end_epoch", "raw_value": "1687804831.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:40:30", "plugin": "core", "name": "start_epoch", "raw_value": "1687804830.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "output_problems": ["Output err_file:  different than expected, difference (using diff):\n( /tmp/tmpaf7_idcntrimmomatic_se_out1.err v. /tmp/tmpedff_ob4trimmomatic_se_out1.err )\n--- local_file\n+++ history_data\n@@ -1,5 +1,6 @@\n+Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\n TrimmomaticSE: Started with arguments:\n- -threads 1 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n+ -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger SLIDINGWINDOW:4:20 -trimlog trimlog\n Quality encoding detected as phred33\n Input Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\n TrimmomaticSE: Completed successfully\n"], "status": "failure"}}, {"id": "trimmomatic/0.38.1-1", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 1, "time_seconds": 22.64226531982422, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "49296bc491ca8232"}, "readtype|single_or_paired": "se", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "5a57b2fb944eae83", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:41:05.848020", "create_time": "2023-06-26T18:40:55.775239", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-tb22c", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/7/f/f/dataset_7ff01906-4914-4f8f-83da-539ce48c7f9a.dat' fastq_in.'fastqsanger.gz' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger.gz' fastq_out.'fastqsanger.gz' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger.gz' '/galaxy/server/database/objects/4/b/9/dataset_4b9b69fb-ecdf-49cf-afcb-3331c13e95f5.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 90, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"fastq_in": {"id": "49296bc491ca8232", "src": "hda", "uuid": "7ff01906-4914-4f8f-83da-539ce48c7f9a"}}, "outputs": {"fastq_out": {"id": "6187e01b0448cec1", "src": "hda", "uuid": "4b9b69fb-ecdf-49cf-afcb-3331c13e95f5"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger.gz fastq_out.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 8 (80.00%) Dropped: 2 (20.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "1 second", "plugin": "core", "name": "runtime_seconds", "raw_value": "1.0000000"}, {"title": "Job End Time", "value": "2023-06-26 18:40:58", "plugin": "core", "name": "end_epoch", "raw_value": "1687804858.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:40:57", "plugin": "core", "name": "start_epoch", "raw_value": "1687804857.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-10", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 10, "time_seconds": 22.262673377990723, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "59364d2a63c372ee"}, "readtype|single_or_paired": "se", "operations_0|operation|target_length": "75", "operations_0|operation|strictness": "0.8", "operations_0|operation|name": "MAXINFO"}, "job": {"model_class": "Job", "id": "6e51c6cd69981c97", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:44:25.834198", "create_time": "2023-06-26T18:44:16.127927", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-5gt2g", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/6/0/c/dataset_60c2f163-4ec9-412e-8af4-8df52a4eecfe.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' MAXINFO:75:0.8 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/0/9/2/dataset_092c4cd8-368f-468e-a9e3-0ace3149b455.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 7, \"name\": \"MAXINFO\", \"strictness\": \"0.8\", \"target_length\": \"75\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 128, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"fastq_in": {"id": "59364d2a63c372ee", "src": "hda", "uuid": "60c2f163-4ec9-412e-8af4-8df52a4eecfe"}}, "outputs": {"fastq_out": {"id": "fcafd45fd8ebb356", "src": "hda", "uuid": "092c4cd8-368f-468e-a9e3-0ace3149b455"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger MAXINFO:75:0.8\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 10 (100.00%) Dropped: 0 (0.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:44:17", "plugin": "core", "name": "end_epoch", "raw_value": "1687805057.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:44:17", "plugin": "core", "name": "start_epoch", "raw_value": "1687805057.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-11", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 11, "time_seconds": 20.977317094802856, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "e90e12fb9c29e66e"}, "readtype|fastq_r2_in": {"src": "hda", "id": "31a4c03c8aa57009"}, "readtype|single_or_paired": "pair_of_files", "illuminaclip|adapter_type|adapter_fasta": "TruSeq2-PE.fa", "illuminaclip|do_illuminaclip": true, "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "1a842a6a9b424671", "state": "error", "exit_code": null, "update_time": "2023-06-26T18:44:46.532604", "create_time": "2023-06-26T18:44:40.644582", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-dqr8h", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/7/5/8/dataset_7584aa62-b122-426b-9b78-b19a3df4aad7.dat' fastq_r1.'fastqsanger' && ln -s '/galaxy/server/database/objects/9/1/e/dataset_91eb0917-7027-413d-8cfc-8bbf6bb05d6f.dat' fastq_r2.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger' fastq_r2.'fastqsanger' fastq_out_r1_paired.'fastqsanger' fastq_out_r1_unpaired.'fastqsanger' fastq_out_r2_paired.'fastqsanger' fastq_out_r2_unpaired.'fastqsanger' ILLUMINACLIP:$TRIMMOMATIC_ADAPTERS_PATH/TruSeq2-PE.fa:2:30:10:8:true SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger' '/galaxy/server/database/objects/9/b/5/dataset_9b58cdb7-cf17-480b-8346-b81e5d07c858.dat' && mv fastq_out_r1_unpaired.'fastqsanger' '/galaxy/server/database/objects/7/7/e/dataset_77e98b30-2394-484f-8d30-2be04084625c.dat' && mv fastq_out_r2_paired.'fastqsanger' '/galaxy/server/database/objects/f/6/3/dataset_f63968a9-0562-4ee4-85d6-7624737fc19b.dat' && mv fastq_out_r2_unpaired.'fastqsanger' '/galaxy/server/database/objects/5/7/c/dataset_57c4cd6b-2dd9-4e6d-a48e-efe31136c37e.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 0, \"adapter_type\": {\"__current_case__\": 0, \"adapter_fasta\": \"TruSeq2-PE.fa\", \"standard_or_custom\": \"standard\"}, \"do_illuminaclip\": true, \"keep_both_reads\": true, \"min_adapter_len\": \"8\", \"palindrome_clip_threshold\": \"30\", \"seed_mismatches\": \"2\", \"simple_clip_threshold\": \"10\"}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 130, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 131, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"fastq_r1_in": {"id": "e90e12fb9c29e66e", "src": "hda", "uuid": "7584aa62-b122-426b-9b78-b19a3df4aad7"}, "fastq_r2_in": {"id": "31a4c03c8aa57009", "src": "hda", "uuid": "91eb0917-7027-413d-8cfc-8bbf6bb05d6f"}}, "outputs": {"fastq_out_r1_paired": {"id": "db4efc9f40572aed", "src": "hda", "uuid": "9b58cdb7-cf17-480b-8346-b81e5d07c858"}, "fastq_out_r2_paired": {"id": "b07db9abd47420a9", "src": "hda", "uuid": "f63968a9-0562-4ee4-85d6-7624737fc19b"}, "fastq_out_r1_unpaired": {"id": "d22cba9441a874b3", "src": "hda", "uuid": "77e98b30-2394-484f-8d30-2be04084625c"}, "fastq_out_r2_unpaired": {"id": "a15c0d7ed6cef620", "src": "hda", "uuid": "57c4cd6b-2dd9-4e6d-a48e-efe31136c37e"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "trimmomatic/0.38.1-12", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 12, "time_seconds": 27.239786624908447, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "f1b0b1849e1ba6f9"}, "readtype|fastq_r2_in": {"src": "hda", "id": "b440d24ca1bf14f2"}, "readtype|single_or_paired": "pair_of_files", "illuminaclip|adapter_type|adapter_text": ">PrefixPE/1\nAATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\n>PrefixPE/2\nCAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\n>PCR_Primer1\nAATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\n>PCR_Primer1_rc\nAGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT\n>PCR_Primer2\nCAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\n>PCR_Primer2_rc\nAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG\n>FlowCell1\nTTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC\n>FlowCell2\nTTTTTTTTTTCAAGCAGAAGACGGCATACGA\n", "illuminaclip|adapter_type|standard_or_custom": "custom", "illuminaclip|do_illuminaclip": true, "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "cf53fd05fe9b5527", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:45:13.239967", "create_time": "2023-06-26T18:45:02.285458", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-scdvp", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/e/e/9/dataset_ee9d251d-3579-4fb6-bc6e-19aa344e102a.dat' fastq_r1.'fastqsanger' && ln -s '/galaxy/server/database/objects/f/e/8/dataset_fe88f9bc-e7e8-4354-9ac0-1ae39172bc2b.dat' fastq_r2.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger' fastq_r2.'fastqsanger' fastq_out_r1_paired.'fastqsanger' fastq_out_r1_unpaired.'fastqsanger' fastq_out_r2_paired.'fastqsanger' fastq_out_r2_unpaired.'fastqsanger' ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/79/configs/tmpoza0mmw0:2:30:10:8:true SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger' '/galaxy/server/database/objects/8/0/2/dataset_802985e7-f77c-415d-8443-6353ec8e7892.dat' && mv fastq_out_r1_unpaired.'fastqsanger' '/galaxy/server/database/objects/9/3/4/dataset_9340e162-23af-4d14-b3a6-942e89fdff1d.dat' && mv fastq_out_r2_paired.'fastqsanger' '/galaxy/server/database/objects/5/3/4/dataset_5343e5b6-8cad-4491-b6ca-89f0a3b0983f.dat' && mv fastq_out_r2_unpaired.'fastqsanger' '/galaxy/server/database/objects/1/7/2/dataset_17274787-833f-44ec-9244-902e91468a2b.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 0, \"adapter_type\": {\"__current_case__\": 1, \"adapter_text\": \">PrefixPE/1\\nAATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\\n>PrefixPE/2\\nCAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\\n>PCR_Primer1\\nAATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT\\n>PCR_Primer1_rc\\nAGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT\\n>PCR_Primer2\\nCAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT\\n>PCR_Primer2_rc\\nAGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG\\n>FlowCell1\\nTTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC\\n>FlowCell2\\nTTTTTTTTTTCAAGCAGAAGACGGCATACGA\\n\", \"standard_or_custom\": \"custom\"}, \"do_illuminaclip\": true, \"keep_both_reads\": true, \"min_adapter_len\": \"8\", \"palindrome_clip_threshold\": \"30\", \"seed_mismatches\": \"2\", \"simple_clip_threshold\": \"10\"}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 136, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 137, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"fastq_r1_in": {"id": "f1b0b1849e1ba6f9", "src": "hda", "uuid": "ee9d251d-3579-4fb6-bc6e-19aa344e102a"}, "fastq_r2_in": {"id": "b440d24ca1bf14f2", "src": "hda", "uuid": "fe88f9bc-e7e8-4354-9ac0-1ae39172bc2b"}}, "outputs": {"fastq_out_r1_paired": {"id": "910d0aff77f008ba", "src": "hda", "uuid": "802985e7-f77c-415d-8443-6353ec8e7892"}, "fastq_out_r2_paired": {"id": "205cb3573b3083e5", "src": "hda", "uuid": "5343e5b6-8cad-4491-b6ca-89f0a3b0983f"}, "fastq_out_r1_unpaired": {"id": "35b3971529d0e3dc", "src": "hda", "uuid": "9340e162-23af-4d14-b3a6-942e89fdff1d"}, "fastq_out_r2_unpaired": {"id": "c7ea4bdce0c871e9", "src": "hda", "uuid": "17274787-833f-44ec-9244-902e91468a2b"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/79/configs/tmpoza0mmw0:2:30:10:8:true SLIDINGWINDOW:4:20\nUsing PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'\nUsing Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'\nUsing Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'\nUsing Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'\nILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger ILLUMINACLIP:/galaxy/server/database/jobs_directory/000/79/configs/tmpoza0mmw0:2:30:10:8:true SLIDINGWINDOW:4:20\nUsing PrefixPair: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'\nUsing Long Clipping Sequence: 'AGATCGGAAGAGCGGTTCAGCAGGAATGCCGAGACCGATCTCGTATGCCGTCTTCTGCTTG'\nUsing Long Clipping Sequence: 'TTTTTTTTTTAATGATACGGCGACCACCGAGATCTACAC'\nUsing Long Clipping Sequence: 'TTTTTTTTTTCAAGCAGAAGACGGCATACGA'\nUsing Long Clipping Sequence: 'CAAGCAGAAGACGGCATACGAGATCGGTCTCGGCATTCCTGCTGAACCGCTCTTCCGATCT'\nUsing Long Clipping Sequence: 'AATGATACGGCGACCACCGAGATCTACACTCTTTCCCTACACGACGCTCTTCCGATCT'\nILLUMINACLIP: Using 1 prefix pairs, 6 forward/reverse sequences, 0 forward only sequences, 0 reverse only sequences\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:45:04", "plugin": "core", "name": "end_epoch", "raw_value": "1687805104.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:45:04", "plugin": "core", "name": "start_epoch", "raw_value": "1687805104.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-2", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 2, "time_seconds": 26.608046293258667, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "2a2f6a2aab4a6743"}, "readtype|fastq_r2_in": {"src": "hda", "id": "5615718dc31d7910"}, "readtype|single_or_paired": "pair_of_files", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "eb84422177b2d88f", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:41:31.523735", "create_time": "2023-06-26T18:41:20.585993", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-jdrbb", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/a/6/2/dataset_a62c4cd1-9fd3-4a59-89e3-00d331925c71.dat' fastq_r1.'fastqsanger.gz' && ln -s '/galaxy/server/database/objects/9/6/f/dataset_96fd51fe-1a7e-496e-a145-1c85be649eb8.dat' fastq_r2.'fastqsanger.gz' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger.gz' fastq_r2.'fastqsanger.gz' fastq_out_r1_paired.'fastqsanger.gz' fastq_out_r1_unpaired.'fastqsanger.gz' fastq_out_r2_paired.'fastqsanger.gz' fastq_out_r2_unpaired.'fastqsanger.gz' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger.gz' '/galaxy/server/database/objects/f/6/8/dataset_f686a1d7-be43-412a-bf2a-12889d26fe73.dat' && mv fastq_out_r1_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/2/5/2/dataset_252b81e0-7b95-4de0-bcb8-fa100da008d2.dat' && mv fastq_out_r2_paired.'fastqsanger.gz' '/galaxy/server/database/objects/f/3/7/dataset_f376c01c-47d6-4d04-8390-828f59bf4a29.dat' && mv fastq_out_r2_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/4/4/5/dataset_4459ce88-3d7c-4a79-95c6-db062a41827d.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 92, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 93, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"fastq_r1_in": {"id": "2a2f6a2aab4a6743", "src": "hda", "uuid": "a62c4cd1-9fd3-4a59-89e3-00d331925c71"}, "fastq_r2_in": {"id": "5615718dc31d7910", "src": "hda", "uuid": "96fd51fe-1a7e-496e-a145-1c85be649eb8"}}, "outputs": {"fastq_out_r1_paired": {"id": "5cfe6d81ab01e63f", "src": "hda", "uuid": "f686a1d7-be43-412a-bf2a-12889d26fe73"}, "fastq_out_r2_paired": {"id": "9622811aa403775a", "src": "hda", "uuid": "f376c01c-47d6-4d04-8390-828f59bf4a29"}, "fastq_out_r1_unpaired": {"id": "400e621b9dc46023", "src": "hda", "uuid": "252b81e0-7b95-4de0-bcb8-fa100da008d2"}, "fastq_out_r2_unpaired": {"id": "080bfe8ffc08a0a4", "src": "hda", "uuid": "4459ce88-3d7c-4a79-95c6-db062a41827d"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger.gz fastq_r2.fastqsanger.gz fastq_out_r1_paired.fastqsanger.gz fastq_out_r1_unpaired.fastqsanger.gz fastq_out_r2_paired.fastqsanger.gz fastq_out_r2_unpaired.fastqsanger.gz SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:41:22", "plugin": "core", "name": "end_epoch", "raw_value": "1687804882.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:41:22", "plugin": "core", "name": "start_epoch", "raw_value": "1687804882.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-3", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 3, "time_seconds": 27.54743266105652, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "623c924f1d1c9949"}, "readtype|fastq_r2_in": {"src": "hda", "id": "cf04ceccccaef34f"}, "readtype|single_or_paired": "pair_of_files", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "3a95159b87d2c8c2", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:41:59.142361", "create_time": "2023-06-26T18:41:48.179801", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-dbpzn", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/6/d/e/dataset_6de058b9-1d9f-41c8-bb9f-ef1c362a8317.dat' fastq_r1.'fastqsanger' && ln -s '/galaxy/server/database/objects/7/5/3/dataset_75374d80-5f57-45a0-91de-ce19c870e0d0.dat' fastq_r2.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger' fastq_r2.'fastqsanger' fastq_out_r1_paired.'fastqsanger' fastq_out_r1_unpaired.'fastqsanger' fastq_out_r2_paired.'fastqsanger' fastq_out_r2_unpaired.'fastqsanger' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger' '/galaxy/server/database/objects/2/a/c/dataset_2ac00e0e-0642-4b62-bbe1-cda9b39e35e5.dat' && mv fastq_out_r1_unpaired.'fastqsanger' '/galaxy/server/database/objects/2/d/8/dataset_2d87a2cb-2df4-436f-b7fb-d5b0ba3d68dd.dat' && mv fastq_out_r2_paired.'fastqsanger' '/galaxy/server/database/objects/2/5/2/dataset_25208e1f-166c-41eb-a0f0-bd1c66f556b7.dat' && mv fastq_out_r2_unpaired.'fastqsanger' '/galaxy/server/database/objects/3/5/8/dataset_358ffe5c-5ce0-4d60-bdf6-4e37faadbdc7.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 98, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 99, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"fastq_r1_in": {"id": "623c924f1d1c9949", "src": "hda", "uuid": "6de058b9-1d9f-41c8-bb9f-ef1c362a8317"}, "fastq_r2_in": {"id": "cf04ceccccaef34f", "src": "hda", "uuid": "75374d80-5f57-45a0-91de-ce19c870e0d0"}}, "outputs": {"fastq_out_r1_paired": {"id": "3f4350011d6360c8", "src": "hda", "uuid": "2ac00e0e-0642-4b62-bbe1-cda9b39e35e5"}, "fastq_out_r2_paired": {"id": "7d5817249dd26139", "src": "hda", "uuid": "25208e1f-166c-41eb-a0f0-bd1c66f556b7"}, "fastq_out_r1_unpaired": {"id": "ba9bd60d1f85b9c3", "src": "hda", "uuid": "2d87a2cb-2df4-436f-b7fb-d5b0ba3d68dd"}, "fastq_out_r2_unpaired": {"id": "19257b02fb51e142", "src": "hda", "uuid": "358ffe5c-5ce0-4d60-bdf6-4e37faadbdc7"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:41:50", "plugin": "core", "name": "end_epoch", "raw_value": "1687804910.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:41:50", "plugin": "core", "name": "start_epoch", "raw_value": "1687804910.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-4", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 4, "time_seconds": 8.749482154846191, "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error"}}, {"id": "trimmomatic/0.38.1-5", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 5, "time_seconds": 26.023343324661255, "inputs": {"readtype|fastq_r1_in": {"src": "hda", "id": "c1d7c20e40a7fb5f"}, "readtype|fastq_r2_in": {"src": "hda", "id": "e9d686f8bbd81797"}, "readtype|single_or_paired": "pair_of_files", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "fb3eb81f35ed69f7", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:42:33.978729", "create_time": "2023-06-26T18:42:24.004632", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-xkmq8", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/2/2/1/dataset_221fc2fb-ee78-4ccf-b150-c791792ee722.dat' fastq_r1.'fastqsolexa' && ln -s '/galaxy/server/database/objects/8/b/6/dataset_8b6f2269-87e9-4cdb-bc2f-3ef0171a9759.dat' fastq_r2.'fastqsolexa' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsolexa' fastq_r2.'fastqsolexa' fastq_out_r1_paired.'fastqsolexa' fastq_out_r1_unpaired.'fastqsolexa' fastq_out_r2_paired.'fastqsolexa' fastq_out_r2_unpaired.'fastqsolexa' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsolexa' '/galaxy/server/database/objects/2/7/3/dataset_2738e91d-dfb9-4e40-b567-6a7272556ff8.dat' && mv fastq_out_r1_unpaired.'fastqsolexa' '/galaxy/server/database/objects/f/e/b/dataset_feb3f4e5-96e7-4739-aa70-802ad91ac8fe.dat' && mv fastq_out_r2_paired.'fastqsolexa' '/galaxy/server/database/objects/8/e/7/dataset_8e791d75-c946-462f-bb5c-e6b103fd224a.dat' && mv fastq_out_r2_unpaired.'fastqsolexa' '/galaxy/server/database/objects/a/e/7/dataset_ae79ea14-462b-41d1-81a5-03125ec21444.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsolexa\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 1, \"fastq_r1_in\": {\"values\": [{\"id\": 106, \"src\": \"hda\"}]}, \"fastq_r2_in\": {\"values\": [{\"id\": 107, \"src\": \"hda\"}]}, \"single_or_paired\": \"pair_of_files\"}"}, "inputs": {"fastq_r1_in": {"id": "c1d7c20e40a7fb5f", "src": "hda", "uuid": "221fc2fb-ee78-4ccf-b150-c791792ee722"}, "fastq_r2_in": {"id": "e9d686f8bbd81797", "src": "hda", "uuid": "8b6f2269-87e9-4cdb-bc2f-3ef0171a9759"}}, "outputs": {"fastq_out_r1_paired": {"id": "3b6739ea9fb4b570", "src": "hda", "uuid": "2738e91d-dfb9-4e40-b567-6a7272556ff8"}, "fastq_out_r2_paired": {"id": "28f059a0468bb8d0", "src": "hda", "uuid": "8e791d75-c946-462f-bb5c-e6b103fd224a"}, "fastq_out_r1_unpaired": {"id": "a0990bbc2e260943", "src": "hda", "uuid": "feb3f4e5-96e7-4739-aa70-802ad91ac8fe"}, "fastq_out_r2_unpaired": {"id": "beaba93c4eb25ceb", "src": "hda", "uuid": "ae79ea14-462b-41d1-81a5-03125ec21444"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20\nQuality encoding detected as phred64\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsolexa fastq_r2.fastqsolexa fastq_out_r1_paired.fastqsolexa fastq_out_r1_unpaired.fastqsolexa fastq_out_r2_paired.fastqsolexa fastq_out_r2_unpaired.fastqsolexa SLIDINGWINDOW:4:20\nQuality encoding detected as phred64\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:42:26", "plugin": "core", "name": "end_epoch", "raw_value": "1687804946.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:42:26", "plugin": "core", "name": "start_epoch", "raw_value": "1687804946.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-6", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 6, "time_seconds": 18.071999073028564, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "380fa94713c8c9e3"}, "readtype|single_or_paired": "se", "operations_0|operation|crop": "10", "operations_0|operation|name": "CROP"}, "job": {"model_class": "Job", "id": "440b3854c8b481d1", "state": "error", "exit_code": null, "update_time": "2023-06-26T18:42:53.152798", "create_time": "2023-06-26T18:42:48.493814", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-xk5vw", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/7/4/d/dataset_74d178e2-4932-449f-9c59-dda9daa5c378.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' CROP:10 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/1/9/a/dataset_19a1c2c7-ebb5-4196-b760-c70a693e70f9.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 4, \"crop\": \"10\", \"name\": \"CROP\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 112, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"fastq_in": {"id": "380fa94713c8c9e3", "src": "hda", "uuid": "74d178e2-4932-449f-9c59-dda9daa5c378"}}, "outputs": {"fastq_out": {"id": "91c2255eabd4ceca", "src": "hda", "uuid": "19a1c2c7-ebb5-4196-b760-c70a693e70f9"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: .", "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "trimmomatic/0.38.1-7", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 7, "time_seconds": 26.25478744506836, "inputs": {"readtype|fastq_pair": {"src": "hdca", "id": "32841e823f71086a"}, "readtype|single_or_paired": "collection", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "15fa962582600865", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:43:19.009207", "create_time": "2023-06-26T18:43:08.312895", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-2xrlg", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/b/a/f/dataset_bafea945-3be2-4548-bb39-351f5f154003.dat' fastq_r1.'fastqsanger' && ln -s '/galaxy/server/database/objects/8/4/9/dataset_84975960-8929-4ad5-801c-c6eeea4fb096.dat' fastq_r2.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger' fastq_r2.'fastqsanger' fastq_out_r1_paired.'fastqsanger' fastq_out_r1_unpaired.'fastqsanger' fastq_out_r2_paired.'fastqsanger' fastq_out_r2_unpaired.'fastqsanger' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger' '/galaxy/server/database/objects/e/a/d/dataset_eadc0da1-5832-4b5b-a03d-6fe7c36d82f5.dat' && mv fastq_out_r1_unpaired.'fastqsanger' '/galaxy/server/database/objects/b/6/b/dataset_b6bf8ea9-a6de-4ef1-a567-4a11c62d456f.dat' && mv fastq_out_r2_paired.'fastqsanger' '/galaxy/server/database/objects/8/3/8/dataset_8389ed4b-7605-48a8-b74e-521072c0eeab.dat' && mv fastq_out_r2_unpaired.'fastqsanger' '/galaxy/server/database/objects/0/4/3/dataset_0437e8da-3439-499f-9e1b-3c5c9de2d230.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 2, \"fastq_pair\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"single_or_paired\": \"collection\"}"}, "inputs": {"fastq_pair1": {"id": "7f2e340b4db865a7", "src": "hda", "uuid": "bafea945-3be2-4548-bb39-351f5f154003"}, "fastq_pair2": {"id": "57a403a987bba238", "src": "hda", "uuid": "84975960-8929-4ad5-801c-c6eeea4fb096"}}, "outputs": {"fastq_out_paired|__part__|forward": {"id": "bebb611becae0674", "src": "hda", "uuid": "eadc0da1-5832-4b5b-a03d-6fe7c36d82f5"}, "fastq_out_paired|__part__|reverse": {"id": "bbb6606a8798b5b0", "src": "hda", "uuid": "8389ed4b-7605-48a8-b74e-521072c0eeab"}, "fastq_out_unpaired|__part__|forward": {"id": "63cef111e31e8475", "src": "hda", "uuid": "b6bf8ea9-a6de-4ef1-a567-4a11c62d456f"}, "fastq_out_unpaired|__part__|reverse": {"id": "9e7d3d6f7d8a530b", "src": "hda", "uuid": "0437e8da-3439-499f-9e1b-3c5c9de2d230"}}, "output_collections": {"fastq_out_unpaired": {"id": "fa36672418710db8", "src": "hdca"}, "fastq_out_paired": {"id": "3b2e8f61e28efc09", "src": "hdca"}}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticPE: Started with arguments:\n -threads 6 fastq_r1.fastqsanger fastq_r2.fastqsanger fastq_out_r1_paired.fastqsanger fastq_out_r1_unpaired.fastqsanger fastq_out_r2_paired.fastqsanger fastq_out_r2_unpaired.fastqsanger SLIDINGWINDOW:4:20\nQuality encoding detected as phred33\nInput Read Pairs: 10 Both Surviving: 8 (80.00%) Forward Only Surviving: 0 (0.00%) Reverse Only Surviving: 2 (20.00%) Dropped: 0 (0.00%)\nTrimmomaticPE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:43:10", "plugin": "core", "name": "end_epoch", "raw_value": "1687804990.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:43:10", "plugin": "core", "name": "start_epoch", "raw_value": "1687804990.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "trimmomatic/0.38.1-8", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 8, "time_seconds": 21.13802695274353, "inputs": {"readtype|fastq_pair": {"src": "hdca", "id": "1851c3fccb7c1175"}, "readtype|single_or_paired": "collection", "operations_0|operation|name": "SLIDINGWINDOW"}, "job": {"model_class": "Job", "id": "efc385d474497bba", "state": "error", "exit_code": null, "update_time": "2023-06-26T18:43:40.280035", "create_time": "2023-06-26T18:43:34.578407", "galaxy_version": "23.0", "command_version": null, "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-z5phl", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/a/2/0/dataset_a20de58e-a883-48c4-b13b-a2fc701a374c.dat' fastq_r1.'fastqsanger.gz' && ln -s '/galaxy/server/database/objects/3/a/2/dataset_3a205ac2-cb17-4493-8841-8327c89da77c.dat' fastq_r2.'fastqsanger.gz' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar PE -threads ${GALAXY_SLOTS:-6} fastq_r1.'fastqsanger.gz' fastq_r2.'fastqsanger.gz' fastq_out_r1_paired.'fastqsanger.gz' fastq_out_r1_unpaired.'fastqsanger.gz' fastq_out_r2_paired.'fastqsanger.gz' fastq_out_r2_unpaired.'fastqsanger.gz' SLIDINGWINDOW:4:20 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out_r1_paired.'fastqsanger.gz' '/galaxy/server/database/objects/f/f/c/dataset_ffcb9d6a-42f9-471d-8a39-6744206a240c.dat' && mv fastq_out_r1_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/5/f/2/dataset_5f22231c-d1c7-4f88-a4f5-fae3fd41995a.dat' && mv fastq_out_r2_paired.'fastqsanger.gz' '/galaxy/server/database/objects/8/4/a/dataset_84aeb63a-c3b4-42db-8de9-dec1a3932cfc.dat' && mv fastq_out_r2_unpaired.'fastqsanger.gz' '/galaxy/server/database/objects/0/c/c/dataset_0cc4b28e-1a4d-460a-abb6-1a4181c15589.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger.gz\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 0, \"name\": \"SLIDINGWINDOW\", \"required_quality\": \"20\", \"window_size\": \"4\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 2, \"fastq_pair\": {\"values\": [{\"id\": 4, \"src\": \"hdca\"}]}, \"single_or_paired\": \"collection\"}"}, "inputs": {"fastq_pair1": {"id": "eb6efec86faf398c", "src": "hda", "uuid": "a20de58e-a883-48c4-b13b-a2fc701a374c"}, "fastq_pair2": {"id": "b068a6bf38948d14", "src": "hda", "uuid": "3a205ac2-cb17-4493-8841-8327c89da77c"}}, "outputs": {"fastq_out_paired|__part__|forward": {"id": "726c1cd6aa60a955", "src": "hda", "uuid": "ffcb9d6a-42f9-471d-8a39-6744206a240c"}, "fastq_out_paired|__part__|reverse": {"id": "5e05efe080c68ed8", "src": "hda", "uuid": "84aeb63a-c3b4-42db-8de9-dec1a3932cfc"}, "fastq_out_unpaired|__part__|forward": {"id": "72f9d6cf685e0f35", "src": "hda", "uuid": "5f22231c-d1c7-4f88-a4f5-fae3fd41995a"}, "fastq_out_unpaired|__part__|reverse": {"id": "350ebf9bf8a63ee3", "src": "hda", "uuid": "0cc4b28e-1a4d-460a-abb6-1a4181c15589"}}, "output_collections": {"fastq_out_unpaired": {"id": "6daa19c3868b0631", "src": "hdca"}, "fastq_out_paired": {"id": "bd758c53d44b0bb1", "src": "hdca"}}, "tool_stdout": "", "tool_stderr": "", "job_stdout": null, "job_stderr": null, "stderr": "", "stdout": "", "job_messages": null, "dependencies": [], "user_email": "tests@fake.org", "job_metrics": []}, "output_problems": ["Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1, exit_code: None, stderr: ."], "status": "failure"}}, {"id": "trimmomatic/0.38.1-9", "has_data": true, "data": {"tool_id": "trimmomatic", "tool_version": "0.38.1", "test_index": 9, "time_seconds": 22.933784008026123, "inputs": {"readtype|fastq_in": {"src": "hda", "id": "2ff9d4a3a71455ec"}, "readtype|single_or_paired": "se", "operations_0|operation|avgqual": "30", "operations_0|operation|name": "AVGQUAL"}, "job": {"model_class": "Job", "id": "56d46cad9fc56039", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T18:44:03.635499", "create_time": "2023-06-26T18:43:53.786697", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.38.1", "history_id": "32841e823f71086a", "external_id": "gxy-7tm2b", "command_line": "if [ -z \"$TRIMMOMATIC_JAR_PATH\" ]; then export TRIMMOMATIC_JAR_PATH=$(dirname $(readlink -e $(which trimmomatic))); fi && if [ -z \"$TRIMMOMATIC_ADAPTERS_PATH\" ]; then export TRIMMOMATIC_ADAPTERS_PATH=$(dirname $(readlink -e $(which trimmomatic)))/adapters; fi && ln -s '/galaxy/server/database/objects/e/5/8/dataset_e582a0e7-5ddb-42e7-988e-b95602b70e59.dat' fastq_in.'fastqsanger' && java ${_JAVA_OPTIONS:--Xmx8G} -jar $TRIMMOMATIC_JAR_PATH/trimmomatic.jar SE -threads ${GALAXY_SLOTS:-6} fastq_in.'fastqsanger' fastq_out.'fastqsanger' AVGQUAL:30 2>&1 | tee trimmomatic.log && if [ -z \"$(tail -1 trimmomatic.log | grep \"Completed successfully\")\" ]; then echo \"Trimmomatic did not finish successfully\" >&2 ; exit 1 ; fi && mv fastq_out.'fastqsanger' '/galaxy/server/database/objects/7/6/9/dataset_7698d5bb-861d-42e3-9641-88adc7846a09.dat'", "traceback": null, "params": {"__input_ext": "\"fastqsanger\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"", "output_err": "false", "output_logs": "false", "operations": "[{\"__index__\": 0, \"operation\": {\"__current_case__\": 6, \"avgqual\": \"30\", \"name\": \"AVGQUAL\"}}]", "illuminaclip": "{\"__current_case__\": 1, \"do_illuminaclip\": false}", "readtype": "{\"__current_case__\": 0, \"fastq_in\": {\"values\": [{\"id\": 126, \"src\": \"hda\"}]}, \"single_or_paired\": \"se\"}"}, "inputs": {"fastq_in": {"id": "2ff9d4a3a71455ec", "src": "hda", "uuid": "e582a0e7-5ddb-42e7-988e-b95602b70e59"}}, "outputs": {"fastq_out": {"id": "30482341f0453b22", "src": "hda", "uuid": "7698d5bb-861d-42e3-9641-88adc7846a09"}}, "output_collections": {}, "tool_stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)\nTrimmomaticSE: Completed successfully\n", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "Picked up _JAVA_OPTIONS: -Xmx12G -Xms1G\nTrimmomaticSE: Started with arguments:\n -threads 6 fastq_in.fastqsanger fastq_out.fastqsanger AVGQUAL:30\nQuality encoding detected as phred33\nInput Reads: 10 Surviving: 4 (40.00%) Dropped: 6 (60.00%)\nTrimmomaticSE: Completed successfully\n", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 18:43:55", "plugin": "core", "name": "end_epoch", "raw_value": "1687805035.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 18:43:55", "plugin": "core", "name": "start_epoch", "raw_value": "1687805035.0000000"}, {"title": "Memory Allocated (MB)", "value": "12884", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "12884.0000000"}, {"title": "Cores Allocated", "value": "6", "plugin": "core", "name": "galaxy_slots", "raw_value": "6.0000000"}]}, "status": "success"}}, {"id": "vcfcombine/1.0.0_rc3+galaxy0-0", "has_data": true, "data": {"tool_id": "vcfcombine", "tool_version": "1.0.0_rc3+galaxy0", "test_index": 0, "time_seconds": 28.35180640220642, "inputs": {"input_vcfs": [{"src": "hda", "id": "f6d2bbc6bab8f102"}, {"src": "hda", "id": "f6d2bbc6bab8f102"}]}, "job": {"model_class": "Job", "id": "6a6ed9e50b2a3b6a", "state": "ok", "exit_code": 0, "update_time": "2023-06-26T19:02:53.306655", "create_time": "2023-06-26T19:02:38.400714", "galaxy_version": "23.0", "command_version": "", "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/vcfcombine/vcfcombine/1.0.0_rc3+galaxy0", "history_id": "32841e823f71086a", "external_id": "gxy-b4kdx", "command_line": "vcfcombine  '/galaxy/server/database/objects/d/5/b/dataset_d5b42e81-8251-4cdb-9504-93b317306fed.dat' '/galaxy/server/database/objects/d/5/b/dataset_d5b42e81-8251-4cdb-9504-93b317306fed.dat'  > '/galaxy/server/database/objects/4/2/6/dataset_426e1749-1d60-4eec-9119-366d0bc0ac5d.dat'", "traceback": null, "params": {"__input_ext": "\"vcf\"", "dbkey": "\"?\"", "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\""}, "inputs": {"input_vcfs": {"id": "f6d2bbc6bab8f102", "src": "hda", "uuid": "d5b42e81-8251-4cdb-9504-93b317306fed"}, "input_vcfs1": {"id": "f6d2bbc6bab8f102", "src": "hda", "uuid": "d5b42e81-8251-4cdb-9504-93b317306fed"}, "input_vcfs2": {"id": "f6d2bbc6bab8f102", "src": "hda", "uuid": "d5b42e81-8251-4cdb-9504-93b317306fed"}}, "outputs": {"out_file1": {"id": "99d422326f747115", "src": "hda", "uuid": "426e1749-1d60-4eec-9119-366d0bc0ac5d"}}, "output_collections": {}, "tool_stdout": "", "tool_stderr": "", "job_stdout": "", "job_stderr": "", "stderr": "", "stdout": "", "job_messages": [], "dependencies": [], "user_email": "tests@fake.org", "job_metrics": [{"title": "Job Runtime (Wall Clock)", "value": "0 seconds", "plugin": "core", "name": "runtime_seconds", "raw_value": "0E-7"}, {"title": "Job End Time", "value": "2023-06-26 19:02:45", "plugin": "core", "name": "end_epoch", "raw_value": "1687806165.0000000"}, {"title": "Job Start Time", "value": "2023-06-26 19:02:45", "plugin": "core", "name": "start_epoch", "raw_value": "1687806165.0000000"}, {"title": "Memory Allocated (MB)", "value": "4080", "plugin": "core", "name": "galaxy_memory_mb", "raw_value": "4080.0000000"}, {"title": "Cores Allocated", "value": "1", "plugin": "core", "name": "galaxy_slots", "raw_value": "1.0000000"}]}, "status": "success"}}], "galaxy_url": "http://34.148.152.82:8000/galaxy/"}