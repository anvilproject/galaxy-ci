<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="106"
           errors="51"
           failures="7"
           skip="0">
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="17.480591535568237">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 17.480591535568237, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="17.42781901359558">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 17.42781901359558, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #1)" name="0" time="17.908293962478638">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 0, "time_seconds": 17.908293962478638, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="18.230136156082153">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 18.230136156082153, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="16.89797854423523">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 16.89797854423523, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #2)" name="1" time="18.17745614051819">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 1, "time_seconds": 18.17745614051819, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="16.50321054458618">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 16.50321054458618, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="17.29250192642212">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 17.29250192642212, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #11)" name="10" time="17.004233837127686">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 10, "time_seconds": 17.004233837127686, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="17.108678340911865">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 17.108678340911865, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="17.98741340637207">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 17.98741340637207, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #12)" name="11" time="17.197625398635864">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 11, "time_seconds": 17.197625398635864, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="17.75485920906067">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 17.75485920906067, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="18.18429183959961">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 18.18429183959961, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #13)" name="12" time="19.038645029067993">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 12, "time_seconds": 19.038645029067993, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="17.739121675491333">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 13, "time_seconds": 17.739121675491333, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="17.740782260894775">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 13, "time_seconds": 17.740782260894775, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #14)" name="13" time="18.97580122947693">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 13, "time_seconds": 18.97580122947693, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="18.037811040878296">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 14, "time_seconds": 18.037811040878296, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="17.25445294380188">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 14, "time_seconds": 17.25445294380188, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #15)" name="14" time="17.288066625595093">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 14, "time_seconds": 17.288066625595093, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="18.215588569641113">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 15, "time_seconds": 18.215588569641113, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="16.92803716659546">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 15, "time_seconds": 16.92803716659546, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #16)" name="15" time="16.89646601676941">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 15, "time_seconds": 16.89646601676941, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="9.581345796585083">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 9.581345796585083, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="17.299342155456543">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 17.299342155456543, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #3)" name="2" time="16.44484806060791">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 2, "time_seconds": 16.44484806060791, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="16.410344123840332">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 16.410344123840332, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="16.838351011276245">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 16.838351011276245, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #4)" name="3" time="17.26319408416748">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 3, "time_seconds": 17.26319408416748, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="17.272449254989624">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 17.272449254989624, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="17.300806283950806">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 17.300806283950806, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #5)" name="4" time="17.224377870559692">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 17.224377870559692, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="16.878323078155518">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 16.878323078155518, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="18.13994288444519">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 18.13994288444519, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #6)" name="5" time="18.15828275680542">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 5, "time_seconds": 18.15828275680542, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="18.0044846534729">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 18.0044846534729, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="18.82821011543274">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 18.82821011543274, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #7)" name="6" time="17.647637128829956">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 6, "time_seconds": 17.647637128829956, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="17.175228595733643">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 17.175228595733643, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="17.16775107383728">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 17.16775107383728, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #8)" name="7" time="17.639570236206055">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 7, "time_seconds": 17.639570236206055, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="18.184914350509644">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 18.184914350509644, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="16.884723901748657">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 16.884723901748657, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #9)" name="8" time="17.8325355052948">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 8, "time_seconds": 17.8325355052948, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="17.302706956863403">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 17.302706956863403, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="17.285948514938354">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 17.285948514938354, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="anndata_inspect (Test #10)" name="9" time="17.37283205986023">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 9, "time_seconds": 17.37283205986023, "tool_id": "anndata_inspect", "tool_version": "0.7.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #1)" name="0" time="37.118632316589355">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #2)" name="1" time="33.240161418914795">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #3)" name="2" time="32.53968286514282">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #4)" name="3" time="32.44717240333557">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #5)" name="4" time="31.561513662338257">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_merge (Test #6)" name="5" time="33.226258277893066">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bcftools_plugin_missing2ref (Test #1)" name="0" time="37.50016117095947">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Filled 44 REF alleles
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #1)" name="0" time="60.30341124534607">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "7d3faea26aa7f8f0",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "ffd9cc89434f238c",   "src": "hda"  },  "single_or_paired|input_mate2": {   "id": "6b4141405728378c",   "src": "hda"  },  "single_or_paired|single_or_paired_opts": "paired" }, "job": {  "command_line": "mkdir index_dir \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/4/8/4/dataset_484d7be6-c9fb-418a-aaee-8827dc4482b8.dat\u0027 index_dir/genome.fa \u0026\u0026 bwameth.py index index_dir/genome.fa \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/b/7/7/dataset_b77bee10-6464-407c-8e76-61104e263d01.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -f -s \u0027/galaxy/server/database/objects/8/2/0/dataset_820b83e0-0cb4-4073-8564-99b4f623709e.dat\u0027 input_r.fastq.gz \u0026\u0026  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference \u0027index_dir/genome.fa\u0027   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -",  "command_version": "bwa-meth.py 0.2.2",  "create_time": "2023-07-29T18:39:21.637922",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-k6rhv",  "galaxy_version": "23.0",  "history_id": "1018f08cc05517d1",  "id": "ffd9cc89434f238c",  "inputs": {   "input_mate1": {    "id": "ffd9cc89434f238c",    "src": "hda",    "uuid": "b77bee10-6464-407c-8e76-61104e263d01"   },   "input_mate2": {    "id": "6b4141405728378c",    "src": "hda",    "uuid": "820b83e0-0cb4-4073-8564-99b4f623709e"   },   "reference": {    "id": "4cb34367c43ef525",    "src": "hda",    "uuid": "484d7be6-c9fb-418a-aaee-8827dc4482b8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690655984.0000000",    "title": "Job End Time",    "value": "2023-07-29 18:39:44"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690655982.0000000",    "title": "Job Start Time",    "value": "2023-07-29 18:39:42"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "25769.0000000",    "title": "Memory Allocated (MB)",    "value": "25769"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "a894e6e8c25c3c69",    "src": "hda",    "uuid": "15b8955c-e130-45be-b1e2-daa767b89c09"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 35, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 33, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 34, \"src\": \"hda\"}]}, \"single_or_paired_opts\": \"paired\"}"  },  "state": "ok",  "stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.80 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.18 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.147 sec; CPU: 1.036 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.007 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.107 sec; CPU: 0.038 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.80 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.18 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.147 sec; CPU: 1.036 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.007 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.107 sec; CPU: 0.038 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-29T18:39:57.069193",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_x_tw40t6.sam v. /tmp/history_bam_converted_to_sam_mym7qp32.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,9 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:chrREF\tLN:900000\n @RG\tID:input_\tSM:input_\n-@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.0\tCL:\"/usr/users/ga002/soranzon/miniconda3/envs/__bwameth@0.2.0/bin/bwameth.py -t 1 --reference index_dir/genome.fa input_f.fastq input_r.fastq\"\n+@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.2\tCL:\"/usr/local/bin/bwameth.py -t 8 --reference index_dir/genome.fa input_f.fastq.gz input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bwa-meth\tVN:1.10\tCL:samtools view -u -\n+@PG\tID:samtools.1\tPN:samtools\tPP:samtools\tVN:1.10\tCL:samtools sort -@ 8 -T /galaxy/server/database/jobs_directory/000/33/tmp -O bam -o output.bam -\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t163\tchrREF\t26002\t60\t101M\t=\t26025\t124\tCAAAATATATCAATCAAAAAAACATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACA\tBBBFFFFFFFFFFIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIFIFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFBFFF\tNM:i:1\tMD:Z:50C50\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:GA\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t83\tchrREF\t26025\t60\t101M\t=\t26002\t-124\tATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACATAATTTCAAAAAAATCAAACACC\tB0\u0027\u0027B\u003c\u003c\u003c00FB7\u003c000\u0027BBB0B\u003c0FFFFFFFFFFFFFFFFFBFFB\u003c7FFIFFFBBB\u003cFFB\u003c\u003c7FFIFFFFFBBFF\u003cIIIIIFFBIIFFFFFFBFFFFBBB\tNM:i:1\tMD:Z:27C73\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:CT\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:6662:24968\t99\tchrREF\t26991\t60\t101M\t=\t26992\t102\tAGGTGTCGTTTAATTGTTTAGGTTTATGGTATTGTGTTTCGTTTTTTTGGTATTTGTGAGGGTAGAATTGTTTTTGGGTTTTAATTTTTTTAAGTATGGGA\tBBBFFFFFFFFFFIIBFFIFBBFFFFIB\u003cFFFI\u003cFBFFFFBFFIIIII77BFFIIBFBFBBBFBBFFFF\u003cBBFFF\u002707BBBBFFFFFFFFFFB0\u003cBF####\tNM:i:0\tMD:Z:101\tMC:Z:101M\tAS:i:101\tXS:i:19\tRG:Z:input_\tYC:Z:CT\tYD:Z:f\n" ], "status": "failure", "test_index": 0, "time_seconds": 60.30341124534607, "tool_id": "bwameth", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.02 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.80 seconds elapse.[bwa_index] Update BWT... 0.02 sec[bwa_index] Pack forward-only FASTA... 0.01 sec[bwa_index] Construct SA from BWT and Occ... 0.18 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 1.147 sec; CPU: 1.036 secconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing: index_dir/genome.fa.bwameth.c2t[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.007 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -[main] Real time: 0.107 sec; CPU: 0.038 secrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 8  index_dir/genome.fa.bwameth.c2t -
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="bwameth (Test #2)" name="1" time="52.202900409698486">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "referenceSource|reference": {   "id": "e289f59a8c125d4c",   "src": "hda"  },  "single_or_paired|input_mate1": {   "id": "1018f08cc05517d1",   "src": "hdca"  },  "single_or_paired|single_or_paired_opts": "paired_collection" }, "job": {  "command_line": "mkdir index_dir \u0026\u0026 ln -s \u0027/galaxy/server/database/objects/a/7/1/dataset_a71ff2aa-cfaf-4ff1-84e6-a5573c581d65.dat\u0027 index_dir/genome.fa \u0026\u0026 bwameth.py index index_dir/genome.fa \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/7/1/d/dataset_71d252cd-8eaa-48c9-bad8-8016a20e201c.dat\u0027 input_f.fastq.gz \u0026\u0026  ln -s \u0027/galaxy/server/database/objects/d/7/3/dataset_d73aae95-6d61-41df-be7e-b33259cbe133.dat\u0027 input_r.fastq.gz \u0026\u0026  bwameth.py -t \"${GALAXY_SLOTS:-4}\" --reference \u0027index_dir/genome.fa\u0027   input_f.fastq.gz input_r.fastq.gz | samtools view -u - | samtools sort -@ \"${GALAXY_SLOTS:-4}\" -T \"${TMPDIR:-.}\" -O bam -o output.bam -",  "command_version": "bwa-meth.py 0.2.2",  "create_time": "2023-07-29T18:40:21.934961",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-plkdq",  "galaxy_version": "23.0",  "history_id": "1018f08cc05517d1",  "id": "bd3d7f8a5c133678",  "inputs": {   "input_mate11": {    "id": "bd3d7f8a5c133678",    "src": "hda",    "uuid": "71d252cd-8eaa-48c9-bad8-8016a20e201c"   },   "input_mate12": {    "id": "1ad91689e67090ef",    "src": "hda",    "uuid": "d73aae95-6d61-41df-be7e-b33259cbe133"   },   "reference": {    "id": "b32a97bbc4720fca",    "src": "hda",    "uuid": "a71ff2aa-cfaf-4ff1-84e6-a5573c581d65"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "2.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "2 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690656038.0000000",    "title": "Job End Time",    "value": "2023-07-29 18:40:38"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690656036.0000000",    "title": "Job Start Time",    "value": "2023-07-29 18:40:36"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "25769.0000000",    "title": "Memory Allocated (MB)",    "value": "25769"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "8.0000000",    "title": "Cores Allocated",    "value": "8"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "f3fc1675061766bf",    "src": "hda",    "uuid": "ccd65c59-28f4-4813-be9f-004bc43276c3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "readGroup": "\"\"",   "referenceSource": "{\"__current_case__\": 0, \"reference\": {\"values\": [{\"id\": 40, \"src\": \"hda\"}]}, \"source\": \"history\"}",   "single_or_paired": "{\"__current_case__\": 2, \"input_mate1\": {\"values\": [{\"id\": 1, \"src\": \"hdca\"}]}, \"single_or_paired_opts\": \"paired_collection\"}"  },  "state": "ok",  "stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.83 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.19 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.196 sec; CPU: 1.065 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.008 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.110 sec; CPU: 0.039 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/bwameth/bwameth/0.2.2",  "tool_stderr": "[bwa_index] Pack FASTA... 0.02 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=3600000, availableWord=4573648\n[bwt_gen] Finished constructing BWT in 5 iterations.\n[bwa_index] 0.83 seconds elapse.\n[bwa_index] Update BWT... 0.02 sec\n[bwa_index] Pack forward-only FASTA... 0.01 sec\n[bwa_index] Construct SA from BWT and Occ... 0.19 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t\n[main] Real time: 1.196 sec; CPU: 1.065 sec\nconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2t\nindexing: index_dir/genome.fa.bwameth.c2t\n[M::bwa_idx_load_from_disk] read 0 ALT contigs\nconverting reads in input_f.fastq.gz,input_r.fastq.gz\n[M::process] read 200 sequences (20200 bp)...\n[M::process] 0 single-end sequences; 200 paired-end sequences\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)\n[M::mem_pestat] mean and std.dev: (138.16, 39.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.008 real sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\\tID:input_\\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -\n[main] Real time: 0.110 sec; CPU: 0.039 sec\nrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R \u0027@RG\\tID:input_\\tSM:input_\u0027 -t 8  index_dir/genome.fa.bwameth.c2t -\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-29T18:40:49.477868",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/local_bam_converted_to_sam_s3s5mlna.sam v. /tmp/history_bam_converted_to_sam_bx6cm5v6.sam )\n--- local_file\n+++ history_data\n@@ -1,7 +1,9 @@\n-@HD\tVN:1.3\tSO:coordinate\n+@HD\tVN:1.6\tSO:coordinate\n @SQ\tSN:chrREF\tLN:900000\n @RG\tID:input_\tSM:input_\n-@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.0\tCL:\"/usr/users/ga002/soranzon/miniconda3/envs/__bwameth@0.2.0/bin/bwameth.py -t 1 --reference index_dir/genome.fa input_f.fastq input_r.fastq\"\n+@PG\tID:bwa-meth\tPN:bwa-meth\tVN:0.2.2\tCL:\"/usr/local/bin/bwameth.py -t 8 --reference index_dir/genome.fa input_f.fastq.gz input_r.fastq.gz\"\n+@PG\tID:samtools\tPN:samtools\tPP:bwa-meth\tVN:1.10\tCL:samtools view -u -\n+@PG\tID:samtools.1\tPN:samtools\tPP:samtools\tVN:1.10\tCL:samtools sort -@ 8 -T /galaxy/server/database/jobs_directory/000/38/tmp -O bam -o output.bam -\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t163\tchrREF\t26002\t60\t101M\t=\t26025\t124\tCAAAATATATCAATCAAAAAAACATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACA\tBBBFFFFFFFFFFIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIFIFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFBFFF\tNM:i:1\tMD:Z:50C50\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:GA\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:7442:8079\t83\tchrREF\t26025\t60\t101M\t=\t26002\t-124\tATCCAAAACCGAAACTCCAAACAACAAAAAAATAATAAAATACTACCCATAAAACCTAACCCTCAATATACCCCGACATAATTTCAAAAAAATCAAACACC\tB0\u0027\u0027B\u003c\u003c\u003c00FB7\u003c000\u0027BBB0B\u003c0FFFFFFFFFFFFFFFFFBFFB\u003c7FFIFFFBBB\u003cFFB\u003c\u003c7FFIFFFFFBBFF\u003cIIIIIFFBIIFFFFFFBFFFFBBB\tNM:i:1\tMD:Z:27C73\tMC:Z:101M\tAS:i:98\tXS:i:0\tRG:Z:input_\tYC:Z:CT\tYD:Z:r\n HISEQ:105:C2UE1ACXX:3:1101:6662:24968\t99\tchrREF\t26991\t60\t101M\t=\t26992\t102\tAGGTGTCGTTTAATTGTTTAGGTTTATGGTATTGTGTTTCGTTTTTTTGGTATTTGTGAGGGTAGAATTGTTTTTGGGTTTTAATTTTTTTAAGTATGGGA\tBBBFFFFFFFFFFIIBFFIFBBFFFFIB\u003cFFFI\u003cFBFFFFBFFIIIII77BFFIIBFBFBBBFBBFFFF\u003cBBFFF\u002707BBBBFFFFFFFFFFB0\u003cBF####\tNM:i:0\tMD:Z:101\tMC:Z:101M\tAS:i:101\tXS:i:19\tRG:Z:input_\tYC:Z:CT\tYD:Z:f\n" ], "status": "failure", "test_index": 1, "time_seconds": 52.202900409698486, "tool_id": "bwameth", "tool_version": "0.2.2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [bwa_index] Pack FASTA... 0.02 sec[bwa_index] Construct BWT for the packed sequence...[BWTIncCreate] textLength=3600000, availableWord=4573648[bwt_gen] Finished constructing BWT in 5 iterations.[bwa_index] 0.83 seconds elapse.[bwa_index] Update BWT... 0.02 sec[bwa_index] Pack forward-only FASTA... 0.01 sec[bwa_index] Construct SA from BWT and Occ... 0.19 sec[main] Version: 0.7.17-r1188[main] CMD: bwa index -a bwtsw index_dir/genome.fa.bwameth.c2t[main] Real time: 1.196 sec; CPU: 1.065 secconverting c2t in index_dir/genome.fa to index_dir/genome.fa.bwameth.c2tindexing: index_dir/genome.fa.bwameth.c2t[M::bwa_idx_load_from_disk] read 0 ALT contigsconverting reads in input_f.fastq.gz,input_r.fastq.gz[M::process] read 200 sequences (20200 bp)...[M::process] 0 single-end sequences; 200 paired-end sequences[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 97, 0, 0)[M::mem_pestat] skip orientation FF as there are not enough pairs[M::mem_pestat] analyzing insert size distribution for orientation FR...[M::mem_pestat] (25, 50, 75) percentile: (108, 141, 169)[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 291)[M::mem_pestat] mean and std.dev: (138.16, 39.31)[M::mem_pestat] low and high boundaries for proper pairs: (1, 352)[M::mem_pestat] skip orientation RF as there are not enough pairs[M::mem_pestat] skip orientation RR as there are not enough pairs[M::mem_process_seqs] Processed 200 reads in 0.029 CPU sec, 0.008 real sec[main] Version: 0.7.17-r1188[main] CMD: bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R @RG\tID:input_\tSM:input_ -t 8 index_dir/genome.fa.bwameth.c2t -[main] Real time: 0.110 sec; CPU: 0.039 secrunning: /usr/local/bin/python /usr/local/bin/bwameth.py c2t input_f.fastq.gz input_r.fastq.gz |bwa mem -T 40 -B 2 -L 10 -CM -U 100 -p -R '@RG\tID:input_\tSM:input_' -t 8  index_dir/genome.fa.bwameth.c2t -
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #1)" name="0" time="98.79349493980408">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "grouping": "2",  "header_in": true,  "header_out": true,  "ignore_case": false,  "in_file": {   "id": "1018f08cc05517d1",   "src": "hda"  },  "need_sort": true,  "operations_0|op_column": "3",  "operations_0|op_name": "sum",  "print_full_line": false }, "job": {  "command_line": "datamash --header-in --header-out --sort      --group \u00272\u0027 sum 3 \u003c /galaxy/server/database/objects/f/6/2/dataset_f62e936c-50f3-4c2a-af75-a68be4390665.dat \u003e \u0027/galaxy/server/database/objects/a/e/0/dataset_ae011ffc-4b7a-483b-8908-1ad211b5ac0d.dat\u0027",  "command_version": null,  "create_time": "2023-07-29T18:31:10.586925",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-4tcsk",  "galaxy_version": "23.0",  "history_id": "1018f08cc05517d1",  "id": "e4c5355a6787ee57",  "inputs": {   "in_file": {    "id": "1018f08cc05517d1",    "src": "hda",    "uuid": "f62e936c-50f3-4c2a-af75-a68be4390665"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_file": {    "id": "e4c5355a6787ee57",    "src": "hda",    "uuid": "ae011ffc-4b7a-483b-8908-1ad211b5ac0d"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "grouping": "\"2\"",   "header_in": "true",   "header_out": "true",   "ignore_case": "false",   "narm": "false",   "need_sort": "true",   "operations": "[{\"__index__\": 0, \"op_column\": \"3\", \"op_name\": \"sum\"}]",   "print_full_line": "false"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-29T18:32:00.082031",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/datamash_ops/datamash_ops/1.1.0+galaxy2, exit_code: None, stderr: ." ], "status": "failure", "test_index": 0, "time_seconds": 98.79349493980408, "tool_id": "datamash_ops", "tool_version": "1.1.0+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #2)" name="1" time="30.108033657073975">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #3)" name="2" time="31.127366542816162">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="datamash_ops (Test #4)" name="3" time="31.17095398902893">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #1)" name="0" time="65.56102108955383">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="deeptools_plot_pca (Test #2)" name="1" time="34.17790484428406">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="ivar_variants (Test #1)" name="0" time="40.236836194992065">
        
            
            <system-out><![CDATA[
            A GFF file containing the open reading frames (ORFs) has not been provided. Amino acid translation will not be done.A reference sequence has not been supplied. Amino acid translation will not be done.
            ]]></system-out>
            <system-err><![CDATA[
            [mpileup] 1 samples in 1 input files[mpileup] Max depth set to maximum value (2147483647)
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #1)" name="0" time="39.210338830947876">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "reads": {   "id": "861e942066731e67",   "src": "hda"  },  "reference_source|ref": {   "id": "1f80416a572927bd",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/5/6/4/dataset_5646c67b-f82b-4d6b-9741-9dc8cfdd20c0.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b    \u0027/galaxy/server/database/objects/0/f/f/dataset_0ffe348e-0f61-49e6-8313-d47445f7678f.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/6/0/8/dataset_608f4e50-7693-4734-8fb5-ad4a0fe67d99.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-07-29T19:13:16.275527",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-bmxpd",  "galaxy_version": "23.0",  "history_id": "1018f08cc05517d1",  "id": "52855b2dbc059c80",  "inputs": {   "reads": {    "id": "861e942066731e67",    "src": "hda",    "uuid": "0ffe348e-0f61-49e6-8313-d47445f7678f"   },   "ref": {    "id": "1f80416a572927bd",    "src": "hda",    "uuid": "5646c67b-f82b-4d6b-9741-9dc8cfdd20c0"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690658004.0000000",    "title": "Job End Time",    "value": "2023-07-29 19:13:24"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690658003.0000000",    "title": "Job Start Time",    "value": "2023-07-29 19:13:23"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "2971ee166e0543ac",    "src": "hda",    "uuid": "608f4e50-7693-4734-8fb5-ad4a0fe67d99"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 204, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-29T19:13:34.601397",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpi7idb8okalnqual-out1.bam v. /tmp/tmp7wpdvj7talnqual-out1.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 0, "time_seconds": 39.210338830947876, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #2)" name="1" time="34.06441307067871">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-B",  "reads": {   "id": "10a99dea4ca8255e",   "src": "hda"  },  "reference_source|ref": {   "id": "2d9d7bfeb7334d51",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/c/8/4/dataset_c847b56a-6a44-43e9-b0d3-9c515e84bcaf.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -B  \u0027/galaxy/server/database/objects/1/0/5/dataset_1055b0dc-84d9-41bd-8bec-c93c16dab306.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/7/f/b/dataset_7fbbf001-4c5d-4ece-aac4-d5942532e4ba.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-07-29T19:13:55.519112",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-5rfq6",  "galaxy_version": "23.0",  "history_id": "1018f08cc05517d1",  "id": "0723c9e420e01d31",  "inputs": {   "reads": {    "id": "10a99dea4ca8255e",    "src": "hda",    "uuid": "1055b0dc-84d9-41bd-8bec-c93c16dab306"   },   "ref": {    "id": "2d9d7bfeb7334d51",    "src": "hda",    "uuid": "c847b56a-6a44-43e9-b0d3-9c515e84bcaf"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690658038.0000000",    "title": "Job End Time",    "value": "2023-07-29 19:13:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690658037.0000000",    "title": "Job Start Time",    "value": "2023-07-29 19:13:57"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "b3be8591f3ed82c1",    "src": "hda",    "uuid": "7fbbf001-4c5d-4ece-aac4-d5942532e4ba"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 0, \"alnquals_to_use\": \"-B\", \"extended_baq\": \"\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 207, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-29T19:14:08.623187",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpxxaqxp7salnqual-out2.bam v. /tmp/tmpelb8uq9oalnqual-out2.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 1, "time_seconds": 34.06441307067871, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #3)" name="2" time="35.19059228897095">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|alnquals_to_use": "-A",  "reads": {   "id": "09722739df5af2fc",   "src": "hda"  },  "reference_source|ref": {   "id": "b01e59a67e073df2",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/9/3/4/dataset_934624bd-0f45-4489-abdd-611635457093.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b  -A  \u0027/galaxy/server/database/objects/a/6/a/dataset_a6a6c567-beca-4125-92ae-c3ea1d3a6e39.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/c/f/e/dataset_cfeb90e1-b2b1-4e4f-84cc-928190f1c05c.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-07-29T19:14:30.978640",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-dtkqf",  "galaxy_version": "23.0",  "history_id": "1018f08cc05517d1",  "id": "ba164df7d54bf34e",  "inputs": {   "reads": {    "id": "09722739df5af2fc",    "src": "hda",    "uuid": "a6a6c567-beca-4125-92ae-c3ea1d3a6e39"   },   "ref": {    "id": "b01e59a67e073df2",    "src": "hda",    "uuid": "934624bd-0f45-4489-abdd-611635457093"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690658073.0000000",    "title": "Job End Time",    "value": "2023-07-29 19:14:33"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690658072.0000000",    "title": "Job Start Time",    "value": "2023-07-29 19:14:32"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "3c4b82c8dbfb2ff1",    "src": "hda",    "uuid": "cfeb90e1-b2b1-4e4f-84cc-928190f1c05c"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 2, \"alnquals_to_use\": \"-A\", \"extended_baq\": true}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 210, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-29T19:14:43.972378",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpocrvw2l3alnqual-out3.bam v. /tmp/tmpt6kp7uwzalnqual-out3.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 2, "time_seconds": 35.19059228897095, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #4)" name="3" time="34.90986514091492">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "alnqual_choice|extended_baq": false,  "reads": {   "id": "c74ae57916381c6f",   "src": "hda"  },  "reference_source|ref": {   "id": "40cfb52979d8ce92",   "src": "hda"  },  "reference_source|ref_selector": "history" }, "job": {  "command_line": "ln -s \u0027/galaxy/server/database/objects/b/4/f/dataset_b4f53a19-ed54-4023-8017-26865a525d73.dat\u0027 reference.fa \u0026\u0026 lofreq faidx reference.fa 2\u003e\u00261 || echo \"Error running samtools faidx for indexing fasta reference for lofreq\" \u003e\u00262 \u0026\u0026  lofreq alnqual -b -e   \u0027/galaxy/server/database/objects/b/5/c/dataset_b5cd984f-6564-4335-a814-7703aeecb07c.dat\u0027 \u0027reference.fa\u0027 \u003e \u0027/galaxy/server/database/objects/4/1/2/dataset_4121ddb1-50d0-433a-80b9-a9849d123a79.dat\u0027",  "command_version": "2.1.5",  "create_time": "2023-07-29T19:15:04.697152",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-wtj4x",  "galaxy_version": "23.0",  "history_id": "1018f08cc05517d1",  "id": "4076e3996adc2ba9",  "inputs": {   "reads": {    "id": "c74ae57916381c6f",    "src": "hda",    "uuid": "b5cd984f-6564-4335-a814-7703aeecb07c"   },   "ref": {    "id": "40cfb52979d8ce92",    "src": "hda",    "uuid": "b4f53a19-ed54-4023-8017-26865a525d73"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "1 second"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1690658108.0000000",    "title": "Job End Time",    "value": "2023-07-29 19:15:08"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1690658107.0000000",    "title": "Job Start Time",    "value": "2023-07-29 19:15:07"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output": {    "id": "2420d031e972ec32",    "src": "hda",    "uuid": "4121ddb1-50d0-433a-80b9-a9849d123a79"   }  },  "params": {   "__input_ext": "\"input\"",   "alnqual_choice": "{\"__current_case__\": 1, \"alnquals_to_use\": \"\", \"extended_baq\": false}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "recompute_all": "false",   "reference_source": "{\"__current_case__\": 1, \"ref\": {\"values\": [{\"id\": 213, \"src\": \"hda\"}]}, \"ref_selector\": \"history\"}"  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_alnqual/lofreq_alnqual/2.1.5+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-07-29T19:15:19.095179",  "user_email": "tests@fake.org" }, "output_problems": [  "Output output:  different than expected, difference (using diff):\n( /tmp/tmpsur2ubrjalnqual-out4.bam v. /tmp/tmptlzdmo5ealnqual-out4.bam )\nBinary data detected, not displaying diff" ], "status": "failure", "test_index": 3, "time_seconds": 34.90986514091492, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="lofreq_alnqual (Test #5)" name="4" time="11.97395396232605">
        
            <error type="error" message="Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: ."><![CDATA[
                { "execution_problem": "Input staging problem: Job in error state.. tool_id: upload1, exit_code: None, stderr: .", "status": "error", "test_index": 4, "time_seconds": 11.97395396232605, "tool_id": "lofreq_alnqual", "tool_version": "2.1.5+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #1)" name="0" time="65.17483305931091">
        
            
            <system-out><![CDATA[
            [18:41:35 - Predict] Processing region(s): ref:0-30[18:41:35 - DataStore] Writing sample registry.[18:41:35 - Predict] Setting tensorflow threads to 1.2023-07-29 18:41:35.874086: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA2023-07-29 18:41:35.878900: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2200150000 Hz2023-07-29 18:41:35.881788: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55de04cce350 executing computations on platform Host. Devices:2023-07-29 18:41:35.881889: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>[18:41:35 - Predict] Processing 1 long region(s) with batching.[18:41:35 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_prom_high_g360_model.hdf5.[18:41:35 - ModelLoad] Building model with cudnn optimization: False2023-07-29 18:41:36.965489: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.[18:41:37 - DLoader] Initializing data loader[18:41:37 - DLoader] Submitting ref:0-30.[18:41:37 - PWorker] Running inference for 0.0M draft bases.[18:41:37 - Sampler] Initializing sampler for consensus of region ref:0-30.[18:41:37 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[18:41:37 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:41:37 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[18:41:37 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:41:37 - Sampler] Took 0.00s to make features.[18:41:37 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 10000, quarantining.[18:41:37 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 10000, quarantining.[18:41:37 - DataStore] Writing sample registry.[18:41:37 - PWorker] All done, 2 remainder regions.[18:41:37 - Predict] Processing 2 short region(s).[18:41:37 - ModelLoad] Building model with cudnn optimization: False[18:41:38 - DLoader] Initializing data loader[18:41:38 - DLoader] Submitting ref:0-10.[18:41:38 - PWorker] Running inference for 0.0M draft bases.[18:41:38 - Sampler] Initializing sampler for consensus of region ref:0-10.[18:41:38 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:41:38 - Sampler] Took 0.00s to make features.[18:41:38 - Sampler] Pileup for ref:0.0-9.0 is of width 10[18:41:38 - DataStore] Writing sample registry.[18:41:38 - PWorker] All done, 0 remainder regions.[18:41:38 - DLoader] Initializing data loader[18:41:38 - DLoader] Submitting ref:14-30.[18:41:38 - PWorker] Running inference for 0.0M draft bases.[18:41:38 - Sampler] Initializing sampler for consensus of region ref:14-30.[18:41:38 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:41:38 - Sampler] Took 0.00s to make features.[18:41:38 - Sampler] Pileup for ref:14.0-29.0 is of width 16[18:41:38 - DataStore] Writing sample registry.[18:41:38 - PWorker] All done, 0 remainder regions.[18:41:38 - Predict] Finished processing all regions.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="medaka_consensus (Test #2)" name="1" time="38.123032093048096">
        
            
            <system-out><![CDATA[
            [18:42:20 - Predict] Processing region(s): ref:0-30[18:42:20 - DataStore] Writing sample registry.[18:42:20 - Predict] Setting tensorflow threads to 1.2023-07-29 18:42:20.229274: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA2023-07-29 18:42:20.233915: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2200150000 Hz2023-07-29 18:42:20.235259: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5643df557f90 executing computations on platform Host. Devices:2023-07-29 18:42:20.235300: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>[18:42:20 - Predict] Processing 1 long region(s) with batching.[18:42:20 - Predict] Using model: /usr/local/lib/python3.6/site-packages/medaka/data/r941_min_fast_g303_model.hdf5.[18:42:20 - ModelLoad] Building model with cudnn optimization: False2023-07-29 18:42:21.273983: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.[18:42:21 - DLoader] Initializing data loader[18:42:21 - DLoader] Submitting ref:0-30.[18:42:21 - PWorker] Running inference for 0.0M draft bases.[18:42:21 - Sampler] Initializing sampler for consensus of region ref:0-30.[18:42:21 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 0-9.[18:42:21 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:42:21 - Feature] Pileup counts do not span requested region, requested ref:0-30, received 14-29.[18:42:21 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:42:21 - Sampler] Took 0.00s to make features.[18:42:21 - Sampler] Region ref:0.0-9.0 (10 positions) is smaller than inference chunk length 9999, quarantining.[18:42:21 - Sampler] Region ref:14.0-29.0 (16 positions) is smaller than inference chunk length 9999, quarantining.[18:42:21 - DataStore] Writing sample registry.[18:42:21 - PWorker] All done, 2 remainder regions.[18:42:21 - Predict] Processing 2 short region(s).[18:42:21 - ModelLoad] Building model with cudnn optimization: False[18:42:22 - DLoader] Initializing data loader[18:42:22 - DLoader] Submitting ref:0-10.[18:42:22 - PWorker] Running inference for 0.0M draft bases.[18:42:22 - Sampler] Initializing sampler for consensus of region ref:0-10.[18:42:22 - Feature] Processed ref:0.0-9.0 (median depth 1.0)[18:42:22 - Sampler] Took 0.00s to make features.[18:42:22 - Sampler] Pileup for ref:0.0-9.0 is of width 10[18:42:23 - DataStore] Writing sample registry.[18:42:23 - PWorker] All done, 0 remainder regions.[18:42:23 - DLoader] Initializing data loader[18:42:23 - DLoader] Submitting ref:14-30.[18:42:23 - PWorker] Running inference for 0.0M draft bases.[18:42:23 - Sampler] Initializing sampler for consensus of region ref:14-30.[18:42:23 - Feature] Processed ref:14.0-29.0 (median depth 1.0)[18:42:23 - Sampler] Took 0.00s to make features.[18:42:23 - Sampler] Pileup for ref:14.0-29.0 is of width 16[18:42:23 - DataStore] Writing sample registry.[18:42:23 - PWorker] All done, 0 remainder regions.[18:42:23 - Predict] Finished processing all regions.[18:42:23 - Predict] Validating and finalising output data.[18:42:23 - DataStore] Writing sample registry.
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #1)" name="0" time="68.06235766410828">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="poretools_nucdist (Test #2)" name="1" time="33.48706340789795">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #1)" name="0" time="34.013275146484375">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #2)" name="1" time="32.59515118598938">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #11)" name="10" time="37.40560340881348">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #12)" name="11" time="35.38022756576538">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #13)" name="12" time="36.152671098709106">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #14)" name="13" time="37.62623047828674">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #15)" name="14" time="34.70143365859985">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #16)" name="15" time="32.52861189842224">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #17)" name="16" time="34.32377910614014">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #18)" name="17" time="37.16214847564697">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #3)" name="2" time="33.9662880897522">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #4)" name="3" time="31.499547958374023">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #5)" name="4" time="34.95051455497742">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 400 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #6)" name="5" time="34.54104018211365">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 396 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #7)" name="6" time="33.38048958778381">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #8)" name="7" time="34.34227967262268">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 0 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #9)" name="8" time="33.90775728225708">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 1 singletons[M::bam2fq_mainloop] processed 37 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_fastx (Test #10)" name="9" time="34.645139932632446">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            [M::bam2fq_mainloop] discarded 2 singletons[M::bam2fq_mainloop] processed 36 reads
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #1)" name="0" time="36.729299783706665">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #2)" name="1" time="31.642349243164062">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="samtools_slice_bam (Test #3)" name="2" time="31.073283433914185">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.309126615524292">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.309126615524292, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scanpy_run_umap (Test #1)" name="0" time="0.30800604820251465">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.30800604820251465, "tool_id": "scanpy_run_umap", "tool_version": "1.8.1+3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="78.50937867164612">
        
            
            <system-out><![CDATA[
            [1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minLoading required package: S4VectorsAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: scuttleLoading required package: ggplot2Loading required package: rhdf5Loading required package: BiocIOWarning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="scater_create_qcmetric_ready_sce (Test #1)" name="0" time="48.54958200454712">
        
            
            <system-out><![CDATA[
            [1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minLoading required package: S4VectorsAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: scuttleLoading required package: ggplot2Loading required package: rhdf5Loading required package: BiocIOWarning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #1)" name="0" time="51.5047721862793">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #2)" name="1" time="32.34859752655029">
        
            
            <system-out><![CDATA[
            Using 1 IDs from column 1 in tabular fileGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some of your identifiers had white space in them, using first word only. e.g.:gi|16127999|ref|NP_414546.1| hypothetical protein b0005 [Escherichia coli str. K-12 substr. MG1655]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #3)" name="2" time="32.58976221084595">
        
            
            <system-out><![CDATA[
            Have 1 unique identifiers from listGenerating matching FASTA file1 with and 9 without specified IDs
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #4)" name="3" time="33.01142740249634">
        
            
            <system-out><![CDATA[
            Have 2 unique identifiers from listGenerating matching FASTQ file
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #5)" name="4" time="34.03591442108154">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/a/8/8/dataset_a88e9c71-1f28-4e93-b16f-4c641ff7f2f4.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03WTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04WTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04WTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05WTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05WTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07WTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08WTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09WTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09WTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10WTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10WTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11WTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11WTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12WTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12WTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14WTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14WTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15WTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16WTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16WTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17WTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18WTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18WTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20WTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20WTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21WTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22WTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22WTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23WTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24WTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01WTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01WTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02WTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02WTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03WTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04WTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06WTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07WTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07WTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08WTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09WTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10WTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10WTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11WTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12WTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12WTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13WTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14WTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15WTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16WTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16WTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17WTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17WTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18WTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20WTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20WTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21WTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21WTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22WTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23WTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23WTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01WTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04WTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04WTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05WTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05WTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06WTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06WTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07WTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08WTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08WTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09WTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09WTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10WTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10WTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11WTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11WTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12WTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12WTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13WTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14WTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14WTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15WTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15WTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16WTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17WTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17WTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19WTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20WTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20WTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22WTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22WTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24WTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01WTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01WTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02WTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02WTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03WTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04WTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06WTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07WTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08WTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08WTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09WTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09WTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10WTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11WTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12WTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13WTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14WTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14WTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15WTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15WTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16WTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16WTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17WTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17WTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18WTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19WTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19WTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20WTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20WTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21WTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22WTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23WTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24WTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24WTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01WTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01WTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02WTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03WTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03WTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04WTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04WTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05WTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06WTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06WTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07WTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07WTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08WTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08WTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09WTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10WTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10WTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11WTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12WTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12WTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13WTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13WTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14WTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14WTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15WTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15WTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16WTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17WTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17WTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18WTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18WTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21WTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21WTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22WTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22WTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23WTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23WTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24WTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24WTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01WTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01WTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02WTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03WTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04WTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05WTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06WTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08WTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09WTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09WTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10WTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10WTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11WTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12WTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14WTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14WTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15WTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16WTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17WTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18WTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18WTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19WTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19WTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20WTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20WTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21WTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21WTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22WTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22WTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23WTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24WTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01WTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01WTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="seq_filter_by_id (Test #6)" name="5" time="34.986823081970215">
        
            
            <system-out><![CDATA[
            Using 128 IDs from column 1 in tabular fileGenerating two FASTQ files/galaxy/server/database/objects/a/9/4/dataset_a94c0be6-f406-4c31-967e-d27e7a58c079.datWTSI_1055_1a03.p1kpIBF bases 1 to 312 --> WTSI_1055_1a03.p1kpIBFWTSI_1055_1a04.p1kpIBF bases 1 to 186 --> WTSI_1055_1a04.p1kpIBFWTSI_1055_1a04.q1kpIBR bases 1 to 359 --> WTSI_1055_1a04.q1kpIBRWTSI_1055_1a05.p1kpIBF bases 1 to 642 --> WTSI_1055_1a05.p1kpIBFWTSI_1055_1a05.q1kpIBR bases 1 to 219 --> WTSI_1055_1a05.q1kpIBRWTSI_1055_1a07.p1kpIBF bases 1 to 574 --> WTSI_1055_1a07.p1kpIBFWTSI_1055_1a08.p1kpIBF bases 1 to 397 --> WTSI_1055_1a08.p1kpIBFWTSI_1055_1a09.p1kpIBF bases 1 to 497 --> WTSI_1055_1a09.p1kpIBFWTSI_1055_1a09.q1kpIBR bases 1 to 558 --> WTSI_1055_1a09.q1kpIBRWTSI_1055_1a10.p1kpIBF bases 1 to 512 --> WTSI_1055_1a10.p1kpIBFWTSI_1055_1a10.q1kpIBR bases 1 to 431 --> WTSI_1055_1a10.q1kpIBRWTSI_1055_1a11.p1kpIBF bases 1 to 307 --> WTSI_1055_1a11.p1kpIBFWTSI_1055_1a11.q1kpIBR bases 1 to 301 --> WTSI_1055_1a11.q1kpIBRWTSI_1055_1a12.p1kpIBF bases 1 to 414 --> WTSI_1055_1a12.p1kpIBFWTSI_1055_1a12.q1kpIBR bases 1 to 505 --> WTSI_1055_1a12.q1kpIBRWTSI_1055_1a14.p1kpIBF bases 1 to 661 --> WTSI_1055_1a14.p1kpIBFWTSI_1055_1a14.q1kpIBR bases 1 to 497 --> WTSI_1055_1a14.q1kpIBRWTSI_1055_1a15.p1kpIBF bases 1 to 312 --> WTSI_1055_1a15.p1kpIBFWTSI_1055_1a16.p1kpIBF bases 1 to 314 --> WTSI_1055_1a16.p1kpIBFWTSI_1055_1a16.q1kpIBR bases 1 to 524 --> WTSI_1055_1a16.q1kpIBRWTSI_1055_1a17.p1kpIBF bases 1 to 201 --> WTSI_1055_1a17.p1kpIBFWTSI_1055_1a18.p1kpIBF bases 1 to 171 --> WTSI_1055_1a18.p1kpIBFWTSI_1055_1a18.q1kpIBR bases 1 to 413 --> WTSI_1055_1a18.q1kpIBRWTSI_1055_1a20.p1kpIBF bases 1 to 372 --> WTSI_1055_1a20.p1kpIBFWTSI_1055_1a20.q1kpIBR bases 1 to 439 --> WTSI_1055_1a20.q1kpIBRWTSI_1055_1a21.q1kpIBR bases 1 to 114 --> WTSI_1055_1a21.q1kpIBRWTSI_1055_1a22.p1kpIBF bases 1 to 374 --> WTSI_1055_1a22.p1kpIBFWTSI_1055_1a22.q1kpIBR bases 1 to 394 --> WTSI_1055_1a22.q1kpIBRWTSI_1055_1a23.p1kpIBF bases 1 to 400 --> WTSI_1055_1a23.p1kpIBFWTSI_1055_1a24.q1kpIBR bases 1 to 272 --> WTSI_1055_1a24.q1kpIBRWTSI_1055_1b01.p1kpIBF bases 1 to 392 --> WTSI_1055_1b01.p1kpIBFWTSI_1055_1b01.q1kpIBR bases 1 to 465 --> WTSI_1055_1b01.q1kpIBRWTSI_1055_1b02.p1kpIBF bases 1 to 360 --> WTSI_1055_1b02.p1kpIBFWTSI_1055_1b02.q1kpIBR bases 1 to 428 --> WTSI_1055_1b02.q1kpIBRWTSI_1055_1b03.q1kpIBR bases 1 to 253 --> WTSI_1055_1b03.q1kpIBRWTSI_1055_1b04.p1kpIBF bases 1 to 127 --> WTSI_1055_1b04.p1kpIBFWTSI_1055_1b06.p1kpIBF bases 1 to 297 --> WTSI_1055_1b06.p1kpIBFWTSI_1055_1b07.p1kpIBF bases 1 to 280 --> WTSI_1055_1b07.p1kpIBFWTSI_1055_1b07.q1kpIBR bases 1 to 357 --> WTSI_1055_1b07.q1kpIBRWTSI_1055_1b08.p1kpIBF bases 1 to 265 --> WTSI_1055_1b08.p1kpIBFWTSI_1055_1b09.p1kpIBF bases 1 to 298 --> WTSI_1055_1b09.p1kpIBFWTSI_1055_1b10.p1kpIBF bases 1 to 324 --> WTSI_1055_1b10.p1kpIBFWTSI_1055_1b10.q1kpIBR bases 1 to 339 --> WTSI_1055_1b10.q1kpIBRWTSI_1055_1b11.q1kpIBR bases 1 to 123 --> WTSI_1055_1b11.q1kpIBRWTSI_1055_1b12.p1kpIBF bases 1 to 139 --> WTSI_1055_1b12.p1kpIBFWTSI_1055_1b12.q1kpIBR bases 1 to 375 --> WTSI_1055_1b12.q1kpIBRWTSI_1055_1b13.p1kpIBF bases 1 to 358 --> WTSI_1055_1b13.p1kpIBFWTSI_1055_1b14.p1kpIBF bases 1 to 225 --> WTSI_1055_1b14.p1kpIBFWTSI_1055_1b15.q1kpIBR bases 1 to 312 --> WTSI_1055_1b15.q1kpIBRWTSI_1055_1b16.p1kpIBF bases 1 to 217 --> WTSI_1055_1b16.p1kpIBFWTSI_1055_1b16.q1kpIBR bases 1 to 260 --> WTSI_1055_1b16.q1kpIBRWTSI_1055_1b17.p1kpIBF bases 1 to 309 --> WTSI_1055_1b17.p1kpIBFWTSI_1055_1b17.q1kpIBR bases 1 to 330 --> WTSI_1055_1b17.q1kpIBRWTSI_1055_1b18.p1kpIBF bases 1 to 264 --> WTSI_1055_1b18.p1kpIBFWTSI_1055_1b20.p1kpIBF bases 1 to 259 --> WTSI_1055_1b20.p1kpIBFWTSI_1055_1b20.q1kpIBR bases 1 to 321 --> WTSI_1055_1b20.q1kpIBRWTSI_1055_1b21.p1kpIBF bases 1 to 378 --> WTSI_1055_1b21.p1kpIBFWTSI_1055_1b21.q1kpIBR bases 1 to 376 --> WTSI_1055_1b21.q1kpIBRWTSI_1055_1b22.p1kpIBF bases 1 to 135 --> WTSI_1055_1b22.p1kpIBFWTSI_1055_1b23.p1kpIBF bases 1 to 300 --> WTSI_1055_1b23.p1kpIBFWTSI_1055_1b23.q1kpIBR bases 1 to 536 --> WTSI_1055_1b23.q1kpIBRWTSI_1055_1c01.q1kpIBR bases 1 to 620 --> WTSI_1055_1c01.q1kpIBRWTSI_1055_1c04.p1kpIBF bases 1 to 321 --> WTSI_1055_1c04.p1kpIBFWTSI_1055_1c04.q1kpIBR bases 1 to 491 --> WTSI_1055_1c04.q1kpIBRWTSI_1055_1c05.p1kpIBF bases 1 to 337 --> WTSI_1055_1c05.p1kpIBFWTSI_1055_1c05.q1kpIBR bases 1 to 442 --> WTSI_1055_1c05.q1kpIBRWTSI_1055_1c06.p1kpIBF bases 1 to 372 --> WTSI_1055_1c06.p1kpIBFWTSI_1055_1c06.q1kpIBR bases 1 to 485 --> WTSI_1055_1c06.q1kpIBRWTSI_1055_1c07.p1kpIBF bases 1 to 273 --> WTSI_1055_1c07.p1kpIBFWTSI_1055_1c08.p1kpIBF bases 1 to 414 --> WTSI_1055_1c08.p1kpIBFWTSI_1055_1c08.q1kpIBR bases 1 to 362 --> WTSI_1055_1c08.q1kpIBRWTSI_1055_1c09.p1kpIBF bases 1 to 452 --> WTSI_1055_1c09.p1kpIBFWTSI_1055_1c09.q1kpIBR bases 1 to 543 --> WTSI_1055_1c09.q1kpIBRWTSI_1055_1c10.p1kpIBF bases 1 to 428 --> WTSI_1055_1c10.p1kpIBFWTSI_1055_1c10.q1kpIBR bases 1 to 452 --> WTSI_1055_1c10.q1kpIBRWTSI_1055_1c11.p1kpIBF bases 1 to 494 --> WTSI_1055_1c11.p1kpIBFWTSI_1055_1c11.q1kpIBR bases 1 to 379 --> WTSI_1055_1c11.q1kpIBRWTSI_1055_1c12.p1kpIBF bases 1 to 280 --> WTSI_1055_1c12.p1kpIBFWTSI_1055_1c12.q1kpIBR bases 1 to 444 --> WTSI_1055_1c12.q1kpIBRWTSI_1055_1c13.p1kpIBF bases 1 to 308 --> WTSI_1055_1c13.p1kpIBFWTSI_1055_1c14.p1kpIBF bases 1 to 400 --> WTSI_1055_1c14.p1kpIBFWTSI_1055_1c14.q1kpIBR bases 1 to 323 --> WTSI_1055_1c14.q1kpIBRWTSI_1055_1c15.p1kpIBF bases 1 to 460 --> WTSI_1055_1c15.p1kpIBFWTSI_1055_1c15.q1kpIBR bases 1 to 643 --> WTSI_1055_1c15.q1kpIBRWTSI_1055_1c16.p1kpIBF bases 1 to 301 --> WTSI_1055_1c16.p1kpIBFWTSI_1055_1c17.p1kpIBF bases 1 to 436 --> WTSI_1055_1c17.p1kpIBFWTSI_1055_1c17.q1kpIBR bases 1 to 485 --> WTSI_1055_1c17.q1kpIBRWTSI_1055_1c19.p1kpIBF bases 1 to 348 --> WTSI_1055_1c19.p1kpIBFWTSI_1055_1c20.p1kpIBF bases 1 to 375 --> WTSI_1055_1c20.p1kpIBFWTSI_1055_1c20.q1kpIBR bases 1 to 298 --> WTSI_1055_1c20.q1kpIBRWTSI_1055_1c22.p1kpIBF bases 1 to 141 --> WTSI_1055_1c22.p1kpIBFWTSI_1055_1c22.q1kpIBR bases 1 to 360 --> WTSI_1055_1c22.q1kpIBRWTSI_1055_1c24.p1kpIBF bases 1 to 346 --> WTSI_1055_1c24.p1kpIBFWTSI_1055_1d01.p1kpIBF bases 1 to 391 --> WTSI_1055_1d01.p1kpIBFWTSI_1055_1d01.q1kpIBR bases 86 to 449 --> WTSI_1055_1d01.q1kpIBRWTSI_1055_1d02.p1kpIBF bases 1 to 335 --> WTSI_1055_1d02.p1kpIBFWTSI_1055_1d02.q1kpIBR bases 1 to 510 --> WTSI_1055_1d02.q1kpIBRWTSI_1055_1d03.p1kpIBF bases 1 to 191 --> WTSI_1055_1d03.p1kpIBFWTSI_1055_1d04.p1kpIBF bases 1 to 233 --> WTSI_1055_1d04.p1kpIBFWTSI_1055_1d06.p1kpIBF bases 1 to 233 --> WTSI_1055_1d06.p1kpIBFWTSI_1055_1d07.p1kpIBF bases 1 to 350 --> WTSI_1055_1d07.p1kpIBFWTSI_1055_1d08.p1kpIBF bases 1 to 391 --> WTSI_1055_1d08.p1kpIBFWTSI_1055_1d08.q1kpIBR bases 1 to 225 --> WTSI_1055_1d08.q1kpIBRWTSI_1055_1d09.p1kpIBF bases 1 to 415 --> WTSI_1055_1d09.p1kpIBFWTSI_1055_1d09.q1kpIBR bases 1 to 332 --> WTSI_1055_1d09.q1kpIBRWTSI_1055_1d10.p1kpIBF bases 1 to 295 --> WTSI_1055_1d10.p1kpIBFWTSI_1055_1d11.p1kpIBF bases 1 to 335 --> WTSI_1055_1d11.p1kpIBFWTSI_1055_1d12.p1kpIBF bases 1 to 225 --> WTSI_1055_1d12.p1kpIBFWTSI_1055_1d13.p1kpIBF bases 1 to 286 --> WTSI_1055_1d13.p1kpIBFWTSI_1055_1d14.p1kpIBF bases 1 to 318 --> WTSI_1055_1d14.p1kpIBFWTSI_1055_1d14.q1kpIBR bases 1 to 291 --> WTSI_1055_1d14.q1kpIBRWTSI_1055_1d15.p1kpIBF bases 1 to 338 --> WTSI_1055_1d15.p1kpIBFWTSI_1055_1d15.q1kpIBR bases 1 to 347 --> WTSI_1055_1d15.q1kpIBRWTSI_1055_1d16.p1kpIBF bases 1 to 459 --> WTSI_1055_1d16.p1kpIBFWTSI_1055_1d16.q1kpIBR bases 1 to 344 --> WTSI_1055_1d16.q1kpIBRWTSI_1055_1d17.p1kpIBF bases 1 to 317 --> WTSI_1055_1d17.p1kpIBFWTSI_1055_1d17.q1kpIBR bases 1 to 371 --> WTSI_1055_1d17.q1kpIBRWTSI_1055_1d18.p1kpIBF bases 1 to 363 --> WTSI_1055_1d18.p1kpIBFWTSI_1055_1d19.p1kpIBF bases 1 to 298 --> WTSI_1055_1d19.p1kpIBFWTSI_1055_1d19.q1kpIBR bases 1 to 369 --> WTSI_1055_1d19.q1kpIBRWTSI_1055_1d20.p1kpIBF bases 1 to 370 --> WTSI_1055_1d20.p1kpIBFWTSI_1055_1d20.q1kpIBR bases 1 to 403 --> WTSI_1055_1d20.q1kpIBRWTSI_1055_1d21.p1kpIBF bases 1 to 342 --> WTSI_1055_1d21.p1kpIBFWTSI_1055_1d22.p1kpIBF bases 1 to 360 --> WTSI_1055_1d22.p1kpIBFWTSI_1055_1d23.p1kpIBF bases 1 to 278 --> WTSI_1055_1d23.p1kpIBFWTSI_1055_1d24.p1kpIBF bases 1 to 219 --> WTSI_1055_1d24.p1kpIBFWTSI_1055_1d24.q1kpIBR bases 1 to 503 --> WTSI_1055_1d24.q1kpIBRWTSI_1055_1e01.p1kpIBF bases 1 to 258 --> WTSI_1055_1e01.p1kpIBFWTSI_1055_1e01.q1kpIBR bases 1 to 564 --> WTSI_1055_1e01.q1kpIBRWTSI_1055_1e02.p1kpIBF bases 1 to 385 --> WTSI_1055_1e02.p1kpIBFWTSI_1055_1e03.p1kpIBF bases 1 to 516 --> WTSI_1055_1e03.p1kpIBFWTSI_1055_1e03.q1kpIBR bases 1 to 472 --> WTSI_1055_1e03.q1kpIBRWTSI_1055_1e04.p1kpIBF bases 1 to 417 --> WTSI_1055_1e04.p1kpIBFWTSI_1055_1e04.q1kpIBR bases 1 to 462 --> WTSI_1055_1e04.q1kpIBRWTSI_1055_1e05.p1kpIBF bases 1 to 312 --> WTSI_1055_1e05.p1kpIBFWTSI_1055_1e06.p1kpIBF bases 1 to 368 --> WTSI_1055_1e06.p1kpIBFWTSI_1055_1e06.q1kpIBR bases 1 to 374 --> WTSI_1055_1e06.q1kpIBRWTSI_1055_1e07.p1kpIBF bases 1 to 248 --> WTSI_1055_1e07.p1kpIBFWTSI_1055_1e07.q1kpIBR bases 1 to 358 --> WTSI_1055_1e07.q1kpIBRWTSI_1055_1e08.p1kpIBF bases 1 to 395 --> WTSI_1055_1e08.p1kpIBFWTSI_1055_1e08.q1kpIBR bases 1 to 467 --> WTSI_1055_1e08.q1kpIBRWTSI_1055_1e09.p1kpIBF bases 1 to 612 --> WTSI_1055_1e09.p1kpIBFWTSI_1055_1e10.p1kpIBF bases 1 to 396 --> WTSI_1055_1e10.p1kpIBFWTSI_1055_1e10.q1kpIBR bases 1 to 492 --> WTSI_1055_1e10.q1kpIBRWTSI_1055_1e11.p1kpIBF bases 1 to 295 --> WTSI_1055_1e11.p1kpIBFWTSI_1055_1e12.p1kpIBF bases 1 to 356 --> WTSI_1055_1e12.p1kpIBFWTSI_1055_1e12.q1kpIBR bases 1 to 423 --> WTSI_1055_1e12.q1kpIBRWTSI_1055_1e13.p1kpIBF bases 1 to 330 --> WTSI_1055_1e13.p1kpIBFWTSI_1055_1e13.q1kpIBR bases 1 to 279 --> WTSI_1055_1e13.q1kpIBRWTSI_1055_1e14.p1kpIBF bases 1 to 357 --> WTSI_1055_1e14.p1kpIBFWTSI_1055_1e14.q1kpIBR bases 1 to 418 --> WTSI_1055_1e14.q1kpIBRWTSI_1055_1e15.p1kpIBF bases 1 to 353 --> WTSI_1055_1e15.p1kpIBFWTSI_1055_1e15.q1kpIBR bases 1 to 441 --> WTSI_1055_1e15.q1kpIBRWTSI_1055_1e16.p1kpIBF bases 1 to 243 --> WTSI_1055_1e16.p1kpIBFWTSI_1055_1e17.p1kpIBF bases 1 to 285 --> WTSI_1055_1e17.p1kpIBFWTSI_1055_1e17.q1kpIBR bases 1 to 303 --> WTSI_1055_1e17.q1kpIBRWTSI_1055_1e18.p1kpIBF bases 1 to 372 --> WTSI_1055_1e18.p1kpIBFWTSI_1055_1e18.q1kpIBR bases 1 to 383 --> WTSI_1055_1e18.q1kpIBRWTSI_1055_1e21.p1kpIBF bases 1 to 306 --> WTSI_1055_1e21.p1kpIBFWTSI_1055_1e21.q1kpIBR bases 1 to 280 --> WTSI_1055_1e21.q1kpIBRWTSI_1055_1e22.p1kpIBF bases 1 to 394 --> WTSI_1055_1e22.p1kpIBFWTSI_1055_1e22.q1kpIBR bases 1 to 359 --> WTSI_1055_1e22.q1kpIBRWTSI_1055_1e23.p1kpIBF bases 1 to 167 --> WTSI_1055_1e23.p1kpIBFWTSI_1055_1e23.q1kpIBR bases 1 to 301 --> WTSI_1055_1e23.q1kpIBRWTSI_1055_1e24.p1kpIBF bases 1 to 328 --> WTSI_1055_1e24.p1kpIBFWTSI_1055_1e24.q1kpIBR bases 1 to 426 --> WTSI_1055_1e24.q1kpIBRWTSI_1055_1f01.p1kpIBF bases 1 to 339 --> WTSI_1055_1f01.p1kpIBFWTSI_1055_1f01.q1kpIBR bases 1 to 431 --> WTSI_1055_1f01.q1kpIBRWTSI_1055_1f02.p1kpIBF bases 1 to 141 --> WTSI_1055_1f02.p1kpIBFWTSI_1055_1f03.p1kpIBF bases 1 to 289 --> WTSI_1055_1f03.p1kpIBFWTSI_1055_1f04.q1kpIBR bases 1 to 201 --> WTSI_1055_1f04.q1kpIBRWTSI_1055_1f05.p1kpIBF bases 1 to 284 --> WTSI_1055_1f05.p1kpIBFWTSI_1055_1f06.p1kpIBF bases 1 to 424 --> WTSI_1055_1f06.p1kpIBFWTSI_1055_1f08.p1kpIBF bases 1 to 414 --> WTSI_1055_1f08.p1kpIBFWTSI_1055_1f09.p1kpIBF bases 1 to 372 --> WTSI_1055_1f09.p1kpIBFWTSI_1055_1f09.q1kpIBR bases 1 to 355 --> WTSI_1055_1f09.q1kpIBRWTSI_1055_1f10.p1kpIBF bases 1 to 383 --> WTSI_1055_1f10.p1kpIBFWTSI_1055_1f10.q1kpIBR bases 1 to 501 --> WTSI_1055_1f10.q1kpIBRWTSI_1055_1f11.p1kpIBF bases 1 to 283 --> WTSI_1055_1f11.p1kpIBFWTSI_1055_1f12.p1kpIBF bases 1 to 364 --> WTSI_1055_1f12.p1kpIBFWTSI_1055_1f14.p1kpIBF bases 1 to 331 --> WTSI_1055_1f14.p1kpIBFWTSI_1055_1f14.q1kpIBR bases 1 to 490 --> WTSI_1055_1f14.q1kpIBRWTSI_1055_1f15.p1kpIBF bases 1 to 261 --> WTSI_1055_1f15.p1kpIBFWTSI_1055_1f16.p1kpIBF bases 1 to 363 --> WTSI_1055_1f16.p1kpIBFWTSI_1055_1f17.p1kpIBF bases 1 to 436 --> WTSI_1055_1f17.p1kpIBFWTSI_1055_1f18.p1kpIBF bases 1 to 532 --> WTSI_1055_1f18.p1kpIBFWTSI_1055_1f18.q1kpIBR bases 1 to 350 --> WTSI_1055_1f18.q1kpIBRWTSI_1055_1f19.p1kpIBF bases 1 to 363 --> WTSI_1055_1f19.p1kpIBFWTSI_1055_1f19.q1kpIBR bases 1 to 468 --> WTSI_1055_1f19.q1kpIBRWTSI_1055_1f20.p1kpIBF bases 1 to 491 --> WTSI_1055_1f20.p1kpIBFWTSI_1055_1f20.q1kpIBR bases 1 to 451 --> WTSI_1055_1f20.q1kpIBRWTSI_1055_1f21.p1kpIBF bases 1 to 456 --> WTSI_1055_1f21.p1kpIBFWTSI_1055_1f21.q1kpIBR bases 1 to 336 --> WTSI_1055_1f21.q1kpIBRWTSI_1055_1f22.p1kpIBF bases 1 to 370 --> WTSI_1055_1f22.p1kpIBFWTSI_1055_1f22.q1kpIBR bases 1 to 496 --> WTSI_1055_1f22.q1kpIBRWTSI_1055_1f23.p1kpIBF bases 1 to 383 --> WTSI_1055_1f23.p1kpIBFWTSI_1055_1f24.q1kpIBR bases 86 to 670 --> WTSI_1055_1f24.q1kpIBRWTSI_1055_1g01.p1kpIBF bases 1 to 584 --> WTSI_1055_1g01.p1kpIBFWTSI_1055_1g01.q1kpIBR bases 1 to 350 --> WTSI_1055_1g01.q1kpIBRWTSI_1055_1g02.p1kpIBF bases 1 to 523 --> WTSI_1055_1g02.p1kpIBF
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfannotategenotypes (Test #1)" name="0" time="39.096521854400635">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="vcfsort (Test #1)" name="0" time="29.026787757873535">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
</testsuite>