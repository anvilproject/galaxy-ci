<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Results (powered by Planemo)"
           tests="110"
           errors="5"
           failures="17"
           skip="0">
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.10524702072143555">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10524702072143555, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "0.0.3+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops (Test #1)" name="0" time="0.10330438613891602">
        
            <error type="error" message="Input staging problem: Test input file (find_cluster.h5) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (find_cluster.h5) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10330438613891602, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/anndata_ops/anndata_ops", "tool_version": "1.6.0+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/gtf2gene_list/_ensembl_gtf2gene_list (Test #1)" name="0" time="56.11485314369202">
        
            
            <system-out><![CDATA[
            [1] "Reading input.gtf elements of type gene"[1] "Found 10 features"[1] "Storing output to annotation.txt"
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa (Test #1)" name="0" time="59.680384159088135">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "accession": "E-GEOD-100058",  "matrix_type": "tpm" }, "job": {  "command_line": "wget -O exp_quant.zip \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\u0027 \u0026\u0026 unzip exp_quant.zip; mv \u0027E-GEOD-100058\u0027.expression_tpm.mtx /galaxy/server/database/objects/9/4/6/dataset_946fa1d9-bcef-491c-bde1-9e056aad559e.dat \u0026\u0026 awk \u0027{OFS=\"\\t\"; print $2,$2}\u0027 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_rows \u003e /galaxy/server/database/objects/4/6/1/dataset_461d921f-4cd0-45b6-ba1d-22f2bcca6976.dat \u0026\u0026 cut -f2 \u0027E-GEOD-100058\u0027.expression_tpm.mtx_cols \u003e /galaxy/server/database/objects/4/3/f/dataset_43f52923-d738-436a-a111-6baf785a0cbb.dat;   wget -O exp_design.tsv \u0027https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\u0027;",  "command_version": "",  "create_time": "2023-02-10T11:04:37.979588",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-ct4d6",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "552b7631c82c5811",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "25.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "25 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676027114.0000000",    "title": "Job End Time",    "value": "2023-02-10 11:05:14"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676027089.0000000",    "title": "Job Start Time",    "value": "2023-02-10 11:04:49"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "barcode_tsv": {    "id": "4a49c38e1a32924e",    "src": "hda",    "uuid": "43f52923-d738-436a-a111-6baf785a0cbb"   },   "design_tsv": {    "id": "b882490619896177",    "src": "hda",    "uuid": "19e78392-b003-4212-be55-e0cf9066da50"   },   "genes_tsv": {    "id": "02fe038e0b7f0a60",    "src": "hda",    "uuid": "461d921f-4cd0-45b6-ba1d-22f2bcca6976"   },   "matrix_mtx": {    "id": "6917d6763e3bdbc4",    "src": "hda",    "uuid": "946fa1d9-bcef-491c-bde1-9e056aad559e"   }  },  "params": {   "__input_ext": "\"data\"",   "accession": "\"E-GEOD-100058\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "matrix_type": "\"tpm\""  },  "state": "ok",  "stderr": "--2023-02-10 11:04:49--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  243K\n    50K .......... .......... .......... .......... ..........  217K\n   100K .......... .......... .......... .......... ..........  409K\n   150K .......... .......... .......... .......... ..........  517K\n   200K .......... .......... .......... .......... ..........  726K\n   250K .......... .......... .......... .......... ..........  520K\n   300K .......... .......... .......... .......... ..........  854K\n   350K .......... .......... .......... .......... ..........  606K\n   400K .......... .......... .......... .......... ..........  970K\n   450K .......... .......... .......... .......... ..........  857K\n   500K .......... .......... .......... .......... ..........  837K\n   550K .......... .......... .......... .......... .......... 1.32M\n   600K .......... .......... .......... .......... .......... 1.28M\n   650K .......... .......... .......... .......... ..........  858K\n   700K .......... .......... .......... .......... .......... 1.34M\n   750K .......... .......... .......... .......... ..........  856K\n   800K .......... .......... .......... .......... .......... 1.33M\n   850K .......... .......... .......... .......... .......... 1.09M\n   900K .......... .......... .......... .......... ..........  691K\n   950K .......... .......... .......... .......... .......... 3.98M\n  1000K .......... .......... .......... .......... ..........  724K\n  1050K .......... .......... .......... .......... .......... 1.10M\n  1100K .......... .......... .......... .......... .......... 1.03M\n  1150K .......... .......... .......... .......... .......... 3.49M\n  1200K .......... .......... .......... .......... .......... 1.41M\n  1250K .......... .......... .......... .......... .......... 1.02M\n  1300K .......... .......... .......... .......... .......... 12.2M\n  1350K .......... .......... .......... .......... .......... 1.14M\n  1400K .......... .......... .......... .......... .......... 21.2M\n  1450K .......... .......... .......... .......... .......... 1.03M\n  1500K .......... .......... .......... .......... .......... 3.68M\n  1550K .......... .......... .......... .......... .......... 1.49M\n  1600K .......... .......... .......... .......... .......... 1.01M\n  1650K .......... .......... .......... .......... .......... 19.4M\n  1700K .......... .......... .......... .......... .......... 4.00M\n  1750K .......... .......... .......... .......... .......... 1.55M\n  1800K .......... .......... .......... .......... .......... 17.9M\n  1850K .......... .......... .......... .......... .......... 1022K\n  1900K .......... .......... .......... .......... .......... 23.7M\n  1950K .......... .......... .......... .......... .......... 1.18M\n  2000K .......... .......... .......... .......... .......... 23.6M\n  2050K .......... .......... .......... .......... .......... 1.02M\n  2100K .......... .......... .......... .......... .......... 15.5M\n  2150K .......... .......... .......... .......... .......... 4.05M\n  2200K .......... .......... .......... .......... .......... 1.61M\n  2250K .......... .......... .......... .......... .......... 20.0M\n  2300K .......... .......... .......... .......... .......... 1.00M\n  2350K .......... .......... .......... .......... .......... 21.4M\n  2400K .......... .......... .......... .......... .......... 4.00M\n  2450K .......... .......... .......... .......... .......... 1.62M\n  2500K .......... .......... .......... .......... .......... 20.0M\n  2550K .......... .......... .......... .......... ..........  889K\n  2600K .......... .......... .......... .......... .......... 76.5M\n  2650K .......... .......... .......... .......... ..........  361M\n  2700K .......... .......... .......... .......... .......... 2.57M\n  2750K .......... .......... .......... .......... .......... 2.46M\n  2800K .......... .......... .......... .......... .......... 58.7M\n  2850K .......... .......... .......... .......... ..........  890K\n  2900K .......... .......... .......... .......... .......... 74.3M\n  2950K .......... .......... .......... .......... .......... 7.13M\n  3000K .......... .......... .......... .......... .......... 1.74M\n  3050K .......... .......... .......... .......... .......... 17.6M\n  3100K .......... .......... .......... .......... .......... 44.5M\n  3150K .......... .......... .......... .......... ..........  891K\n  3200K .......... .......... .......... .......... ..........  152M\n  3250K .......... .......... .......... .......... .......... 6.80M\n  3300K .......... .......... .......... .......... .......... 1.75M\n  3350K .......... .......... .......... .......... .......... 12.9M\n  3400K .......... .......... .......... .......... .......... 62.8M\n  3450K .......... .......... .......... .......... ..........  903K\n  3500K .......... .......... .......... .......... .......... 71.5M\n  3550K .......... .......... .......... .......... .......... 72.4M\n  3600K .......... .......... .......... .......... .......... 1.42M\n  3650K .......... .......... .......... .......... .......... 37.1M\n  3700K .......... .......... .......... .......... .......... 19.0M\n  3750K .......... .......... .......... .......... ..........  165M\n  3800K .......... .......... .......... .......... ..........  899K\n  3850K .......... .......... .......... .......... ..........  169M\n  3900K .......... .......... .......... .......... .......... 54.4M\n  3950K .......... .......... .......... .......... .......... 1.40M\n  4000K .......... .......... .......... .......... .......... 18.5M\n  4050K .......... .......... .......... .......... .......... 68.2M\n  4100K .......... .......... .......... .......... .......... 1.11M\n  4150K .......... .......... .......... .......... .......... 4.02M\n  4200K .......... .......... .......... .......... .......... 79.8M\n  4250K .......... .......... .......... .......... .......... 80.1M\n  4300K .......... .......... .......... .......... .......... 2.32M\n  4350K .......... .......... .......... .......... .......... 3.23M\n  4400K .......... .......... .......... .......... .......... 22.4M\n  4450K .......... .......... .......... .......... .......... 62.3M\n  4500K .......... .......... .......... .......... ..........  911K\n  4550K .......... .......... .......... .......... .......... 76.0M\n  4600K .......... .......... .......... .......... ..........  226M\n  4650K .......... .......... .......... .......... .......... 5.87M\n  4700K .......... .......... .......... .......... .......... 1.77M\n  4750K .......... .......... .......... .......... .......... 19.3M\n  4800K .......... .......... .......... .......... .......... 81.1M\n  4850K .......... .......... .......... .......... ..........  110M\n  4900K .......... .......... .......... .......... ..........  906K\n  4950K .......... .......... .......... .......... ..........  172M\n  5000K .......... .......... .......... .......... .......... 46.3M\n  5050K .......... .......... .......... .......... .......... 5.88M\n  5100K .......... .......... .......... .......... .......... 1.81M\n  5150K .......... .......... .......... .......... .......... 19.3M\n  5200K .......... .......... .......... .......... .......... 68.0M\n  5250K .......... .......... .......... .......... ..........  134M\n  5300K .......... .......... .......... .......... ..........  900K\n  5350K .......... .......... .......... .......... ..........  159M\n  5400K .......... .......... .......... .......... .......... 85.0M\n  5450K .......... .......... .......... .......... .......... 29.6M\n  5500K .......... .......... .......... .......... .......... 5.53M\n  5550K .......... .......... .......... .......... .......... 1.91M\n  5600K .......... .......... .......... .......... .......... 22.5M\n  5650K .......... .......... .......... .......... .......... 95.2M\n  5700K .......... .......... .......... .......... .......... 38.6M\n  5750K .......... .......... .......... .......... ..........  915K\n  5800K .......... .......... .......... .......... ..........  103M\n  5850K .......... .......... .......... .......... .......... 40.5M\n  5900K .......... .......... .......... .......... .......... 6.92M\n  5950K .......... .......... .......... .......... .......... 3.23M\n  6000K .......... .......... .......... .......... .......... 3.70M\n  6050K .......... .......... .......... .......... .......... 27.6M\n  6100K .......... .......... .......... .......... .......... 59.6M\n  6150K .......... .......... .......... .......... .......... 57.0M\n  6200K .......... .......... .......... .......... .......... 1.04M\n  6250K .......... .......... .......... .......... .......... 5.81M\n  6300K .......... .......... .......... .......... .......... 50.0M\n  6350K .......... .......... .......... .......... .......... 76.1M\n  6400K .......... .......... .......... .......... .......... 5.52M\n  6450K .......... .......... .......... .......... .......... 1.87M\n  6500K .......... .......... .......... .......... .......... 85.8M\n  6550K .......... .......... .......... .......... .......... 51.2M\n  6600K .......... .......... .......... .......... .......... 31.0M\n  6650K .......... .......... .......... .......... .......... 73.0M\n  6700K .......... .......... .......... .......... ..........  916K\n  6750K .......... .......... .......... .......... ..........  179M\n  6800K .......... .......... .......... .......... .......... 31.3M\n  6850K .......... .......... .......... .......... .......... 26.7M\n  6900K .......... .......... .......... .......... .......... 6.88M\n  6950K .......... .......... .......... .......... .......... 15.4M\n  7000K .......... .......... .......... .......... .......... 2.07M\n  7050K .......... .......... .......... .......... ..........  230M\n  7100K .......... .......... .......... .......... .......... 20.5M\n  7150K .......... .......... .......... .......... .......... 63.6M\n  7200K .......... .......... .......... .......... .......... 1.05M\n  7250K .......... .......... .......... .......... .......... 5.76M\n  7300K .......... .......... .......... .......... ..........  114M\n  7350K .......... .......... .......... .......... .......... 38.4M\n  7400K .......... .......... .......... .......... .......... 52.7M\n  7450K .......... .......... .......... .......... .......... 6.48M\n  7500K .......... .......... .......... .......... .......... 1.84M\n  7550K .......... .......... .......... .......... .......... 95.4M\n  7600K .......... .......... .......... .......... .......... 43.9M\n  7650K .......... .......... .......... .......... .......... 43.1M\n  7700K .......... .......... .......... .......... .......... 52.6M\n  7750K .......... .......... .......... .......... .......... 47.4M\n  7800K .......... .......... .......... .......... ..........  924K\n  7850K .......... .......... .......... .......... ..........  211M\n  7900K .......... .......... .......... .......... .......... 47.8M\n  7950K .......... .......... .......... .......... .......... 55.4M\n  8000K .......... .......... .......... .......... .......... 6.05M\n  8050K .......... .......... .......... .......... .......... 14.9M\n  8100K .......... .......... .......... .......... .......... 2.05M\n  8150K .......... .......... .......... .......... ..........  101M\n  8200K .......... .......... .......... .......... ..........  101M\n  8250K .......... .......... .......... .......... .......... 29.1M\n  8300K .......... .......... .......... .......... .......... 94.2M\n  8350K .......... .......... .......... .......... .......... 1.03M\n  8400K .......... .......... .......... .......... .......... 6.23M\n  8450K .......... .......... .......... .......... ..........  147M\n  8500K .......... .......... .......... .......... .......... 57.8M\n  8550K .......... .......... .......... .......... .......... 77.8M\n  8600K .......... .......... .......... .......... .......... 6.14M\n  8650K .......... .......... .......... .......... .......... 12.5M\n  8700K .......... .......... .......... .......... .......... 2.08M\n  8750K .......... .......... .......... .......... ..........  156M\n  8800K .......... .......... .......... .......... .......... 25.9M\n  8850K .......... .......... .......... .......... .......... 66.6M\n  8900K .......... .......... .......... .......... .......... 98.5M\n  8950K .......... .......... .......... .......... .......... 7.02M\n  9000K .......... .......... .......... .......... .......... 1.03M\n  9050K .......... .......... .......... .......... .......... 75.2M\n  9100K .......... .......... .......... .......... ..........  135M\n  9150K .......... .......... .......... .......... .......... 70.0M\n  9200K .......... .......... .......... .......... .......... 13.3M\n  9250K .......... .......... .......... .......... .......... 6.16M\n  9300K .......... .......... .......... .......... .......... 3.96M\n  9350K .......... .......... .......... .......... .......... 4.12M\n  9400K .......... .......... .......... .......... .......... 72.6M\n  9450K .......... .......... .......... .......... .......... 25.4M\n  9500K .......... .......... .......... .......... ..........  136M\n  9550K .......... .......... .......... .......... .......... 68.1M\n  9600K .......... .......... .......... .......... .......... 7.41M\n  9650K .......... .......... .......... .......... .......... 1.02M\n  9700K .......... .......... .......... .......... ..........  142M\n  9750K .......... .......... .......... .......... .......... 59.0M\n  9800K .......... .......... .......... .......... .......... 58.2M\n  9850K .......... .......... .......... .......... .......... 12.9M\n  9900K .......... .......... .......... .......... .......... 8.60M\n  9950K .......... .......... .......... .......... .......... 7.49M\n 10000K .......... .......... .......... .......... .......... 2.57M\n 10050K .......... .......... .......... .......... .......... 10.6M\n 10100K .......... .......... .......... .......... .......... 4.25M\n 10150K .......... .......... .......... .......... .......... 7.88M\n 10200K .......... .......... .......... .......... .......... 4.27M\n 10250K .......... .......... .......... .......... .......... 3.94M\n 10300K .......... .......... .......... .......... .......... 4.21M\n 10350K .......... .......... .......... .......... .......... 7.25M\n 10400K .......... .......... .......... .......... .......... 3.94M\n 10450K .......... .......... .......... .......... .......... 5.02M\n 10500K .......... .......... .......... .......... .......... 4.09M\n 10550K .......... .......... .......... .......... .......... 8.66M\n 10600K .......... .......... .......... .......... .......... 4.15M\n 10650K .......... .......... .......... .......... .......... 4.22M\n 10700K .......... .......... .......... .......... .......... 4.26M\n 10750K .......... .......... .......... .......... .......... 8.15M\n 10800K .......... .......... .......... .......... .......... 4.30M\n 10850K .......... .......... .......... .......... .......... 4.27M\n 10900K .......... .......... .......... .......... .......... 4.05M\n 10950K .......... .......... .......... .......... .......... 7.82M\n 11000K .......... .......... .......... .......... .......... 4.06M\n 11050K .......... .......... .......... .......... .......... 4.24M\n 11100K .......... .......... .......... .......... .......... 4.13M\n 11150K .......... .......... .......... .......... .......... 8.29M\n 11200K .......... .......... .......... .......... .......... 4.17M\n 11250K .......... .......... .......... .......... .......... 4.00M\n 11300K .......... .......... .......... .......... .......... 4.16M\n 11350K .......... .......... .......... .......... .......... 4.18M\n 11400K .......... .......... .......... .......... .......... 6.42M\n 11450K .......... .......... .......... .......... .......... 4.62M\n 11500K .......... .......... .......... .......... .......... 4.38M\n 11550K .......... .......... .......... .......... ..........\n..\n....... .......... .......... .......... 4.80M\n 49900K .......... .......... .......... .......... .......... 7.73M\n 49950K .......... .......... .......... .......... .......... 6.05M\n 50000K .......... .......... .......... .......... .......... 6.40M\n 50050K .......... .......... .......... .......... .......... 4.14M\n 50100K .......... .......... .......... .......... .......... 3.96M\n 50150K .......... .......... .......... .......... .......... 4.71M\n 50200K .......... .......... .......... .......... .......... 2.68M\n 50250K .......... .......... .......... .......... .......... 8.44M\n 50300K .......... .......... .......... .......... .......... 5.33M\n 50350K .......... .......... .......... .......... .......... 6.51M\n 50400K .......... .......... .......... .......... .......... 7.65M\n 50450K .......... .......... .......... .......... .......... 4.16M\n 50500K .......... .......... .......... .......... .......... 4.37M\n 50550K .......... .......... .......... .......... .......... 3.44M\n 50600K .......... .......... .......... .......... .......... 5.86M\n 50650K .......... .......... .......... .......... .......... 3.43M\n 50700K .......... .......... .......... .......... .......... 6.77M\n 50750K .......... .......... .......... .......... .......... 5.16M\n 50800K .......... .......... .......... .......... .......... 6.84M\n 50850K .......... .......... .......... .......... .......... 4.33M\n 50900K .......... .......... .......... .......... .......... 7.78M\n 50950K .......... .......... .......... .......... .......... 5.40M\n 51000K .......... .......... .......... .......... .......... 4.13M\n 51050K .......... .......... .......... .......... .......... 3.94M\n 51100K .......... .......... .......... .......... .......... 5.21M\n 51150K .......... .......... .......... .......... .......... 3.59M\n 51200K .......... .......... .......... .......... .......... 4.59M\n 51250K .......... .......... .......... .......... .......... 6.74M\n 51300K .......... .......... .......... .......... .......... 5.19M\n 51350K .......... .......... .......... .......... .......... 4.99M\n 51400K .......... .......... .......... .......... .......... 5.82M\n 51450K .......... .......... .......... .......... .......... 8.58M\n 51500K .......... .......... .......... .......... .......... 4.89M\n 51550K .......... .......... .......... .......... .......... 3.03M\n 51600K .......... .......... .......... .......... .......... 8.99M\n 51650K .......... .......... .......... .......... .......... 2.73M\n 51700K .......... .......... .......... .......... .......... 6.14M\n 51750K .......... .......... .......... .......... .......... 2.66M\n 51800K .......... .......... .......... .......... .......... 1.35M\n 51850K .......... .......... .......... .......... .......... 36.4M\n 51900K .......... .......... .......... .......... ..........  999K\n 51950K .......... .......... .......... .......... .......... 17.3M\n 52000K .......... .......... .......... .......... ..........  708K\n 52050K .......... .......... .......... .......... .......... 14.0M\n 52100K .......... .......... .......... .......... .......... 63.9M\n 52150K .......... .......... .......... .......... .......... 70.7M\n 52200K .......... .......... .......... .......... ..........  282M\n 52250K .......... .......... .......... .......... ..........  126M\n 52300K .......... .......... .......... .......... .......... 1.70M\n 52350K .......... .......... .......... .......... .......... 14.4M\n 52400K .......... .......... .......... .......... .......... 58.0M\n 52450K .......... .......... .......... .......... .......... 2.02M\n 52500K .......... .......... .......... .......... .......... 1.36M\n 52550K .......... .......... .......... .......... .......... 82.6M\n 52600K .......... .......... .......... .......... ..........  120M\n 52650K .......... .......... .......... .......... .......... 42.0M\n 52700K .......... .......... .......... .......... .......... 90.3M\n 52750K .......... .......... .......... .......... ..........  154M\n 52800K .......... .......... .......... .......... .......... 1.60M\n 52850K .......... .......... .......... .......... .......... 35.8M\n 52900K .......... .......... .......... .......... ..........  104M\n 52950K .......... .......... .......... .......... ..........  845K\n 53000K .......... .......... .......... .......... .......... 34.6M\n 53050K .......... .......... .......... .......... ..........  148M\n 53100K .......... .......... .......... .......... ..........  175M\n 53150K .......... .......... .......... .......... .......... 49.7M\n 53200K .......... .......... .......... .......... ..........  103M\n 53250K .......... .......... .......... .......... ..........  206M\n 53300K .......... .......... .......... .......... ..........  400K\n 53350K .......... .......... .......... .......... ..........  209M\n 53400K .......... .......... .......... .......... ..........  236M\n 53450K .......... .......... .......... .......... ..........  238M\n 53500K .......... .......... .......... .......... ..........  326M\n 53550K .......... .......... .......... .......... ..........  323M\n 53600K .......... .......... .......... .......... ..........  337M\n 53650K .......... .......... .......... .......... ..........  347M\n 53700K .......... .......... .......... .......... ..........  358M\n 53750K .......... .......... .......... .......... ..........  264M\n 53800K .......... .......... .......... .......... .......... 59.5M\n 53850K .......... .......... .......... .......... .......... 2.23M\n 53900K .......... .......... .......... .......... .......... 1.20M\n 53950K .......... .......... .......... .......... .......... 80.1M\n 54000K .......... .......... .......... .......... .......... 78.9M\n 54050K .......... .......... .......... .......... ..........  176M\n 54100K .......... .......... .......... .......... .......... 31.7M\n 54150K .......... .......... .......... .......... .......... 1.53M\n 54200K .......... .......... .......... .......... .......... 98.8M\n 54250K .......... .......... .......... .......... ..........  823K\n 54300K .......... .......... .......... .......... .......... 76.1M\n 54350K .......... .......... .......... .......... .......... 99.9M\n 54400K .......... .......... .......... .......... ..........  130M\n 54450K .......... .......... .......... .......... .......... 1.71M\n 54500K .......... .......... .......... .......... .......... 17.0M\n 54550K .......... .......... .......... .......... .......... 14.5M\n 54600K .......... .......... .......... .......... ..........  840K\n 54650K .......... .......... .......... .......... ..........  102M\n 54700K .......... .......... .......... .......... ..........  329M\n 54750K .......... .......... .......... .......... ..........  268M\n 54800K .......... .......... .......... .......... .......... 1.70M\n 54850K .......... .......... .......... .......... .......... 14.5M\n 54900K .......... .......... .......... .......... .......... 14.8M\n 54950K .......... .......... .......... .......... ..........  842K\n 55000K .......... .......... .......... .......... ..........  214M\n 55050K .......... .......... .......... .......... ..........  254M\n 55100K .......... .......... .......... .......... ..........  262M\n 55150K .......... .......... .......... .......... ..........  300M\n 55200K .......... .......... .......... .......... .......... 1.49M\n 55250K .......... .......... .......... .......... .......... 15.8M\n 55300K .......... .......... .......... .......... ..........  846K\n 55350K .......... .......... .......... .......... ..........  123M\n 55400K .......... .......... .......... .......... ..........  365M\n 55450K .......... .......... .......... .......... ..........  401M\n 55500K .......... .......... .......... .......... ..........  447M\n 55550K .......... .......... .......... .......... .......... 1.57M\n 55600K .......... .......... .......... .......... .......... 10.8M\n 55650K .......... .......... .......... .......... .......... 1.96M\n 55700K .......... .......... .......... .......... .......... 1.41M\n 55750K .......... .......... .......... .......... ..........  118M\n 55800K .......... .......... .......... .......... ..........  160M\n 55850K .......... .......... .......... .......... ..........  170M\n 55900K .......... .......... .......... .......... .......... 1.54M\n 55950K .......... .......... .......... .......... .......... 13.6M\n 56000K .......... .......... .......... .......... .......... 2.03M\n 56050K .......... .......... .......... .......... .......... 1.38M\n 56100K .......... .......... .......... .......... ..........  110M\n 56150K .......... .......... .......... .......... ..........  109M\n 56200K .......... .......... .......... .......... ..........  101M\n 56250K .......... .......... .......... .......... .......... 1.63M\n 56300K .......... .......... .......... .......... .......... 2.33M\n 56350K .......... .......... .......... .......... .......... 8.14M\n 56400K .......... .......... .......... .......... .......... 1.29M\n 56450K .......... .......... .......... .......... ..........  367M\n 56500K .......... .......... .......... .......... ..........  353M\n 56550K .......... .......... .......... .......... ..........  231M\n 56600K .......... .......... .......... .......... .......... 1.61M\n 56650K .......... .......... .......... .......... .......... 2.47M\n 56700K .......... .......... .......... .......... .......... 18.9M\n 56750K .......... .......... .......... .......... .......... 1.13M\n 56800K .......... .......... .......... .......... ..........  206M\n 56850K .......... .......... .......... .......... ..........  371M\n 56900K .......... .......... .......... .......... ..........  316M\n 56950K .......... .......... .......... .......... ..........  326M\n 57000K .......... .......... .......... .......... .......... 1.56M\n 57050K .......... .......... .......... .......... .......... 2.35M\n 57100K .......... .......... .......... .......... .......... 5.90M\n 57150K .......... .......... .......... .......... .......... 1.38M\n 57200K .......... .......... .......... .......... ..........  172M\n 57250K .......... .......... .......... .......... ..........  163M\n 57300K .......... .......... .......... .......... ..........  142M\n 57350K .......... .......... .......... .......... .......... 1.68M\n 57400K .......... .......... .......... .......... .......... 2.41M\n 57450K .......... .......... .......... .......... .......... 26.4M\n 57500K .......... .......... .......... .......... .......... 1.14M\n 57550K .......... .......... .......... .......... ..........  218M\n 57600K .......... .......... .......... .......... ..........  255M\n 57650K .......... .......... .......... .......... ..........  269M\n 57700K .......... .......... .......... .......... ..........  340M\n 57750K .......... .......... .......... .......... .......... 1.54M\n 57800K .......... .......... .......... .......... .......... 2.41M\n 57850K .......... .......... .......... .......... .......... 7.55M\n 57900K .......... .......... .......... .......... .......... 1.34M\n 57950K .......... .......... .......... .......... ..........  144M\n 58000K .......... .......... .......... .......... ..........  110M\n 58050K .......... .......... .......... .......... ..........  243M\n 58100K .......... .......... .......... .......... ..........  165M\n 58150K .......... .......... .......... .......... .......... 1.56M\n 58200K .......... .......... .......... .......... .......... 2.40M\n 58250K .......... .......... .......... .......... .......... 6.39M\n 58300K .......... .......... .......... .......... .......... 1.36M\n 58350K .......... .......... .......... .......... ..........  214M\n 58400K .......... .......... .......... .......... ..........  218M\n 58450K .......... .......... .......... .......... ..........  253M\n 58500K .......... .......... .......... .......... .......... 1.56M\n 58550K .......... .......... .......... .......... .......... 2.45M\n 58600K .......... .......... .......... .......... ..........  219M\n 58650K .......... .......... .......... .......... .......... 1.15M\n 58700K .......... .......... .......... .......... ..........  151M\n 58750K .......... .......... .......... .......... .......... 4.07M\n 58800K .......... .......... .......... .......... .......... 2.76M\n 58850K .......... .......... .......... .......... .......... 14.5M\n 58900K .......... .......... .......... .......... .......... 6.19M\n 58950K .......... .......... .......... .......... .......... 3.96M\n 59000K .......... .......... .......... .......... .......... 2.61M\n 59050K .......... .......... .......... .......... .......... 2.09M\n 59100K .......... .......... .......... .......... .......... 3.88M\n 59150K .......... .......... .......... .......... .......... 2.90M\n 59200K .......... .......... .......... .......... .......... 17.7M\n 59250K .......... .......... .......... .......... .......... 9.76M\n 59300K .......... .......... .......... .......... .......... 2.93M\n 59350K .......... .......... .......... .......... .......... 9.83M\n 59400K .......... .......... .......... .......... .......... 1.35M\n 59450K .......... .......... .......... .......... .......... 19.8M\n 59500K .......... .......... .......... .......... .......... 4.59M\n 59550K .......... .......... .......... .......... .......... 2.79M\n 59600K .......... .......... .......... .......... .......... 19.2M\n 59650K .......... .......... .......... .......... .......... 4.88M\n 59700K .......... .......... .......... .......... .......... 4.39M\n 59750K .......... .......... .......... .......... .......... 7.54M\n 59800K .......... .......... .......... .......... .......... 1.39M\n 59850K .......... .......... .......... .......... .......... 27.9M\n 59900K .......... .......... .......... .......... .......... 2.64M\n 59950K .......... .......... .......... .......... .......... 4.71M\n 60000K .......... .......... .......... .......... .......... 24.0M\n 60050K .......... .......... .......... .......... .......... 4.70M\n 60100K .......... .......... .......... .......... .......... 4.18M\n 60150K .......... .......... .......... .......... .......... 2.94M\n 60200K .......... .......... .......... .......... .......... 1.98M\n 60250K .......... .......... .......... .......... .......... 8.71M\n 60300K .......... .......... .......... .......... .......... 3.27M\n 60350K .......... .......... .......... .......... .......... 4.41M\n 60400K .......... .......... .......... .......... ..........  123M\n 60450K .......... .......... .......... .......... .......... 4.22M\n 60500K .......... .......... .......... .......... ..........  326K\n 60550K .......... .......... .......... .......... .......... 19.4M\n 60600K .......... .......... .......... .......... .......... 20.6M\n 60650K .......... .........                                   34.0M=15s\n\n2023-02-10 11:05:04 (4.00 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-02-10 11:05:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 567421 (554K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  9% 62.9K 8s\n    50K .......... .......... .......... .......... .......... 18% 65.2K 7s\n   100K .......... .......... .......... .......... .......... 27%  104K 5s\n   150K .......... .......... .......... .......... .......... 36% 25.6K 7s\n   200K .......... .......... .......... .......... .......... 45%  105K 5s\n   250K .......... .......... .......... .......... .......... 54%  131K 4s\n   300K .......... .......... .......... .......... .......... 63%  111K 3s\n   350K .......... .......... .......... .......... .......... 72%  159K 2s\n   400K .......... .......... .......... .......... .......... 81%  174K 1s\n   450K .......... .......... .......... .......... .......... 90%  195K 1s\n   500K .......... .......... .......... .......... .......... 99%  261K 0s\n   550K ....                                                  100% 7862G=6.3s\n\n2023-02-10 11:05:14 (87.3 KB/s) - \u0027exp_design.tsv\u0027 saved [567421/567421]\n\n",  "stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa/v0.0.2+galaxy2",  "tool_stderr": "--2023-02-10 11:04:49--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: unspecified [application/zip]\nSaving to: \u0027exp_quant.zip\u0027\n\n     0K .......... .......... .......... .......... ..........  243K\n    50K .......... .......... .......... .......... ..........  217K\n   100K .......... .......... .......... .......... ..........  409K\n   150K .......... .......... .......... .......... ..........  517K\n   200K .......... .......... .......... .......... ..........  726K\n   250K .......... .......... .......... .......... ..........  520K\n   300K .......... .......... .......... .......... ..........  854K\n   350K .......... .......... .......... .......... ..........  606K\n   400K .......... .......... .......... .......... ..........  970K\n   450K .......... .......... .......... .......... ..........  857K\n   500K .......... .......... .......... .......... ..........  837K\n   550K .......... .......... .......... .......... .......... 1.32M\n   600K .......... .......... .......... .......... .......... 1.28M\n   650K .......... .......... .......... .......... ..........  858K\n   700K .......... .......... .......... .......... .......... 1.34M\n   750K .......... .......... .......... .......... ..........  856K\n   800K .......... .......... .......... .......... .......... 1.33M\n   850K .......... .......... .......... .......... .......... 1.09M\n   900K .......... .......... .......... .......... ..........  691K\n   950K .......... .......... .......... .......... .......... 3.98M\n  1000K .......... .......... .......... .......... ..........  724K\n  1050K .......... .......... .......... .......... .......... 1.10M\n  1100K .......... .......... .......... .......... .......... 1.03M\n  1150K .......... .......... .......... .......... .......... 3.49M\n  1200K .......... .......... .......... .......... .......... 1.41M\n  1250K .......... .......... .......... .......... .......... 1.02M\n  1300K .......... .......... .......... .......... .......... 12.2M\n  1350K .......... .......... .......... .......... .......... 1.14M\n  1400K .......... .......... .......... .......... .......... 21.2M\n  1450K .......... .......... .......... .......... .......... 1.03M\n  1500K .......... .......... .......... .......... .......... 3.68M\n  1550K .......... .......... .......... .......... .......... 1.49M\n  1600K .......... .......... .......... .......... .......... 1.01M\n  1650K .......... .......... .......... .......... .......... 19.4M\n  1700K .......... .......... .......... .......... .......... 4.00M\n  1750K .......... .......... .......... .......... .......... 1.55M\n  1800K .......... .......... .......... .......... .......... 17.9M\n  1850K .......... .......... .......... .......... .......... 1022K\n  1900K .......... .......... .......... .......... .......... 23.7M\n  1950K .......... .......... .......... .......... .......... 1.18M\n  2000K .......... .......... .......... .......... .......... 23.6M\n  2050K .......... .......... .......... .......... .......... 1.02M\n  2100K .......... .......... .......... .......... .......... 15.5M\n  2150K .......... .......... .......... .......... .......... 4.05M\n  2200K .......... .......... .......... .......... .......... 1.61M\n  2250K .......... .......... .......... .......... .......... 20.0M\n  2300K .......... .......... .......... .......... .......... 1.00M\n  2350K .......... .......... .......... .......... .......... 21.4M\n  2400K .......... .......... .......... .......... .......... 4.00M\n  2450K .......... .......... .......... .......... .......... 1.62M\n  2500K .......... .......... .......... .......... .......... 20.0M\n  2550K .......... .......... .......... .......... ..........  889K\n  2600K .......... .......... .......... .......... .......... 76.5M\n  2650K .......... .......... .......... .......... ..........  361M\n  2700K .......... .......... .......... .......... .......... 2.57M\n  2750K .......... .......... .......... .......... .......... 2.46M\n  2800K .......... .......... .......... .......... .......... 58.7M\n  2850K .......... .......... .......... .......... ..........  890K\n  2900K .......... .......... .......... .......... .......... 74.3M\n  2950K .......... .......... .......... .......... .......... 7.13M\n  3000K .......... .......... .......... .......... .......... 1.74M\n  3050K .......... .......... .......... .......... .......... 17.6M\n  3100K .......... .......... .......... .......... .......... 44.5M\n  3150K .......... .......... .......... .......... ..........  891K\n  3200K .......... .......... .......... .......... ..........  152M\n  3250K .......... .......... .......... .......... .......... 6.80M\n  3300K .......... .......... .......... .......... .......... 1.75M\n  3350K .......... .......... .......... .......... .......... 12.9M\n  3400K .......... .......... .......... .......... .......... 62.8M\n  3450K .......... .......... .......... .......... ..........  903K\n  3500K .......... .......... .......... .......... .......... 71.5M\n  3550K .......... .......... .......... .......... .......... 72.4M\n  3600K .......... .......... .......... .......... .......... 1.42M\n  3650K .......... .......... .......... .......... .......... 37.1M\n  3700K .......... .......... .......... .......... .......... 19.0M\n  3750K .......... .......... .......... .......... ..........  165M\n  3800K .......... .......... .......... .......... ..........  899K\n  3850K .......... .......... .......... .......... ..........  169M\n  3900K .......... .......... .......... .......... .......... 54.4M\n  3950K .......... .......... .......... .......... .......... 1.40M\n  4000K .......... .......... .......... .......... .......... 18.5M\n  4050K .......... .......... .......... .......... .......... 68.2M\n  4100K .......... .......... .......... .......... .......... 1.11M\n  4150K .......... .......... .......... .......... .......... 4.02M\n  4200K .......... .......... .......... .......... .......... 79.8M\n  4250K .......... .......... .......... .......... .......... 80.1M\n  4300K .......... .......... .......... .......... .......... 2.32M\n  4350K .......... .......... .......... .......... .......... 3.23M\n  4400K .......... .......... .......... .......... .......... 22.4M\n  4450K .......... .......... .......... .......... .......... 62.3M\n  4500K .......... .......... .......... .......... ..........  911K\n  4550K .......... .......... .......... .......... .......... 76.0M\n  4600K .......... .......... .......... .......... ..........  226M\n  4650K .......... .......... .......... .......... .......... 5.87M\n  4700K .......... .......... .......... .......... .......... 1.77M\n  4750K .......... .......... .......... .......... .......... 19.3M\n  4800K .......... .......... .......... .......... .......... 81.1M\n  4850K .......... .......... .......... .......... ..........  110M\n  4900K .......... .......... .......... .......... ..........  906K\n  4950K .......... .......... .......... .......... ..........  172M\n  5000K .......... .......... .......... .......... .......... 46.3M\n  5050K .......... .......... .......... .......... .......... 5.88M\n  5100K .......... .......... .......... .......... .......... 1.81M\n  5150K .......... .......... .......... .......... .......... 19.3M\n  5200K .......... .......... .......... .......... .......... 68.0M\n  5250K .......... .......... .......... .......... ..........  134M\n  5300K .......... .......... .......... .......... ..........  900K\n  5350K .......... .......... .......... .......... ..........  159M\n  5400K .......... .......... .......... .......... .......... 85.0M\n  5450K .......... .......... .......... .......... .......... 29.6M\n  5500K .......... .......... .......... .......... .......... 5.53M\n  5550K .......... .......... .......... .......... .......... 1.91M\n  5600K .......... .......... .......... .......... .......... 22.5M\n  5650K .......... .......... .......... .......... .......... 95.2M\n  5700K .......... .......... .......... .......... .......... 38.6M\n  5750K .......... .......... .......... .......... ..........  915K\n  5800K .......... .......... .......... .......... ..........  103M\n  5850K .......... .......... .......... .......... .......... 40.5M\n  5900K .......... .......... .......... .......... .......... 6.92M\n  5950K .......... .......... .......... .......... .......... 3.23M\n  6000K .......... .......... .......... .......... .......... 3.70M\n  6050K .......... .......... .......... .......... .......... 27.6M\n  6100K .......... .......... .......... .......... .......... 59.6M\n  6150K .......... .......... .......... .......... .......... 57.0M\n  6200K .......... .......... .......... .......... .......... 1.04M\n  6250K .......... .......... .......... .......... .......... 5.81M\n  6300K .......... .......... .......... .......... .......... 50.0M\n  6350K .......... .......... .......... .......... .......... 76.1M\n  6400K .......... .......... .......... .......... .......... 5.52M\n  6450K .......... .......... .......... .......... .......... 1.87M\n  6500K .......... .......... .......... .......... .......... 85.8M\n  6550K .......... .......... .......... .......... .......... 51.2M\n  6600K .......... .......... .......... .......... .......... 31.0M\n  6650K .......... .......... .......... .......... .......... 73.0M\n  6700K .......... .......... .......... .......... ..........  916K\n  6750K .......... .......... .......... .......... ..........  179M\n  6800K .......... .......... .......... .......... .......... 31.3M\n  6850K .......... .......... .......... .......... .......... 26.7M\n  6900K .......... .......... .......... .......... .......... 6.88M\n  6950K .......... .......... .......... .......... .......... 15.4M\n  7000K .......... .......... .......... .......... .......... 2.07M\n  7050K .......... .......... .......... .......... ..........  230M\n  7100K .......... .......... .......... .......... .......... 20.5M\n  7150K .......... .......... .......... .......... .......... 63.6M\n  7200K .......... .......... .......... .......... .......... 1.05M\n  7250K .......... .......... .......... .......... .......... 5.76M\n  7300K .......... .......... .......... .......... ..........  114M\n  7350K .......... .......... .......... .......... .......... 38.4M\n  7400K .......... .......... .......... .......... .......... 52.7M\n  7450K .......... .......... .......... .......... .......... 6.48M\n  7500K .......... .......... .......... .......... .......... 1.84M\n  7550K .......... .......... .......... .......... .......... 95.4M\n  7600K .......... .......... .......... .......... .......... 43.9M\n  7650K .......... .......... .......... .......... .......... 43.1M\n  7700K .......... .......... .......... .......... .......... 52.6M\n  7750K .......... .......... .......... .......... .......... 47.4M\n  7800K .......... .......... .......... .......... ..........  924K\n  7850K .......... .......... .......... .......... ..........  211M\n  7900K .......... .......... .......... .......... .......... 47.8M\n  7950K .......... .......... .......... .......... .......... 55.4M\n  8000K .......... .......... .......... .......... .......... 6.05M\n  8050K .......... .......... .......... .......... .......... 14.9M\n  8100K .......... .......... .......... .......... .......... 2.05M\n  8150K .......... .......... .......... .......... ..........  101M\n  8200K .......... .......... .......... .......... ..........  101M\n  8250K .......... .......... .......... .......... .......... 29.1M\n  8300K .......... .......... .......... .......... .......... 94.2M\n  8350K .......... .......... .......... .......... .......... 1.03M\n  8400K .......... .......... .......... .......... .......... 6.23M\n  8450K .......... .......... .......... .......... ..........  147M\n  8500K .......... .......... .......... .......... .......... 57.8M\n  8550K .......... .......... .......... .......... .......... 77.8M\n  8600K .......... .......... .......... .......... .......... 6.14M\n  8650K .......... .......... .......... .......... .......... 12.5M\n  8700K .......... .......... .......... .......... .......... 2.08M\n  8750K .......... .......... .......... .......... ..........  156M\n  8800K .......... .......... .......... .......... .......... 25.9M\n  8850K .......... .......... .......... .......... .......... 66.6M\n  8900K .......... .......... .......... .......... .......... 98.5M\n  8950K .......... .......... .......... .......... .......... 7.02M\n  9000K .......... .......... .......... .......... .......... 1.03M\n  9050K .......... .......... .......... .......... .......... 75.2M\n  9100K .......... .......... .......... .......... ..........  135M\n  9150K .......... .......... .......... .......... .......... 70.0M\n  9200K .......... .......... .......... .......... .......... 13.3M\n  9250K .......... .......... .......... .......... .......... 6.16M\n  9300K .......... .......... .......... .......... .......... 3.96M\n  9350K .......... .......... .......... .......... .......... 4.12M\n  9400K .......... .......... .......... .......... .......... 72.6M\n  9450K .......... .......... .......... .......... .......... 25.4M\n  9500K .......... .......... .......... .......... ..........  136M\n  9550K .......... .......... .......... .......... .......... 68.1M\n  9600K .......... .......... .......... .......... .......... 7.41M\n  9650K .......... .......... .......... .......... .......... 1.02M\n  9700K .......... .......... .......... .......... ..........  142M\n  9750K .......... .......... .......... .......... .......... 59.0M\n  9800K .......... .......... .......... .......... .......... 58.2M\n  9850K .......... .......... .......... .......... .......... 12.9M\n  9900K .......... .......... .......... .......... .......... 8.60M\n  9950K .......... .......... .......... .......... .......... 7.49M\n 10000K .......... .......... .......... .......... .......... 2.57M\n 10050K .......... .......... .......... .......... .......... 10.6M\n 10100K .......... .......... .......... .......... .......... 4.25M\n 10150K .......... .......... .......... .......... .......... 7.88M\n 10200K .......... .......... .......... .......... .......... 4.27M\n 10250K .......... .......... .......... .......... .......... 3.94M\n 10300K .......... .......... .......... .......... .......... 4.21M\n 10350K .......... .......... .......... .......... .......... 7.25M\n 10400K .......... .......... .......... .......... .......... 3.94M\n 10450K .......... .......... .......... .......... .......... 5.02M\n 10500K .......... .......... .......... .......... .......... 4.09M\n 10550K .......... .......... .......... .......... .......... 8.66M\n 10600K .......... .......... .......... .......... .......... 4.15M\n 10650K .......... .......... .......... .......... .......... 4.22M\n 10700K .......... .......... .......... .......... .......... 4.26M\n 10750K .......... .......... .......... .......... .......... 8.15M\n 10800K .......... .......... .......... .......... .......... 4.30M\n 10850K .......... .......... .......... .......... .......... 4.27M\n 10900K .......... .......... .......... .......... .......... 4.05M\n 10950K .......... .......... .......... .......... .......... 7.82M\n 11000K .......... .......... .......... .......... .......... 4.06M\n 11050K .......... .......... .......... .......... .......... 4.24M\n 11100K .......... .......... .......... .......... .......... 4.13M\n 11150K .......... .......... .......... .......... .......... 8.29M\n 11200K .......... .......... .......... .......... .......... 4.17M\n 11250K .......... .......... .......... .......... .......... 4.00M\n 11300K .......... .......... .......... .......... .......... 4.16M\n 11350K .......... .......... .......... .......... .......... 4.18M\n 11400K .......... .......... .......... .......... .......... 6.42M\n 11450K .......... .......... .......... .......... .......... 4.62M\n 11500K .......... .......... .......... .......... .......... 4.38M\n 11550K .......... .......... .......... .......... ..........\n..\n....... .......... .......... .......... 4.80M\n 49900K .......... .......... .......... .......... .......... 7.73M\n 49950K .......... .......... .......... .......... .......... 6.05M\n 50000K .......... .......... .......... .......... .......... 6.40M\n 50050K .......... .......... .......... .......... .......... 4.14M\n 50100K .......... .......... .......... .......... .......... 3.96M\n 50150K .......... .......... .......... .......... .......... 4.71M\n 50200K .......... .......... .......... .......... .......... 2.68M\n 50250K .......... .......... .......... .......... .......... 8.44M\n 50300K .......... .......... .......... .......... .......... 5.33M\n 50350K .......... .......... .......... .......... .......... 6.51M\n 50400K .......... .......... .......... .......... .......... 7.65M\n 50450K .......... .......... .......... .......... .......... 4.16M\n 50500K .......... .......... .......... .......... .......... 4.37M\n 50550K .......... .......... .......... .......... .......... 3.44M\n 50600K .......... .......... .......... .......... .......... 5.86M\n 50650K .......... .......... .......... .......... .......... 3.43M\n 50700K .......... .......... .......... .......... .......... 6.77M\n 50750K .......... .......... .......... .......... .......... 5.16M\n 50800K .......... .......... .......... .......... .......... 6.84M\n 50850K .......... .......... .......... .......... .......... 4.33M\n 50900K .......... .......... .......... .......... .......... 7.78M\n 50950K .......... .......... .......... .......... .......... 5.40M\n 51000K .......... .......... .......... .......... .......... 4.13M\n 51050K .......... .......... .......... .......... .......... 3.94M\n 51100K .......... .......... .......... .......... .......... 5.21M\n 51150K .......... .......... .......... .......... .......... 3.59M\n 51200K .......... .......... .......... .......... .......... 4.59M\n 51250K .......... .......... .......... .......... .......... 6.74M\n 51300K .......... .......... .......... .......... .......... 5.19M\n 51350K .......... .......... .......... .......... .......... 4.99M\n 51400K .......... .......... .......... .......... .......... 5.82M\n 51450K .......... .......... .......... .......... .......... 8.58M\n 51500K .......... .......... .......... .......... .......... 4.89M\n 51550K .......... .......... .......... .......... .......... 3.03M\n 51600K .......... .......... .......... .......... .......... 8.99M\n 51650K .......... .......... .......... .......... .......... 2.73M\n 51700K .......... .......... .......... .......... .......... 6.14M\n 51750K .......... .......... .......... .......... .......... 2.66M\n 51800K .......... .......... .......... .......... .......... 1.35M\n 51850K .......... .......... .......... .......... .......... 36.4M\n 51900K .......... .......... .......... .......... ..........  999K\n 51950K .......... .......... .......... .......... .......... 17.3M\n 52000K .......... .......... .......... .......... ..........  708K\n 52050K .......... .......... .......... .......... .......... 14.0M\n 52100K .......... .......... .......... .......... .......... 63.9M\n 52150K .......... .......... .......... .......... .......... 70.7M\n 52200K .......... .......... .......... .......... ..........  282M\n 52250K .......... .......... .......... .......... ..........  126M\n 52300K .......... .......... .......... .......... .......... 1.70M\n 52350K .......... .......... .......... .......... .......... 14.4M\n 52400K .......... .......... .......... .......... .......... 58.0M\n 52450K .......... .......... .......... .......... .......... 2.02M\n 52500K .......... .......... .......... .......... .......... 1.36M\n 52550K .......... .......... .......... .......... .......... 82.6M\n 52600K .......... .......... .......... .......... ..........  120M\n 52650K .......... .......... .......... .......... .......... 42.0M\n 52700K .......... .......... .......... .......... .......... 90.3M\n 52750K .......... .......... .......... .......... ..........  154M\n 52800K .......... .......... .......... .......... .......... 1.60M\n 52850K .......... .......... .......... .......... .......... 35.8M\n 52900K .......... .......... .......... .......... ..........  104M\n 52950K .......... .......... .......... .......... ..........  845K\n 53000K .......... .......... .......... .......... .......... 34.6M\n 53050K .......... .......... .......... .......... ..........  148M\n 53100K .......... .......... .......... .......... ..........  175M\n 53150K .......... .......... .......... .......... .......... 49.7M\n 53200K .......... .......... .......... .......... ..........  103M\n 53250K .......... .......... .......... .......... ..........  206M\n 53300K .......... .......... .......... .......... ..........  400K\n 53350K .......... .......... .......... .......... ..........  209M\n 53400K .......... .......... .......... .......... ..........  236M\n 53450K .......... .......... .......... .......... ..........  238M\n 53500K .......... .......... .......... .......... ..........  326M\n 53550K .......... .......... .......... .......... ..........  323M\n 53600K .......... .......... .......... .......... ..........  337M\n 53650K .......... .......... .......... .......... ..........  347M\n 53700K .......... .......... .......... .......... ..........  358M\n 53750K .......... .......... .......... .......... ..........  264M\n 53800K .......... .......... .......... .......... .......... 59.5M\n 53850K .......... .......... .......... .......... .......... 2.23M\n 53900K .......... .......... .......... .......... .......... 1.20M\n 53950K .......... .......... .......... .......... .......... 80.1M\n 54000K .......... .......... .......... .......... .......... 78.9M\n 54050K .......... .......... .......... .......... ..........  176M\n 54100K .......... .......... .......... .......... .......... 31.7M\n 54150K .......... .......... .......... .......... .......... 1.53M\n 54200K .......... .......... .......... .......... .......... 98.8M\n 54250K .......... .......... .......... .......... ..........  823K\n 54300K .......... .......... .......... .......... .......... 76.1M\n 54350K .......... .......... .......... .......... .......... 99.9M\n 54400K .......... .......... .......... .......... ..........  130M\n 54450K .......... .......... .......... .......... .......... 1.71M\n 54500K .......... .......... .......... .......... .......... 17.0M\n 54550K .......... .......... .......... .......... .......... 14.5M\n 54600K .......... .......... .......... .......... ..........  840K\n 54650K .......... .......... .......... .......... ..........  102M\n 54700K .......... .......... .......... .......... ..........  329M\n 54750K .......... .......... .......... .......... ..........  268M\n 54800K .......... .......... .......... .......... .......... 1.70M\n 54850K .......... .......... .......... .......... .......... 14.5M\n 54900K .......... .......... .......... .......... .......... 14.8M\n 54950K .......... .......... .......... .......... ..........  842K\n 55000K .......... .......... .......... .......... ..........  214M\n 55050K .......... .......... .......... .......... ..........  254M\n 55100K .......... .......... .......... .......... ..........  262M\n 55150K .......... .......... .......... .......... ..........  300M\n 55200K .......... .......... .......... .......... .......... 1.49M\n 55250K .......... .......... .......... .......... .......... 15.8M\n 55300K .......... .......... .......... .......... ..........  846K\n 55350K .......... .......... .......... .......... ..........  123M\n 55400K .......... .......... .......... .......... ..........  365M\n 55450K .......... .......... .......... .......... ..........  401M\n 55500K .......... .......... .......... .......... ..........  447M\n 55550K .......... .......... .......... .......... .......... 1.57M\n 55600K .......... .......... .......... .......... .......... 10.8M\n 55650K .......... .......... .......... .......... .......... 1.96M\n 55700K .......... .......... .......... .......... .......... 1.41M\n 55750K .......... .......... .......... .......... ..........  118M\n 55800K .......... .......... .......... .......... ..........  160M\n 55850K .......... .......... .......... .......... ..........  170M\n 55900K .......... .......... .......... .......... .......... 1.54M\n 55950K .......... .......... .......... .......... .......... 13.6M\n 56000K .......... .......... .......... .......... .......... 2.03M\n 56050K .......... .......... .......... .......... .......... 1.38M\n 56100K .......... .......... .......... .......... ..........  110M\n 56150K .......... .......... .......... .......... ..........  109M\n 56200K .......... .......... .......... .......... ..........  101M\n 56250K .......... .......... .......... .......... .......... 1.63M\n 56300K .......... .......... .......... .......... .......... 2.33M\n 56350K .......... .......... .......... .......... .......... 8.14M\n 56400K .......... .......... .......... .......... .......... 1.29M\n 56450K .......... .......... .......... .......... ..........  367M\n 56500K .......... .......... .......... .......... ..........  353M\n 56550K .......... .......... .......... .......... ..........  231M\n 56600K .......... .......... .......... .......... .......... 1.61M\n 56650K .......... .......... .......... .......... .......... 2.47M\n 56700K .......... .......... .......... .......... .......... 18.9M\n 56750K .......... .......... .......... .......... .......... 1.13M\n 56800K .......... .......... .......... .......... ..........  206M\n 56850K .......... .......... .......... .......... ..........  371M\n 56900K .......... .......... .......... .......... ..........  316M\n 56950K .......... .......... .......... .......... ..........  326M\n 57000K .......... .......... .......... .......... .......... 1.56M\n 57050K .......... .......... .......... .......... .......... 2.35M\n 57100K .......... .......... .......... .......... .......... 5.90M\n 57150K .......... .......... .......... .......... .......... 1.38M\n 57200K .......... .......... .......... .......... ..........  172M\n 57250K .......... .......... .......... .......... ..........  163M\n 57300K .......... .......... .......... .......... ..........  142M\n 57350K .......... .......... .......... .......... .......... 1.68M\n 57400K .......... .......... .......... .......... .......... 2.41M\n 57450K .......... .......... .......... .......... .......... 26.4M\n 57500K .......... .......... .......... .......... .......... 1.14M\n 57550K .......... .......... .......... .......... ..........  218M\n 57600K .......... .......... .......... .......... ..........  255M\n 57650K .......... .......... .......... .......... ..........  269M\n 57700K .......... .......... .......... .......... ..........  340M\n 57750K .......... .......... .......... .......... .......... 1.54M\n 57800K .......... .......... .......... .......... .......... 2.41M\n 57850K .......... .......... .......... .......... .......... 7.55M\n 57900K .......... .......... .......... .......... .......... 1.34M\n 57950K .......... .......... .......... .......... ..........  144M\n 58000K .......... .......... .......... .......... ..........  110M\n 58050K .......... .......... .......... .......... ..........  243M\n 58100K .......... .......... .......... .......... ..........  165M\n 58150K .......... .......... .......... .......... .......... 1.56M\n 58200K .......... .......... .......... .......... .......... 2.40M\n 58250K .......... .......... .......... .......... .......... 6.39M\n 58300K .......... .......... .......... .......... .......... 1.36M\n 58350K .......... .......... .......... .......... ..........  214M\n 58400K .......... .......... .......... .......... ..........  218M\n 58450K .......... .......... .......... .......... ..........  253M\n 58500K .......... .......... .......... .......... .......... 1.56M\n 58550K .......... .......... .......... .......... .......... 2.45M\n 58600K .......... .......... .......... .......... ..........  219M\n 58650K .......... .......... .......... .......... .......... 1.15M\n 58700K .......... .......... .......... .......... ..........  151M\n 58750K .......... .......... .......... .......... .......... 4.07M\n 58800K .......... .......... .......... .......... .......... 2.76M\n 58850K .......... .......... .......... .......... .......... 14.5M\n 58900K .......... .......... .......... .......... .......... 6.19M\n 58950K .......... .......... .......... .......... .......... 3.96M\n 59000K .......... .......... .......... .......... .......... 2.61M\n 59050K .......... .......... .......... .......... .......... 2.09M\n 59100K .......... .......... .......... .......... .......... 3.88M\n 59150K .......... .......... .......... .......... .......... 2.90M\n 59200K .......... .......... .......... .......... .......... 17.7M\n 59250K .......... .......... .......... .......... .......... 9.76M\n 59300K .......... .......... .......... .......... .......... 2.93M\n 59350K .......... .......... .......... .......... .......... 9.83M\n 59400K .......... .......... .......... .......... .......... 1.35M\n 59450K .......... .......... .......... .......... .......... 19.8M\n 59500K .......... .......... .......... .......... .......... 4.59M\n 59550K .......... .......... .......... .......... .......... 2.79M\n 59600K .......... .......... .......... .......... .......... 19.2M\n 59650K .......... .......... .......... .......... .......... 4.88M\n 59700K .......... .......... .......... .......... .......... 4.39M\n 59750K .......... .......... .......... .......... .......... 7.54M\n 59800K .......... .......... .......... .......... .......... 1.39M\n 59850K .......... .......... .......... .......... .......... 27.9M\n 59900K .......... .......... .......... .......... .......... 2.64M\n 59950K .......... .......... .......... .......... .......... 4.71M\n 60000K .......... .......... .......... .......... .......... 24.0M\n 60050K .......... .......... .......... .......... .......... 4.70M\n 60100K .......... .......... .......... .......... .......... 4.18M\n 60150K .......... .......... .......... .......... .......... 2.94M\n 60200K .......... .......... .......... .......... .......... 1.98M\n 60250K .......... .......... .......... .......... .......... 8.71M\n 60300K .......... .......... .......... .......... .......... 3.27M\n 60350K .......... .......... .......... .......... .......... 4.41M\n 60400K .......... .......... .......... .......... ..........  123M\n 60450K .......... .......... .......... .......... .......... 4.22M\n 60500K .......... .......... .......... .......... ..........  326K\n 60550K .......... .......... .......... .......... .......... 19.4M\n 60600K .......... .......... .......... .......... .......... 20.6M\n 60650K .......... .........                                   34.0M=15s\n\n2023-02-10 11:05:04 (4.00 MB/s) - \u0027exp_quant.zip\u0027 saved [62125370]\n\n--2023-02-10 11:05:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design\u0026accessKey=\nResolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80\nConnecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.\nHTTP request sent, awaiting response... 200 \nLength: 567421 (554K) [text/plain]\nSaving to: \u0027exp_design.tsv\u0027\n\n     0K .......... .......... .......... .......... ..........  9% 62.9K 8s\n    50K .......... .......... .......... .......... .......... 18% 65.2K 7s\n   100K .......... .......... .......... .......... .......... 27%  104K 5s\n   150K .......... .......... .......... .......... .......... 36% 25.6K 7s\n   200K .......... .......... .......... .......... .......... 45%  105K 5s\n   250K .......... .......... .......... .......... .......... 54%  131K 4s\n   300K .......... .......... .......... .......... .......... 63%  111K 3s\n   350K .......... .......... .......... .......... .......... 72%  159K 2s\n   400K .......... .......... .......... .......... .......... 81%  174K 1s\n   450K .......... .......... .......... .......... .......... 90%  195K 1s\n   500K .......... .......... .......... .......... .......... 99%  261K 0s\n   550K ....                                                  100% 7862G=6.3s\n\n2023-02-10 11:05:14 (87.3 KB/s) - \u0027exp_design.tsv\u0027 saved [567421/567421]\n\n",  "tool_stdout": "Archive:  exp_quant.zip\n  inflating: E-GEOD-100058.expression_tpm.mtx\n  inflating: E-GEOD-100058.expression_tpm.mtx_cols\n  inflating: E-GEOD-100058.expression_tpm.mtx_rows\n",  "traceback": null,  "update_time": "2023-02-10T11:05:26.871136",  "user_email": "tests@fake.org" }, "output_problems": [  "Output matrix_mtx: Test output file (E-GEOD-100058.expression_tpm.mtx) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output genes_tsv: Test output file (E-GEOD-100058.genes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output barcode_tsv: Test output file (E-GEOD-100058.barcodes.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it.",  "Output design_tsv: Test output file (E-GEOD-100058.exp_design.tsv) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 59.680384159088135, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/retrieve_scxa/retrieve_scxa", "tool_version": "v0.0.2+galaxy2"}
                ]]></error>
            
            <system-out><![CDATA[
            Archive:  exp_quant.zip  inflating: E-GEOD-100058.expression_tpm.mtx  inflating: E-GEOD-100058.expression_tpm.mtx_cols  inflating: E-GEOD-100058.expression_tpm.mtx_rows
            ]]></system-out>
            <system-err><![CDATA[
            --2023-02-10 11:04:49--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download/zip?fileType=quantification-filtered&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: unspecified [application/zip]Saving to: 'exp_quant.zip'     0K .......... .......... .......... .......... ..........  243K    50K .......... .......... .......... .......... ..........  217K   100K .......... .......... .......... .......... ..........  409K   150K .......... .......... .......... .......... ..........  517K   200K .......... .......... .......... .......... ..........  726K   250K .......... .......... .......... .......... ..........  520K   300K .......... .......... .......... .......... ..........  854K   350K .......... .......... .......... .......... ..........  606K   400K .......... .......... .......... .......... ..........  970K   450K .......... .......... .......... .......... ..........  857K   500K .......... .......... .......... .......... ..........  837K   550K .......... .......... .......... .......... .......... 1.32M   600K .......... .......... .......... .......... .......... 1.28M   650K .......... .......... .......... .......... ..........  858K   700K .......... .......... .......... .......... .......... 1.34M   750K .......... .......... .......... .......... ..........  856K   800K .......... .......... .......... .......... .......... 1.33M   850K .......... .......... .......... .......... .......... 1.09M   900K .......... .......... .......... .......... ..........  691K   950K .......... .......... .......... .......... .......... 3.98M  1000K .......... .......... .......... .......... ..........  724K  1050K .......... .......... .......... .......... .......... 1.10M  1100K .......... .......... .......... .......... .......... 1.03M  1150K .......... .......... .......... .......... .......... 3.49M  1200K .......... .......... .......... .......... .......... 1.41M  1250K .......... .......... .......... .......... .......... 1.02M  1300K .......... .......... .......... .......... .......... 12.2M  1350K .......... .......... .......... .......... .......... 1.14M  1400K .......... .......... .......... .......... .......... 21.2M  1450K .......... .......... .......... .......... .......... 1.03M  1500K .......... .......... .......... .......... .......... 3.68M  1550K .......... .......... .......... .......... .......... 1.49M  1600K .......... .......... .......... .......... .......... 1.01M  1650K .......... .......... .......... .......... .......... 19.4M  1700K .......... .......... .......... .......... .......... 4.00M  1750K .......... .......... .......... .......... .......... 1.55M  1800K .......... .......... .......... .......... .......... 17.9M  1850K .......... .......... .......... .......... .......... 1022K  1900K .......... .......... .......... .......... .......... 23.7M  1950K .......... .......... .......... .......... .......... 1.18M  2000K .......... .......... .......... .......... .......... 23.6M  2050K .......... .......... .......... .......... .......... 1.02M  2100K .......... .......... .......... .......... .......... 15.5M  2150K .......... .......... .......... .......... .......... 4.05M  2200K .......... .......... .......... .......... .......... 1.61M  2250K .......... .......... .......... .......... .......... 20.0M  2300K .......... .......... .......... .......... .......... 1.00M  2350K .......... .......... .......... .......... .......... 21.4M  2400K .......... .......... .......... .......... .......... 4.00M  2450K .......... .......... .......... .......... .......... 1.62M  2500K .......... .......... .......... .......... .......... 20.0M  2550K .......... .......... .......... .......... ..........  889K  2600K .......... .......... .......... .......... .......... 76.5M  2650K .......... .......... .......... .......... ..........  361M  2700K .......... .......... .......... .......... .......... 2.57M  2750K .......... .......... .......... .......... .......... 2.46M  2800K .......... .......... .......... .......... .......... 58.7M  2850K .......... .......... .......... .......... ..........  890K  2900K .......... .......... .......... .......... .......... 74.3M  2950K .......... .......... .......... .......... .......... 7.13M  3000K .......... .......... .......... .......... .......... 1.74M  3050K .......... .......... .......... .......... .......... 17.6M  3100K .......... .......... .......... .......... .......... 44.5M  3150K .......... .......... .......... .......... ..........  891K  3200K .......... .......... .......... .......... ..........  152M  3250K .......... .......... .......... .......... .......... 6.80M  3300K .......... .......... .......... .......... .......... 1.75M  3350K .......... .......... .......... .......... .......... 12.9M  3400K .......... .......... .......... .......... .......... 62.8M  3450K .......... .......... .......... .......... ..........  903K  3500K .......... .......... .......... .......... .......... 71.5M  3550K .......... .......... .......... .......... .......... 72.4M  3600K .......... .......... .......... .......... .......... 1.42M  3650K .......... .......... .......... .......... .......... 37.1M  3700K .......... .......... .......... .......... .......... 19.0M  3750K .......... .......... .......... .......... ..........  165M  3800K .......... .......... .......... .......... ..........  899K  3850K .......... .......... .......... .......... ..........  169M  3900K .......... .......... .......... .......... .......... 54.4M  3950K .......... .......... .......... .......... .......... 1.40M  4000K .......... .......... .......... .......... .......... 18.5M  4050K .......... .......... .......... .......... .......... 68.2M  4100K .......... .......... .......... .......... .......... 1.11M  4150K .......... .......... .......... .......... .......... 4.02M  4200K .......... .......... .......... .......... .......... 79.8M  4250K .......... .......... .......... .......... .......... 80.1M  4300K .......... .......... .......... .......... .......... 2.32M  4350K .......... .......... .......... .......... .......... 3.23M  4400K .......... .......... .......... .......... .......... 22.4M  4450K .......... .......... .......... .......... .......... 62.3M  4500K .......... .......... .......... .......... ..........  911K  4550K .......... .......... .......... .......... .......... 76.0M  4600K .......... .......... .......... .......... ..........  226M  4650K .......... .......... .......... .......... .......... 5.87M  4700K .......... .......... .......... .......... .......... 1.77M  4750K .......... .......... .......... .......... .......... 19.3M  4800K .......... .......... .......... .......... .......... 81.1M  4850K .......... .......... .......... .......... ..........  110M  4900K .......... .......... .......... .......... ..........  906K  4950K .......... .......... .......... .......... ..........  172M  5000K .......... .......... .......... .......... .......... 46.3M  5050K .......... .......... .......... .......... .......... 5.88M  5100K .......... .......... .......... .......... .......... 1.81M  5150K .......... .......... .......... .......... .......... 19.3M  5200K .......... .......... .......... .......... .......... 68.0M  5250K .......... .......... .......... .......... ..........  134M  5300K .......... .......... .......... .......... ..........  900K  5350K .......... .......... .......... .......... ..........  159M  5400K .......... .......... .......... .......... .......... 85.0M  5450K .......... .......... .......... .......... .......... 29.6M  5500K .......... .......... .......... .......... .......... 5.53M  5550K .......... .......... .......... .......... .......... 1.91M  5600K .......... .......... .......... .......... .......... 22.5M  5650K .......... .......... .......... .......... .......... 95.2M  5700K .......... .......... .......... .......... .......... 38.6M  5750K .......... .......... .......... .......... ..........  915K  5800K .......... .......... .......... .......... ..........  103M  5850K .......... .......... .......... .......... .......... 40.5M  5900K .......... .......... .......... .......... .......... 6.92M  5950K .......... .......... .......... .......... .......... 3.23M  6000K .......... .......... .......... .......... .......... 3.70M  6050K .......... .......... .......... .......... .......... 27.6M  6100K .......... .......... .......... .......... .......... 59.6M  6150K .......... .......... .......... .......... .......... 57.0M  6200K .......... .......... .......... .......... .......... 1.04M  6250K .......... .......... .......... .......... .......... 5.81M  6300K .......... .......... .......... .......... .......... 50.0M  6350K .......... .......... .......... .......... .......... 76.1M  6400K .......... .......... .......... .......... .......... 5.52M  6450K .......... .......... .......... .......... .......... 1.87M  6500K .......... .......... .......... .......... .......... 85.8M  6550K .......... .......... .......... .......... .......... 51.2M  6600K .......... .......... .......... .......... .......... 31.0M  6650K .......... .......... .......... .......... .......... 73.0M  6700K .......... .......... .......... .......... ..........  916K  6750K .......... .......... .......... .......... ..........  179M  6800K .......... .......... .......... .......... .......... 31.3M  6850K .......... .......... .......... .......... .......... 26.7M  6900K .......... .......... .......... .......... .......... 6.88M  6950K .......... .......... .......... .......... .......... 15.4M  7000K .......... .......... .......... .......... .......... 2.07M  7050K .......... .......... .......... .......... ..........  230M  7100K .......... .......... .......... .......... .......... 20.5M  7150K .......... .......... .......... .......... .......... 63.6M  7200K .......... .......... .......... .......... .......... 1.05M  7250K .......... .......... .......... .......... .......... 5.76M  7300K .......... .......... .......... .......... ..........  114M  7350K .......... .......... .......... .......... .......... 38.4M  7400K .......... .......... .......... .......... .......... 52.7M  7450K .......... .......... .......... .......... .......... 6.48M  7500K .......... .......... .......... .......... .......... 1.84M  7550K .......... .......... .......... .......... .......... 95.4M  7600K .......... .......... .......... .......... .......... 43.9M  7650K .......... .......... .......... .......... .......... 43.1M  7700K .......... .......... .......... .......... .......... 52.6M  7750K .......... .......... .......... .......... .......... 47.4M  7800K .......... .......... .......... .......... ..........  924K  7850K .......... .......... .......... .......... ..........  211M  7900K .......... .......... .......... .......... .......... 47.8M  7950K .......... .......... .......... .......... .......... 55.4M  8000K .......... .......... .......... .......... .......... 6.05M  8050K .......... .......... .......... .......... .......... 14.9M  8100K .......... .......... .......... .......... .......... 2.05M  8150K .......... .......... .......... .......... ..........  101M  8200K .......... .......... .......... .......... ..........  101M  8250K .......... .......... .......... .......... .......... 29.1M  8300K .......... .......... .......... .......... .......... 94.2M  8350K .......... .......... .......... .......... .......... 1.03M  8400K .......... .......... .......... .......... .......... 6.23M  8450K .......... .......... .......... .......... ..........  147M  8500K .......... .......... .......... .......... .......... 57.8M  8550K .......... .......... .......... .......... .......... 77.8M  8600K .......... .......... .......... .......... .......... 6.14M  8650K .......... .......... .......... .......... .......... 12.5M  8700K .......... .......... .......... .......... .......... 2.08M  8750K .......... .......... .......... .......... ..........  156M  8800K .......... .......... .......... .......... .......... 25.9M  8850K .......... .......... .......... .......... .......... 66.6M  8900K .......... .......... .......... .......... .......... 98.5M  8950K .......... .......... .......... .......... .......... 7.02M  9000K .......... .......... .......... .......... .......... 1.03M  9050K .......... .......... .......... .......... .......... 75.2M  9100K .......... .......... .......... .......... ..........  135M  9150K .......... .......... .......... .......... .......... 70.0M  9200K .......... .......... .......... .......... .......... 13.3M  9250K .......... .......... .......... .......... .......... 6.16M  9300K .......... .......... .......... .......... .......... 3.96M  9350K .......... .......... .......... .......... .......... 4.12M  9400K .......... .......... .......... .......... .......... 72.6M  9450K .......... .......... .......... .......... .......... 25.4M  9500K .......... .......... .......... .......... ..........  136M  9550K .......... .......... .......... .......... .......... 68.1M  9600K .......... .......... .......... .......... .......... 7.41M  9650K .......... .......... .......... .......... .......... 1.02M  9700K .......... .......... .......... .......... ..........  142M  9750K .......... .......... .......... .......... .......... 59.0M  9800K .......... .......... .......... .......... .......... 58.2M  9850K .......... .......... .......... .......... .......... 12.9M  9900K .......... .......... .......... .......... .......... 8.60M  9950K .......... .......... .......... .......... .......... 7.49M 10000K .......... .......... .......... .......... .......... 2.57M 10050K .......... .......... .......... .......... .......... 10.6M 10100K .......... .......... .......... .......... .......... 4.25M 10150K .......... .......... .......... .......... .......... 7.88M 10200K .......... .......... .......... .......... .......... 4.27M 10250K .......... .......... .......... .......... .......... 3.94M 10300K .......... .......... .......... .......... .......... 4.21M 10350K .......... .......... .......... .......... .......... 7.25M 10400K .......... .......... .......... .......... .......... 3.94M 10450K .......... .......... .......... .......... .......... 5.02M 10500K .......... .......... .......... .......... .......... 4.09M 10550K .......... .......... .......... .......... .......... 8.66M 10600K .......... .......... .......... .......... .......... 4.15M 10650K .......... .......... .......... .......... .......... 4.22M 10700K .......... .......... .......... .......... .......... 4.26M 10750K .......... .......... .......... .......... .......... 8.15M 10800K .......... .......... .......... .......... .......... 4.30M 10850K .......... .......... .......... .......... .......... 4.27M 10900K .......... .......... .......... .......... .......... 4.05M 10950K .......... .......... .......... .......... .......... 7.82M 11000K .......... .......... .......... .......... .......... 4.06M 11050K .......... .......... .......... .......... .......... 4.24M 11100K .......... .......... .......... .......... .......... 4.13M 11150K .......... .......... .......... .......... .......... 8.29M 11200K .......... .......... .......... .......... .......... 4.17M 11250K .......... .......... .......... .......... .......... 4.00M 11300K .......... .......... .......... .......... .......... 4.16M 11350K .......... .......... .......... .......... .......... 4.18M 11400K .......... .......... .......... .......... .......... 6.42M 11450K .......... .......... .......... .......... .......... 4.62M 11500K .......... .......... .......... .......... .......... 4.38M 11550K .......... .......... .......... .......... ................... .......... .......... .......... 4.80M 49900K .......... .......... .......... .......... .......... 7.73M 49950K .......... .......... .......... .......... .......... 6.05M 50000K .......... .......... .......... .......... .......... 6.40M 50050K .......... .......... .......... .......... .......... 4.14M 50100K .......... .......... .......... .......... .......... 3.96M 50150K .......... .......... .......... .......... .......... 4.71M 50200K .......... .......... .......... .......... .......... 2.68M 50250K .......... .......... .......... .......... .......... 8.44M 50300K .......... .......... .......... .......... .......... 5.33M 50350K .......... .......... .......... .......... .......... 6.51M 50400K .......... .......... .......... .......... .......... 7.65M 50450K .......... .......... .......... .......... .......... 4.16M 50500K .......... .......... .......... .......... .......... 4.37M 50550K .......... .......... .......... .......... .......... 3.44M 50600K .......... .......... .......... .......... .......... 5.86M 50650K .......... .......... .......... .......... .......... 3.43M 50700K .......... .......... .......... .......... .......... 6.77M 50750K .......... .......... .......... .......... .......... 5.16M 50800K .......... .......... .......... .......... .......... 6.84M 50850K .......... .......... .......... .......... .......... 4.33M 50900K .......... .......... .......... .......... .......... 7.78M 50950K .......... .......... .......... .......... .......... 5.40M 51000K .......... .......... .......... .......... .......... 4.13M 51050K .......... .......... .......... .......... .......... 3.94M 51100K .......... .......... .......... .......... .......... 5.21M 51150K .......... .......... .......... .......... .......... 3.59M 51200K .......... .......... .......... .......... .......... 4.59M 51250K .......... .......... .......... .......... .......... 6.74M 51300K .......... .......... .......... .......... .......... 5.19M 51350K .......... .......... .......... .......... .......... 4.99M 51400K .......... .......... .......... .......... .......... 5.82M 51450K .......... .......... .......... .......... .......... 8.58M 51500K .......... .......... .......... .......... .......... 4.89M 51550K .......... .......... .......... .......... .......... 3.03M 51600K .......... .......... .......... .......... .......... 8.99M 51650K .......... .......... .......... .......... .......... 2.73M 51700K .......... .......... .......... .......... .......... 6.14M 51750K .......... .......... .......... .......... .......... 2.66M 51800K .......... .......... .......... .......... .......... 1.35M 51850K .......... .......... .......... .......... .......... 36.4M 51900K .......... .......... .......... .......... ..........  999K 51950K .......... .......... .......... .......... .......... 17.3M 52000K .......... .......... .......... .......... ..........  708K 52050K .......... .......... .......... .......... .......... 14.0M 52100K .......... .......... .......... .......... .......... 63.9M 52150K .......... .......... .......... .......... .......... 70.7M 52200K .......... .......... .......... .......... ..........  282M 52250K .......... .......... .......... .......... ..........  126M 52300K .......... .......... .......... .......... .......... 1.70M 52350K .......... .......... .......... .......... .......... 14.4M 52400K .......... .......... .......... .......... .......... 58.0M 52450K .......... .......... .......... .......... .......... 2.02M 52500K .......... .......... .......... .......... .......... 1.36M 52550K .......... .......... .......... .......... .......... 82.6M 52600K .......... .......... .......... .......... ..........  120M 52650K .......... .......... .......... .......... .......... 42.0M 52700K .......... .......... .......... .......... .......... 90.3M 52750K .......... .......... .......... .......... ..........  154M 52800K .......... .......... .......... .......... .......... 1.60M 52850K .......... .......... .......... .......... .......... 35.8M 52900K .......... .......... .......... .......... ..........  104M 52950K .......... .......... .......... .......... ..........  845K 53000K .......... .......... .......... .......... .......... 34.6M 53050K .......... .......... .......... .......... ..........  148M 53100K .......... .......... .......... .......... ..........  175M 53150K .......... .......... .......... .......... .......... 49.7M 53200K .......... .......... .......... .......... ..........  103M 53250K .......... .......... .......... .......... ..........  206M 53300K .......... .......... .......... .......... ..........  400K 53350K .......... .......... .......... .......... ..........  209M 53400K .......... .......... .......... .......... ..........  236M 53450K .......... .......... .......... .......... ..........  238M 53500K .......... .......... .......... .......... ..........  326M 53550K .......... .......... .......... .......... ..........  323M 53600K .......... .......... .......... .......... ..........  337M 53650K .......... .......... .......... .......... ..........  347M 53700K .......... .......... .......... .......... ..........  358M 53750K .......... .......... .......... .......... ..........  264M 53800K .......... .......... .......... .......... .......... 59.5M 53850K .......... .......... .......... .......... .......... 2.23M 53900K .......... .......... .......... .......... .......... 1.20M 53950K .......... .......... .......... .......... .......... 80.1M 54000K .......... .......... .......... .......... .......... 78.9M 54050K .......... .......... .......... .......... ..........  176M 54100K .......... .......... .......... .......... .......... 31.7M 54150K .......... .......... .......... .......... .......... 1.53M 54200K .......... .......... .......... .......... .......... 98.8M 54250K .......... .......... .......... .......... ..........  823K 54300K .......... .......... .......... .......... .......... 76.1M 54350K .......... .......... .......... .......... .......... 99.9M 54400K .......... .......... .......... .......... ..........  130M 54450K .......... .......... .......... .......... .......... 1.71M 54500K .......... .......... .......... .......... .......... 17.0M 54550K .......... .......... .......... .......... .......... 14.5M 54600K .......... .......... .......... .......... ..........  840K 54650K .......... .......... .......... .......... ..........  102M 54700K .......... .......... .......... .......... ..........  329M 54750K .......... .......... .......... .......... ..........  268M 54800K .......... .......... .......... .......... .......... 1.70M 54850K .......... .......... .......... .......... .......... 14.5M 54900K .......... .......... .......... .......... .......... 14.8M 54950K .......... .......... .......... .......... ..........  842K 55000K .......... .......... .......... .......... ..........  214M 55050K .......... .......... .......... .......... ..........  254M 55100K .......... .......... .......... .......... ..........  262M 55150K .......... .......... .......... .......... ..........  300M 55200K .......... .......... .......... .......... .......... 1.49M 55250K .......... .......... .......... .......... .......... 15.8M 55300K .......... .......... .......... .......... ..........  846K 55350K .......... .......... .......... .......... ..........  123M 55400K .......... .......... .......... .......... ..........  365M 55450K .......... .......... .......... .......... ..........  401M 55500K .......... .......... .......... .......... ..........  447M 55550K .......... .......... .......... .......... .......... 1.57M 55600K .......... .......... .......... .......... .......... 10.8M 55650K .......... .......... .......... .......... .......... 1.96M 55700K .......... .......... .......... .......... .......... 1.41M 55750K .......... .......... .......... .......... ..........  118M 55800K .......... .......... .......... .......... ..........  160M 55850K .......... .......... .......... .......... ..........  170M 55900K .......... .......... .......... .......... .......... 1.54M 55950K .......... .......... .......... .......... .......... 13.6M 56000K .......... .......... .......... .......... .......... 2.03M 56050K .......... .......... .......... .......... .......... 1.38M 56100K .......... .......... .......... .......... ..........  110M 56150K .......... .......... .......... .......... ..........  109M 56200K .......... .......... .......... .......... ..........  101M 56250K .......... .......... .......... .......... .......... 1.63M 56300K .......... .......... .......... .......... .......... 2.33M 56350K .......... .......... .......... .......... .......... 8.14M 56400K .......... .......... .......... .......... .......... 1.29M 56450K .......... .......... .......... .......... ..........  367M 56500K .......... .......... .......... .......... ..........  353M 56550K .......... .......... .......... .......... ..........  231M 56600K .......... .......... .......... .......... .......... 1.61M 56650K .......... .......... .......... .......... .......... 2.47M 56700K .......... .......... .......... .......... .......... 18.9M 56750K .......... .......... .......... .......... .......... 1.13M 56800K .......... .......... .......... .......... ..........  206M 56850K .......... .......... .......... .......... ..........  371M 56900K .......... .......... .......... .......... ..........  316M 56950K .......... .......... .......... .......... ..........  326M 57000K .......... .......... .......... .......... .......... 1.56M 57050K .......... .......... .......... .......... .......... 2.35M 57100K .......... .......... .......... .......... .......... 5.90M 57150K .......... .......... .......... .......... .......... 1.38M 57200K .......... .......... .......... .......... ..........  172M 57250K .......... .......... .......... .......... ..........  163M 57300K .......... .......... .......... .......... ..........  142M 57350K .......... .......... .......... .......... .......... 1.68M 57400K .......... .......... .......... .......... .......... 2.41M 57450K .......... .......... .......... .......... .......... 26.4M 57500K .......... .......... .......... .......... .......... 1.14M 57550K .......... .......... .......... .......... ..........  218M 57600K .......... .......... .......... .......... ..........  255M 57650K .......... .......... .......... .......... ..........  269M 57700K .......... .......... .......... .......... ..........  340M 57750K .......... .......... .......... .......... .......... 1.54M 57800K .......... .......... .......... .......... .......... 2.41M 57850K .......... .......... .......... .......... .......... 7.55M 57900K .......... .......... .......... .......... .......... 1.34M 57950K .......... .......... .......... .......... ..........  144M 58000K .......... .......... .......... .......... ..........  110M 58050K .......... .......... .......... .......... ..........  243M 58100K .......... .......... .......... .......... ..........  165M 58150K .......... .......... .......... .......... .......... 1.56M 58200K .......... .......... .......... .......... .......... 2.40M 58250K .......... .......... .......... .......... .......... 6.39M 58300K .......... .......... .......... .......... .......... 1.36M 58350K .......... .......... .......... .......... ..........  214M 58400K .......... .......... .......... .......... ..........  218M 58450K .......... .......... .......... .......... ..........  253M 58500K .......... .......... .......... .......... .......... 1.56M 58550K .......... .......... .......... .......... .......... 2.45M 58600K .......... .......... .......... .......... ..........  219M 58650K .......... .......... .......... .......... .......... 1.15M 58700K .......... .......... .......... .......... ..........  151M 58750K .......... .......... .......... .......... .......... 4.07M 58800K .......... .......... .......... .......... .......... 2.76M 58850K .......... .......... .......... .......... .......... 14.5M 58900K .......... .......... .......... .......... .......... 6.19M 58950K .......... .......... .......... .......... .......... 3.96M 59000K .......... .......... .......... .......... .......... 2.61M 59050K .......... .......... .......... .......... .......... 2.09M 59100K .......... .......... .......... .......... .......... 3.88M 59150K .......... .......... .......... .......... .......... 2.90M 59200K .......... .......... .......... .......... .......... 17.7M 59250K .......... .......... .......... .......... .......... 9.76M 59300K .......... .......... .......... .......... .......... 2.93M 59350K .......... .......... .......... .......... .......... 9.83M 59400K .......... .......... .......... .......... .......... 1.35M 59450K .......... .......... .......... .......... .......... 19.8M 59500K .......... .......... .......... .......... .......... 4.59M 59550K .......... .......... .......... .......... .......... 2.79M 59600K .......... .......... .......... .......... .......... 19.2M 59650K .......... .......... .......... .......... .......... 4.88M 59700K .......... .......... .......... .......... .......... 4.39M 59750K .......... .......... .......... .......... .......... 7.54M 59800K .......... .......... .......... .......... .......... 1.39M 59850K .......... .......... .......... .......... .......... 27.9M 59900K .......... .......... .......... .......... .......... 2.64M 59950K .......... .......... .......... .......... .......... 4.71M 60000K .......... .......... .......... .......... .......... 24.0M 60050K .......... .......... .......... .......... .......... 4.70M 60100K .......... .......... .......... .......... .......... 4.18M 60150K .......... .......... .......... .......... .......... 2.94M 60200K .......... .......... .......... .......... .......... 1.98M 60250K .......... .......... .......... .......... .......... 8.71M 60300K .......... .......... .......... .......... .......... 3.27M 60350K .......... .......... .......... .......... .......... 4.41M 60400K .......... .......... .......... .......... ..........  123M 60450K .......... .......... .......... .......... .......... 4.22M 60500K .......... .......... .......... .......... ..........  326K 60550K .......... .......... .......... .......... .......... 19.4M 60600K .......... .......... .......... .......... .......... 20.6M 60650K .......... .........                                   34.0M=15s2023-02-10 11:05:04 (4.00 MB/s) - 'exp_quant.zip' saved [62125370]--2023-02-10 11:05:07--  https://www.ebi.ac.uk/gxa/sc/experiment/E-GEOD-100058/download?fileType=experiment-design&accessKey=Resolving www.ebi.ac.uk (www.ebi.ac.uk)... 193.62.193.80Connecting to www.ebi.ac.uk (www.ebi.ac.uk)|193.62.193.80|:443... connected.HTTP request sent, awaiting response... 200 Length: 567421 (554K) [text/plain]Saving to: 'exp_design.tsv'     0K .......... .......... .......... .......... ..........  9% 62.9K 8s    50K .......... .......... .......... .......... .......... 18% 65.2K 7s   100K .......... .......... .......... .......... .......... 27%  104K 5s   150K .......... .......... .......... .......... .......... 36% 25.6K 7s   200K .......... .......... .......... .......... .......... 45%  105K 5s   250K .......... .......... .......... .......... .......... 54%  131K 4s   300K .......... .......... .......... .......... .......... 63%  111K 3s   350K .......... .......... .......... .......... .......... 72%  159K 2s   400K .......... .......... .......... .......... .......... 81%  174K 1s   450K .......... .......... .......... .......... .......... 90%  195K 1s   500K .......... .......... .......... .......... .......... 99%  261K 0s   550K ....                                                  100% 7862G=6.3s2023-02-10 11:05:14 (87.3 KB/s) - 'exp_design.tsv' saved [567421/567421]
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator (Test #1)" name="0" time="36.403671741485596">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "input_type|input_values": "1, 5, 10",  "input_type|parameter_values": "list_comma_separated_values",  "parameter_name": "perplexity" }, "job": {  "command_line": "mkdir outputs; for param in $(echo \u00271, 5, 10\u0027 | sed \u0027s/,/ /g\u0027); do echo $param \u003e outputs/\u0027perplexity\u0027_$param\\.txt; done",  "command_version": null,  "create_time": "2023-02-10T11:05:08.264808",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-d2chh",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "8ba2be5aa3a3158f",  "inputs": {},  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "0E-7",    "title": "Job Runtime (Wall Clock)",    "value": "0 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676027128.0000000",    "title": "Job End Time",    "value": "2023-02-10 11:05:28"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676027128.0000000",    "title": "Job Start Time",    "value": "2023-02-10 11:05:28"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "parameter_iteration": {    "id": "980b7d8a0c727c51",    "src": "hdca"   }  },  "outputs": {   "__new_primary_file_parameter_iteration|perplexity_10__": {    "id": "94f772ebb5f6e365",    "src": "hda",    "uuid": "5065340f-c277-4747-bff3-91818ec3453e"   },   "__new_primary_file_parameter_iteration|perplexity_1__": {    "id": "5425b94d4f1c63a8",    "src": "hda",    "uuid": "e9d1d2c2-66d4-4f4c-bbc3-a5f5c876611c"   },   "__new_primary_file_parameter_iteration|perplexity_5__": {    "id": "b1e74933e8c9adc8",    "src": "hda",    "uuid": "87de0387-7116-495d-868c-923f10974525"   }  },  "params": {   "__input_ext": "\"data\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "input_type": "{\"__current_case__\": 0, \"input_values\": \"1, 5, 10\", \"parameter_values\": \"list_comma_separated_values\"}",   "parameter_name": "\"perplexity\""  },  "state": "ok",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator/0.0.1+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-10T11:05:43.748443",  "user_email": "tests@fake.org" }, "output_problems": [  "Collection element perplexity_1 of collection parameter_iteration: Test output file (perplexity_1.txt) is missing. If you are using planemo, try adding --update_test_data to generate it." ], "status": "failure", "test_index": 0, "time_seconds": 36.403671741485596, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_parameter_iterator/scanpy_parameter_iterator", "tool_version": "0.0.1+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.10740494728088379">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10740494728088379, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.4.3+galaxy10"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x (Test #1)" name="0" time="0.10719752311706543">
        
            <error type="error" message="Input staging problem: Test input file (matrix.mtx) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (matrix.mtx) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.10719752311706543, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scanpy_read_10x/scanpy_read_10x", "tool_version": "1.6.0+galaxy0"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert (Test #1)" name="0" time="0.1015462875366211">
        
            <error type="error" message="Input staging problem: Test input file (input.loom) cannot be found."><![CDATA[
                { "execution_problem": "Input staging problem: Test input file (input.loom) cannot be found.", "status": "error", "test_index": 0, "time_seconds": 0.1015462875366211, "tool_id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/sceasy_convert/sceasy_convert", "tool_version": "0.0.5+galaxy1"}
            ]]></error>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #1)" name="0" time="52.655763149261475">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    louvain[uns]-    iroot-    neighbors-    louvain[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #2)" name="1" time="29.07555317878723">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    leiden[uns]-    iroot-    neighbors-    leiden[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #3)" name="2" time="29.53946542739868">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #4)" name="3" time="28.911238431930542">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    pca[obsm]-    X_pca[varm]-    PCs
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #5)" name="4" time="29.183270692825317">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    diffmap_evals[obsm]-    X_pca-    X_diffmap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #6)" name="5" time="30.572676181793213">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot[obsm]-    X_tsne
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: Consider installing the package MulticoreTSNE (https://github.com/DmitryUlyanov/Multicore-TSNE). Even for n_jobs=1 this speeds up the computation considerably and might yield better converged results.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #7)" name="6" time="39.109853744506836">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    umap[obsm]-    X_pca-    X_umap[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #8)" name="7" time="30.202823400497437">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    draw_graph[obsm]-    X_pca-    X_draw_graph_fr[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Package 'fa2' is not installed, falling back to layout 'fr'.To use the faster and better ForceAtlas2 layout, install package 'fa2' (`pip install fa2`).
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #9)" name="8" time="29.680578231811523">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors-    paga-    paul15_clusters_sizes[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_cluster_reduce_dimension/scanpy_cluster_reduce_dimension (Test #10)" name="9" time="30.589136600494385">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters-    dpt_groups-    dpt_order-    dpt_order_indices[uns]-    diffmap_evals-    iroot-    neighbors-    dpt_changepoints-    dpt_grouptips[obsm]-    X_diffmap-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #1)" name="0" time="49.03235721588135">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    336 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #2)" name="1" time="33.59514331817627">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_genes[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #3)" name="2" time="27.684147596359253">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #4)" name="3" time="28.011346340179443">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs[var]-    highly_variable-    means-    dispersions-    dispersions_norm[uns]-    hvg
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'blobs' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #5)" name="4" time="31.720371961593628">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    highly_variable-    means-    dispersions-    dispersions_norm[uns]-    cell_type_colors-    highlights-    iroot-    hvg
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #6)" name="5" time="29.572884559631348">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    320 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #7)" name="6" time="29.733375310897827">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    10 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter (Test #8)" name="7" time="35.44202947616577">
        
            
                <error type="error" message="Tool exit code: 137"><![CDATA[
                    { "inputs": {  "adata": {   "id": "9ee15f63db787cb9",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "pp.downsample_counts",  "method|random_state": "0",  "method|replace": false,  "method|total_counts": "20000" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/9/a/c/dataset_9ac52235-844c-4262-b32f-6295d1ab5ad9.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru\u0027 \u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": "scanpy version: 1.7.1",  "create_time": "2023-02-10T10:44:10.180469",  "dependencies": [],  "exit_code": 137,  "external_id": "gxy-jj7bm",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "334e7480653a046e",  "inputs": {   "adata": {    "id": "9ee15f63db787cb9",    "src": "hda",    "uuid": "9ac52235-844c-4262-b32f-6295d1ab5ad9"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 137 ()",    "error_level": 3,    "exit_code": 137,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676025859.0000000",    "title": "Job End Time",    "value": "2023-02-10 10:44:19"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676025853.0000000",    "title": "Job Start Time",    "value": "2023-02-10 10:44:13"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "11177a9eb255ce56",    "src": "hda",    "uuid": "9273feb2-ccf3-4663-ae54-a776ce7191ee"   },   "hidden_output": {    "id": "ac5604950f7897ba",    "src": "hda",    "uuid": "f58688e1-86df-4f1d-acdf-63788826e1c6"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 5, \"counts_per_cell\": \"\", \"method\": \"pp.downsample_counts\", \"random_state\": \"0\", \"replace\": \"false\", \"total_counts\": \"20000\"}"  },  "state": "error",  "stderr": "/galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027\n",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0",  "tool_stderr": "/galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027\n",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-10T10:44:29.488983",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0, exit_code: 137, stderr: /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0, exit_code: 137, stderr: /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter/1.7.1+galaxy0, exit_code: 137, stderr: /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python \u0027/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat\u0027\n." ], "status": "failure", "test_index": 7, "time_seconds": 35.44202947616577, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_filter/scanpy_filter", "tool_version": "1.7.1+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            /galaxy/server/database/jobs_directory/000/62/tool_script.sh: line 23:    58 Killed                  python '/galaxy/server/database/jobs_directory/000/62/configs/tmp753gbaru' >> '/galaxy/server/database/objects/f/5/8/dataset_f58688e1-86df-4f1d-acdf-63788826e1c6.dat'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #1)" name="0" time="41.95526051521301">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1000[obs]-    n_genes_by_counts-    log1p_n_genes_by_counts-    total_counts-    log1p_total_counts-    pct_counts_in_top_50_genes-    pct_counts_in_top_100_genes-    pct_counts_in_top_200_genes-    pct_counts_in_top_500_genes-    total_counts_mito-    log1p_total_counts_mito-    pct_counts_mito-    total_counts_negative-    log1p_total_counts_negative-    pct_counts_negative[var]-    mito-    negative-    n_cells_by_counts-    mean_counts-    log1p_mean_counts-    pct_dropout_by_counts-    total_counts-    log1p_total_counts
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #2)" name="1" time="44.360817670822144">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #11)" name="10" time="32.88475012779236">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[var]-    mean-    std[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #12)" name="11" time="33.48309302330017">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #3)" name="2" time="45.007169246673584">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    neighbors[obsm]-    X_pca[obsp]-    distances-    connectivities
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Root cell index [840] does not exist for 100 samples. It’s ignored.... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #4)" name="3" time="29.223265647888184">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    score[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #5)" name="4" time="36.37171268463135">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    S_score-    G2M_score-    phase[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.... storing 'phase' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #6)" name="5" time="31.80293035507202">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    rank_genes_groups
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #7)" name="6" time="63.3529109954834">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #8)" name="7" time="32.21215009689331">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    724 × 221[obs]-    bulk_labels-    n_genes-    percent_mito-    n_counts-    louvain[uns]-    rank_genes_groups[obsm]-    X_pca-    X_umap
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #9)" name="8" time="29.483853340148926">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect (Test #10)" name="9" time="27.437549829483032">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "251188947d9b29c4",   "src": "hda"  },  "advanced_common|show_log": true,  "method|method": "pp.scale",  "method|zero_center": true }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/7/5/dataset_e756b045-0f6f-4f04-9e5d-e0abaa57cedc.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/83/configs/tmp13b45p3j\u0027 \u003e \u0027/galaxy/server/database/objects/b/c/5/dataset_bc5752fd-c865-4df8-aa68-444a6856e689.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/83/configs/tmp13b45p3j\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/b/c/5/dataset_bc5752fd-c865-4df8-aa68-444a6856e689.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/b/c/5/dataset_bc5752fd-c865-4df8-aa68-444a6856e689.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": null,  "create_time": "2023-02-10T10:47:38.620388",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-rdl2k",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "6949bd7befecd508",  "inputs": {   "adata": {    "id": "251188947d9b29c4",    "src": "hda",    "uuid": "e756b045-0f6f-4f04-9e5d-e0abaa57cedc"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "anndata_out": {    "id": "8b29d2c196e1c35c",    "src": "hda",    "uuid": "3daedfe6-b4fd-49e1-9b79-f6de46e8bfd7"   },   "hidden_output": {    "id": "4424c50595d981d5",    "src": "hda",    "uuid": "bc5752fd-c865-4df8-aa68-444a6856e689"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "method": "{\"__current_case__\": 6, \"max_value\": \"\", \"method\": \"pp.scale\", \"zero_center\": \"true\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect/1.7.1+galaxy0",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-10T10:47:50.726436",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect/1.7.1+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect/1.7.1+galaxy0, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect/1.7.1+galaxy0, exit_code: None, stderr: ." ], "status": "failure", "test_index": 9, "time_seconds": 27.437549829483032, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_inspect/scanpy_inspect", "tool_version": "1.7.1+galaxy0"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #1)" name="0" time="31.659461498260498">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type-    n_counts[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #2)" name="1" time="30.481686115264893">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 998[obs]-    n_counts_all[var]-    n_counts-    mean-    std[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #3)" name="2" time="31.96193289756775">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    100 × 1592[obs]-    paul15_clusters[uns]-    iroot-    log1p[obsm]-    X_pca
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'paul15_clusters' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_normalize/scanpy_normalize (Test #4)" name="3" time="30.068994998931885">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    1000 × 1[obs]-    n_counts_all-    n_genes[var]-    n_counts-    mean-    std-    n_cells[uns]-    log1p
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Some cells have total count of genes equal to zero
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="66.21487355232239">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        basis='umap',    color=['HES4'],    use_raw=True,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='inferno',    palette='inferno',    frameon=True,                    size=1.0,        )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="60.50978374481201">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.scatter(        adata,    save='.png',    show=False,        x='EKLF',    y='Cebpa',    use_raw=False,    sort_order=True,                        projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',    color_map='',    palette='bwr',    frameon=False,        title='A title',                size=1.0,        )anndata.h5adscatter.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file scatter.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="31.44082522392273">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca(        adata,    save='.pdf',    show=False,            color=['CD3D', 'CD79A'],        use_raw=False,    sort_order=True,                components=['1,2', '1,3'],                projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=2,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adpca.pdf
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="29.78159260749817">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_loadings(        adata,    save='.png',    show=False,        components=[1, 2, 3])anndata.h5adpca_loadings.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="31.411208152770996">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_variance_ratio(        adata,    save='.png',    show=False,        n_pcs=5,    log=False)anndata.h5adpca_variance_ratio.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="31.722116708755493">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.pca_overview(        adata,    save='.png',    show=False,                use_raw=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adpca.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="23.21589469909668">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "0bdb78a89ea5c5e9",   "src": "hda"  },  "format": "png",  "method|arrows": false,  "method|edges|edges": "False",  "method|matplotlib_pyplot_scatter|edgecolors": "face",  "method|matplotlib_pyplot_scatter|linewidths": "0",  "method|method": "pl.tsne",  "method|plot|frameon": true,  "method|plot|hspace": "0.25",  "method|plot|legend_fontsize": "1",  "method|plot|legend_fontweight": "normal",  "method|plot|legend_loc": "right margin",  "method|plot|ncols": "4",  "method|plot|palette": "viridis",  "method|plot|projection": "2d",  "method|plot|size": "1",  "method|plot|wspace": "0.1",  "method|sort_order": true,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/f/0/dataset_df0c724b-ff31-4d9d-8613-41953b9e074b.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/181/configs/tmp1m3vd07r\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/181/configs/tmp1m3vd07r\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-02-10T11:01:16.100155",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-vbr2m",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "e9f9112cf89ecdaa",  "inputs": {   "adata": {    "id": "0bdb78a89ea5c5e9",    "src": "hda",    "uuid": "df0c724b-ff31-4d9d-8613-41953b9e074b"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "9d86000c3e4a33b6",    "src": "hda",    "uuid": "e81a1a0d-0421-4238-bffe-8a40c06c8a31"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 13, \"arrows\": \"false\", \"color\": \"\", \"edges\": {\"__current_case__\": 1, \"edges\": \"False\"}, \"groups\": \"\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.tsne\", \"plot\": {\"color_map\": \"\", \"components\": [], \"frameon\": \"true\", \"hspace\": \"0.25\", \"legend_fontsize\": \"1\", \"legend_fontweight\": \"normal\", \"legend_loc\": \"right margin\", \"ncols\": \"4\", \"palette\": \"viridis\", \"projection\": \"2d\", \"size\": \"1.0\", \"title\": \"\", \"wspace\": \"0.1\"}, \"sort_order\": \"true\", \"use_raw\": \"false\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-10T11:01:25.502850",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Standard output of the job different than expected\nExpected text matching expression \u0027sc.pl.tsne\u0027 in output (\u0027\u0027)" ], "status": "failure", "test_index": 14, "time_seconds": 23.21589469909668, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="32.29570913314819">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.umap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,        edges=True,    edges_width=0.1,    edges_color='AliceBlue',            arrows=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5adumap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="31.740426301956177">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.diffmap(        adata,    save='.png',    show=False,            color=['paul15_clusters'],        use_raw=False,    sort_order=True,                            projection='2d',    legend_loc='right margin',        legend_fontsize=1,            legend_fontweight='normal',        size=1.0,            palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addiffmap.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="30.945977687835693">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.draw_graph(        adata,    save='.png',    show=False,                use_raw=False,    edges=True,    edges_width=0.1,    edges_color='Crimson',    arrows=False,    sort_order=False,                            projection='2d',    legend_loc='right margin',                legend_fontweight='normal',                palette='viridis',    frameon=True,    ncols=4,    wspace=0.1,    hspace=0.25,                            linewidths=0.0,    edgecolors='face'    )anndata.h5addraw_graph_fr.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="40.226982831954956">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dpt_timeseries(        adata,    save='.png',    show=False,        color_map='viridis',    as_heatmap=True)anndata.h5addpt_timeseries.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="23.131160974502563">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "dd5b0394c65e4c9a",   "src": "hda"  },  "format": "png",  "method|fontsize": "8",  "method|method": "pl.rank_genes_groups",  "method|n_genes": "10",  "method|ncols": "4",  "method|sharey": true }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/7/b/dataset_27b1fcb1-bed3-4f18-99f0-f86b96511ac9.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/190/configs/tmp4pax6zye\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/190/configs/tmp4pax6zye\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-02-10T11:02:22.166571",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-xnkhh",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "00ff8eb7390ce95d",  "inputs": {   "adata": {    "id": "dd5b0394c65e4c9a",    "src": "hda",    "uuid": "27b1fcb1-bed3-4f18-99f0-f86b96511ac9"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "4793c4e77ed05743",    "src": "hda",    "uuid": "93bed76c-4ec5-411d-ad30-5db3bf67052c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 22, \"fontsize\": \"8\", \"gene_symbols\": \"\", \"groups\": \"\", \"method\": \"pl.rank_genes_groups\", \"n_genes\": \"10\", \"ncols\": \"4\", \"sharey\": \"true\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-10T11:02:30.689417",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Standard output of the job different than expected\nExpected text matching expression \u0027sc.pl.rank_genes_groups\u0027 in output (\u0027\u0027)" ], "status": "failure", "test_index": 19, "time_seconds": 23.131160974502563, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="31.271246910095215">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.heatmap(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    figsize=(10, 3),            swap_axes=True,    show_gene_labels=False,    cmap='YlGnBu',    origin='upper'        )anndata.h5adheatmap.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="37.767232179641724">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "45c57a59d292dcba",   "src": "hda"  },  "format": "png",  "method|genes|n_genes": "10",  "method|genes|select": "n_genes",  "method|method": "pl.rank_genes_groups_violin",  "method|split": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/1/c/dataset_e1c52ddb-b4e4-4178-88f2-3f3fb3415df6.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/193/configs/tmpa7o4lz4q\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/193/configs/tmpa7o4lz4q\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-02-10T11:02:45.770846",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-m8kwl",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "f14267967918c9e1",  "inputs": {   "adata": {    "id": "45c57a59d292dcba",    "src": "hda",    "uuid": "e1c52ddb-b4e4-4178-88f2-3f3fb3415df6"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676026978.0000000",    "title": "Job End Time",    "value": "2023-02-10 11:02:58"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676026975.0000000",    "title": "Job Start Time",    "value": "2023-02-10 11:02:55"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {   "collection_png": {    "id": "d719b3e6581ca864",    "src": "hdca"   }  },  "outputs": {},  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 23, \"gene_symbols\": \"\", \"genes\": {\"__current_case__\": 0, \"n_genes\": \"10\", \"select\": \"n_genes\"}, \"groups\": \"\", \"method\": \"pl.rank_genes_groups_violin\", \"split\": \"true\", \"use_raw\": \"false\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/193/configs/tmpa7o4lz4q\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    use_raw=False,\n    split=True,\n    strip=True,\n    jitter=True,\n    size=1.0,\n    scale=\u0027width\u0027)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/193/configs/tmpa7o4lz4q\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    n_genes=10,\n    use_raw=False,\n    split=True,\n    strip=True,\n    jitter=True,\n    size=1.0,\n    scale=\u0027width\u0027)\n\n",  "traceback": null,  "update_time": "2023-02-10T11:03:08.593530",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/193/configs/tmpa7o4lz4q\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Output collection \u0027collection_png\u0027: failed to find identifier \u0027cell_type_Ery\u0027 in the tool generated elements []" ], "status": "failure", "test_index": 20, "time_seconds": 37.767232179641724, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_violin(        adata,    save='.png',    show=False,                n_genes=10,    use_raw=False,    split=True,    strip=True,    jitter=True,    size=1.0,    scale='width')
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/193/configs/tmpa7o4lz4q", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="31.758965253829956">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "45c57a59d292dcba",   "src": "hda"  },  "format": "png",  "method|color_map": "viridis",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_scatter|edgecolors": "face",  "method|matplotlib_pyplot_scatter|linewidths": "0",  "method|method": "pl.rank_genes_groups_dotplot",  "method|n_genes": "10",  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/1/c/dataset_e1c52ddb-b4e4-4178-88f2-3f3fb3415df6.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/194/configs/tmpv7phhreg\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/194/configs/tmpv7phhreg\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-10T11:02:53.089705",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-8lpfx",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "3418626c5f3322a6",  "inputs": {   "adata": {    "id": "45c57a59d292dcba",    "src": "hda",    "uuid": "e1c52ddb-b4e4-4178-88f2-3f3fb3415df6"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676026979.0000000",    "title": "Job End Time",    "value": "2023-02-10 11:02:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676026975.0000000",    "title": "Job Start Time",    "value": "2023-02-10 11:02:55"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "9a8e409f4b9b73dd",    "src": "hda",    "uuid": "4b400229-ced9-4f96-a520-7a2994e7033c"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 24, \"color_map\": \"viridis\", \"dendrogram\": \"false\", \"dot_max\": \"\", \"dot_min\": \"\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_dotplot\", \"n_genes\": \"10\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpv7phhreg\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpv7phhreg\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_dotplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    color_map=\u0027viridis\u0027,\n    \n    linewidths=0.0,\n    edgecolors=\u0027face\u0027\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-10T11:03:09.632929",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpv7phhreg\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/194/configs/tmpv7phhreg\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 21, "time_seconds": 31.758965253829956, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_dotplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            color_map='viridis',        linewidths=0.0,    edgecolors='face'            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/194/configs/tmpv7phhreg", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="32.376811265945435">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "4a8e71991b59a601",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_imshow|cmap": "viridis",  "method|matplotlib_pyplot_imshow|interpolation": "None",  "method|matplotlib_pyplot_imshow|origin": "upper",  "method|method": "pl.rank_genes_groups_heatmap",  "method|n_genes": "10",  "method|show_gene_labels": false,  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/f/4/4/dataset_f442f19f-b586-49a9-a327-9adc2bab94d8.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/197/configs/tmphluc8rju\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/197/configs/tmphluc8rju\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-10T11:03:25.810058",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-84rch",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "0d3e4b60b938c163",  "inputs": {   "adata": {    "id": "4a8e71991b59a601",    "src": "hda",    "uuid": "f442f19f-b586-49a9-a327-9adc2bab94d8"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676027011.0000000",    "title": "Job End Time",    "value": "2023-02-10 11:03:31"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676027007.0000000",    "title": "Job Start Time",    "value": "2023-02-10 11:03:27"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "9ecb29404f210d43",    "src": "hda",    "uuid": "177a4a87-655a-4870-beef-e80182242c1a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 25, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_imshow\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"interpolation\": \"None\", \"origin\": \"upper\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_heatmap\", \"n_genes\": \"10\", \"show_gene_labels\": \"false\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmphluc8rju\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_heatmap(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    show_gene_labels=False,\n    cmap=\u0027viridis\u0027,\n    origin=\u0027upper\u0027\n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmphluc8rju\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_heatmap(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    show_gene_labels=False,\n    cmap=\u0027viridis\u0027,\n    origin=\u0027upper\u0027\n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-10T11:03:41.151711",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmphluc8rju\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/197/configs/tmphluc8rju\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 22, "time_seconds": 32.376811265945435, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_heatmap(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            swap_axes=False,    show_gene_labels=False,    cmap='viridis',    origin='upper'        )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/197/configs/tmphluc8rju", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="32.30683398246765">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "4a8e71991b59a601",   "src": "hda"  },  "format": "png",  "method|dendrogram": false,  "method|log": false,  "method|matplotlib_pyplot_pcolor|cmap": "viridis",  "method|matplotlib_pyplot_pcolor|edgecolors": "face",  "method|matplotlib_pyplot_pcolor|snap": false,  "method|method": "pl.rank_genes_groups_matrixplot",  "method|n_genes": "10",  "method|swap_axes": false,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/f/4/4/dataset_f442f19f-b586-49a9-a327-9adc2bab94d8.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/198/configs/tmp4xn7_cji\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/198/configs/tmp4xn7_cji\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-10T11:03:25.933192",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-26gdh",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "9e55550af491c489",  "inputs": {   "adata": {    "id": "4a8e71991b59a601",    "src": "hda",    "uuid": "f442f19f-b586-49a9-a327-9adc2bab94d8"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676027012.0000000",    "title": "Job End Time",    "value": "2023-02-10 11:03:32"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676027009.0000000",    "title": "Job Start Time",    "value": "2023-02-10 11:03:29"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "fb20ba8471c5ac8f",    "src": "hda",    "uuid": "3eb0b152-7ed0-4f75-953b-1a4f1699b801"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 26, \"dendrogram\": \"false\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"matplotlib_pyplot_pcolor\": {\"alpha\": \"\", \"cmap\": \"viridis\", \"edgecolors\": \"face\", \"snap\": \"false\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.rank_genes_groups_matrixplot\", \"n_genes\": \"10\", \"swap_axes\": \"false\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmp4xn7_cji\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmp4xn7_cji\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_matrixplot(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=False,\n    \n    \n    swap_axes=False,\n    cmap=\u0027viridis\u0027,\n    edgecolors=\u0027face\u0027,\n    snap=False\n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-10T11:03:42.013578",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmp4xn7_cji\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/198/configs/tmp4xn7_cji\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 23, "time_seconds": 32.30683398246765, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_matrixplot(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=False,            swap_axes=False,    cmap='viridis',    edgecolors='face',    snap=False        )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/198/configs/tmp4xn7_cji", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="26.988628149032593">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "5bdbd3ae9f40f4bd",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|log": false,  "method|method": "pl.rank_genes_groups_stacked_violin",  "method|n_genes": "10",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/e/4/8/dataset_e486a1fe-e603-4fdd-9cdc-55f33e5966f3.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/201/configs/tmpm1gbqrmd\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/201/configs/tmpm1gbqrmd\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-10T11:03:53.838681",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-jhx77",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "42f0040ac3dd4f50",  "inputs": {   "adata": {    "id": "5bdbd3ae9f40f4bd",    "src": "hda",    "uuid": "e486a1fe-e603-4fdd-9cdc-55f33e5966f3"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676027039.0000000",    "title": "Job End Time",    "value": "2023-02-10 11:03:59"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676027035.0000000",    "title": "Job Start Time",    "value": "2023-02-10 11:03:55"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "8131282e28e1ab7c",    "src": "hda",    "uuid": "b73db27e-9060-4751-a703-7edb2e5db90b"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 27, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groups\": \"\", \"key\": \"\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.rank_genes_groups_stacked_violin\", \"n_genes\": \"10\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/201/configs/tmpm1gbqrmd\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/201/configs/tmpm1gbqrmd\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.rank_genes_groups_stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    \n    \n    n_genes=10,\n    \n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\n",  "traceback": null,  "update_time": "2023-02-10T11:04:08.326982",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/201/configs/tmpm1gbqrmd\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/201/configs/tmpm1gbqrmd\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 486, in _read_args_from_h5ad\n    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 510, in _read_key_value_from_h5\n    _read_key_value_from_h5(f, d[key_write], key + \u0027/\u0027 + k, k, chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 544, in _read_key_value_from_h5\n    key, value = postprocess_reading(key, value)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 541, in postprocess_reading\n    value = value.astype(new_dtype)\nValueError: invalid shape in fixed-type tuple.\n." ], "status": "failure", "test_index": 24, "time_seconds": 26.988628149032593, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.rank_genes_groups_stacked_violin(        adata,    save='.png',    show=False,                    n_genes=10,                log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,        stripplot=True,    jitter=True,    size=1.0,        scale='width',    row_palette='muted',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,            )
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/201/configs/tmpm1gbqrmd", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 486, in _read_args_from_h5ad    _read_key_value_from_h5(f, d, key, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 510, in _read_key_value_from_h5    _read_key_value_from_h5(f, d[key_write], key + '/' + k, k, chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 544, in _read_key_value_from_h5    key, value = postprocess_reading(key, value)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 541, in postprocess_reading    value = value.astype(new_dtype)ValueError: invalid shape in fixed-type tuple.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="33.90395903587341">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.dotplot(        adata,    save='.png',    show=False,            var_names=['CD79A', 'MS4A1', 'CD8A', 'CD8B', 'LYZ', 'GNLY', 'NKG7', 'RP3-467N11.1', 'FCGR3A', 'FCER1A', 'CST3', 'POU2AF1', 'LINC00402'],    groupby='louvain',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,    var_group_positions=[(0, 1), (11, 12)],    var_group_labels=['B cells', 'dendritic'],            color_map='hot',    dot_max=0.7,    dot_min=0.1,        linewidths=0.0,    edgecolors='face'            )anndata.h5addotplot.png
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="25.832788705825806">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "8315096a823465d3",   "src": "hda"  },  "format": "png",  "method|key_variables|keys": "n_genes, percent_mito, n_counts",  "method|key_variables|type": "custom",  "method|log": false,  "method|method": "pl.violin",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|use_raw": false,  "method|violin_plot|multi_panel|height": "20",  "method|violin_plot|multi_panel|multi_panel": "True",  "method|violin_plot|multi_panel|width": "20",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/0/e/5/dataset_0e5f3e2c-cfa8-45fe-9eb7-6a437990117a.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/161/configs/tmpsvb3tc9a\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/161/configs/tmpsvb3tc9a\u0027 \u0026\u0026 ls .",  "command_version": null,  "create_time": "2023-02-10T10:58:38.422283",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-92mrm",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "09ceae00aec49ac7",  "inputs": {   "adata": {    "id": "8315096a823465d3",    "src": "hda",    "uuid": "0e5f3e2c-cfa8-45fe-9eb7-6a437990117a"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "56a0fd948b0698af",    "src": "hda",    "uuid": "849d9b9f-0ac8-4196-96fc-d1ce7a8620c0"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 3, \"groupby\": \"\", \"key_variables\": {\"__current_case__\": 2, \"keys\": \"n_genes, percent_mito, n_counts\", \"type\": \"custom\"}, \"log\": \"false\", \"method\": \"pl.violin\", \"rotation\": \"\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"use_raw\": \"false\", \"violin_plot\": {\"multi_panel\": {\"__current_case__\": 0, \"height\": \"20\", \"multi_panel\": \"True\", \"width\": \"20\"}, \"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}, \"xlabel\": \"\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-10T10:58:48.637549",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: None, stderr: .",  "Standard output of the job different than expected\nExpected text matching expression \u0027sc.pl.violin\u0027 in output (\u0027\u0027)" ], "status": "failure", "test_index": 4, "time_seconds": 25.832788705825806, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="33.08305764198303">
        
            
                <error type="error" message="Tool exit code: 0"><![CDATA[
                    { "inputs": {  "adata": {   "id": "f98d3e025ea3629d",   "src": "hda"  },  "format": "png",  "method|dendrogram": true,  "method|figsize|test": "no",  "method|groupby": "cell_type",  "method|log": false,  "method|method": "pl.stacked_violin",  "method|num_categories": "7",  "method|row_palette": "muted",  "method|seaborn_violinplot|bw": "scott",  "method|seaborn_violinplot|color": "AliceBlue",  "method|seaborn_violinplot|linewidth": "0",  "method|seaborn_violinplot|palette": "viridis",  "method|seaborn_violinplot|saturation": "0.75",  "method|standard_scale": "None",  "method|swap_axes": true,  "method|use_raw": false,  "method|var_names|type": "all",  "method|violin_plot|scale": "width",  "method|violin_plot|stripplot|stripplot": "True" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/b/4/4/dataset_b4451856-c3dd-4cce-93ec-8c8d7029aeb8.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/162/configs/tmpiqbx6zne\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/162/configs/tmpiqbx6zne\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-10T10:58:41.516894",  "dependencies": [],  "exit_code": 0,  "external_id": "gxy-kwgk5",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "92365543249ad865",  "inputs": {   "adata": {    "id": "f98d3e025ea3629d",    "src": "hda",    "uuid": "b4451856-c3dd-4cce-93ec-8c8d7029aeb8"   }  },  "job_messages": [],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "6.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "6 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676026729.0000000",    "title": "Job End Time",    "value": "2023-02-10 10:58:49"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676026723.0000000",    "title": "Job Start Time",    "value": "2023-02-10 10:58:43"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "280e5826506ebe7c",    "src": "hda",    "uuid": "f8e9f25f-917c-4f3d-b904-35ecc8e7c90a"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 4, \"dendrogram\": \"true\", \"figsize\": {\"__current_case__\": 1, \"test\": \"no\"}, \"groupby\": \"cell_type\", \"layer\": \"\", \"log\": \"false\", \"method\": \"pl.stacked_violin\", \"num_categories\": \"7\", \"row_palette\": \"muted\", \"seaborn_violinplot\": {\"bw\": \"scott\", \"color\": \"AliceBlue\", \"linewidth\": \"0.0\", \"orient\": null, \"palette\": \"viridis\", \"saturation\": \"0.75\"}, \"standard_scale\": \"None\", \"swap_axes\": \"true\", \"use_raw\": \"false\", \"var_group_positions\": [], \"var_group_rotation\": \"\", \"var_names\": {\"__current_case__\": 0, \"type\": \"all\"}, \"violin_plot\": {\"scale\": \"width\", \"stripplot\": {\"__current_case__\": 0, \"jitter\": {\"__current_case__\": 0, \"jitter\": \"True\", \"size\": \"1.0\"}, \"stripplot\": \"True\"}}}"  },  "state": "ok",  "stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\nWARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.\nWARNING: saving figure to file stacked_violin.png\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    var_names=adata.var_names,\n    groupby=\u0027cell_type\u0027,\n    num_categories=7,\n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\nanndata.h5ad\nstacked_violin.png\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Observation names are not unique. To make them unique, call `.obs_names_make_unique`.\nWARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.\nWARNING: saving figure to file stacked_violin.png\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.stacked_violin(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    \n    var_names=adata.var_names,\n    groupby=\u0027cell_type\u0027,\n    num_categories=7,\n    \n    \n    log=False,\n    use_raw=False,\n    dendrogram=True,\n    \n    \n    swap_axes=True,\n    \n    stripplot=True,\n    jitter=True,\n    size=1.0,\n    \n    scale=\u0027width\u0027,\n    row_palette=\u0027muted\u0027,\n    \n    bw=\u0027scott\u0027,\n    linewidth=0.0,\n    color=\u0027AliceBlue\u0027,\n    palette=\u0027viridis\u0027,\n    saturation=0.75,\n    \n    \n    )\n\nanndata.h5ad\nstacked_violin.png\n",  "traceback": null,  "update_time": "2023-02-10T10:58:58.414766",  "user_email": "tests@fake.org" }, "output_problems": [  "Output out_png:  different than expected, difference (using sim_size):\n( /tmp/tmpiezabmwmpl.stacked_violin.krumsiek11.png v. /tmp/tmp1bdkoec7pl.stacked_violin.krumsiek11.png )\nFiles /tmp/tmpiezabmwmpl.stacked_violin.krumsiek11.png=25327b but /tmp/tmp1bdkoec7pl.stacked_violin.krumsiek11.png=36966b - compare by size (delta=10000) failed" ], "status": "failure", "test_index": 5, "time_seconds": 33.08305764198303, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.stacked_violin(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,        stripplot=True,    jitter=True,    size=1.0,        scale='width',    row_palette='muted',        bw='scott',    linewidth=0.0,    color='AliceBlue',    palette='viridis',    saturation=0.75,            )anndata.h5adstacked_violin.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="40.102314949035645">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.matrixplot(        adata,    save='.png',    show=False,            var_names=adata.var_names,    groupby='cell_type',    num_categories=7,            log=False,    use_raw=False,    dendrogram=True,            swap_axes=True,    cmap='viridis',    edgecolors='face',    snap=False        )anndata.h5admatrixplot.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="32.162914991378784">
        
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.clustermap(    adata=adata,    show=False,    use_raw=False,    method='single',    metric='euclidean',    col_cluster=False,    row_cluster=False).savefig(fname="output.png")anndata.h5adoutput.png
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="30.30195665359497">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "95d1ded632778d3d",   "src": "hda"  },  "format": "png",  "method|gene_symbols": "means",  "method|method": "pl.highest_expr_genes",  "method|n_top": "30",  "method|setseaborn_boxplot|color": "blue",  "method|setseaborn_boxplot|saturation": "0.5" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/1/3/e/dataset_13e789c6-c112-46bc-8e0a-caa61cfc9e12.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/169/configs/tmplndby8kl\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/169/configs/tmplndby8kl\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-10T10:59:44.864786",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-fs9lp",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "1b20dde480c698ed",  "inputs": {   "adata": {    "id": "95d1ded632778d3d",    "src": "hda",    "uuid": "13e789c6-c112-46bc-8e0a-caa61cfc9e12"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "4.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "4 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676026790.0000000",    "title": "Job End Time",    "value": "2023-02-10 10:59:50"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676026786.0000000",    "title": "Job Start Time",    "value": "2023-02-10 10:59:46"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "60f2df12ca1f08eb",    "src": "hda",    "uuid": "1ea4427d-d6dc-4e13-a478-777837e1d3b2"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 8, \"gene_symbols\": \"means\", \"method\": \"pl.highest_expr_genes\", \"n_top\": \"30\", \"setseaborn_boxplot\": {\"color\": \"blue\", \"palette\": null, \"saturation\": \"0.5\"}}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/169/configs/tmplndby8kl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/169/configs/tmplndby8kl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highest_expr_genes(\n    \n    adata,\n    save=\u0027.png\u0027,\n    show=False,\n    \n    n_top=30,\n    gene_symbols=\u0027means\u0027,\n    color=\u0027blue\u0027,\n    saturation=0.5)\n\n",  "traceback": null,  "update_time": "2023-02-10T10:59:59.278863",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/169/configs/tmplndby8kl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/169/configs/tmplndby8kl\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 8, "time_seconds": 30.30195665359497, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highest_expr_genes(        adata,    save='.png',    show=False,        n_top=30,    gene_symbols='means',    color='blue',    saturation=0.5)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/169/configs/tmplndby8kl", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="31.41299033164978">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "adata": {   "id": "173a34ea47090ed0",   "src": "hda"  },  "format": "png",  "method|highly_variable_genes": true,  "method|log": false,  "method|method": "pl.highly_variable_genes" }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/2/e/3/dataset_2e32be59-7bf1-48b1-abf7-71c460c191e1.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/170/configs/tmpslsdu93_\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/170/configs/tmpslsdu93_\u0027 \u0026\u0026 ls .",  "command_version": "scanpy version: 1.4.4.post1",  "create_time": "2023-02-10T10:59:46.934295",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-6tvq6",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "38a992d51e7f225b",  "inputs": {   "adata": {    "id": "173a34ea47090ed0",    "src": "hda",    "uuid": "2e32be59-7bf1-48b1-abf7-71c460c191e1"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "3.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "3 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676026792.0000000",    "title": "Job End Time",    "value": "2023-02-10 10:59:52"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676026789.0000000",    "title": "Job Start Time",    "value": "2023-02-10 10:59:49"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "out_png": {    "id": "b63755f434540eb4",    "src": "hda",    "uuid": "703bea4b-e4e3-49d2-a33a-39f8dceb2c7f"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 7, \"highly_variable_genes\": \"true\", \"log\": \"false\", \"method\": \"pl.highly_variable_genes\"}"  },  "state": "error",  "stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmpslsdu93_\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1",  "tool_stderr": "Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmpslsdu93_\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n",  "tool_stdout": "\n\nimport scanpy as sc\nimport pandas as pd\nimport numpy as np\n    \n    \n\nadata = sc.read(\u0027anndata.h5ad\u0027)\n\n    \n\nsc.settings.figdir = \u0027.\u0027\n\nsc.pl.highly_variable_genes(\n    adata_or_result=adata,\n    log=False,\n    save=\u0027.png\u0027,\n    show=False,\n    highly_variable_genes=True)\n\n",  "traceback": null,  "update_time": "2023-02-10T11:00:02.347068",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmpslsdu93_\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.4.4.post1+galaxy1, exit_code: 1, stderr: Traceback (most recent call last):\n  File \"/galaxy/server/database/jobs_directory/000/170/configs/tmpslsdu93_\", line 9, in \u003cmodule\u003e\n    adata = sc.read(\u0027anndata.h5ad\u0027)\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 97, in read\n    backup_url=backup_url, cache=cache, **kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py\", line 499, in _read\n    return read_h5ad(filename, backed=backed)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 447, in read_h5ad\n    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py\", line 502, in _read_args_from_h5ad\n    return AnnData._args_from_dict(d)\n  File \"/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py\", line 2157, in _args_from_dict\n    if key in d_true_keys[true_key].dtype.names:\nAttributeError: \u0027dict\u0027 object has no attribute \u0027dtype\u0027\n." ], "status": "failure", "test_index": 9, "time_seconds": 31.41299033164978, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.4.4.post1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            import scanpy as scimport pandas as pdimport numpy as np        adata = sc.read('anndata.h5ad')    sc.settings.figdir = '.'sc.pl.highly_variable_genes(    adata_or_result=adata,    log=False,    save='.png',    show=False,    highly_variable_genes=True)
            ]]></system-out>
            <system-err><![CDATA[
            Traceback (most recent call last):  File "/galaxy/server/database/jobs_directory/000/170/configs/tmpslsdu93_", line 9, in <module>    adata = sc.read('anndata.h5ad')  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 97, in read    backup_url=backup_url, cache=cache, **kwargs,  File "/usr/local/lib/python3.6/site-packages/scanpy/readwrite.py", line 499, in _read    return read_h5ad(filename, backed=backed)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 447, in read_h5ad    constructor_args = _read_args_from_h5ad(filename=filename, chunk_size=chunk_size)  File "/usr/local/lib/python3.6/site-packages/anndata/readwrite/read.py", line 502, in _read_args_from_h5ad    return AnnData._args_from_dict(d)  File "/usr/local/lib/python3.6/site-packages/anndata/core/anndata.py", line 2157, in _args_from_dict    if key in d_true_keys[true_key].dtype.names:AttributeError: 'dict' object has no attribute 'dtype'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #1)" name="0" time="28.793374061584473">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #2)" name="1" time="34.458881855010986">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file scatter.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #11)" name="10" time="30.983976364135742">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #12)" name="11" time="31.03694987297058">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #13)" name="12" time="30.29279112815857">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file highest_expr_genes.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #14)" name="13" time="29.936267375946045">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file filter_genes_dispersion.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #15)" name="14" time="29.981542587280273">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file pca.pdf
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #16)" name="15" time="33.66050624847412">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_loadings.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #17)" name="16" time="30.54975414276123">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca_variance_ratio.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #18)" name="17" time="30.475952625274658">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file pca.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #19)" name="18" time="26.344454288482666">
        
            
                <error type="error" message="Tool exit code: None"><![CDATA[
                    { "inputs": {  "adata": {   "id": "e9f9112cf89ecdaa",   "src": "hda"  },  "advanced_common|show_log": true,  "format": "png",  "method|arrows": false,  "method|edges|edges": "False",  "method|matplotlib_pyplot_scatter|edgecolors": "face",  "method|matplotlib_pyplot_scatter|linewidths": "0",  "method|method": "pl.tsne",  "method|plot|frameon": true,  "method|plot|hspace": "0.25",  "method|plot|legend_fontsize": "1",  "method|plot|legend_fontweight": "normal",  "method|plot|legend_loc": "right margin",  "method|plot|ncols": "4",  "method|plot|palette": "viridis",  "method|plot|projection": "2d",  "method|plot|size": "1",  "method|plot|wspace": "0.1",  "method|sort_order": true,  "method|use_raw": false }, "job": {  "command_line": "cp \u0027/galaxy/server/database/objects/d/7/f/dataset_d7f40810-ea03-40cd-8e0c-4fa405433a1c.dat\u0027 \u0027anndata.h5ad\u0027 \u0026\u0026 cat \u0027/galaxy/server/database/jobs_directory/000/132/configs/tmpimljqi38\u0027 \u003e \u0027/galaxy/server/database/objects/4/5/4/dataset_45408277-b31f-4604-874b-06636e4ab08d.dat\u0027 \u0026\u0026 python \u0027/galaxy/server/database/jobs_directory/000/132/configs/tmpimljqi38\u0027 \u003e\u003e \u0027/galaxy/server/database/objects/4/5/4/dataset_45408277-b31f-4604-874b-06636e4ab08d.dat\u0027 \u0026\u0026 ls . \u003e\u003e \u0027/galaxy/server/database/objects/4/5/4/dataset_45408277-b31f-4604-874b-06636e4ab08d.dat\u0027 \u0026\u0026 touch \u0027anndata_info.txt\u0027 \u0026\u0026 cat \u0027anndata_info.txt\u0027  | sed -r \u00271 s|AnnData object with (.+) = (.*)\\s*|\\1: \\2|g\u0027 | sed \"s|\u0027||g\"  | sed -r \u0027s|^\\s*(.*):\\s(.*)|[\\1]\\n-    \\2|g\u0027 | sed \u0027s|, |\\n-    |g\u0027",  "command_version": null,  "create_time": "2023-02-10T10:53:51.073676",  "dependencies": [],  "exit_code": null,  "external_id": "gxy-hs8kl",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "0dbd73cd1a71f691",  "inputs": {   "adata": {    "id": "e9f9112cf89ecdaa",    "src": "hda",    "uuid": "d7f40810-ea03-40cd-8e0c-4fa405433a1c"   }  },  "job_messages": null,  "job_metrics": [],  "job_stderr": null,  "job_stdout": null,  "model_class": "Job",  "output_collections": {},  "outputs": {   "hidden_output": {    "id": "c648c77c423ffb95",    "src": "hda",    "uuid": "45408277-b31f-4604-874b-06636e4ab08d"   },   "out_png": {    "id": "1581cfc52bc683d3",    "src": "hda",    "uuid": "6d9f3d74-d27d-466d-bd06-7c2203c49cb3"   }  },  "params": {   "__input_ext": "\"input\"",   "advanced_common": "{\"show_log\": \"true\"}",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "format": "\"png\"",   "method": "{\"__current_case__\": 13, \"arrows\": \"false\", \"color\": \"\", \"edges\": {\"__current_case__\": 1, \"edges\": \"False\"}, \"groups\": \"\", \"matplotlib_pyplot_scatter\": {\"alpha\": \"\", \"edgecolors\": \"face\", \"linewidths\": \"0.0\", \"vmax\": \"\", \"vmin\": \"\"}, \"method\": \"pl.tsne\", \"plot\": {\"color_map\": \"None\", \"components\": [], \"frameon\": \"true\", \"hspace\": \"0.25\", \"legend_fontsize\": \"1\", \"legend_fontweight\": \"normal\", \"legend_loc\": \"right margin\", \"ncols\": \"4\", \"palette\": \"viridis\", \"projection\": \"2d\", \"size\": \"1.0\", \"title\": \"\", \"wspace\": \"0.1\"}, \"sort_order\": \"true\", \"use_raw\": \"false\"}"  },  "state": "error",  "stderr": "",  "stdout": "",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1",  "tool_stderr": "",  "tool_stdout": "",  "traceback": null,  "update_time": "2023-02-10T10:54:01.459677",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: .",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot/1.7.1+galaxy1, exit_code: None, stderr: ." ], "status": "failure", "test_index": 18, "time_seconds": 26.344454288482666, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot", "tool_version": "1.7.1+galaxy1"}
                ]]></error>
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #20)" name="19" time="31.687010049819946">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file umap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #3)" name="2" time="32.14508676528931">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #21)" name="20" time="32.219921588897705">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file diffmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #22)" name="21" time="30.617666721343994">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file draw_graph_fr.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #23)" name="22" time="46.4952712059021">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: Plotting more than 100 genes might take some while, consider selecting only highly variable genes, for example.WARNING: saving figure to file dpt_timeseries.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #24)" name="23" time="33.82946181297302">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file rank_genes_groups_cell_type.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #25)" name="24" time="46.59861159324646">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #26)" name="25" time="33.26147222518921">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #27)" name="26" time="34.16374135017395">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #28)" name="27" time="38.8412070274353">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #4)" name="3" time="30.435280561447144">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file heatmap.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #5)" name="4" time="31.798057794570923">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: dendrogram data not found (using key=dendrogram_louvain). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: Groups are not reordered because the `groupby` categories and the `var_group_labels` are different.categories: 0, 1, 2, etc.var_group_labels: B cells, dendriticWARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #6)" name="5" time="28.267035245895386">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file dotplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #7)" name="6" time="30.086463928222656">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            WARNING: saving figure to file violin.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #8)" name="7" time="30.725793600082397">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #9)" name="8" time="28.972585201263428">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file stacked_violin_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_plot/scanpy_plot (Test #10)" name="9" time="29.674694299697876">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.WARNING: dendrogram data not found (using key=dendrogram_cell_type). Running `sc.tl.dendrogram` with default parameters. For fine tuning it is recommended to run `sc.tl.dendrogram` independently.WARNING: saving figure to file matrixplot_.png
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #1)" name="0" time="28.626277446746826">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    cell_type[uns]-    cell_type_colors-    highlights-    iroot
            ]]></system-out>
            <system-err><![CDATA[
            Observation names are not unique. To make them unique, call `.obs_names_make_unique`.
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scanpy_remove_confounders/scanpy_remove_confounders (Test #2)" name="1" time="28.143113136291504">
        
            
            <system-out><![CDATA[
            [n_obs × n_vars]-    640 × 11[obs]-    blobs
            ]]></system-out>
            <system-err><![CDATA[
            ... storing 'blobs' as categorical
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="62.45736336708069">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "After filtering out unexpressed features:  40 cells and 1733 features."[1] "After filtering out low library counts:  39 cells and 1733 features."[1] "After filtering out low expressed:  39 cells and 1733 features."[1] "After filtering out high MT gene counts:  34 cells and 1733 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filter
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="42.21361470222473">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "Ending with 40 cells and 2000 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: sgeostatRegistered S3 method overwritten by 'GGally':  method from     +.gg   ggplot2sROC 0.1-2 loaded
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #1)" name="0" time="115.91702604293823">
        
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells and 2000 features."[1] "After filtering out low library counts:  39 cells and 2000 features."[1] "After filtering out high MT gene counts:  34 cells and 2000 features."[1] "After filtering out cells with low feature counts:  34 cells and 2000 features."[1] "After filtering out rare features:  34 cells and 1148 features."[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning message:In value[[3L]](cond) :  zero-length inputs cannot be mixed with those of non-zero length
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter (Test #2)" name="1" time="43.221542835235596">
        
            
                <error type="error" message="Tool exit code: 1"><![CDATA[
                    { "inputs": {  "filter_type|filter_type_selector": "pca",  "input_loom": {   "id": "d27a794c98f3fff6",   "src": "hda"  } }, "job": {  "command_line": "Rscript \u0027/cvmfs/cloud.galaxyproject.org/tools/toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/652923ce664f/scater_filter/scater-pca-filter.R\u0027 -i \u0027/galaxy/server/database/objects/0/c/6/dataset_0c64e09d-6219-4577-9b6d-0fe0c2c11e9e.dat\u0027 -o \u0027/galaxy/server/database/objects/a/0/7/dataset_a076f8de-ab92-42da-8106-0f1941fbcab3.dat\u0027",  "command_version": "",  "create_time": "2023-02-10T10:34:41.553735",  "dependencies": [],  "exit_code": 1,  "external_id": "gxy-fthr5",  "galaxy_version": "22.05",  "history_id": "d719b3e6581ca864",  "id": "07fbc3e8660a3ee7",  "inputs": {   "input_loom": {    "id": "d27a794c98f3fff6",    "src": "hda",    "uuid": "0c64e09d-6219-4577-9b6d-0fe0c2c11e9e"   }  },  "job_messages": [   {    "code_desc": "",    "desc": "Fatal error: Exit code 1 ()",    "error_level": 3,    "exit_code": 1,    "type": "exit_code"   }  ],  "job_metrics": [   {    "name": "runtime_seconds",    "plugin": "core",    "raw_value": "7.0000000",    "title": "Job Runtime (Wall Clock)",    "value": "7 seconds"   },   {    "name": "end_epoch",    "plugin": "core",    "raw_value": "1676025300.0000000",    "title": "Job End Time",    "value": "2023-02-10 10:35:00"   },   {    "name": "start_epoch",    "plugin": "core",    "raw_value": "1676025293.0000000",    "title": "Job Start Time",    "value": "2023-02-10 10:34:53"   },   {    "name": "galaxy_memory_mb",    "plugin": "core",    "raw_value": "4080.0000000",    "title": "Memory Allocated (MB)",    "value": "4080"   },   {    "name": "galaxy_slots",    "plugin": "core",    "raw_value": "1.0000000",    "title": "Cores Allocated",    "value": "1"   }  ],  "job_stderr": "",  "job_stdout": "",  "model_class": "Job",  "output_collections": {},  "outputs": {   "output_loom": {    "id": "07fbc3e8660a3ee7",    "src": "hda",    "uuid": "a076f8de-ab92-42da-8106-0f1941fbcab3"   }  },  "params": {   "__input_ext": "\"input\"",   "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",   "dbkey": "\"?\"",   "filter_type": "{\"__current_case__\": 1, \"filter_type_selector\": \"pca\"}"  },  "state": "error",  "stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n",  "stdout": "[1] \"Starting with 40 cells\"\n",  "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0",  "tool_stderr": "Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n",  "tool_stdout": "[1] \"Starting with 40 cells\"\n",  "traceback": null,  "update_time": "2023-02-10T10:35:11.016862",  "user_email": "tests@fake.org" }, "output_problems": [  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n.",  "Job in error state.. tool_id: toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter/1.22.0, exit_code: 1, stderr: Loading required package: S4Vectors\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: \u2018BiocGenerics\u2019\n\nThe following objects are masked from \u2018package:stats\u2019:\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nAttaching package: \u2018S4Vectors\u2019\n\nThe following objects are masked from \u2018package:base\u2019:\n\n    expand.grid, I, unname\n\nLoading required package: SingleCellExperiment\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: \u2018MatrixGenerics\u2019\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: IRanges\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    \u0027browseVignettes()\u0027. To cite Bioconductor, see\n    \u0027citation(\"Biobase\")\u0027, and for packages \u0027citation(\"pkgname\")\u0027.\n\n\nAttaching package: \u2018Biobase\u2019\n\nThe following object is masked from \u2018package:MatrixGenerics\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    anyMissing, rowMedians\n\nLoading required package: rhdf5\nLoading required package: BiocIO\nLoading required package: scuttle\nLoading required package: ggplot2\n\nAttaching package: \u2018robustbase\u2019\n\nThe following object is masked from \u2018package:Biobase\u2019:\n\n    rowMedians\n\nThe following objects are masked from \u2018package:MatrixGenerics\u2019:\n\n    colMedians, rowMedians\n\nThe following objects are masked from \u2018package:matrixStats\u2019:\n\n    colMedians, rowMedians\n\nError in retrieveCellInfo(x, variables[[it]], search = \"colData\") : \n  cannot find \u0027sum\u0027\nCalls: runColDataPCA -\u003e retrieveCellInfo\nExecution halted\n." ], "status": "failure", "test_index": 1, "time_seconds": 43.221542835235596, "tool_id": "toolshed.g2.bx.psu.edu/repos/iuc/scater_filter/scater_filter", "tool_version": "1.22.0"}
                ]]></error>
            
            <system-out><![CDATA[
            [1] "Starting with 40 cells"
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Attaching package: ‘robustbase’The following object is masked from ‘package:Biobase’:    rowMediansThe following objects are masked from ‘package:MatrixGenerics’:    colMedians, rowMediansThe following objects are masked from ‘package:matrixStats’:    colMedians, rowMediansError in retrieveCellInfo(x, variables[[it]], search = "colData") :   cannot find 'sum'Calls: runColDataPCA -> retrieveCellInfoExecution halted
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_normalize/scater_normalize (Test #1)" name="0" time="62.032114028930664">
        
            
            <system-out><![CDATA[
            [1] "Normalising...."[1] "Finished normalising"[1] TRUE
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factors
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="66.95243263244629">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="36.48994278907776">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterLoading required package: magrittrAttaching package: 'ggpubr'The following object is masked from 'package:scater':    mutate`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 6 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #1)" name="0" time="63.35091042518616">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_dist_scatter/scater_plot_dist_scatter (Test #2)" name="1" time="44.68400692939758">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2`geom_smooth()` using method = 'loess' and formula 'y ~ x'Saving 7 x 7 in imageWarning messages:1: Transformation introduced infinite values in continuous y-axis 2: Removed 7 rows containing missing values (geom_bar). 3: Transformation introduced infinite values in continuous y-axis 4: Removed 1 rows containing missing values (geom_bar). 
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_exprs_freq/scater_plot_exprs_freq (Test #1)" name="0" time="59.82336235046387">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterSaving 7 x 7 in image`geom_smooth()` using method = 'loess' and formula 'y ~ x'
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="40.43830585479736">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsLoading required package: parallelAttaching package: 'BiocGenerics'The following objects are masked from 'package:parallel':    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,    clusterExport, clusterMap, parApply, parCapply, parLapply,    parLapplyLB, parRapply, parSapply, parSapplyLBThe following objects are masked from 'package:stats':    IQR, mad, sd, var, xtabsThe following objects are masked from 'package:base':    Filter, Find, Map, Position, Reduce, anyDuplicated, append,    as.data.frame, basename, cbind, colnames, dirname, do.call,    duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted,    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin,    pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table,    tapply, union, unique, unsplit, which, which.max, which.minAttaching package: 'S4Vectors'The following object is masked from 'package:base':    expand.gridLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Loading required package: DelayedArrayLoading required package: matrixStatsAttaching package: 'matrixStats'The following objects are masked from 'package:Biobase':    anyMissing, rowMediansLoading required package: BiocParallelAttaching package: 'DelayedArray'The following objects are masked from 'package:matrixStats':    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRangesThe following objects are masked from 'package:base':    aperm, apply, rowsumLoading required package: rhdf5Loading required package: rtracklayerLoading required package: ggplot2Attaching package: 'scater'The following object is masked from 'package:S4Vectors':    renameThe following object is masked from 'package:stats':    filterWarning message:In .local(object, ...) : using library sizes as size factorsWarning message:In sweep(mat, MARGIN = 2, STATS = sqrt(vars), FUN = "/", check.margin = FALSE) :  'check.margin' is ignored when 'x' is a DelayedArray object or  derivativeSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_pca/scater_plot_pca (Test #1)" name="0" time="68.20966720581055">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Warning in (function (A, nv = 5, nu = nv, maxit = 1000, work = nv + 7, reorth = TRUE,  :  You're computing too large a percentage of total singular values, use a standard svd instead.Warning message:In check_numbers(k = k, nu = nu, nv = nv, limit = min(dim(x)) -  :  more singular values/vectors requested than availableSaving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
    <testcase classname="toolshed.g2.bx.psu.edu/repos/iuc/scater_plot_tsne/scater_plot_tsne (Test #1)" name="0" time="105.61238026618958">
        
            
            <system-out><![CDATA[
            
            ]]></system-out>
            <system-err><![CDATA[
            Loading required package: S4VectorsLoading required package: stats4Loading required package: BiocGenericsAttaching package: ‘BiocGenerics’The following objects are masked from ‘package:stats’:    IQR, mad, sd, var, xtabsThe following objects are masked from ‘package:base’:    anyDuplicated, append, as.data.frame, basename, cbind, colnames,    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,    union, unique, unsplit, which.max, which.minAttaching package: ‘S4Vectors’The following objects are masked from ‘package:base’:    expand.grid, I, unnameLoading required package: SingleCellExperimentLoading required package: SummarizedExperimentLoading required package: MatrixGenericsLoading required package: matrixStatsAttaching package: ‘MatrixGenerics’The following objects are masked from ‘package:matrixStats’:    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,    colWeightedMeans, colWeightedMedians, colWeightedSds,    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,    rowWeightedSds, rowWeightedVarsLoading required package: GenomicRangesLoading required package: IRangesLoading required package: GenomeInfoDbLoading required package: BiobaseWelcome to Bioconductor    Vignettes contain introductory material; view with    'browseVignettes()'. To cite Bioconductor, see    'citation("Biobase")', and for packages 'citation("pkgname")'.Attaching package: ‘Biobase’The following object is masked from ‘package:MatrixGenerics’:    rowMediansThe following objects are masked from ‘package:matrixStats’:    anyMissing, rowMediansLoading required package: rhdf5Loading required package: BiocIOLoading required package: scuttleLoading required package: ggplot2Saving 7 x 7 in image
            ]]></system-err>
        
    </testcase>
    
</testsuite>